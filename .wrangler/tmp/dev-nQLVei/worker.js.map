{
  "version": 3,
  "sources": ["../../../../../../Users/Lucas/AppData/Roaming/npm/node_modules/wrangler/node_modules/unenv/dist/runtime/_internal/utils.mjs", "../../../../../../Users/Lucas/AppData/Roaming/npm/node_modules/wrangler/node_modules/unenv/dist/runtime/node/internal/perf_hooks/performance.mjs", "../../../../../../Users/Lucas/AppData/Roaming/npm/node_modules/wrangler/node_modules/unenv/dist/runtime/node/perf_hooks.mjs", "../../../../../../Users/Lucas/AppData/Roaming/npm/node_modules/wrangler/node_modules/@cloudflare/unenv-preset/dist/runtime/polyfill/performance.mjs", "../../../../../../Users/Lucas/AppData/Roaming/npm/node_modules/wrangler/node_modules/unenv/dist/runtime/mock/noop.mjs", "../../../../../../Users/Lucas/AppData/Roaming/npm/node_modules/wrangler/node_modules/unenv/dist/runtime/node/console.mjs", "../../../../../../Users/Lucas/AppData/Roaming/npm/node_modules/wrangler/node_modules/@cloudflare/unenv-preset/dist/runtime/node/console.mjs", "../../../../../../Users/Lucas/AppData/Roaming/npm/node_modules/wrangler/_virtual_unenv_global_polyfill-@cloudflare-unenv-preset-node-console", "../../../../../../Users/Lucas/AppData/Roaming/npm/node_modules/wrangler/node_modules/unenv/dist/runtime/node/internal/process/hrtime.mjs", "../../../../../../Users/Lucas/AppData/Roaming/npm/node_modules/wrangler/node_modules/unenv/dist/runtime/node/internal/tty/read-stream.mjs", "../../../../../../Users/Lucas/AppData/Roaming/npm/node_modules/wrangler/node_modules/unenv/dist/runtime/node/internal/tty/write-stream.mjs", "../../../../../../Users/Lucas/AppData/Roaming/npm/node_modules/wrangler/node_modules/unenv/dist/runtime/node/tty.mjs", "../../../../../../Users/Lucas/AppData/Roaming/npm/node_modules/wrangler/node_modules/unenv/dist/runtime/node/internal/process/node-version.mjs", "../../../../../../Users/Lucas/AppData/Roaming/npm/node_modules/wrangler/node_modules/unenv/dist/runtime/node/internal/process/process.mjs", "../../../../../../Users/Lucas/AppData/Roaming/npm/node_modules/wrangler/node_modules/@cloudflare/unenv-preset/dist/runtime/node/process.mjs", "../../../../../../Users/Lucas/AppData/Roaming/npm/node_modules/wrangler/_virtual_unenv_global_polyfill-@cloudflare-unenv-preset-node-process", "wrangler-modules-watch:wrangler:modules-watch", "../../../../../../Users/Lucas/AppData/Roaming/npm/node_modules/wrangler/templates/modules-watch-stub.js", "../../../node_modules/reflect-metadata/Reflect.js", "node-built-in-modules:fs", "node-built-in-modules:path", "../../../node_modules/ejs/lib/utils.js", "../../../node_modules/ejs/package.json", "../../../node_modules/ejs/lib/ejs.js", "node-built-in-modules:events", "node-built-in-modules:url", "node-built-in-modules:util", "node-built-in-modules:http", "node-built-in-modules:https", "node-built-in-modules:zlib", "node-built-in-modules:stream", "../../../node_modules/nodemailer/lib/fetch/cookies.js", "../../../node_modules/nodemailer/package.json", "node-built-in-modules:net", "../../../node_modules/nodemailer/lib/fetch/index.js", "node-built-in-modules:dns", "node-built-in-modules:os", "../../../node_modules/nodemailer/lib/shared/index.js", "../../../node_modules/nodemailer/lib/mime-funcs/mime-types.js", "node-built-in-modules:crypto", "../../../node_modules/nodemailer/lib/punycode/index.js", "../../../node_modules/nodemailer/lib/base64/index.js", "../../../node_modules/nodemailer/lib/qp/index.js", "../../../node_modules/nodemailer/lib/mime-funcs/index.js", "../../../node_modules/nodemailer/lib/addressparser/index.js", "../../../node_modules/nodemailer/lib/mime-node/last-newline.js", "../../../node_modules/nodemailer/lib/mime-node/le-windows.js", "../../../node_modules/nodemailer/lib/mime-node/le-unix.js", "../../../node_modules/nodemailer/lib/mime-node/index.js", "../../../node_modules/nodemailer/lib/mail-composer/index.js", "../../../node_modules/nodemailer/lib/dkim/message-parser.js", "../../../node_modules/nodemailer/lib/dkim/relaxed-body.js", "../../../node_modules/nodemailer/lib/dkim/sign.js", "../../../node_modules/nodemailer/lib/dkim/index.js", "node-built-in-modules:tls", "../../../node_modules/nodemailer/lib/smtp-connection/http-proxy-client.js", "../../../node_modules/nodemailer/lib/mailer/mail-message.js", "../../../node_modules/nodemailer/lib/mailer/index.js", "../../../node_modules/nodemailer/lib/smtp-connection/data-stream.js", "../../../node_modules/nodemailer/lib/smtp-connection/index.js", "../../../node_modules/nodemailer/lib/xoauth2/index.js", "../../../node_modules/nodemailer/lib/smtp-pool/pool-resource.js", "../../../node_modules/nodemailer/lib/well-known/services.json", "../../../node_modules/nodemailer/lib/well-known/index.js", "../../../node_modules/nodemailer/lib/smtp-pool/index.js", "../../../node_modules/nodemailer/lib/smtp-transport/index.js", "../../../../../../Users/Lucas/AppData/Roaming/npm/node_modules/wrangler/node_modules/unenv/dist/runtime/node/child_process.mjs", "node-built-in-modules:child_process", "../../../node_modules/nodemailer/lib/sendmail-transport/index.js", "../../../node_modules/nodemailer/lib/stream-transport/index.js", "../../../node_modules/nodemailer/lib/json-transport/index.js", "../../../node_modules/nodemailer/lib/ses-transport/index.js", "../../../node_modules/nodemailer/lib/nodemailer.js", "../../../node_modules/diacritics/index.js", "../../../node_modules/dotenv/package.json", "../../../node_modules/dotenv/lib/main.js", "node-built-in-modules:buffer", "../../../node_modules/safe-buffer/index.js", "../../../node_modules/jws/lib/data-stream.js", "../../../node_modules/ecdsa-sig-formatter/src/param-bytes-for-alg.js", "../../../node_modules/ecdsa-sig-formatter/src/ecdsa-sig-formatter.js", "../../../node_modules/buffer-equal-constant-time/index.js", "../../../node_modules/jwa/index.js", "../../../node_modules/jws/lib/tostring.js", "../../../node_modules/jws/lib/sign-stream.js", "../../../node_modules/jws/lib/verify-stream.js", "../../../node_modules/jws/index.js", "../../../node_modules/jsonwebtoken/decode.js", "../../../node_modules/jsonwebtoken/lib/JsonWebTokenError.js", "../../../node_modules/jsonwebtoken/lib/NotBeforeError.js", "../../../node_modules/jsonwebtoken/lib/TokenExpiredError.js", "../../../node_modules/ms/index.js", "../../../node_modules/jsonwebtoken/lib/timespan.js", "../../../node_modules/jsonwebtoken/node_modules/semver/internal/constants.js", "../../../node_modules/jsonwebtoken/node_modules/semver/internal/debug.js", "../../../node_modules/jsonwebtoken/node_modules/semver/internal/re.js", "../../../node_modules/jsonwebtoken/node_modules/semver/internal/parse-options.js", "../../../node_modules/jsonwebtoken/node_modules/semver/internal/identifiers.js", "../../../node_modules/jsonwebtoken/node_modules/semver/classes/semver.js", "../../../node_modules/jsonwebtoken/node_modules/semver/functions/parse.js", "../../../node_modules/jsonwebtoken/node_modules/semver/functions/valid.js", "../../../node_modules/jsonwebtoken/node_modules/semver/functions/clean.js", "../../../node_modules/jsonwebtoken/node_modules/semver/functions/inc.js", "../../../node_modules/jsonwebtoken/node_modules/semver/functions/diff.js", "../../../node_modules/jsonwebtoken/node_modules/semver/functions/major.js", "../../../node_modules/jsonwebtoken/node_modules/semver/functions/minor.js", "../../../node_modules/jsonwebtoken/node_modules/semver/functions/patch.js", "../../../node_modules/jsonwebtoken/node_modules/semver/functions/prerelease.js", "../../../node_modules/jsonwebtoken/node_modules/semver/functions/compare.js", "../../../node_modules/jsonwebtoken/node_modules/semver/functions/rcompare.js", "../../../node_modules/jsonwebtoken/node_modules/semver/functions/compare-loose.js", "../../../node_modules/jsonwebtoken/node_modules/semver/functions/compare-build.js", "../../../node_modules/jsonwebtoken/node_modules/semver/functions/sort.js", "../../../node_modules/jsonwebtoken/node_modules/semver/functions/rsort.js", "../../../node_modules/jsonwebtoken/node_modules/semver/functions/gt.js", "../../../node_modules/jsonwebtoken/node_modules/semver/functions/lt.js", "../../../node_modules/jsonwebtoken/node_modules/semver/functions/eq.js", "../../../node_modules/jsonwebtoken/node_modules/semver/functions/neq.js", "../../../node_modules/jsonwebtoken/node_modules/semver/functions/gte.js", "../../../node_modules/jsonwebtoken/node_modules/semver/functions/lte.js", "../../../node_modules/jsonwebtoken/node_modules/semver/functions/cmp.js", "../../../node_modules/jsonwebtoken/node_modules/semver/functions/coerce.js", "../../../node_modules/jsonwebtoken/node_modules/semver/internal/lrucache.js", "../../../node_modules/jsonwebtoken/node_modules/semver/classes/range.js", "../../../node_modules/jsonwebtoken/node_modules/semver/classes/comparator.js", "../../../node_modules/jsonwebtoken/node_modules/semver/functions/satisfies.js", "../../../node_modules/jsonwebtoken/node_modules/semver/ranges/to-comparators.js", "../../../node_modules/jsonwebtoken/node_modules/semver/ranges/max-satisfying.js", "../../../node_modules/jsonwebtoken/node_modules/semver/ranges/min-satisfying.js", "../../../node_modules/jsonwebtoken/node_modules/semver/ranges/min-version.js", "../../../node_modules/jsonwebtoken/node_modules/semver/ranges/valid.js", "../../../node_modules/jsonwebtoken/node_modules/semver/ranges/outside.js", "../../../node_modules/jsonwebtoken/node_modules/semver/ranges/gtr.js", "../../../node_modules/jsonwebtoken/node_modules/semver/ranges/ltr.js", "../../../node_modules/jsonwebtoken/node_modules/semver/ranges/intersects.js", "../../../node_modules/jsonwebtoken/node_modules/semver/ranges/simplify.js", "../../../node_modules/jsonwebtoken/node_modules/semver/ranges/subset.js", "../../../node_modules/jsonwebtoken/node_modules/semver/index.js", "../../../node_modules/jsonwebtoken/lib/asymmetricKeyDetailsSupported.js", "../../../node_modules/jsonwebtoken/lib/rsaPssKeyDetailsSupported.js", "../../../node_modules/jsonwebtoken/lib/validateAsymmetricKey.js", "../../../node_modules/jsonwebtoken/lib/psSupported.js", "../../../node_modules/jsonwebtoken/verify.js", "../../../node_modules/lodash.includes/index.js", "../../../node_modules/lodash.isboolean/index.js", "../../../node_modules/lodash.isinteger/index.js", "../../../node_modules/lodash.isnumber/index.js", "../../../node_modules/lodash.isplainobject/index.js", "../../../node_modules/lodash.isstring/index.js", "../../../node_modules/lodash.once/index.js", "../../../node_modules/jsonwebtoken/sign.js", "../../../node_modules/jsonwebtoken/index.js", "../../../node_modules/qrcode/lib/can-promise.js", "../../../node_modules/qrcode/lib/core/utils.js", "../../../node_modules/qrcode/lib/core/error-correction-level.js", "../../../node_modules/qrcode/lib/core/bit-buffer.js", "../../../node_modules/qrcode/lib/core/bit-matrix.js", "../../../node_modules/qrcode/lib/core/alignment-pattern.js", "../../../node_modules/qrcode/lib/core/finder-pattern.js", "../../../node_modules/qrcode/lib/core/mask-pattern.js", "../../../node_modules/qrcode/lib/core/error-correction-code.js", "../../../node_modules/qrcode/lib/core/galois-field.js", "../../../node_modules/qrcode/lib/core/polynomial.js", "../../../node_modules/qrcode/lib/core/reed-solomon-encoder.js", "../../../node_modules/qrcode/lib/core/version-check.js", "../../../node_modules/qrcode/lib/core/regex.js", "../../../node_modules/qrcode/lib/core/mode.js", "../../../node_modules/qrcode/lib/core/version.js", "../../../node_modules/qrcode/lib/core/format-info.js", "../../../node_modules/qrcode/lib/core/numeric-data.js", "../../../node_modules/qrcode/lib/core/alphanumeric-data.js", "../../../node_modules/qrcode/lib/core/byte-data.js", "../../../node_modules/qrcode/lib/core/kanji-data.js", "../../../node_modules/dijkstrajs/dijkstra.js", "../../../node_modules/qrcode/lib/core/segments.js", "../../../node_modules/qrcode/lib/core/qrcode.js", "../../../node_modules/qrcode/lib/renderer/utils.js", "../../../node_modules/qrcode/lib/renderer/canvas.js", "../../../node_modules/qrcode/lib/renderer/svg-tag.js", "../../../node_modules/qrcode/lib/browser.js", "../../../node_modules/property-expr/index.js", "../../../node_modules/tiny-case/index.js", "../../../node_modules/toposort/index.js", "../../../node_modules/es-errors/type.js", "../../../node_modules/object-inspect/index.js", "../../../node_modules/side-channel-list/index.js", "../../../node_modules/es-object-atoms/index.js", "../../../node_modules/es-errors/index.js", "../../../node_modules/es-errors/eval.js", "../../../node_modules/es-errors/range.js", "../../../node_modules/es-errors/ref.js", "../../../node_modules/es-errors/syntax.js", "../../../node_modules/es-errors/uri.js", "../../../node_modules/math-intrinsics/abs.js", "../../../node_modules/math-intrinsics/floor.js", "../../../node_modules/math-intrinsics/max.js", "../../../node_modules/math-intrinsics/min.js", "../../../node_modules/math-intrinsics/pow.js", "../../../node_modules/math-intrinsics/round.js", "../../../node_modules/math-intrinsics/isNaN.js", "../../../node_modules/math-intrinsics/sign.js", "../../../node_modules/gopd/gOPD.js", "../../../node_modules/gopd/index.js", "../../../node_modules/es-define-property/index.js", "../../../node_modules/has-symbols/shams.js", "../../../node_modules/has-symbols/index.js", "../../../node_modules/get-proto/Reflect.getPrototypeOf.js", "../../../node_modules/get-proto/Object.getPrototypeOf.js", "../../../node_modules/function-bind/implementation.js", "../../../node_modules/function-bind/index.js", "../../../node_modules/call-bind-apply-helpers/functionCall.js", "../../../node_modules/call-bind-apply-helpers/functionApply.js", "../../../node_modules/call-bind-apply-helpers/reflectApply.js", "../../../node_modules/call-bind-apply-helpers/actualApply.js", "../../../node_modules/call-bind-apply-helpers/index.js", "../../../node_modules/dunder-proto/get.js", "../../../node_modules/get-proto/index.js", "../../../node_modules/hasown/index.js", "../../../node_modules/get-intrinsic/index.js", "../../../node_modules/call-bound/index.js", "../../../node_modules/side-channel-map/index.js", "../../../node_modules/side-channel-weakmap/index.js", "../../../node_modules/side-channel/index.js", "../../../node_modules/qs/lib/formats.js", "../../../node_modules/qs/lib/utils.js", "../../../node_modules/qs/lib/stringify.js", "../../../node_modules/qs/lib/parse.js", "../../../node_modules/qs/lib/index.js", "../../../node_modules/pvtsutils/build/index.js", "../bundle-njJEzx/middleware-loader.entry.ts", "../bundle-njJEzx/middleware-insertion-facade.js", "../../../src/worker.ts", "../../../src/app.ts", "../../../src/container.ts", "../../../node_modules/@inversifyjs/src/services/calculations/stringifyServiceIdentifier.ts", "../../../node_modules/@inversifyjs/src/services/models/LazyServiceIdentifier.ts", "../../../node_modules/@inversifyjs/src/reflectMetadata/utils/getReflectMetadata.ts", "../../../node_modules/@inversifyjs/src/reflectMetadata/utils/updateReflectMetadata.ts", "../../../node_modules/@inversifyjs/src/reflectMetadata/data/keys.ts", "../../../node_modules/@inversifyjs/src/error/models/InversifyCoreError.ts", "../../../node_modules/@inversifyjs/src/error/models/InversifyCoreErrorKind.ts", "../../../node_modules/@inversifyjs/src/metadata/models/ClassElementMetadataKind.ts", "../../../node_modules/@inversifyjs/src/metadata/calculations/assertConstructorMetadataArrayFilled.ts", "../../../node_modules/@inversifyjs/src/metadata/calculations/getClassElementMetadataFromNewable.ts", "../../../node_modules/@inversifyjs/src/metadata/calculations/getClassElementMetadataFromLegacyMetadata.ts", "../../../node_modules/@inversifyjs/src/metadata/calculations/getConstructorArgumentMetadataFromLegacyMetadata.ts", "../../../node_modules/@inversifyjs/src/metadata/calculations/getClassMetadataConstructorArguments.ts", "../../../node_modules/@inversifyjs/src/metadata/calculations/getPropertyMetadataFromLegacyMetadata.ts", "../../../node_modules/@inversifyjs/src/metadata/calculations/getClassMetadataProperties.ts", "../../../node_modules/@inversifyjs/src/metadata/calculations/getClassMetadata.ts", "../../../node_modules/@inversifyjs/src/metadata/calculations/getClassMetadataConstructorArgumentsFromMetadataReader.ts", "../../../node_modules/@inversifyjs/src/metadata/calculations/getClassMetadataPropertiesFromMetadataReader.ts", "../../../node_modules/@inversifyjs/src/metadata/calculations/getClassMetadataFromMetadataReader.ts", "../../../node_modules/@inversifyjs/src/prototype/calculations/getBaseType.ts", "../../../node_modules/@inversifyjs/src/metadata/calculations/getLegacyMetadata.ts", "../../../node_modules/@inversifyjs/src/string/models/LegacyQueryableStringImpl.ts", "../../../node_modules/@inversifyjs/src/legacyTarget/calculations/getTargetId.ts", "../../../node_modules/@inversifyjs/src/legacyTarget/models/LegacyTargetImpl.ts", "../../../node_modules/@inversifyjs/src/symbol/calculations/getDescription.ts", "../../../node_modules/@inversifyjs/src/legacyTarget/calculations/getTargets.ts", "../../../node_modules/@inversifyjs/src/legacyTarget/calculations/getTargetsFromMetadataProviders.ts", "../../../node_modules/inversify/src/constants/metadata_keys.ts", "../../../node_modules/inversify/src/constants/literal_types.ts", "../../../node_modules/inversify/src/utils/id.ts", "../../../node_modules/inversify/src/bindings/binding.ts", "../../../node_modules/inversify/src/constants/error_msgs.ts", "../../../node_modules/inversify/src/planning/metadata_reader.ts", "../../../node_modules/inversify/src/bindings/binding_count.ts", "../../../node_modules/inversify/src/utils/exceptions.ts", "../../../node_modules/inversify/src/utils/serialization.ts", "../../../node_modules/inversify/src/planning/context.ts", "../../../node_modules/inversify/src/planning/metadata.ts", "../../../node_modules/inversify/src/planning/plan.ts", "../../../node_modules/inversify/src/planning/reflection_utils.ts", "../../../node_modules/inversify/src/utils/get_base_type.ts", "../../../node_modules/inversify/src/planning/request.ts", "../../../node_modules/inversify/src/planning/planner.ts", "../../../node_modules/inversify/src/utils/async.ts", "../../../node_modules/inversify/src/scope/scope.ts", "../../../node_modules/inversify/src/utils/factory_type.ts", "../../../node_modules/inversify/src/utils/binding_utils.ts", "../../../node_modules/inversify/src/resolution/instantiation.ts", "../../../node_modules/inversify/src/resolution/resolver.ts", "../../../node_modules/inversify/src/syntax/constraint_helpers.ts", "../../../node_modules/inversify/src/syntax/binding_when_syntax.ts", "../../../node_modules/inversify/src/syntax/binding_on_syntax.ts", "../../../node_modules/inversify/src/syntax/binding_when_on_syntax.ts", "../../../node_modules/inversify/src/syntax/binding_in_syntax.ts", "../../../node_modules/inversify/src/syntax/binding_in_when_on_syntax.ts", "../../../node_modules/inversify/src/syntax/binding_to_syntax.ts", "../../../node_modules/inversify/src/container/container_snapshot.ts", "../../../node_modules/inversify/src/container/lookup.ts", "../../../node_modules/inversify/src/utils/clonable.ts", "../../../node_modules/inversify/src/container/module_activation_store.ts", "../../../node_modules/inversify/src/container/container.ts", "../../../node_modules/inversify/src/container/container_module.ts", "../../../node_modules/inversify/src/annotation/decorator_utils.ts", "../../../node_modules/inversify/src/utils/js.ts", "../../../node_modules/inversify/src/annotation/injectable.ts", "../../../node_modules/inversify/src/annotation/tagged.ts", "../../../node_modules/inversify/src/annotation/named.ts", "../../../node_modules/inversify/src/annotation/inject_base.ts", "../../../node_modules/inversify/src/annotation/inject.ts", "../../../node_modules/inversify/src/annotation/optional.ts", "../../../node_modules/inversify/src/annotation/unmanaged.ts", "../../../node_modules/inversify/src/annotation/multi_inject.ts", "../../../node_modules/inversify/src/annotation/target_name.ts", "../../../node_modules/inversify/src/annotation/property_event_decorator.ts", "../../../node_modules/inversify/src/annotation/post_construct.ts", "../../../node_modules/inversify/src/annotation/pre_destroy.ts", "../../../node_modules/inversify/src/index.ts", "../../../src/services/BadgeService.ts", "../../../src/repositories/BadgeRepository.ts", "../../../src/services/BuyOrderService.ts", "../../../node_modules/uuid/dist/esm-browser/index.js", "../../../node_modules/uuid/dist/esm-browser/stringify.js", "../../../node_modules/uuid/dist/esm-browser/rng.js", "../../../node_modules/uuid/dist/esm-browser/v4.js", "../../../node_modules/uuid/dist/esm-browser/native.js", "../../../src/repositories/BuyOrderRepository.ts", "../../../src/services/DatabaseService.ts", "../../../src/services/GameGiftService.ts", "../../../src/repositories/GameGiftRepository.ts", "../../../src/services/GameService.ts", "../../../src/repositories/GameRepository.ts", "../../../src/services/GameViewService.ts", "../../../src/repositories/GameViewRepository.ts", "../../../src/services/InventoryService.ts", "../../../src/repositories/InventoryRepository.ts", "../../../src/services/ItemService.ts", "../../../src/repositories/ItemRepository.ts", "../../../src/services/LobbyService.ts", "../../../src/repositories/LobbyRepository.ts", "../../../src/services/LogService.ts", "../../../src/services/MailService.ts", "../../../src/services/MarketListingService.ts", "../../../src/repositories/MarketListingRepository.ts", "../../../src/services/OAuth2Service.ts", "../../../src/repositories/OAuth2Repository.ts", "../../../src/services/SteamOAuthService.ts", "../../../node_modules/axios/index.js", "../../../node_modules/axios/lib/axios.js", "../../../node_modules/axios/lib/utils.js", "../../../node_modules/axios/lib/helpers/bind.js", "../../../node_modules/axios/lib/core/Axios.js", "../../../node_modules/axios/lib/helpers/buildURL.js", "../../../node_modules/axios/lib/helpers/AxiosURLSearchParams.js", "../../../node_modules/axios/lib/helpers/toFormData.js", "../../../node_modules/axios/lib/core/AxiosError.js", "../../../node_modules/axios/lib/helpers/null.js", "../../../node_modules/axios/lib/core/InterceptorManager.js", "../../../node_modules/axios/lib/core/dispatchRequest.js", "../../../node_modules/axios/lib/core/transformData.js", "../../../node_modules/axios/lib/defaults/index.js", "../../../node_modules/axios/lib/defaults/transitional.js", "../../../node_modules/axios/lib/helpers/toURLEncodedForm.js", "../../../node_modules/axios/lib/platform/index.js", "../../../node_modules/axios/lib/platform/browser/index.js", "../../../node_modules/axios/lib/platform/browser/classes/URLSearchParams.js", "../../../node_modules/axios/lib/platform/browser/classes/FormData.js", "../../../node_modules/axios/lib/platform/browser/classes/Blob.js", "../../../node_modules/axios/lib/platform/common/utils.js", "../../../node_modules/axios/lib/helpers/formDataToJSON.js", "../../../node_modules/axios/lib/core/AxiosHeaders.js", "../../../node_modules/axios/lib/helpers/parseHeaders.js", "../../../node_modules/axios/lib/cancel/isCancel.js", "../../../node_modules/axios/lib/cancel/CanceledError.js", "../../../node_modules/axios/lib/adapters/adapters.js", "../../../node_modules/axios/lib/adapters/xhr.js", "../../../node_modules/axios/lib/core/settle.js", "../../../node_modules/axios/lib/helpers/parseProtocol.js", "../../../node_modules/axios/lib/helpers/progressEventReducer.js", "../../../node_modules/axios/lib/helpers/speedometer.js", "../../../node_modules/axios/lib/helpers/throttle.js", "../../../node_modules/axios/lib/helpers/resolveConfig.js", "../../../node_modules/axios/lib/helpers/isURLSameOrigin.js", "../../../node_modules/axios/lib/helpers/cookies.js", "../../../node_modules/axios/lib/core/buildFullPath.js", "../../../node_modules/axios/lib/helpers/isAbsoluteURL.js", "../../../node_modules/axios/lib/helpers/combineURLs.js", "../../../node_modules/axios/lib/core/mergeConfig.js", "../../../node_modules/axios/lib/adapters/fetch.js", "../../../node_modules/axios/lib/helpers/composeSignals.js", "../../../node_modules/axios/lib/helpers/trackStream.js", "../../../node_modules/axios/lib/helpers/validator.js", "../../../node_modules/axios/lib/env/data.js", "../../../node_modules/axios/lib/cancel/CancelToken.js", "../../../node_modules/axios/lib/helpers/spread.js", "../../../node_modules/axios/lib/helpers/isAxiosError.js", "../../../node_modules/axios/lib/helpers/HttpStatusCode.js", "../../../src/services/StudioService.ts", "../../../src/repositories/StudioRepository.ts", "../../../src/utils/GenKey.ts", "../../../src/services/TradeService.ts", "../../../src/repositories/TradeRepository.ts", "../../../src/services/UserService.ts", "../../../src/repositories/UserRepository.ts", "../../../src/utils/Jwt.ts", "../../../src/controllers/AuthenticatorController.ts", "../../../node_modules/time2fa/dist/index.mjs", "../../../src/hono-inversify/index.ts", "../../../src/hono-inversify/decorators.ts", "../../../src/hono-inversify/types.ts", "../../../src/hono-inversify/InversifyHonoServer.ts", "../../../node_modules/hono/dist/index.js", "../../../node_modules/hono/dist/hono.js", "../../../node_modules/hono/dist/hono-base.js", "../../../node_modules/hono/dist/compose.js", "../../../node_modules/hono/dist/context.js", "../../../node_modules/hono/dist/request.js", "../../../node_modules/hono/dist/http-exception.js", "../../../node_modules/hono/dist/request/constants.js", "../../../node_modules/hono/dist/utils/body.js", "../../../node_modules/hono/dist/utils/url.js", "../../../node_modules/hono/dist/utils/html.js", "../../../node_modules/hono/dist/router.js", "../../../node_modules/hono/dist/utils/constants.js", "../../../node_modules/hono/dist/router/reg-exp-router/index.js", "../../../node_modules/hono/dist/router/reg-exp-router/router.js", "../../../node_modules/hono/dist/router/reg-exp-router/matcher.js", "../../../node_modules/hono/dist/router/reg-exp-router/node.js", "../../../node_modules/hono/dist/router/reg-exp-router/trie.js", "../../../node_modules/hono/dist/router/reg-exp-router/prepared-router.js", "../../../node_modules/hono/dist/router/smart-router/index.js", "../../../node_modules/hono/dist/router/smart-router/router.js", "../../../node_modules/hono/dist/router/trie-router/index.js", "../../../node_modules/hono/dist/router/trie-router/router.js", "../../../node_modules/hono/dist/router/trie-router/node.js", "../../../src/middlewares/LoggedCheck.ts", "../../../src/controllers/BuyOrderController.ts", "../../../src/controllers/DescribeController.ts", "../../../src/decorators/describe.ts", "../../../src/controllers/GameController.ts", "../../../src/middlewares/hono/rateLimit.ts", "../../../src/validators/GameValidator.ts", "../../../node_modules/yup/index.esm.js", "../../../src/controllers/GameGiftController.ts", "../../../src/controllers/InventoryController.ts", "../../../src/controllers/ItemController.ts", "../../../src/middlewares/OwnerCheck.ts", "../../../src/controllers/LobbyController.ts", "../../../src/controllers/LogController.ts", "../../../src/controllers/MarketListingController.ts", "../../../src/controllers/OAuth2Controller.ts", "../../../src/controllers/SearchController.ts", "../../../src/utils/helpers.ts", "../../../src/controllers/StripeController.ts", "../../../node_modules/stripe/esm/stripe.esm.worker.js", "../../../node_modules/stripe/esm/platform/WebPlatformFunctions.js", "../../../node_modules/stripe/esm/platform/PlatformFunctions.js", "../../../node_modules/stripe/esm/net/FetchHttpClient.js", "../../../node_modules/stripe/esm/utils.js", "../../../node_modules/stripe/esm/net/HttpClient.js", "../../../node_modules/stripe/esm/crypto/SubtleCryptoProvider.js", "../../../node_modules/stripe/esm/crypto/CryptoProvider.js", "../../../node_modules/stripe/esm/StripeEmitter.js", "../../../node_modules/stripe/esm/stripe.core.js", "../../../node_modules/stripe/esm/Error.js", "../../../node_modules/stripe/esm/RequestSender.js", "../../../node_modules/stripe/esm/StripeResource.js", "../../../node_modules/stripe/esm/StripeMethod.js", "../../../node_modules/stripe/esm/autoPagination.js", "../../../node_modules/stripe/esm/Webhooks.js", "../../../node_modules/stripe/esm/apiVersion.js", "../../../node_modules/stripe/esm/resources.js", "../../../node_modules/stripe/esm/ResourceNamespace.js", "../../../node_modules/stripe/esm/resources/FinancialConnections/Accounts.js", "../../../node_modules/stripe/esm/resources/Entitlements/ActiveEntitlements.js", "../../../node_modules/stripe/esm/resources/Billing/Alerts.js", "../../../node_modules/stripe/esm/resources/TestHelpers/Issuing/Authorizations.js", "../../../node_modules/stripe/esm/resources/Issuing/Authorizations.js", "../../../node_modules/stripe/esm/resources/Tax/Calculations.js", "../../../node_modules/stripe/esm/resources/Issuing/Cardholders.js", "../../../node_modules/stripe/esm/resources/TestHelpers/Issuing/Cards.js", "../../../node_modules/stripe/esm/resources/Issuing/Cards.js", "../../../node_modules/stripe/esm/resources/BillingPortal/Configurations.js", "../../../node_modules/stripe/esm/resources/Terminal/Configurations.js", "../../../node_modules/stripe/esm/resources/TestHelpers/ConfirmationTokens.js", "../../../node_modules/stripe/esm/resources/Terminal/ConnectionTokens.js", "../../../node_modules/stripe/esm/resources/Billing/CreditBalanceSummary.js", "../../../node_modules/stripe/esm/resources/Billing/CreditBalanceTransactions.js", "../../../node_modules/stripe/esm/resources/Billing/CreditGrants.js", "../../../node_modules/stripe/esm/resources/Treasury/CreditReversals.js", "../../../node_modules/stripe/esm/resources/TestHelpers/Customers.js", "../../../node_modules/stripe/esm/resources/Treasury/DebitReversals.js", "../../../node_modules/stripe/esm/resources/Issuing/Disputes.js", "../../../node_modules/stripe/esm/resources/Radar/EarlyFraudWarnings.js", "../../../node_modules/stripe/esm/resources/V2/Core/EventDestinations.js", "../../../node_modules/stripe/esm/resources/V2/Core/Events.js", "../../../node_modules/stripe/esm/resources/Entitlements/Features.js", "../../../node_modules/stripe/esm/resources/Treasury/FinancialAccounts.js", "../../../node_modules/stripe/esm/resources/TestHelpers/Treasury/InboundTransfers.js", "../../../node_modules/stripe/esm/resources/Treasury/InboundTransfers.js", "../../../node_modules/stripe/esm/resources/Terminal/Locations.js", "../../../node_modules/stripe/esm/resources/Billing/MeterEventAdjustments.js", "../../../node_modules/stripe/esm/resources/V2/Billing/MeterEventAdjustments.js", "../../../node_modules/stripe/esm/resources/V2/Billing/MeterEventSession.js", "../../../node_modules/stripe/esm/resources/V2/Billing/MeterEventStream.js", "../../../node_modules/stripe/esm/resources/Billing/MeterEvents.js", "../../../node_modules/stripe/esm/resources/V2/Billing/MeterEvents.js", "../../../node_modules/stripe/esm/resources/Billing/Meters.js", "../../../node_modules/stripe/esm/resources/Climate/Orders.js", "../../../node_modules/stripe/esm/resources/TestHelpers/Treasury/OutboundPayments.js", "../../../node_modules/stripe/esm/resources/Treasury/OutboundPayments.js", "../../../node_modules/stripe/esm/resources/TestHelpers/Treasury/OutboundTransfers.js", "../../../node_modules/stripe/esm/resources/Treasury/OutboundTransfers.js", "../../../node_modules/stripe/esm/resources/TestHelpers/Issuing/PersonalizationDesigns.js", "../../../node_modules/stripe/esm/resources/Issuing/PersonalizationDesigns.js", "../../../node_modules/stripe/esm/resources/Issuing/PhysicalBundles.js", "../../../node_modules/stripe/esm/resources/Climate/Products.js", "../../../node_modules/stripe/esm/resources/TestHelpers/Terminal/Readers.js", "../../../node_modules/stripe/esm/resources/Terminal/Readers.js", "../../../node_modules/stripe/esm/resources/TestHelpers/Treasury/ReceivedCredits.js", "../../../node_modules/stripe/esm/resources/Treasury/ReceivedCredits.js", "../../../node_modules/stripe/esm/resources/TestHelpers/Treasury/ReceivedDebits.js", "../../../node_modules/stripe/esm/resources/Treasury/ReceivedDebits.js", "../../../node_modules/stripe/esm/resources/TestHelpers/Refunds.js", "../../../node_modules/stripe/esm/resources/Tax/Registrations.js", "../../../node_modules/stripe/esm/resources/Reporting/ReportRuns.js", "../../../node_modules/stripe/esm/resources/Reporting/ReportTypes.js", "../../../node_modules/stripe/esm/resources/Forwarding/Requests.js", "../../../node_modules/stripe/esm/resources/Sigma/ScheduledQueryRuns.js", "../../../node_modules/stripe/esm/resources/Apps/Secrets.js", "../../../node_modules/stripe/esm/resources/BillingPortal/Sessions.js", "../../../node_modules/stripe/esm/resources/Checkout/Sessions.js", "../../../node_modules/stripe/esm/resources/FinancialConnections/Sessions.js", "../../../node_modules/stripe/esm/resources/Tax/Settings.js", "../../../node_modules/stripe/esm/resources/Climate/Suppliers.js", "../../../node_modules/stripe/esm/resources/TestHelpers/TestClocks.js", "../../../node_modules/stripe/esm/resources/Issuing/Tokens.js", "../../../node_modules/stripe/esm/resources/Treasury/TransactionEntries.js", "../../../node_modules/stripe/esm/resources/TestHelpers/Issuing/Transactions.js", "../../../node_modules/stripe/esm/resources/FinancialConnections/Transactions.js", "../../../node_modules/stripe/esm/resources/Issuing/Transactions.js", "../../../node_modules/stripe/esm/resources/Tax/Transactions.js", "../../../node_modules/stripe/esm/resources/Treasury/Transactions.js", "../../../node_modules/stripe/esm/resources/Radar/ValueListItems.js", "../../../node_modules/stripe/esm/resources/Radar/ValueLists.js", "../../../node_modules/stripe/esm/resources/Identity/VerificationReports.js", "../../../node_modules/stripe/esm/resources/Identity/VerificationSessions.js", "../../../node_modules/stripe/esm/resources/Accounts.js", "../../../node_modules/stripe/esm/resources/AccountLinks.js", "../../../node_modules/stripe/esm/resources/AccountSessions.js", "../../../node_modules/stripe/esm/resources/ApplePayDomains.js", "../../../node_modules/stripe/esm/resources/ApplicationFees.js", "../../../node_modules/stripe/esm/resources/Balance.js", "../../../node_modules/stripe/esm/resources/BalanceTransactions.js", "../../../node_modules/stripe/esm/resources/Charges.js", "../../../node_modules/stripe/esm/resources/ConfirmationTokens.js", "../../../node_modules/stripe/esm/resources/CountrySpecs.js", "../../../node_modules/stripe/esm/resources/Coupons.js", "../../../node_modules/stripe/esm/resources/CreditNotes.js", "../../../node_modules/stripe/esm/resources/CustomerSessions.js", "../../../node_modules/stripe/esm/resources/Customers.js", "../../../node_modules/stripe/esm/resources/Disputes.js", "../../../node_modules/stripe/esm/resources/EphemeralKeys.js", "../../../node_modules/stripe/esm/resources/Events.js", "../../../node_modules/stripe/esm/resources/ExchangeRates.js", "../../../node_modules/stripe/esm/resources/FileLinks.js", "../../../node_modules/stripe/esm/resources/Files.js", "../../../node_modules/stripe/esm/multipart.js", "../../../node_modules/stripe/esm/resources/InvoiceItems.js", "../../../node_modules/stripe/esm/resources/InvoicePayments.js", "../../../node_modules/stripe/esm/resources/InvoiceRenderingTemplates.js", "../../../node_modules/stripe/esm/resources/Invoices.js", "../../../node_modules/stripe/esm/resources/Mandates.js", "../../../node_modules/stripe/esm/resources/OAuth.js", "../../../node_modules/stripe/esm/resources/PaymentIntents.js", "../../../node_modules/stripe/esm/resources/PaymentLinks.js", "../../../node_modules/stripe/esm/resources/PaymentMethodConfigurations.js", "../../../node_modules/stripe/esm/resources/PaymentMethodDomains.js", "../../../node_modules/stripe/esm/resources/PaymentMethods.js", "../../../node_modules/stripe/esm/resources/Payouts.js", "../../../node_modules/stripe/esm/resources/Plans.js", "../../../node_modules/stripe/esm/resources/Prices.js", "../../../node_modules/stripe/esm/resources/Products.js", "../../../node_modules/stripe/esm/resources/PromotionCodes.js", "../../../node_modules/stripe/esm/resources/Quotes.js", "../../../node_modules/stripe/esm/resources/Refunds.js", "../../../node_modules/stripe/esm/resources/Reviews.js", "../../../node_modules/stripe/esm/resources/SetupAttempts.js", "../../../node_modules/stripe/esm/resources/SetupIntents.js", "../../../node_modules/stripe/esm/resources/ShippingRates.js", "../../../node_modules/stripe/esm/resources/Sources.js", "../../../node_modules/stripe/esm/resources/SubscriptionItems.js", "../../../node_modules/stripe/esm/resources/SubscriptionSchedules.js", "../../../node_modules/stripe/esm/resources/Subscriptions.js", "../../../node_modules/stripe/esm/resources/TaxCodes.js", "../../../node_modules/stripe/esm/resources/TaxIds.js", "../../../node_modules/stripe/esm/resources/TaxRates.js", "../../../node_modules/stripe/esm/resources/Tokens.js", "../../../node_modules/stripe/esm/resources/Topups.js", "../../../node_modules/stripe/esm/resources/Transfers.js", "../../../node_modules/stripe/esm/resources/WebhookEndpoints.js", "../../../src/controllers/StudioController.ts", "../../../src/controllers/TradeController.ts", "../../../src/controllers/UserController.ts", "../../../node_modules/bcryptjs/index.js", "../../../src/validators/UserValidator.ts", "../../../src/controllers/WebAuthnController.ts", "../../../src/lib/webauthnService.ts", "../../../node_modules/@peculiar/webcrypto/build/webcrypto.es.js", "../../../node_modules/webcrypto-core/build/webcrypto-core.es.js", "../../../node_modules/@peculiar/asn1-schema/build/es2015/index.js", "../../../node_modules/@peculiar/asn1-schema/build/es2015/converters.js", "../../../node_modules/asn1js/build/index.es.js", "../../../node_modules/pvutils/build/utils.es.js", "../../../node_modules/@peculiar/asn1-schema/build/es2015/enums.js", "../../../node_modules/@peculiar/asn1-schema/build/es2015/types/index.js", "../../../node_modules/@peculiar/asn1-schema/build/es2015/types/bit_string.js", "../../../node_modules/@peculiar/asn1-schema/build/es2015/types/octet_string.js", "../../../node_modules/@peculiar/asn1-schema/build/es2015/decorators.js", "../../../node_modules/@peculiar/asn1-schema/build/es2015/storage.js", "../../../node_modules/@peculiar/asn1-schema/build/es2015/schema.js", "../../../node_modules/@peculiar/asn1-schema/build/es2015/helper.js", "../../../node_modules/@peculiar/asn1-schema/build/es2015/parser.js", "../../../node_modules/@peculiar/asn1-schema/build/es2015/errors/index.js", "../../../node_modules/@peculiar/asn1-schema/build/es2015/errors/schema_validation.js", "../../../node_modules/@peculiar/asn1-schema/build/es2015/serializer.js", "../../../node_modules/@peculiar/asn1-schema/build/es2015/objects.js", "../../../node_modules/@peculiar/asn1-schema/build/es2015/convert.js", "../../../node_modules/tslib/tslib.es6.mjs", "../../../node_modules/@peculiar/json-schema/build/index.es.js", "../../../node_modules/@simplewebauthn/server/esm/index.js", "../../../node_modules/@simplewebauthn/server/esm/registration/generateRegistrationOptions.js", "../../../node_modules/@simplewebauthn/server/esm/helpers/generateChallenge.js", "../../../node_modules/@simplewebauthn/server/esm/helpers/iso/index.js", "../../../node_modules/@simplewebauthn/server/esm/helpers/iso/isoBase64URL.js", "../../../node_modules/@hexagon/base64/src/base64.js", "../../../node_modules/@simplewebauthn/server/esm/helpers/iso/isoCBOR.js", "../../../node_modules/@levischuck/tiny-cbor/esm/index.js", "../../../node_modules/@levischuck/tiny-cbor/esm/cbor/cbor.js", "../../../node_modules/@levischuck/tiny-cbor/esm/cbor/cbor_internal.js", "../../../node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/index.js", "../../../node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/digest.js", "../../../node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/mapCoseAlgToWebCryptoAlg.js", "../../../node_modules/@simplewebauthn/server/esm/helpers/cose.js", "../../../node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/getWebCrypto.js", "../../../node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/getRandomValues.js", "../../../node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/verify.js", "../../../node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/verifyEC2.js", "../../../node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/importKey.js", "../../../node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/verifyRSA.js", "../../../node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/mapCoseAlgToWebCryptoKeyAlgName.js", "../../../node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/verifyOKP.js", "../../../node_modules/@simplewebauthn/server/esm/helpers/index.js", "../../../node_modules/@simplewebauthn/server/esm/helpers/convertAAGUIDToString.js", "../../../node_modules/@simplewebauthn/server/esm/helpers/convertCertBufferToPEM.js", "../../../node_modules/@simplewebauthn/server/esm/helpers/convertCOSEtoPKCS.js", "../../../node_modules/@simplewebauthn/server/esm/helpers/decodeAttestationObject.js", "../../../node_modules/@simplewebauthn/server/esm/helpers/decodeClientDataJSON.js", "../../../node_modules/@simplewebauthn/server/esm/helpers/decodeCredentialPublicKey.js", "../../../node_modules/@simplewebauthn/server/esm/helpers/generateUserID.js", "../../../node_modules/@simplewebauthn/server/esm/helpers/getCertificateInfo.js", "../../../node_modules/@peculiar/asn1-x509/build/es2015/index.js", "../../../node_modules/@peculiar/asn1-x509/build/es2015/extensions/index.js", "../../../node_modules/@peculiar/asn1-x509/build/es2015/extensions/authority_information_access.js", "../../../node_modules/@peculiar/asn1-x509/build/es2015/general_name.js", "../../../node_modules/@peculiar/asn1-x509/build/es2015/ip_converter.js", "../../../node_modules/@peculiar/asn1-x509/build/es2015/name.js", "../../../node_modules/@peculiar/asn1-x509/build/es2015/object_identifiers.js", "../../../node_modules/@peculiar/asn1-x509/build/es2015/extensions/authority_key_identifier.js", "../../../node_modules/@peculiar/asn1-x509/build/es2015/extensions/basic_constraints.js", "../../../node_modules/@peculiar/asn1-x509/build/es2015/extensions/certificate_issuer.js", "../../../node_modules/@peculiar/asn1-x509/build/es2015/general_names.js", "../../../node_modules/@peculiar/asn1-x509/build/es2015/extensions/certificate_policies.js", "../../../node_modules/@peculiar/asn1-x509/build/es2015/extensions/crl_delta_indicator.js", "../../../node_modules/@peculiar/asn1-x509/build/es2015/extensions/crl_number.js", "../../../node_modules/@peculiar/asn1-x509/build/es2015/extensions/crl_distribution_points.js", "../../../node_modules/@peculiar/asn1-x509/build/es2015/extensions/crl_freshest.js", "../../../node_modules/@peculiar/asn1-x509/build/es2015/extensions/crl_issuing_distribution_point.js", "../../../node_modules/@peculiar/asn1-x509/build/es2015/extensions/crl_reason.js", "../../../node_modules/@peculiar/asn1-x509/build/es2015/extensions/extended_key_usage.js", "../../../node_modules/@peculiar/asn1-x509/build/es2015/extensions/inhibit_any_policy.js", "../../../node_modules/@peculiar/asn1-x509/build/es2015/extensions/invalidity_date.js", "../../../node_modules/@peculiar/asn1-x509/build/es2015/extensions/issuer_alternative_name.js", "../../../node_modules/@peculiar/asn1-x509/build/es2015/extensions/key_usage.js", "../../../node_modules/@peculiar/asn1-x509/build/es2015/extensions/name_constraints.js", "../../../node_modules/@peculiar/asn1-x509/build/es2015/extensions/policy_constraints.js", "../../../node_modules/@peculiar/asn1-x509/build/es2015/extensions/policy_mappings.js", "../../../node_modules/@peculiar/asn1-x509/build/es2015/extensions/subject_alternative_name.js", "../../../node_modules/@peculiar/asn1-x509/build/es2015/extensions/subject_directory_attributes.js", "../../../node_modules/@peculiar/asn1-x509/build/es2015/attribute.js", "../../../node_modules/@peculiar/asn1-x509/build/es2015/extensions/subject_key_identifier.js", "../../../node_modules/@peculiar/asn1-x509/build/es2015/extensions/private_key_usage_period.js", "../../../node_modules/@peculiar/asn1-x509/build/es2015/extensions/entrust_version_info.js", "../../../node_modules/@peculiar/asn1-x509/build/es2015/extensions/subject_info_access.js", "../../../node_modules/@peculiar/asn1-x509/build/es2015/algorithm_identifier.js", "../../../node_modules/@peculiar/asn1-x509/build/es2015/certificate.js", "../../../node_modules/@peculiar/asn1-x509/build/es2015/tbs_certificate.js", "../../../node_modules/@peculiar/asn1-x509/build/es2015/subject_public_key_info.js", "../../../node_modules/@peculiar/asn1-x509/build/es2015/validity.js", "../../../node_modules/@peculiar/asn1-x509/build/es2015/time.js", "../../../node_modules/@peculiar/asn1-x509/build/es2015/extension.js", "../../../node_modules/@peculiar/asn1-x509/build/es2015/types.js", "../../../node_modules/@peculiar/asn1-x509/build/es2015/certificate_list.js", "../../../node_modules/@peculiar/asn1-x509/build/es2015/tbs_cert_list.js", "../../../node_modules/@simplewebauthn/server/esm/helpers/isCertRevoked.js", "../../../node_modules/@simplewebauthn/server/esm/helpers/fetch.js", "../../../node_modules/@simplewebauthn/server/esm/helpers/parseAuthenticatorData.js", "../../../node_modules/@simplewebauthn/server/esm/helpers/decodeAuthenticatorExtensions.js", "../../../node_modules/@simplewebauthn/server/esm/helpers/toHash.js", "../../../node_modules/@simplewebauthn/server/esm/helpers/validateCertificatePath.js", "../../../node_modules/@simplewebauthn/server/esm/helpers/verifySignature.js", "../../../node_modules/@simplewebauthn/server/esm/helpers/convertX509PublicKeyToCOSE.js", "../../../node_modules/@peculiar/asn1-ecc/build/es2015/index.js", "../../../node_modules/@peculiar/asn1-ecc/build/es2015/algorithms.js", "../../../node_modules/@peculiar/asn1-ecc/build/es2015/object_identifiers.js", "../../../node_modules/@peculiar/asn1-ecc/build/es2015/ec_parameters.js", "../../../node_modules/@peculiar/asn1-ecc/build/es2015/rfc3279.js", "../../../node_modules/@peculiar/asn1-ecc/build/es2015/ec_private_key.js", "../../../node_modules/@peculiar/asn1-ecc/build/es2015/ec_signature_value.js", "../../../node_modules/@peculiar/asn1-rsa/build/es2015/index.js", "../../../node_modules/@peculiar/asn1-rsa/build/es2015/parameters/index.js", "../../../node_modules/@peculiar/asn1-rsa/build/es2015/parameters/rsaes_oaep.js", "../../../node_modules/@peculiar/asn1-rsa/build/es2015/object_identifiers.js", "../../../node_modules/@peculiar/asn1-rsa/build/es2015/algorithms.js", "../../../node_modules/@peculiar/asn1-rsa/build/es2015/parameters/rsassa_pss.js", "../../../node_modules/@peculiar/asn1-rsa/build/es2015/parameters/rsassa_pkcs1_v1_5.js", "../../../node_modules/@peculiar/asn1-rsa/build/es2015/other_prime_info.js", "../../../node_modules/@peculiar/asn1-rsa/build/es2015/rsa_private_key.js", "../../../node_modules/@peculiar/asn1-rsa/build/es2015/rsa_public_key.js", "../../../node_modules/@simplewebauthn/server/esm/helpers/mapX509SignatureAlgToCOSEAlg.js", "../../../node_modules/@simplewebauthn/server/esm/helpers/convertPEMToBytes.js", "../../../node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/unwrapEC2Signature.js", "../../../node_modules/@simplewebauthn/server/esm/helpers/iso/isoUint8Array.js", "../../../node_modules/@simplewebauthn/server/esm/registration/verifyRegistrationResponse.js", "../../../node_modules/@simplewebauthn/server/esm/helpers/parseBackupFlags.js", "../../../node_modules/@simplewebauthn/server/esm/helpers/matchExpectedRPID.js", "../../../node_modules/@simplewebauthn/server/esm/services/settingsService.js", "../../../node_modules/@simplewebauthn/server/esm/services/defaultRootCerts/android-safetynet.js", "../../../node_modules/@simplewebauthn/server/esm/services/defaultRootCerts/android-key.js", "../../../node_modules/@simplewebauthn/server/esm/services/defaultRootCerts/apple.js", "../../../node_modules/@simplewebauthn/server/esm/services/defaultRootCerts/mds.js", "../../../node_modules/@simplewebauthn/server/esm/registration/verifications/verifyAttestationFIDOU2F.js", "../../../node_modules/@simplewebauthn/server/esm/registration/verifications/verifyAttestationPacked.js", "../../../node_modules/@simplewebauthn/server/esm/helpers/validateExtFIDOGenCEAAGUID.js", "../../../node_modules/@simplewebauthn/server/esm/services/metadataService.js", "../../../node_modules/@simplewebauthn/server/esm/helpers/logging.js", "../../../node_modules/@simplewebauthn/server/esm/metadata/parseJWT.js", "../../../node_modules/@simplewebauthn/server/esm/metadata/verifyJWT.js", "../../../node_modules/@simplewebauthn/server/esm/metadata/verifyAttestationWithMetadata.js", "../../../node_modules/@simplewebauthn/server/esm/registration/verifications/verifyAttestationAndroidSafetyNet.js", "../../../node_modules/@simplewebauthn/server/esm/registration/verifications/tpm/verifyAttestationTPM.js", "../../../node_modules/@simplewebauthn/server/esm/registration/verifications/tpm/constants.js", "../../../node_modules/@simplewebauthn/server/esm/registration/verifications/tpm/parseCertInfo.js", "../../../node_modules/@simplewebauthn/server/esm/registration/verifications/tpm/parsePubArea.js", "../../../node_modules/@simplewebauthn/server/esm/registration/verifications/verifyAttestationAndroidKey.js", "../../../node_modules/@peculiar/asn1-android/build/es2015/index.js", "../../../node_modules/@peculiar/asn1-android/build/es2015/key_description.js", "../../../node_modules/@peculiar/asn1-android/build/es2015/nonstandard.js", "../../../node_modules/@peculiar/asn1-android/build/es2015/attestation.js", "../../../node_modules/@simplewebauthn/server/esm/registration/verifications/verifyAttestationApple.js", "../../../node_modules/@simplewebauthn/server/esm/authentication/generateAuthenticationOptions.js", "../../../node_modules/@simplewebauthn/server/esm/authentication/verifyAuthenticationResponse.js", "../../../node_modules/@simplewebauthn/server/esm/metadata/mdsTypes.js", "../../../node_modules/@simplewebauthn/server/esm/types/index.js", "../../../../../../Users/Lucas/AppData/Roaming/npm/node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts", "../../../../../../Users/Lucas/AppData/Roaming/npm/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts", "../../../../../../Users/Lucas/AppData/Roaming/npm/node_modules/wrangler/templates/middleware/common.ts"],
  "sourceRoot": "D:\\Documents\\Croissant\\API\\.wrangler\\tmp\\dev-nQLVei",
  "sourcesContent": ["/* @__NO_SIDE_EFFECTS__ */\nexport function rawHeaders(headers) {\n\tconst rawHeaders = [];\n\tfor (const key in headers) {\n\t\tif (Array.isArray(headers[key])) {\n\t\t\tfor (const h of headers[key]) {\n\t\t\t\trawHeaders.push(key, h);\n\t\t\t}\n\t\t} else {\n\t\t\trawHeaders.push(key, headers[key]);\n\t\t}\n\t}\n\treturn rawHeaders;\n}\n/* @__NO_SIDE_EFFECTS__ */\nexport function mergeFns(...functions) {\n\treturn function(...args) {\n\t\tfor (const fn of functions) {\n\t\t\tfn(...args);\n\t\t}\n\t};\n}\n/* @__NO_SIDE_EFFECTS__ */\nexport function createNotImplementedError(name) {\n\treturn new Error(`[unenv] ${name} is not implemented yet!`);\n}\n/* @__NO_SIDE_EFFECTS__ */\nexport function notImplemented(name) {\n\tconst fn = () => {\n\t\tthrow createNotImplementedError(name);\n\t};\n\treturn Object.assign(fn, { __unenv__: true });\n}\n/* @__NO_SIDE_EFFECTS__ */\nexport function notImplementedAsync(name) {\n\tconst fn = notImplemented(name);\n\tfn.__promisify__ = () => notImplemented(name + \".__promisify__\");\n\tfn.native = fn;\n\treturn fn;\n}\n/* @__NO_SIDE_EFFECTS__ */\nexport function notImplementedClass(name) {\n\treturn class {\n\t\t__unenv__ = true;\n\t\tconstructor() {\n\t\t\tthrow new Error(`[unenv] ${name} is not implemented yet!`);\n\t\t}\n\t};\n}\n", "import { createNotImplementedError } from \"../../../_internal/utils.mjs\";\nconst _timeOrigin = globalThis.performance?.timeOrigin ?? Date.now();\nconst _performanceNow = globalThis.performance?.now ? globalThis.performance.now.bind(globalThis.performance) : () => Date.now() - _timeOrigin;\nconst nodeTiming = {\n\tname: \"node\",\n\tentryType: \"node\",\n\tstartTime: 0,\n\tduration: 0,\n\tnodeStart: 0,\n\tv8Start: 0,\n\tbootstrapComplete: 0,\n\tenvironment: 0,\n\tloopStart: 0,\n\tloopExit: 0,\n\tidleTime: 0,\n\tuvMetricsInfo: {\n\t\tloopCount: 0,\n\t\tevents: 0,\n\t\teventsWaiting: 0\n\t},\n\tdetail: undefined,\n\ttoJSON() {\n\t\treturn this;\n\t}\n};\n// PerformanceEntry\nexport class PerformanceEntry {\n\t__unenv__ = true;\n\tdetail;\n\tentryType = \"event\";\n\tname;\n\tstartTime;\n\tconstructor(name, options) {\n\t\tthis.name = name;\n\t\tthis.startTime = options?.startTime || _performanceNow();\n\t\tthis.detail = options?.detail;\n\t}\n\tget duration() {\n\t\treturn _performanceNow() - this.startTime;\n\t}\n\ttoJSON() {\n\t\treturn {\n\t\t\tname: this.name,\n\t\t\tentryType: this.entryType,\n\t\t\tstartTime: this.startTime,\n\t\t\tduration: this.duration,\n\t\t\tdetail: this.detail\n\t\t};\n\t}\n}\n// PerformanceMark\nexport const PerformanceMark = class PerformanceMark extends PerformanceEntry {\n\tentryType = \"mark\";\n\tconstructor() {\n\t\t// @ts-ignore\n\t\tsuper(...arguments);\n\t}\n\tget duration() {\n\t\treturn 0;\n\t}\n};\n// PerformanceMark\nexport class PerformanceMeasure extends PerformanceEntry {\n\tentryType = \"measure\";\n}\n// PerformanceResourceTiming\nexport class PerformanceResourceTiming extends PerformanceEntry {\n\tentryType = \"resource\";\n\tserverTiming = [];\n\tconnectEnd = 0;\n\tconnectStart = 0;\n\tdecodedBodySize = 0;\n\tdomainLookupEnd = 0;\n\tdomainLookupStart = 0;\n\tencodedBodySize = 0;\n\tfetchStart = 0;\n\tinitiatorType = \"\";\n\tname = \"\";\n\tnextHopProtocol = \"\";\n\tredirectEnd = 0;\n\tredirectStart = 0;\n\trequestStart = 0;\n\tresponseEnd = 0;\n\tresponseStart = 0;\n\tsecureConnectionStart = 0;\n\tstartTime = 0;\n\ttransferSize = 0;\n\tworkerStart = 0;\n\tresponseStatus = 0;\n}\n// PerformanceObserverEntryList\nexport class PerformanceObserverEntryList {\n\t__unenv__ = true;\n\tgetEntries() {\n\t\treturn [];\n\t}\n\tgetEntriesByName(_name, _type) {\n\t\treturn [];\n\t}\n\tgetEntriesByType(type) {\n\t\treturn [];\n\t}\n}\n// Performance\nexport class Performance {\n\t__unenv__ = true;\n\ttimeOrigin = _timeOrigin;\n\teventCounts = new Map();\n\t_entries = [];\n\t_resourceTimingBufferSize = 0;\n\tnavigation = undefined;\n\ttiming = undefined;\n\ttimerify(_fn, _options) {\n\t\tthrow createNotImplementedError(\"Performance.timerify\");\n\t}\n\tget nodeTiming() {\n\t\treturn nodeTiming;\n\t}\n\teventLoopUtilization() {\n\t\treturn {};\n\t}\n\tmarkResourceTiming() {\n\t\t// TODO: create a new PerformanceResourceTiming entry\n\t\t// so that performance.getEntries, getEntriesByName, and getEntriesByType return it\n\t\t// see: https://nodejs.org/api/perf_hooks.html#performancemarkresourcetimingtiminginfo-requestedurl-initiatortype-global-cachemode-bodyinfo-responsestatus-deliverytype\n\t\treturn new PerformanceResourceTiming(\"\");\n\t}\n\tonresourcetimingbufferfull = null;\n\tnow() {\n\t\t// https://developer.mozilla.org/en-US/docs/Web/API/Performance/now\n\t\tif (this.timeOrigin === _timeOrigin) {\n\t\t\treturn _performanceNow();\n\t\t}\n\t\treturn Date.now() - this.timeOrigin;\n\t}\n\tclearMarks(markName) {\n\t\tthis._entries = markName ? this._entries.filter((e) => e.name !== markName) : this._entries.filter((e) => e.entryType !== \"mark\");\n\t}\n\tclearMeasures(measureName) {\n\t\tthis._entries = measureName ? this._entries.filter((e) => e.name !== measureName) : this._entries.filter((e) => e.entryType !== \"measure\");\n\t}\n\tclearResourceTimings() {\n\t\tthis._entries = this._entries.filter((e) => e.entryType !== \"resource\" || e.entryType !== \"navigation\");\n\t}\n\tgetEntries() {\n\t\treturn this._entries;\n\t}\n\tgetEntriesByName(name, type) {\n\t\treturn this._entries.filter((e) => e.name === name && (!type || e.entryType === type));\n\t}\n\tgetEntriesByType(type) {\n\t\treturn this._entries.filter((e) => e.entryType === type);\n\t}\n\tmark(name, options) {\n\t\t// @ts-expect-error constructor is not protected\n\t\tconst entry = new PerformanceMark(name, options);\n\t\tthis._entries.push(entry);\n\t\treturn entry;\n\t}\n\tmeasure(measureName, startOrMeasureOptions, endMark) {\n\t\tlet start;\n\t\tlet end;\n\t\tif (typeof startOrMeasureOptions === \"string\") {\n\t\t\tstart = this.getEntriesByName(startOrMeasureOptions, \"mark\")[0]?.startTime;\n\t\t\tend = this.getEntriesByName(endMark, \"mark\")[0]?.startTime;\n\t\t} else {\n\t\t\tstart = Number.parseFloat(startOrMeasureOptions?.start) || this.now();\n\t\t\tend = Number.parseFloat(startOrMeasureOptions?.end) || this.now();\n\t\t}\n\t\tconst entry = new PerformanceMeasure(measureName, {\n\t\t\tstartTime: start,\n\t\t\tdetail: {\n\t\t\t\tstart,\n\t\t\t\tend\n\t\t\t}\n\t\t});\n\t\tthis._entries.push(entry);\n\t\treturn entry;\n\t}\n\tsetResourceTimingBufferSize(maxSize) {\n\t\tthis._resourceTimingBufferSize = maxSize;\n\t}\n\taddEventListener(type, listener, options) {\n\t\tthrow createNotImplementedError(\"Performance.addEventListener\");\n\t}\n\tremoveEventListener(type, listener, options) {\n\t\tthrow createNotImplementedError(\"Performance.removeEventListener\");\n\t}\n\tdispatchEvent(event) {\n\t\tthrow createNotImplementedError(\"Performance.dispatchEvent\");\n\t}\n\ttoJSON() {\n\t\treturn this;\n\t}\n}\n// PerformanceObserver\nexport class PerformanceObserver {\n\t__unenv__ = true;\n\tstatic supportedEntryTypes = [];\n\t_callback = null;\n\tconstructor(callback) {\n\t\tthis._callback = callback;\n\t}\n\ttakeRecords() {\n\t\treturn [];\n\t}\n\tdisconnect() {\n\t\tthrow createNotImplementedError(\"PerformanceObserver.disconnect\");\n\t}\n\tobserve(options) {\n\t\tthrow createNotImplementedError(\"PerformanceObserver.observe\");\n\t}\n\tbind(fn) {\n\t\treturn fn;\n\t}\n\trunInAsyncScope(fn, thisArg, ...args) {\n\t\treturn fn.call(thisArg, ...args);\n\t}\n\tasyncId() {\n\t\treturn 0;\n\t}\n\ttriggerAsyncId() {\n\t\treturn 0;\n\t}\n\temitDestroy() {\n\t\treturn this;\n\t}\n}\n// workerd implements a subset of globalThis.performance (as of last check, only timeOrigin set to 0 + now() implemented)\n// We already use performance.now() from globalThis.performance, if provided (see top of this file)\n// If we detect this condition, we can just use polyfill instead.\nexport const performance = globalThis.performance && \"addEventListener\" in globalThis.performance ? globalThis.performance : new Performance();\n", "import { IntervalHistogram, RecordableHistogram } from \"./internal/perf_hooks/histogram.mjs\";\nimport { performance, Performance, PerformanceEntry, PerformanceMark, PerformanceMeasure, PerformanceObserverEntryList, PerformanceObserver, PerformanceResourceTiming } from \"./internal/perf_hooks/performance.mjs\";\nexport * from \"./internal/perf_hooks/performance.mjs\";\n// prettier-ignore\nimport { NODE_PERFORMANCE_GC_MAJOR, NODE_PERFORMANCE_GC_MINOR, NODE_PERFORMANCE_GC_INCREMENTAL, NODE_PERFORMANCE_GC_WEAKCB, NODE_PERFORMANCE_GC_FLAGS_NO, NODE_PERFORMANCE_GC_FLAGS_CONSTRUCT_RETAINED, NODE_PERFORMANCE_GC_FLAGS_FORCED, NODE_PERFORMANCE_GC_FLAGS_SYNCHRONOUS_PHANTOM_PROCESSING, NODE_PERFORMANCE_GC_FLAGS_ALL_AVAILABLE_GARBAGE, NODE_PERFORMANCE_GC_FLAGS_ALL_EXTERNAL_MEMORY, NODE_PERFORMANCE_GC_FLAGS_SCHEDULE_IDLE, NODE_PERFORMANCE_ENTRY_TYPE_GC, NODE_PERFORMANCE_ENTRY_TYPE_HTTP, NODE_PERFORMANCE_ENTRY_TYPE_HTTP2, NODE_PERFORMANCE_ENTRY_TYPE_NET, NODE_PERFORMANCE_ENTRY_TYPE_DNS, NODE_PERFORMANCE_MILESTONE_TIME_ORIGIN_TIMESTAMP, NODE_PERFORMANCE_MILESTONE_TIME_ORIGIN, NODE_PERFORMANCE_MILESTONE_ENVIRONMENT, NODE_PERFORMANCE_MILESTONE_NODE_START, NODE_PERFORMANCE_MILESTONE_V8_START, NODE_PERFORMANCE_MILESTONE_LOOP_START, NODE_PERFORMANCE_MILESTONE_LOOP_EXIT, NODE_PERFORMANCE_MILESTONE_BOOTSTRAP_COMPLETE } from \"./internal/perf_hooks/constants.mjs\";\n// prettier-ignore\nexport const constants = {\n\tNODE_PERFORMANCE_GC_MAJOR,\n\tNODE_PERFORMANCE_GC_MINOR,\n\tNODE_PERFORMANCE_GC_INCREMENTAL,\n\tNODE_PERFORMANCE_GC_WEAKCB,\n\tNODE_PERFORMANCE_GC_FLAGS_NO,\n\tNODE_PERFORMANCE_GC_FLAGS_CONSTRUCT_RETAINED,\n\tNODE_PERFORMANCE_GC_FLAGS_FORCED,\n\tNODE_PERFORMANCE_GC_FLAGS_SYNCHRONOUS_PHANTOM_PROCESSING,\n\tNODE_PERFORMANCE_GC_FLAGS_ALL_AVAILABLE_GARBAGE,\n\tNODE_PERFORMANCE_GC_FLAGS_ALL_EXTERNAL_MEMORY,\n\tNODE_PERFORMANCE_GC_FLAGS_SCHEDULE_IDLE,\n\tNODE_PERFORMANCE_ENTRY_TYPE_GC,\n\tNODE_PERFORMANCE_ENTRY_TYPE_HTTP,\n\tNODE_PERFORMANCE_ENTRY_TYPE_HTTP2,\n\tNODE_PERFORMANCE_ENTRY_TYPE_NET,\n\tNODE_PERFORMANCE_ENTRY_TYPE_DNS,\n\tNODE_PERFORMANCE_MILESTONE_TIME_ORIGIN_TIMESTAMP,\n\tNODE_PERFORMANCE_MILESTONE_TIME_ORIGIN,\n\tNODE_PERFORMANCE_MILESTONE_ENVIRONMENT,\n\tNODE_PERFORMANCE_MILESTONE_NODE_START,\n\tNODE_PERFORMANCE_MILESTONE_V8_START,\n\tNODE_PERFORMANCE_MILESTONE_LOOP_START,\n\tNODE_PERFORMANCE_MILESTONE_LOOP_EXIT,\n\tNODE_PERFORMANCE_MILESTONE_BOOTSTRAP_COMPLETE\n};\nexport const monitorEventLoopDelay = function(_options) {\n\treturn new IntervalHistogram();\n};\nexport const createHistogram = function(_options) {\n\treturn new RecordableHistogram();\n};\nexport default {\n\tPerformance,\n\tPerformanceMark,\n\tPerformanceEntry,\n\tPerformanceMeasure,\n\tPerformanceObserverEntryList,\n\tPerformanceObserver,\n\tPerformanceResourceTiming,\n\tperformance,\n\tconstants,\n\tcreateHistogram,\n\tmonitorEventLoopDelay\n};\n", "import {\n  performance,\n  Performance,\n  PerformanceEntry,\n  PerformanceMark,\n  PerformanceMeasure,\n  PerformanceObserver,\n  PerformanceObserverEntryList,\n  PerformanceResourceTiming\n} from \"node:perf_hooks\";\nglobalThis.performance = performance;\nglobalThis.Performance = Performance;\nglobalThis.PerformanceEntry = PerformanceEntry;\nglobalThis.PerformanceMark = PerformanceMark;\nglobalThis.PerformanceMeasure = PerformanceMeasure;\nglobalThis.PerformanceObserver = PerformanceObserver;\nglobalThis.PerformanceObserverEntryList = PerformanceObserverEntryList;\nglobalThis.PerformanceResourceTiming = PerformanceResourceTiming;\n", "export default Object.assign(() => {}, { __unenv__: true });\n", "import { Writable } from \"node:stream\";\nimport noop from \"../mock/noop.mjs\";\nimport { notImplemented, notImplementedClass } from \"../_internal/utils.mjs\";\nconst _console = globalThis.console;\n// undocumented public APIs\nexport const _ignoreErrors = true;\nexport const _stderr = new Writable();\nexport const _stdout = new Writable();\nexport const log = _console?.log ?? noop;\nexport const info = _console?.info ?? log;\nexport const trace = _console?.trace ?? info;\nexport const debug = _console?.debug ?? log;\nexport const table = _console?.table ?? log;\nexport const error = _console?.error ?? log;\nexport const warn = _console?.warn ?? error;\n// https://developer.chrome.com/docs/devtools/console/api#createtask\nexport const createTask = _console?.createTask ?? /* @__PURE__ */ notImplemented(\"console.createTask\");\nexport const assert = /* @__PURE__ */ notImplemented(\"console.assert\");\n// noop\nexport const clear = _console?.clear ?? noop;\nexport const count = _console?.count ?? noop;\nexport const countReset = _console?.countReset ?? noop;\nexport const dir = _console?.dir ?? noop;\nexport const dirxml = _console?.dirxml ?? noop;\nexport const group = _console?.group ?? noop;\nexport const groupEnd = _console?.groupEnd ?? noop;\nexport const groupCollapsed = _console?.groupCollapsed ?? noop;\nexport const profile = _console?.profile ?? noop;\nexport const profileEnd = _console?.profileEnd ?? noop;\nexport const time = _console?.time ?? noop;\nexport const timeEnd = _console?.timeEnd ?? noop;\nexport const timeLog = _console?.timeLog ?? noop;\nexport const timeStamp = _console?.timeStamp ?? noop;\nexport const Console = _console?.Console ?? /* @__PURE__ */ notImplementedClass(\"console.Console\");\nexport const _times = /* @__PURE__ */ new Map();\nexport function context() {\n\t// TODO: Should be Console with all the methods\n\treturn _console;\n}\nexport const _stdoutErrorHandler = noop;\nexport const _stderrErrorHandler = noop;\nexport default {\n\t_times,\n\t_ignoreErrors,\n\t_stdoutErrorHandler,\n\t_stderrErrorHandler,\n\t_stdout,\n\t_stderr,\n\tassert,\n\tclear,\n\tConsole,\n\tcount,\n\tcountReset,\n\tdebug,\n\tdir,\n\tdirxml,\n\terror,\n\tcontext,\n\tcreateTask,\n\tgroup,\n\tgroupEnd,\n\tgroupCollapsed,\n\tinfo,\n\tlog,\n\tprofile,\n\tprofileEnd,\n\ttable,\n\ttime,\n\ttimeEnd,\n\ttimeLog,\n\ttimeStamp,\n\ttrace,\n\twarn\n};\n", "import {\n  _ignoreErrors,\n  _stderr,\n  _stderrErrorHandler,\n  _stdout,\n  _stdoutErrorHandler,\n  _times,\n  Console\n} from \"unenv/node/console\";\nexport {\n  Console,\n  _ignoreErrors,\n  _stderr,\n  _stderrErrorHandler,\n  _stdout,\n  _stdoutErrorHandler,\n  _times\n} from \"unenv/node/console\";\nconst workerdConsole = globalThis[\"console\"];\nexport const {\n  assert,\n  clear,\n  // @ts-expect-error undocumented public API\n  context,\n  count,\n  countReset,\n  // @ts-expect-error undocumented public API\n  createTask,\n  debug,\n  dir,\n  dirxml,\n  error,\n  group,\n  groupCollapsed,\n  groupEnd,\n  info,\n  log,\n  profile,\n  profileEnd,\n  table,\n  time,\n  timeEnd,\n  timeLog,\n  timeStamp,\n  trace,\n  warn\n} = workerdConsole;\nObject.assign(workerdConsole, {\n  Console,\n  _ignoreErrors,\n  _stderr,\n  _stderrErrorHandler,\n  _stdout,\n  _stdoutErrorHandler,\n  _times\n});\nexport default workerdConsole;\n", "import { default as defaultExport } from \"@cloudflare/unenv-preset/node/console\";\nglobalThis.console = defaultExport;", "// https://nodejs.org/api/process.html#processhrtime\nexport const hrtime = /* @__PURE__ */ Object.assign(function hrtime(startTime) {\n\tconst now = Date.now();\n\t// millis to seconds\n\tconst seconds = Math.trunc(now / 1e3);\n\t// convert millis to nanos\n\tconst nanos = now % 1e3 * 1e6;\n\tif (startTime) {\n\t\tlet diffSeconds = seconds - startTime[0];\n\t\tlet diffNanos = nanos - startTime[0];\n\t\tif (diffNanos < 0) {\n\t\t\tdiffSeconds = diffSeconds - 1;\n\t\t\tdiffNanos = 1e9 + diffNanos;\n\t\t}\n\t\treturn [diffSeconds, diffNanos];\n\t}\n\treturn [seconds, nanos];\n}, { bigint: function bigint() {\n\t// Convert milliseconds to nanoseconds\n\treturn BigInt(Date.now() * 1e6);\n} });\n", "export class ReadStream {\n\tfd;\n\tisRaw = false;\n\tisTTY = false;\n\tconstructor(fd) {\n\t\tthis.fd = fd;\n\t}\n\tsetRawMode(mode) {\n\t\tthis.isRaw = mode;\n\t\treturn this;\n\t}\n}\n", "export class WriteStream {\n\tfd;\n\tcolumns = 80;\n\trows = 24;\n\tisTTY = false;\n\tconstructor(fd) {\n\t\tthis.fd = fd;\n\t}\n\tclearLine(dir, callback) {\n\t\tcallback && callback();\n\t\treturn false;\n\t}\n\tclearScreenDown(callback) {\n\t\tcallback && callback();\n\t\treturn false;\n\t}\n\tcursorTo(x, y, callback) {\n\t\tcallback && typeof callback === \"function\" && callback();\n\t\treturn false;\n\t}\n\tmoveCursor(dx, dy, callback) {\n\t\tcallback && callback();\n\t\treturn false;\n\t}\n\tgetColorDepth(env) {\n\t\treturn 1;\n\t}\n\thasColors(count, env) {\n\t\treturn false;\n\t}\n\tgetWindowSize() {\n\t\treturn [this.columns, this.rows];\n\t}\n\twrite(str, encoding, cb) {\n\t\tif (str instanceof Uint8Array) {\n\t\t\tstr = new TextDecoder().decode(str);\n\t\t}\n\t\ttry {\n\t\t\tconsole.log(str);\n\t\t} catch {}\n\t\tcb && typeof cb === \"function\" && cb();\n\t\treturn false;\n\t}\n}\n", "import { ReadStream } from \"./internal/tty/read-stream.mjs\";\nimport { WriteStream } from \"./internal/tty/write-stream.mjs\";\nexport { ReadStream } from \"./internal/tty/read-stream.mjs\";\nexport { WriteStream } from \"./internal/tty/write-stream.mjs\";\nexport const isatty = function() {\n\treturn false;\n};\nexport default {\n\tReadStream,\n\tWriteStream,\n\tisatty\n};\n", "// Extracted from .nvmrc\nexport const NODE_VERSION = \"22.14.0\";\n", "import { EventEmitter } from \"node:events\";\nimport { ReadStream, WriteStream } from \"node:tty\";\nimport { notImplemented, createNotImplementedError } from \"../../../_internal/utils.mjs\";\n// node-version.ts is generated at build time\nimport { NODE_VERSION } from \"./node-version.mjs\";\nexport class Process extends EventEmitter {\n\tenv;\n\thrtime;\n\tnextTick;\n\tconstructor(impl) {\n\t\tsuper();\n\t\tthis.env = impl.env;\n\t\tthis.hrtime = impl.hrtime;\n\t\tthis.nextTick = impl.nextTick;\n\t\tfor (const prop of [...Object.getOwnPropertyNames(Process.prototype), ...Object.getOwnPropertyNames(EventEmitter.prototype)]) {\n\t\t\tconst value = this[prop];\n\t\t\tif (typeof value === \"function\") {\n\t\t\t\tthis[prop] = value.bind(this);\n\t\t\t}\n\t\t}\n\t}\n\t// --- event emitter ---\n\temitWarning(warning, type, code) {\n\t\tconsole.warn(`${code ? `[${code}] ` : \"\"}${type ? `${type}: ` : \"\"}${warning}`);\n\t}\n\temit(...args) {\n\t\t// @ts-ignore\n\t\treturn super.emit(...args);\n\t}\n\tlisteners(eventName) {\n\t\treturn super.listeners(eventName);\n\t}\n\t// --- stdio (lazy initializers) ---\n\t#stdin;\n\t#stdout;\n\t#stderr;\n\tget stdin() {\n\t\treturn this.#stdin ??= new ReadStream(0);\n\t}\n\tget stdout() {\n\t\treturn this.#stdout ??= new WriteStream(1);\n\t}\n\tget stderr() {\n\t\treturn this.#stderr ??= new WriteStream(2);\n\t}\n\t// --- cwd ---\n\t#cwd = \"/\";\n\tchdir(cwd) {\n\t\tthis.#cwd = cwd;\n\t}\n\tcwd() {\n\t\treturn this.#cwd;\n\t}\n\t// --- dummy props and getters ---\n\tarch = \"\";\n\tplatform = \"\";\n\targv = [];\n\targv0 = \"\";\n\texecArgv = [];\n\texecPath = \"\";\n\ttitle = \"\";\n\tpid = 200;\n\tppid = 100;\n\tget version() {\n\t\treturn `v${NODE_VERSION}`;\n\t}\n\tget versions() {\n\t\treturn { node: NODE_VERSION };\n\t}\n\tget allowedNodeEnvironmentFlags() {\n\t\treturn new Set();\n\t}\n\tget sourceMapsEnabled() {\n\t\treturn false;\n\t}\n\tget debugPort() {\n\t\treturn 0;\n\t}\n\tget throwDeprecation() {\n\t\treturn false;\n\t}\n\tget traceDeprecation() {\n\t\treturn false;\n\t}\n\tget features() {\n\t\treturn {};\n\t}\n\tget release() {\n\t\treturn {};\n\t}\n\tget connected() {\n\t\treturn false;\n\t}\n\tget config() {\n\t\treturn {};\n\t}\n\tget moduleLoadList() {\n\t\treturn [];\n\t}\n\tconstrainedMemory() {\n\t\treturn 0;\n\t}\n\tavailableMemory() {\n\t\treturn 0;\n\t}\n\tuptime() {\n\t\treturn 0;\n\t}\n\tresourceUsage() {\n\t\treturn {};\n\t}\n\t// --- noop methods ---\n\tref() {\n\t\t// noop\n\t}\n\tunref() {\n\t\t// noop\n\t}\n\t// --- unimplemented methods ---\n\tumask() {\n\t\tthrow createNotImplementedError(\"process.umask\");\n\t}\n\tgetBuiltinModule() {\n\t\treturn undefined;\n\t}\n\tgetActiveResourcesInfo() {\n\t\tthrow createNotImplementedError(\"process.getActiveResourcesInfo\");\n\t}\n\texit() {\n\t\tthrow createNotImplementedError(\"process.exit\");\n\t}\n\treallyExit() {\n\t\tthrow createNotImplementedError(\"process.reallyExit\");\n\t}\n\tkill() {\n\t\tthrow createNotImplementedError(\"process.kill\");\n\t}\n\tabort() {\n\t\tthrow createNotImplementedError(\"process.abort\");\n\t}\n\tdlopen() {\n\t\tthrow createNotImplementedError(\"process.dlopen\");\n\t}\n\tsetSourceMapsEnabled() {\n\t\tthrow createNotImplementedError(\"process.setSourceMapsEnabled\");\n\t}\n\tloadEnvFile() {\n\t\tthrow createNotImplementedError(\"process.loadEnvFile\");\n\t}\n\tdisconnect() {\n\t\tthrow createNotImplementedError(\"process.disconnect\");\n\t}\n\tcpuUsage() {\n\t\tthrow createNotImplementedError(\"process.cpuUsage\");\n\t}\n\tsetUncaughtExceptionCaptureCallback() {\n\t\tthrow createNotImplementedError(\"process.setUncaughtExceptionCaptureCallback\");\n\t}\n\thasUncaughtExceptionCaptureCallback() {\n\t\tthrow createNotImplementedError(\"process.hasUncaughtExceptionCaptureCallback\");\n\t}\n\tinitgroups() {\n\t\tthrow createNotImplementedError(\"process.initgroups\");\n\t}\n\topenStdin() {\n\t\tthrow createNotImplementedError(\"process.openStdin\");\n\t}\n\tassert() {\n\t\tthrow createNotImplementedError(\"process.assert\");\n\t}\n\tbinding() {\n\t\tthrow createNotImplementedError(\"process.binding\");\n\t}\n\t// --- attached interfaces ---\n\tpermission = { has: /* @__PURE__ */ notImplemented(\"process.permission.has\") };\n\treport = {\n\t\tdirectory: \"\",\n\t\tfilename: \"\",\n\t\tsignal: \"SIGUSR2\",\n\t\tcompact: false,\n\t\treportOnFatalError: false,\n\t\treportOnSignal: false,\n\t\treportOnUncaughtException: false,\n\t\tgetReport: /* @__PURE__ */ notImplemented(\"process.report.getReport\"),\n\t\twriteReport: /* @__PURE__ */ notImplemented(\"process.report.writeReport\")\n\t};\n\tfinalization = {\n\t\tregister: /* @__PURE__ */ notImplemented(\"process.finalization.register\"),\n\t\tunregister: /* @__PURE__ */ notImplemented(\"process.finalization.unregister\"),\n\t\tregisterBeforeExit: /* @__PURE__ */ notImplemented(\"process.finalization.registerBeforeExit\")\n\t};\n\tmemoryUsage = Object.assign(() => ({\n\t\tarrayBuffers: 0,\n\t\trss: 0,\n\t\texternal: 0,\n\t\theapTotal: 0,\n\t\theapUsed: 0\n\t}), { rss: () => 0 });\n\t// --- undefined props ---\n\tmainModule = undefined;\n\tdomain = undefined;\n\t// optional\n\tsend = undefined;\n\texitCode = undefined;\n\tchannel = undefined;\n\tgetegid = undefined;\n\tgeteuid = undefined;\n\tgetgid = undefined;\n\tgetgroups = undefined;\n\tgetuid = undefined;\n\tsetegid = undefined;\n\tseteuid = undefined;\n\tsetgid = undefined;\n\tsetgroups = undefined;\n\tsetuid = undefined;\n\t// internals\n\t_events = undefined;\n\t_eventsCount = undefined;\n\t_exiting = undefined;\n\t_maxListeners = undefined;\n\t_debugEnd = undefined;\n\t_debugProcess = undefined;\n\t_fatalException = undefined;\n\t_getActiveHandles = undefined;\n\t_getActiveRequests = undefined;\n\t_kill = undefined;\n\t_preload_modules = undefined;\n\t_rawDebug = undefined;\n\t_startProfilerIdleNotifier = undefined;\n\t_stopProfilerIdleNotifier = undefined;\n\t_tickCallback = undefined;\n\t_disconnect = undefined;\n\t_handleQueue = undefined;\n\t_pendingMessage = undefined;\n\t_channel = undefined;\n\t_send = undefined;\n\t_linkedBinding = undefined;\n}\n", "import { hrtime as UnenvHrTime } from \"unenv/node/internal/process/hrtime\";\nimport { Process as UnenvProcess } from \"unenv/node/internal/process/process\";\nconst globalProcess = globalThis[\"process\"];\nexport const getBuiltinModule = globalProcess.getBuiltinModule;\nconst workerdProcess = getBuiltinModule(\"node:process\");\nconst isWorkerdProcessV2 = globalThis.Cloudflare.compatibilityFlags.enable_nodejs_process_v2;\nconst unenvProcess = new UnenvProcess({\n  env: globalProcess.env,\n  // `hrtime` is only available from workerd process v2\n  hrtime: isWorkerdProcessV2 ? workerdProcess.hrtime : UnenvHrTime,\n  // `nextTick` is available from workerd process v1\n  nextTick: workerdProcess.nextTick\n});\nexport const { exit, features, platform } = workerdProcess;\nexport const {\n  // Always implemented by workerd\n  env,\n  // Only implemented in workerd v2\n  hrtime,\n  // Always implemented by workerd\n  nextTick\n} = unenvProcess;\nexport const {\n  _channel,\n  _disconnect,\n  _events,\n  _eventsCount,\n  _handleQueue,\n  _maxListeners,\n  _pendingMessage,\n  _send,\n  assert,\n  disconnect,\n  mainModule\n} = unenvProcess;\nexport const {\n  // @ts-expect-error `_debugEnd` is missing typings\n  _debugEnd,\n  // @ts-expect-error `_debugProcess` is missing typings\n  _debugProcess,\n  // @ts-expect-error `_exiting` is missing typings\n  _exiting,\n  // @ts-expect-error `_fatalException` is missing typings\n  _fatalException,\n  // @ts-expect-error `_getActiveHandles` is missing typings\n  _getActiveHandles,\n  // @ts-expect-error `_getActiveRequests` is missing typings\n  _getActiveRequests,\n  // @ts-expect-error `_kill` is missing typings\n  _kill,\n  // @ts-expect-error `_linkedBinding` is missing typings\n  _linkedBinding,\n  // @ts-expect-error `_preload_modules` is missing typings\n  _preload_modules,\n  // @ts-expect-error `_rawDebug` is missing typings\n  _rawDebug,\n  // @ts-expect-error `_startProfilerIdleNotifier` is missing typings\n  _startProfilerIdleNotifier,\n  // @ts-expect-error `_stopProfilerIdleNotifier` is missing typings\n  _stopProfilerIdleNotifier,\n  // @ts-expect-error `_tickCallback` is missing typings\n  _tickCallback,\n  abort,\n  addListener,\n  allowedNodeEnvironmentFlags,\n  arch,\n  argv,\n  argv0,\n  availableMemory,\n  // @ts-expect-error `binding` is missing typings\n  binding,\n  channel,\n  chdir,\n  config,\n  connected,\n  constrainedMemory,\n  cpuUsage,\n  cwd,\n  debugPort,\n  dlopen,\n  // @ts-expect-error `domain` is missing typings\n  domain,\n  emit,\n  emitWarning,\n  eventNames,\n  execArgv,\n  execPath,\n  exitCode,\n  finalization,\n  getActiveResourcesInfo,\n  getegid,\n  geteuid,\n  getgid,\n  getgroups,\n  getMaxListeners,\n  getuid,\n  hasUncaughtExceptionCaptureCallback,\n  // @ts-expect-error `initgroups` is missing typings\n  initgroups,\n  kill,\n  listenerCount,\n  listeners,\n  loadEnvFile,\n  memoryUsage,\n  // @ts-expect-error `moduleLoadList` is missing typings\n  moduleLoadList,\n  off,\n  on,\n  once,\n  // @ts-expect-error `openStdin` is missing typings\n  openStdin,\n  permission,\n  pid,\n  ppid,\n  prependListener,\n  prependOnceListener,\n  rawListeners,\n  // @ts-expect-error `reallyExit` is missing typings\n  reallyExit,\n  ref,\n  release,\n  removeAllListeners,\n  removeListener,\n  report,\n  resourceUsage,\n  send,\n  setegid,\n  seteuid,\n  setgid,\n  setgroups,\n  setMaxListeners,\n  setSourceMapsEnabled,\n  setuid,\n  setUncaughtExceptionCaptureCallback,\n  sourceMapsEnabled,\n  stderr,\n  stdin,\n  stdout,\n  throwDeprecation,\n  title,\n  traceDeprecation,\n  umask,\n  unref,\n  uptime,\n  version,\n  versions\n} = isWorkerdProcessV2 ? workerdProcess : unenvProcess;\nconst _process = {\n  abort,\n  addListener,\n  allowedNodeEnvironmentFlags,\n  hasUncaughtExceptionCaptureCallback,\n  setUncaughtExceptionCaptureCallback,\n  loadEnvFile,\n  sourceMapsEnabled,\n  arch,\n  argv,\n  argv0,\n  chdir,\n  config,\n  connected,\n  constrainedMemory,\n  availableMemory,\n  cpuUsage,\n  cwd,\n  debugPort,\n  dlopen,\n  disconnect,\n  emit,\n  emitWarning,\n  env,\n  eventNames,\n  execArgv,\n  execPath,\n  exit,\n  finalization,\n  features,\n  getBuiltinModule,\n  getActiveResourcesInfo,\n  getMaxListeners,\n  hrtime,\n  kill,\n  listeners,\n  listenerCount,\n  memoryUsage,\n  nextTick,\n  on,\n  off,\n  once,\n  pid,\n  platform,\n  ppid,\n  prependListener,\n  prependOnceListener,\n  rawListeners,\n  release,\n  removeAllListeners,\n  removeListener,\n  report,\n  resourceUsage,\n  setMaxListeners,\n  setSourceMapsEnabled,\n  stderr,\n  stdin,\n  stdout,\n  title,\n  throwDeprecation,\n  traceDeprecation,\n  umask,\n  uptime,\n  version,\n  versions,\n  // @ts-expect-error old API\n  domain,\n  initgroups,\n  moduleLoadList,\n  reallyExit,\n  openStdin,\n  assert,\n  binding,\n  send,\n  exitCode,\n  channel,\n  getegid,\n  geteuid,\n  getgid,\n  getgroups,\n  getuid,\n  setegid,\n  seteuid,\n  setgid,\n  setgroups,\n  setuid,\n  permission,\n  mainModule,\n  _events,\n  _eventsCount,\n  _exiting,\n  _maxListeners,\n  _debugEnd,\n  _debugProcess,\n  _fatalException,\n  _getActiveHandles,\n  _getActiveRequests,\n  _kill,\n  _preload_modules,\n  _rawDebug,\n  _startProfilerIdleNotifier,\n  _stopProfilerIdleNotifier,\n  _tickCallback,\n  _disconnect,\n  _handleQueue,\n  _pendingMessage,\n  _channel,\n  _send,\n  _linkedBinding\n};\nexport default _process;\n", "import { default as defaultExport } from \"@cloudflare/unenv-preset/node/process\";\nglobalThis.process = defaultExport;", "", "// `esbuild` doesn't support returning `watch*` options from `onStart()`\n// plugin callbacks. Instead, we define an empty virtual module that is\n// imported by this injected file. Importing the module registers watchers.\nimport \"wrangler:modules-watch\";\n", "/*! *****************************************************************************\nCopyright (C) Microsoft. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\nvar Reflect;\n(function (Reflect) {\n    // Metadata Proposal\n    // https://rbuckton.github.io/reflect-metadata/\n    (function (factory) {\n        var root = typeof globalThis === \"object\" ? globalThis :\n            typeof global === \"object\" ? global :\n                typeof self === \"object\" ? self :\n                    typeof this === \"object\" ? this :\n                        sloppyModeThis();\n        var exporter = makeExporter(Reflect);\n        if (typeof root.Reflect !== \"undefined\") {\n            exporter = makeExporter(root.Reflect, exporter);\n        }\n        factory(exporter, root);\n        if (typeof root.Reflect === \"undefined\") {\n            root.Reflect = Reflect;\n        }\n        function makeExporter(target, previous) {\n            return function (key, value) {\n                Object.defineProperty(target, key, { configurable: true, writable: true, value: value });\n                if (previous)\n                    previous(key, value);\n            };\n        }\n        function functionThis() {\n            try {\n                return Function(\"return this;\")();\n            }\n            catch (_) { }\n        }\n        function indirectEvalThis() {\n            try {\n                return (void 0, eval)(\"(function() { return this; })()\");\n            }\n            catch (_) { }\n        }\n        function sloppyModeThis() {\n            return functionThis() || indirectEvalThis();\n        }\n    })(function (exporter, root) {\n        var hasOwn = Object.prototype.hasOwnProperty;\n        // feature test for Symbol support\n        var supportsSymbol = typeof Symbol === \"function\";\n        var toPrimitiveSymbol = supportsSymbol && typeof Symbol.toPrimitive !== \"undefined\" ? Symbol.toPrimitive : \"@@toPrimitive\";\n        var iteratorSymbol = supportsSymbol && typeof Symbol.iterator !== \"undefined\" ? Symbol.iterator : \"@@iterator\";\n        var supportsCreate = typeof Object.create === \"function\"; // feature test for Object.create support\n        var supportsProto = { __proto__: [] } instanceof Array; // feature test for __proto__ support\n        var downLevel = !supportsCreate && !supportsProto;\n        var HashMap = {\n            // create an object in dictionary mode (a.k.a. \"slow\" mode in v8)\n            create: supportsCreate\n                ? function () { return MakeDictionary(Object.create(null)); }\n                : supportsProto\n                    ? function () { return MakeDictionary({ __proto__: null }); }\n                    : function () { return MakeDictionary({}); },\n            has: downLevel\n                ? function (map, key) { return hasOwn.call(map, key); }\n                : function (map, key) { return key in map; },\n            get: downLevel\n                ? function (map, key) { return hasOwn.call(map, key) ? map[key] : undefined; }\n                : function (map, key) { return map[key]; },\n        };\n        // Load global or shim versions of Map, Set, and WeakMap\n        var functionPrototype = Object.getPrototypeOf(Function);\n        var _Map = typeof Map === \"function\" && typeof Map.prototype.entries === \"function\" ? Map : CreateMapPolyfill();\n        var _Set = typeof Set === \"function\" && typeof Set.prototype.entries === \"function\" ? Set : CreateSetPolyfill();\n        var _WeakMap = typeof WeakMap === \"function\" ? WeakMap : CreateWeakMapPolyfill();\n        var registrySymbol = supportsSymbol ? Symbol.for(\"@reflect-metadata:registry\") : undefined;\n        var metadataRegistry = GetOrCreateMetadataRegistry();\n        var metadataProvider = CreateMetadataProvider(metadataRegistry);\n        /**\n         * Applies a set of decorators to a property of a target object.\n         * @param decorators An array of decorators.\n         * @param target The target object.\n         * @param propertyKey (Optional) The property key to decorate.\n         * @param attributes (Optional) The property descriptor for the target key.\n         * @remarks Decorators are applied in reverse order.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     Example = Reflect.decorate(decoratorsArray, Example);\n         *\n         *     // property (on constructor)\n         *     Reflect.decorate(decoratorsArray, Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     Reflect.decorate(decoratorsArray, Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     Object.defineProperty(Example, \"staticMethod\",\n         *         Reflect.decorate(decoratorsArray, Example, \"staticMethod\",\n         *             Object.getOwnPropertyDescriptor(Example, \"staticMethod\")));\n         *\n         *     // method (on prototype)\n         *     Object.defineProperty(Example.prototype, \"method\",\n         *         Reflect.decorate(decoratorsArray, Example.prototype, \"method\",\n         *             Object.getOwnPropertyDescriptor(Example.prototype, \"method\")));\n         *\n         */\n        function decorate(decorators, target, propertyKey, attributes) {\n            if (!IsUndefined(propertyKey)) {\n                if (!IsArray(decorators))\n                    throw new TypeError();\n                if (!IsObject(target))\n                    throw new TypeError();\n                if (!IsObject(attributes) && !IsUndefined(attributes) && !IsNull(attributes))\n                    throw new TypeError();\n                if (IsNull(attributes))\n                    attributes = undefined;\n                propertyKey = ToPropertyKey(propertyKey);\n                return DecorateProperty(decorators, target, propertyKey, attributes);\n            }\n            else {\n                if (!IsArray(decorators))\n                    throw new TypeError();\n                if (!IsConstructor(target))\n                    throw new TypeError();\n                return DecorateConstructor(decorators, target);\n            }\n        }\n        exporter(\"decorate\", decorate);\n        // 4.1.2 Reflect.metadata(metadataKey, metadataValue)\n        // https://rbuckton.github.io/reflect-metadata/#reflect.metadata\n        /**\n         * A default metadata decorator factory that can be used on a class, class member, or parameter.\n         * @param metadataKey The key for the metadata entry.\n         * @param metadataValue The value for the metadata entry.\n         * @returns A decorator function.\n         * @remarks\n         * If `metadataKey` is already defined for the target and target key, the\n         * metadataValue for that key will be overwritten.\n         * @example\n         *\n         *     // constructor\n         *     @Reflect.metadata(key, value)\n         *     class Example {\n         *     }\n         *\n         *     // property (on constructor, TypeScript only)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         static staticProperty;\n         *     }\n         *\n         *     // property (on prototype, TypeScript only)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         property;\n         *     }\n         *\n         *     // method (on constructor)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         static staticMethod() { }\n         *     }\n         *\n         *     // method (on prototype)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         method() { }\n         *     }\n         *\n         */\n        function metadata(metadataKey, metadataValue) {\n            function decorator(target, propertyKey) {\n                if (!IsObject(target))\n                    throw new TypeError();\n                if (!IsUndefined(propertyKey) && !IsPropertyKey(propertyKey))\n                    throw new TypeError();\n                OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\n            }\n            return decorator;\n        }\n        exporter(\"metadata\", metadata);\n        /**\n         * Define a unique metadata entry on the target.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param metadataValue A value that contains attached metadata.\n         * @param target The target object on which to define metadata.\n         * @param propertyKey (Optional) The property key for the target.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example);\n         *\n         *     // property (on constructor)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example.prototype, \"method\");\n         *\n         *     // decorator factory as metadata-producing annotation.\n         *     function MyAnnotation(options): Decorator {\n         *         return (target, key?) => Reflect.defineMetadata(\"custom:annotation\", options, target, key);\n         *     }\n         *\n         */\n        function defineMetadata(metadataKey, metadataValue, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\n        }\n        exporter(\"defineMetadata\", defineMetadata);\n        /**\n         * Gets a value indicating whether the target object or its prototype chain has the provided metadata key defined.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata key was defined on the target object or its prototype chain; otherwise, `false`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function hasMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryHasMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"hasMetadata\", hasMetadata);\n        /**\n         * Gets a value indicating whether the target object has the provided metadata key defined.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata key was defined on the target object; otherwise, `false`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function hasOwnMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryHasOwnMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"hasOwnMetadata\", hasOwnMetadata);\n        /**\n         * Gets the metadata value for the provided metadata key on the target object or its prototype chain.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function getMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryGetMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"getMetadata\", getMetadata);\n        /**\n         * Gets the metadata value for the provided metadata key on the target object.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function getOwnMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryGetOwnMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"getOwnMetadata\", getOwnMetadata);\n        /**\n         * Gets the metadata keys defined on the target object or its prototype chain.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns An array of unique metadata keys.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getMetadataKeys(Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getMetadataKeys(Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getMetadataKeys(Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getMetadataKeys(Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getMetadataKeys(Example.prototype, \"method\");\n         *\n         */\n        function getMetadataKeys(target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryMetadataKeys(target, propertyKey);\n        }\n        exporter(\"getMetadataKeys\", getMetadataKeys);\n        /**\n         * Gets the unique metadata keys defined on the target object.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns An array of unique metadata keys.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getOwnMetadataKeys(Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getOwnMetadataKeys(Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getOwnMetadataKeys(Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"method\");\n         *\n         */\n        function getOwnMetadataKeys(target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryOwnMetadataKeys(target, propertyKey);\n        }\n        exporter(\"getOwnMetadataKeys\", getOwnMetadataKeys);\n        /**\n         * Deletes the metadata entry from the target object with the provided key.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata entry was found and deleted; otherwise, false.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function deleteMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            var provider = GetMetadataProvider(target, propertyKey, /*Create*/ false);\n            if (IsUndefined(provider))\n                return false;\n            return provider.OrdinaryDeleteMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"deleteMetadata\", deleteMetadata);\n        function DecorateConstructor(decorators, target) {\n            for (var i = decorators.length - 1; i >= 0; --i) {\n                var decorator = decorators[i];\n                var decorated = decorator(target);\n                if (!IsUndefined(decorated) && !IsNull(decorated)) {\n                    if (!IsConstructor(decorated))\n                        throw new TypeError();\n                    target = decorated;\n                }\n            }\n            return target;\n        }\n        function DecorateProperty(decorators, target, propertyKey, descriptor) {\n            for (var i = decorators.length - 1; i >= 0; --i) {\n                var decorator = decorators[i];\n                var decorated = decorator(target, propertyKey, descriptor);\n                if (!IsUndefined(decorated) && !IsNull(decorated)) {\n                    if (!IsObject(decorated))\n                        throw new TypeError();\n                    descriptor = decorated;\n                }\n            }\n            return descriptor;\n        }\n        // 3.1.1.1 OrdinaryHasMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryhasmetadata\n        function OrdinaryHasMetadata(MetadataKey, O, P) {\n            var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\n            if (hasOwn)\n                return true;\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (!IsNull(parent))\n                return OrdinaryHasMetadata(MetadataKey, parent, P);\n            return false;\n        }\n        // 3.1.2.1 OrdinaryHasOwnMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryhasownmetadata\n        function OrdinaryHasOwnMetadata(MetadataKey, O, P) {\n            var provider = GetMetadataProvider(O, P, /*Create*/ false);\n            if (IsUndefined(provider))\n                return false;\n            return ToBoolean(provider.OrdinaryHasOwnMetadata(MetadataKey, O, P));\n        }\n        // 3.1.3.1 OrdinaryGetMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarygetmetadata\n        function OrdinaryGetMetadata(MetadataKey, O, P) {\n            var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\n            if (hasOwn)\n                return OrdinaryGetOwnMetadata(MetadataKey, O, P);\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (!IsNull(parent))\n                return OrdinaryGetMetadata(MetadataKey, parent, P);\n            return undefined;\n        }\n        // 3.1.4.1 OrdinaryGetOwnMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarygetownmetadata\n        function OrdinaryGetOwnMetadata(MetadataKey, O, P) {\n            var provider = GetMetadataProvider(O, P, /*Create*/ false);\n            if (IsUndefined(provider))\n                return;\n            return provider.OrdinaryGetOwnMetadata(MetadataKey, O, P);\n        }\n        // 3.1.5.1 OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarydefineownmetadata\n        function OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P) {\n            var provider = GetMetadataProvider(O, P, /*Create*/ true);\n            provider.OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P);\n        }\n        // 3.1.6.1 OrdinaryMetadataKeys(O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarymetadatakeys\n        function OrdinaryMetadataKeys(O, P) {\n            var ownKeys = OrdinaryOwnMetadataKeys(O, P);\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (parent === null)\n                return ownKeys;\n            var parentKeys = OrdinaryMetadataKeys(parent, P);\n            if (parentKeys.length <= 0)\n                return ownKeys;\n            if (ownKeys.length <= 0)\n                return parentKeys;\n            var set = new _Set();\n            var keys = [];\n            for (var _i = 0, ownKeys_1 = ownKeys; _i < ownKeys_1.length; _i++) {\n                var key = ownKeys_1[_i];\n                var hasKey = set.has(key);\n                if (!hasKey) {\n                    set.add(key);\n                    keys.push(key);\n                }\n            }\n            for (var _a = 0, parentKeys_1 = parentKeys; _a < parentKeys_1.length; _a++) {\n                var key = parentKeys_1[_a];\n                var hasKey = set.has(key);\n                if (!hasKey) {\n                    set.add(key);\n                    keys.push(key);\n                }\n            }\n            return keys;\n        }\n        // 3.1.7.1 OrdinaryOwnMetadataKeys(O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryownmetadatakeys\n        function OrdinaryOwnMetadataKeys(O, P) {\n            var provider = GetMetadataProvider(O, P, /*create*/ false);\n            if (!provider) {\n                return [];\n            }\n            return provider.OrdinaryOwnMetadataKeys(O, P);\n        }\n        // 6 ECMAScript Data Types and Values\n        // https://tc39.github.io/ecma262/#sec-ecmascript-data-types-and-values\n        function Type(x) {\n            if (x === null)\n                return 1 /* Null */;\n            switch (typeof x) {\n                case \"undefined\": return 0 /* Undefined */;\n                case \"boolean\": return 2 /* Boolean */;\n                case \"string\": return 3 /* String */;\n                case \"symbol\": return 4 /* Symbol */;\n                case \"number\": return 5 /* Number */;\n                case \"object\": return x === null ? 1 /* Null */ : 6 /* Object */;\n                default: return 6 /* Object */;\n            }\n        }\n        // 6.1.1 The Undefined Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-undefined-type\n        function IsUndefined(x) {\n            return x === undefined;\n        }\n        // 6.1.2 The Null Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-null-type\n        function IsNull(x) {\n            return x === null;\n        }\n        // 6.1.5 The Symbol Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-symbol-type\n        function IsSymbol(x) {\n            return typeof x === \"symbol\";\n        }\n        // 6.1.7 The Object Type\n        // https://tc39.github.io/ecma262/#sec-object-type\n        function IsObject(x) {\n            return typeof x === \"object\" ? x !== null : typeof x === \"function\";\n        }\n        // 7.1 Type Conversion\n        // https://tc39.github.io/ecma262/#sec-type-conversion\n        // 7.1.1 ToPrimitive(input [, PreferredType])\n        // https://tc39.github.io/ecma262/#sec-toprimitive\n        function ToPrimitive(input, PreferredType) {\n            switch (Type(input)) {\n                case 0 /* Undefined */: return input;\n                case 1 /* Null */: return input;\n                case 2 /* Boolean */: return input;\n                case 3 /* String */: return input;\n                case 4 /* Symbol */: return input;\n                case 5 /* Number */: return input;\n            }\n            var hint = PreferredType === 3 /* String */ ? \"string\" : PreferredType === 5 /* Number */ ? \"number\" : \"default\";\n            var exoticToPrim = GetMethod(input, toPrimitiveSymbol);\n            if (exoticToPrim !== undefined) {\n                var result = exoticToPrim.call(input, hint);\n                if (IsObject(result))\n                    throw new TypeError();\n                return result;\n            }\n            return OrdinaryToPrimitive(input, hint === \"default\" ? \"number\" : hint);\n        }\n        // 7.1.1.1 OrdinaryToPrimitive(O, hint)\n        // https://tc39.github.io/ecma262/#sec-ordinarytoprimitive\n        function OrdinaryToPrimitive(O, hint) {\n            if (hint === \"string\") {\n                var toString_1 = O.toString;\n                if (IsCallable(toString_1)) {\n                    var result = toString_1.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n                var valueOf = O.valueOf;\n                if (IsCallable(valueOf)) {\n                    var result = valueOf.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n            }\n            else {\n                var valueOf = O.valueOf;\n                if (IsCallable(valueOf)) {\n                    var result = valueOf.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n                var toString_2 = O.toString;\n                if (IsCallable(toString_2)) {\n                    var result = toString_2.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n            }\n            throw new TypeError();\n        }\n        // 7.1.2 ToBoolean(argument)\n        // https://tc39.github.io/ecma262/2016/#sec-toboolean\n        function ToBoolean(argument) {\n            return !!argument;\n        }\n        // 7.1.12 ToString(argument)\n        // https://tc39.github.io/ecma262/#sec-tostring\n        function ToString(argument) {\n            return \"\" + argument;\n        }\n        // 7.1.14 ToPropertyKey(argument)\n        // https://tc39.github.io/ecma262/#sec-topropertykey\n        function ToPropertyKey(argument) {\n            var key = ToPrimitive(argument, 3 /* String */);\n            if (IsSymbol(key))\n                return key;\n            return ToString(key);\n        }\n        // 7.2 Testing and Comparison Operations\n        // https://tc39.github.io/ecma262/#sec-testing-and-comparison-operations\n        // 7.2.2 IsArray(argument)\n        // https://tc39.github.io/ecma262/#sec-isarray\n        function IsArray(argument) {\n            return Array.isArray\n                ? Array.isArray(argument)\n                : argument instanceof Object\n                    ? argument instanceof Array\n                    : Object.prototype.toString.call(argument) === \"[object Array]\";\n        }\n        // 7.2.3 IsCallable(argument)\n        // https://tc39.github.io/ecma262/#sec-iscallable\n        function IsCallable(argument) {\n            // NOTE: This is an approximation as we cannot check for [[Call]] internal method.\n            return typeof argument === \"function\";\n        }\n        // 7.2.4 IsConstructor(argument)\n        // https://tc39.github.io/ecma262/#sec-isconstructor\n        function IsConstructor(argument) {\n            // NOTE: This is an approximation as we cannot check for [[Construct]] internal method.\n            return typeof argument === \"function\";\n        }\n        // 7.2.7 IsPropertyKey(argument)\n        // https://tc39.github.io/ecma262/#sec-ispropertykey\n        function IsPropertyKey(argument) {\n            switch (Type(argument)) {\n                case 3 /* String */: return true;\n                case 4 /* Symbol */: return true;\n                default: return false;\n            }\n        }\n        function SameValueZero(x, y) {\n            return x === y || x !== x && y !== y;\n        }\n        // 7.3 Operations on Objects\n        // https://tc39.github.io/ecma262/#sec-operations-on-objects\n        // 7.3.9 GetMethod(V, P)\n        // https://tc39.github.io/ecma262/#sec-getmethod\n        function GetMethod(V, P) {\n            var func = V[P];\n            if (func === undefined || func === null)\n                return undefined;\n            if (!IsCallable(func))\n                throw new TypeError();\n            return func;\n        }\n        // 7.4 Operations on Iterator Objects\n        // https://tc39.github.io/ecma262/#sec-operations-on-iterator-objects\n        function GetIterator(obj) {\n            var method = GetMethod(obj, iteratorSymbol);\n            if (!IsCallable(method))\n                throw new TypeError(); // from Call\n            var iterator = method.call(obj);\n            if (!IsObject(iterator))\n                throw new TypeError();\n            return iterator;\n        }\n        // 7.4.4 IteratorValue(iterResult)\n        // https://tc39.github.io/ecma262/2016/#sec-iteratorvalue\n        function IteratorValue(iterResult) {\n            return iterResult.value;\n        }\n        // 7.4.5 IteratorStep(iterator)\n        // https://tc39.github.io/ecma262/#sec-iteratorstep\n        function IteratorStep(iterator) {\n            var result = iterator.next();\n            return result.done ? false : result;\n        }\n        // 7.4.6 IteratorClose(iterator, completion)\n        // https://tc39.github.io/ecma262/#sec-iteratorclose\n        function IteratorClose(iterator) {\n            var f = iterator[\"return\"];\n            if (f)\n                f.call(iterator);\n        }\n        // 9.1 Ordinary Object Internal Methods and Internal Slots\n        // https://tc39.github.io/ecma262/#sec-ordinary-object-internal-methods-and-internal-slots\n        // 9.1.1.1 OrdinaryGetPrototypeOf(O)\n        // https://tc39.github.io/ecma262/#sec-ordinarygetprototypeof\n        function OrdinaryGetPrototypeOf(O) {\n            var proto = Object.getPrototypeOf(O);\n            if (typeof O !== \"function\" || O === functionPrototype)\n                return proto;\n            // TypeScript doesn't set __proto__ in ES5, as it's non-standard.\n            // Try to determine the superclass constructor. Compatible implementations\n            // must either set __proto__ on a subclass constructor to the superclass constructor,\n            // or ensure each class has a valid `constructor` property on its prototype that\n            // points back to the constructor.\n            // If this is not the same as Function.[[Prototype]], then this is definately inherited.\n            // This is the case when in ES6 or when using __proto__ in a compatible browser.\n            if (proto !== functionPrototype)\n                return proto;\n            // If the super prototype is Object.prototype, null, or undefined, then we cannot determine the heritage.\n            var prototype = O.prototype;\n            var prototypeProto = prototype && Object.getPrototypeOf(prototype);\n            if (prototypeProto == null || prototypeProto === Object.prototype)\n                return proto;\n            // If the constructor was not a function, then we cannot determine the heritage.\n            var constructor = prototypeProto.constructor;\n            if (typeof constructor !== \"function\")\n                return proto;\n            // If we have some kind of self-reference, then we cannot determine the heritage.\n            if (constructor === O)\n                return proto;\n            // we have a pretty good guess at the heritage.\n            return constructor;\n        }\n        // Global metadata registry\n        // - Allows `import \"reflect-metadata\"` and `import \"reflect-metadata/no-conflict\"` to interoperate.\n        // - Uses isolated metadata if `Reflect` is frozen before the registry can be installed.\n        /**\n         * Creates a registry used to allow multiple `reflect-metadata` providers.\n         */\n        function CreateMetadataRegistry() {\n            var fallback;\n            if (!IsUndefined(registrySymbol) &&\n                typeof root.Reflect !== \"undefined\" &&\n                !(registrySymbol in root.Reflect) &&\n                typeof root.Reflect.defineMetadata === \"function\") {\n                // interoperate with older version of `reflect-metadata` that did not support a registry.\n                fallback = CreateFallbackProvider(root.Reflect);\n            }\n            var first;\n            var second;\n            var rest;\n            var targetProviderMap = new _WeakMap();\n            var registry = {\n                registerProvider: registerProvider,\n                getProvider: getProvider,\n                setProvider: setProvider,\n            };\n            return registry;\n            function registerProvider(provider) {\n                if (!Object.isExtensible(registry)) {\n                    throw new Error(\"Cannot add provider to a frozen registry.\");\n                }\n                switch (true) {\n                    case fallback === provider: break;\n                    case IsUndefined(first):\n                        first = provider;\n                        break;\n                    case first === provider: break;\n                    case IsUndefined(second):\n                        second = provider;\n                        break;\n                    case second === provider: break;\n                    default:\n                        if (rest === undefined)\n                            rest = new _Set();\n                        rest.add(provider);\n                        break;\n                }\n            }\n            function getProviderNoCache(O, P) {\n                if (!IsUndefined(first)) {\n                    if (first.isProviderFor(O, P))\n                        return first;\n                    if (!IsUndefined(second)) {\n                        if (second.isProviderFor(O, P))\n                            return first;\n                        if (!IsUndefined(rest)) {\n                            var iterator = GetIterator(rest);\n                            while (true) {\n                                var next = IteratorStep(iterator);\n                                if (!next) {\n                                    return undefined;\n                                }\n                                var provider = IteratorValue(next);\n                                if (provider.isProviderFor(O, P)) {\n                                    IteratorClose(iterator);\n                                    return provider;\n                                }\n                            }\n                        }\n                    }\n                }\n                if (!IsUndefined(fallback) && fallback.isProviderFor(O, P)) {\n                    return fallback;\n                }\n                return undefined;\n            }\n            function getProvider(O, P) {\n                var providerMap = targetProviderMap.get(O);\n                var provider;\n                if (!IsUndefined(providerMap)) {\n                    provider = providerMap.get(P);\n                }\n                if (!IsUndefined(provider)) {\n                    return provider;\n                }\n                provider = getProviderNoCache(O, P);\n                if (!IsUndefined(provider)) {\n                    if (IsUndefined(providerMap)) {\n                        providerMap = new _Map();\n                        targetProviderMap.set(O, providerMap);\n                    }\n                    providerMap.set(P, provider);\n                }\n                return provider;\n            }\n            function hasProvider(provider) {\n                if (IsUndefined(provider))\n                    throw new TypeError();\n                return first === provider || second === provider || !IsUndefined(rest) && rest.has(provider);\n            }\n            function setProvider(O, P, provider) {\n                if (!hasProvider(provider)) {\n                    throw new Error(\"Metadata provider not registered.\");\n                }\n                var existingProvider = getProvider(O, P);\n                if (existingProvider !== provider) {\n                    if (!IsUndefined(existingProvider)) {\n                        return false;\n                    }\n                    var providerMap = targetProviderMap.get(O);\n                    if (IsUndefined(providerMap)) {\n                        providerMap = new _Map();\n                        targetProviderMap.set(O, providerMap);\n                    }\n                    providerMap.set(P, provider);\n                }\n                return true;\n            }\n        }\n        /**\n         * Gets or creates the shared registry of metadata providers.\n         */\n        function GetOrCreateMetadataRegistry() {\n            var metadataRegistry;\n            if (!IsUndefined(registrySymbol) && IsObject(root.Reflect) && Object.isExtensible(root.Reflect)) {\n                metadataRegistry = root.Reflect[registrySymbol];\n            }\n            if (IsUndefined(metadataRegistry)) {\n                metadataRegistry = CreateMetadataRegistry();\n            }\n            if (!IsUndefined(registrySymbol) && IsObject(root.Reflect) && Object.isExtensible(root.Reflect)) {\n                Object.defineProperty(root.Reflect, registrySymbol, {\n                    enumerable: false,\n                    configurable: false,\n                    writable: false,\n                    value: metadataRegistry\n                });\n            }\n            return metadataRegistry;\n        }\n        function CreateMetadataProvider(registry) {\n            // [[Metadata]] internal slot\n            // https://rbuckton.github.io/reflect-metadata/#ordinary-object-internal-methods-and-internal-slots\n            var metadata = new _WeakMap();\n            var provider = {\n                isProviderFor: function (O, P) {\n                    var targetMetadata = metadata.get(O);\n                    if (IsUndefined(targetMetadata))\n                        return false;\n                    return targetMetadata.has(P);\n                },\n                OrdinaryDefineOwnMetadata: OrdinaryDefineOwnMetadata,\n                OrdinaryHasOwnMetadata: OrdinaryHasOwnMetadata,\n                OrdinaryGetOwnMetadata: OrdinaryGetOwnMetadata,\n                OrdinaryOwnMetadataKeys: OrdinaryOwnMetadataKeys,\n                OrdinaryDeleteMetadata: OrdinaryDeleteMetadata,\n            };\n            metadataRegistry.registerProvider(provider);\n            return provider;\n            function GetOrCreateMetadataMap(O, P, Create) {\n                var targetMetadata = metadata.get(O);\n                var createdTargetMetadata = false;\n                if (IsUndefined(targetMetadata)) {\n                    if (!Create)\n                        return undefined;\n                    targetMetadata = new _Map();\n                    metadata.set(O, targetMetadata);\n                    createdTargetMetadata = true;\n                }\n                var metadataMap = targetMetadata.get(P);\n                if (IsUndefined(metadataMap)) {\n                    if (!Create)\n                        return undefined;\n                    metadataMap = new _Map();\n                    targetMetadata.set(P, metadataMap);\n                    if (!registry.setProvider(O, P, provider)) {\n                        targetMetadata.delete(P);\n                        if (createdTargetMetadata) {\n                            metadata.delete(O);\n                        }\n                        throw new Error(\"Wrong provider for target.\");\n                    }\n                }\n                return metadataMap;\n            }\n            // 3.1.2.1 OrdinaryHasOwnMetadata(MetadataKey, O, P)\n            // https://rbuckton.github.io/reflect-metadata/#ordinaryhasownmetadata\n            function OrdinaryHasOwnMetadata(MetadataKey, O, P) {\n                var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n                if (IsUndefined(metadataMap))\n                    return false;\n                return ToBoolean(metadataMap.has(MetadataKey));\n            }\n            // 3.1.4.1 OrdinaryGetOwnMetadata(MetadataKey, O, P)\n            // https://rbuckton.github.io/reflect-metadata/#ordinarygetownmetadata\n            function OrdinaryGetOwnMetadata(MetadataKey, O, P) {\n                var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n                if (IsUndefined(metadataMap))\n                    return undefined;\n                return metadataMap.get(MetadataKey);\n            }\n            // 3.1.5.1 OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P)\n            // https://rbuckton.github.io/reflect-metadata/#ordinarydefineownmetadata\n            function OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P) {\n                var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ true);\n                metadataMap.set(MetadataKey, MetadataValue);\n            }\n            // 3.1.7.1 OrdinaryOwnMetadataKeys(O, P)\n            // https://rbuckton.github.io/reflect-metadata/#ordinaryownmetadatakeys\n            function OrdinaryOwnMetadataKeys(O, P) {\n                var keys = [];\n                var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n                if (IsUndefined(metadataMap))\n                    return keys;\n                var keysObj = metadataMap.keys();\n                var iterator = GetIterator(keysObj);\n                var k = 0;\n                while (true) {\n                    var next = IteratorStep(iterator);\n                    if (!next) {\n                        keys.length = k;\n                        return keys;\n                    }\n                    var nextValue = IteratorValue(next);\n                    try {\n                        keys[k] = nextValue;\n                    }\n                    catch (e) {\n                        try {\n                            IteratorClose(iterator);\n                        }\n                        finally {\n                            throw e;\n                        }\n                    }\n                    k++;\n                }\n            }\n            function OrdinaryDeleteMetadata(MetadataKey, O, P) {\n                var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n                if (IsUndefined(metadataMap))\n                    return false;\n                if (!metadataMap.delete(MetadataKey))\n                    return false;\n                if (metadataMap.size === 0) {\n                    var targetMetadata = metadata.get(O);\n                    if (!IsUndefined(targetMetadata)) {\n                        targetMetadata.delete(P);\n                        if (targetMetadata.size === 0) {\n                            metadata.delete(targetMetadata);\n                        }\n                    }\n                }\n                return true;\n            }\n        }\n        function CreateFallbackProvider(reflect) {\n            var defineMetadata = reflect.defineMetadata, hasOwnMetadata = reflect.hasOwnMetadata, getOwnMetadata = reflect.getOwnMetadata, getOwnMetadataKeys = reflect.getOwnMetadataKeys, deleteMetadata = reflect.deleteMetadata;\n            var metadataOwner = new _WeakMap();\n            var provider = {\n                isProviderFor: function (O, P) {\n                    var metadataPropertySet = metadataOwner.get(O);\n                    if (!IsUndefined(metadataPropertySet) && metadataPropertySet.has(P)) {\n                        return true;\n                    }\n                    if (getOwnMetadataKeys(O, P).length) {\n                        if (IsUndefined(metadataPropertySet)) {\n                            metadataPropertySet = new _Set();\n                            metadataOwner.set(O, metadataPropertySet);\n                        }\n                        metadataPropertySet.add(P);\n                        return true;\n                    }\n                    return false;\n                },\n                OrdinaryDefineOwnMetadata: defineMetadata,\n                OrdinaryHasOwnMetadata: hasOwnMetadata,\n                OrdinaryGetOwnMetadata: getOwnMetadata,\n                OrdinaryOwnMetadataKeys: getOwnMetadataKeys,\n                OrdinaryDeleteMetadata: deleteMetadata,\n            };\n            return provider;\n        }\n        /**\n         * Gets the metadata provider for an object. If the object has no metadata provider and this is for a create operation,\n         * then this module's metadata provider is assigned to the object.\n         */\n        function GetMetadataProvider(O, P, Create) {\n            var registeredProvider = metadataRegistry.getProvider(O, P);\n            if (!IsUndefined(registeredProvider)) {\n                return registeredProvider;\n            }\n            if (Create) {\n                if (metadataRegistry.setProvider(O, P, metadataProvider)) {\n                    return metadataProvider;\n                }\n                throw new Error(\"Illegal state.\");\n            }\n            return undefined;\n        }\n        // naive Map shim\n        function CreateMapPolyfill() {\n            var cacheSentinel = {};\n            var arraySentinel = [];\n            var MapIterator = /** @class */ (function () {\n                function MapIterator(keys, values, selector) {\n                    this._index = 0;\n                    this._keys = keys;\n                    this._values = values;\n                    this._selector = selector;\n                }\n                MapIterator.prototype[\"@@iterator\"] = function () { return this; };\n                MapIterator.prototype[iteratorSymbol] = function () { return this; };\n                MapIterator.prototype.next = function () {\n                    var index = this._index;\n                    if (index >= 0 && index < this._keys.length) {\n                        var result = this._selector(this._keys[index], this._values[index]);\n                        if (index + 1 >= this._keys.length) {\n                            this._index = -1;\n                            this._keys = arraySentinel;\n                            this._values = arraySentinel;\n                        }\n                        else {\n                            this._index++;\n                        }\n                        return { value: result, done: false };\n                    }\n                    return { value: undefined, done: true };\n                };\n                MapIterator.prototype.throw = function (error) {\n                    if (this._index >= 0) {\n                        this._index = -1;\n                        this._keys = arraySentinel;\n                        this._values = arraySentinel;\n                    }\n                    throw error;\n                };\n                MapIterator.prototype.return = function (value) {\n                    if (this._index >= 0) {\n                        this._index = -1;\n                        this._keys = arraySentinel;\n                        this._values = arraySentinel;\n                    }\n                    return { value: value, done: true };\n                };\n                return MapIterator;\n            }());\n            var Map = /** @class */ (function () {\n                function Map() {\n                    this._keys = [];\n                    this._values = [];\n                    this._cacheKey = cacheSentinel;\n                    this._cacheIndex = -2;\n                }\n                Object.defineProperty(Map.prototype, \"size\", {\n                    get: function () { return this._keys.length; },\n                    enumerable: true,\n                    configurable: true\n                });\n                Map.prototype.has = function (key) { return this._find(key, /*insert*/ false) >= 0; };\n                Map.prototype.get = function (key) {\n                    var index = this._find(key, /*insert*/ false);\n                    return index >= 0 ? this._values[index] : undefined;\n                };\n                Map.prototype.set = function (key, value) {\n                    var index = this._find(key, /*insert*/ true);\n                    this._values[index] = value;\n                    return this;\n                };\n                Map.prototype.delete = function (key) {\n                    var index = this._find(key, /*insert*/ false);\n                    if (index >= 0) {\n                        var size = this._keys.length;\n                        for (var i = index + 1; i < size; i++) {\n                            this._keys[i - 1] = this._keys[i];\n                            this._values[i - 1] = this._values[i];\n                        }\n                        this._keys.length--;\n                        this._values.length--;\n                        if (SameValueZero(key, this._cacheKey)) {\n                            this._cacheKey = cacheSentinel;\n                            this._cacheIndex = -2;\n                        }\n                        return true;\n                    }\n                    return false;\n                };\n                Map.prototype.clear = function () {\n                    this._keys.length = 0;\n                    this._values.length = 0;\n                    this._cacheKey = cacheSentinel;\n                    this._cacheIndex = -2;\n                };\n                Map.prototype.keys = function () { return new MapIterator(this._keys, this._values, getKey); };\n                Map.prototype.values = function () { return new MapIterator(this._keys, this._values, getValue); };\n                Map.prototype.entries = function () { return new MapIterator(this._keys, this._values, getEntry); };\n                Map.prototype[\"@@iterator\"] = function () { return this.entries(); };\n                Map.prototype[iteratorSymbol] = function () { return this.entries(); };\n                Map.prototype._find = function (key, insert) {\n                    if (!SameValueZero(this._cacheKey, key)) {\n                        this._cacheIndex = -1;\n                        for (var i = 0; i < this._keys.length; i++) {\n                            if (SameValueZero(this._keys[i], key)) {\n                                this._cacheIndex = i;\n                                break;\n                            }\n                        }\n                    }\n                    if (this._cacheIndex < 0 && insert) {\n                        this._cacheIndex = this._keys.length;\n                        this._keys.push(key);\n                        this._values.push(undefined);\n                    }\n                    return this._cacheIndex;\n                };\n                return Map;\n            }());\n            return Map;\n            function getKey(key, _) {\n                return key;\n            }\n            function getValue(_, value) {\n                return value;\n            }\n            function getEntry(key, value) {\n                return [key, value];\n            }\n        }\n        // naive Set shim\n        function CreateSetPolyfill() {\n            var Set = /** @class */ (function () {\n                function Set() {\n                    this._map = new _Map();\n                }\n                Object.defineProperty(Set.prototype, \"size\", {\n                    get: function () { return this._map.size; },\n                    enumerable: true,\n                    configurable: true\n                });\n                Set.prototype.has = function (value) { return this._map.has(value); };\n                Set.prototype.add = function (value) { return this._map.set(value, value), this; };\n                Set.prototype.delete = function (value) { return this._map.delete(value); };\n                Set.prototype.clear = function () { this._map.clear(); };\n                Set.prototype.keys = function () { return this._map.keys(); };\n                Set.prototype.values = function () { return this._map.keys(); };\n                Set.prototype.entries = function () { return this._map.entries(); };\n                Set.prototype[\"@@iterator\"] = function () { return this.keys(); };\n                Set.prototype[iteratorSymbol] = function () { return this.keys(); };\n                return Set;\n            }());\n            return Set;\n        }\n        // naive WeakMap shim\n        function CreateWeakMapPolyfill() {\n            var UUID_SIZE = 16;\n            var keys = HashMap.create();\n            var rootKey = CreateUniqueKey();\n            return /** @class */ (function () {\n                function WeakMap() {\n                    this._key = CreateUniqueKey();\n                }\n                WeakMap.prototype.has = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? HashMap.has(table, this._key) : false;\n                };\n                WeakMap.prototype.get = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? HashMap.get(table, this._key) : undefined;\n                };\n                WeakMap.prototype.set = function (target, value) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ true);\n                    table[this._key] = value;\n                    return this;\n                };\n                WeakMap.prototype.delete = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? delete table[this._key] : false;\n                };\n                WeakMap.prototype.clear = function () {\n                    // NOTE: not a real clear, just makes the previous data unreachable\n                    this._key = CreateUniqueKey();\n                };\n                return WeakMap;\n            }());\n            function CreateUniqueKey() {\n                var key;\n                do\n                    key = \"@@WeakMap@@\" + CreateUUID();\n                while (HashMap.has(keys, key));\n                keys[key] = true;\n                return key;\n            }\n            function GetOrCreateWeakMapTable(target, create) {\n                if (!hasOwn.call(target, rootKey)) {\n                    if (!create)\n                        return undefined;\n                    Object.defineProperty(target, rootKey, { value: HashMap.create() });\n                }\n                return target[rootKey];\n            }\n            function FillRandomBytes(buffer, size) {\n                for (var i = 0; i < size; ++i)\n                    buffer[i] = Math.random() * 0xff | 0;\n                return buffer;\n            }\n            function GenRandomBytes(size) {\n                if (typeof Uint8Array === \"function\") {\n                    var array = new Uint8Array(size);\n                    if (typeof crypto !== \"undefined\") {\n                        crypto.getRandomValues(array);\n                    }\n                    else if (typeof msCrypto !== \"undefined\") {\n                        msCrypto.getRandomValues(array);\n                    }\n                    else {\n                        FillRandomBytes(array, size);\n                    }\n                    return array;\n                }\n                return FillRandomBytes(new Array(size), size);\n            }\n            function CreateUUID() {\n                var data = GenRandomBytes(UUID_SIZE);\n                // mark as random - RFC 4122 \u00A7 4.4\n                data[6] = data[6] & 0x4f | 0x40;\n                data[8] = data[8] & 0xbf | 0x80;\n                var result = \"\";\n                for (var offset = 0; offset < UUID_SIZE; ++offset) {\n                    var byte = data[offset];\n                    if (offset === 4 || offset === 6 || offset === 8)\n                        result += \"-\";\n                    if (byte < 16)\n                        result += \"0\";\n                    result += byte.toString(16).toLowerCase();\n                }\n                return result;\n            }\n        }\n        // uses a heuristic used by v8 and chakra to force an object into dictionary mode.\n        function MakeDictionary(obj) {\n            obj.__ = undefined;\n            delete obj.__;\n            return obj;\n        }\n    });\n})(Reflect || (Reflect = {}));\n", "import libDefault from 'fs';\nmodule.exports = libDefault;", "import libDefault from 'path';\nmodule.exports = libDefault;", "/*\n * EJS Embedded JavaScript templates\n * Copyright 2112 Matthew Eernisse (mde@fleegix.org)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n*/\n\n/**\n * Private utility functions\n * @module utils\n * @private\n */\n\n'use strict';\n\nvar regExpChars = /[|\\\\{}()[\\]^$+*?.]/g;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar hasOwn = function (obj, key) { return hasOwnProperty.apply(obj, [key]); };\n\n/**\n * Escape characters reserved in regular expressions.\n *\n * If `string` is `undefined` or `null`, the empty string is returned.\n *\n * @param {String} string Input string\n * @return {String} Escaped string\n * @static\n * @private\n */\nexports.escapeRegExpChars = function (string) {\n  // istanbul ignore if\n  if (!string) {\n    return '';\n  }\n  return String(string).replace(regExpChars, '\\\\$&');\n};\n\nvar _ENCODE_HTML_RULES = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&#34;',\n  \"'\": '&#39;'\n};\nvar _MATCH_HTML = /[&<>'\"]/g;\n\nfunction encode_char(c) {\n  return _ENCODE_HTML_RULES[c] || c;\n}\n\n/**\n * Stringified version of constants used by {@link module:utils.escapeXML}.\n *\n * It is used in the process of generating {@link ClientFunction}s.\n *\n * @readonly\n * @type {String}\n */\n\nvar escapeFuncStr =\n  'var _ENCODE_HTML_RULES = {\\n'\n+ '      \"&\": \"&amp;\"\\n'\n+ '    , \"<\": \"&lt;\"\\n'\n+ '    , \">\": \"&gt;\"\\n'\n+ '    , \\'\"\\': \"&#34;\"\\n'\n+ '    , \"\\'\": \"&#39;\"\\n'\n+ '    }\\n'\n+ '  , _MATCH_HTML = /[&<>\\'\"]/g;\\n'\n+ 'function encode_char(c) {\\n'\n+ '  return _ENCODE_HTML_RULES[c] || c;\\n'\n+ '};\\n';\n\n/**\n * Escape characters reserved in XML.\n *\n * If `markup` is `undefined` or `null`, the empty string is returned.\n *\n * @implements {EscapeCallback}\n * @param {String} markup Input string\n * @return {String} Escaped string\n * @static\n * @private\n */\n\nexports.escapeXML = function (markup) {\n  return markup == undefined\n    ? ''\n    : String(markup)\n      .replace(_MATCH_HTML, encode_char);\n};\n\nfunction escapeXMLToString() {\n  return Function.prototype.toString.call(this) + ';\\n' + escapeFuncStr;\n}\n\ntry {\n  if (typeof Object.defineProperty === 'function') {\n  // If the Function prototype is frozen, the \"toString\" property is non-writable. This means that any objects which inherit this property\n  // cannot have the property changed using an assignment. If using strict mode, attempting that will cause an error. If not using strict\n  // mode, attempting that will be silently ignored.\n  // However, we can still explicitly shadow the prototype's \"toString\" property by defining a new \"toString\" property on this object.\n    Object.defineProperty(exports.escapeXML, 'toString', { value: escapeXMLToString });\n  } else {\n    // If Object.defineProperty() doesn't exist, attempt to shadow this property using the assignment operator.\n    exports.escapeXML.toString = escapeXMLToString;\n  }\n} catch (err) {\n  console.warn('Unable to set escapeXML.toString (is the Function prototype frozen?)');\n}\n\n/**\n * Naive copy of properties from one object to another.\n * Does not recurse into non-scalar properties\n * Does not check to see if the property has a value before copying\n *\n * @param  {Object} to   Destination object\n * @param  {Object} from Source object\n * @return {Object}      Destination object\n * @static\n * @private\n */\nexports.shallowCopy = function (to, from) {\n  from = from || {};\n  if ((to !== null) && (to !== undefined)) {\n    for (var p in from) {\n      if (!hasOwn(from, p)) {\n        continue;\n      }\n      if (p === '__proto__' || p === 'constructor') {\n        continue;\n      }\n      to[p] = from[p];\n    }\n  }\n  return to;\n};\n\n/**\n * Naive copy of a list of key names, from one object to another.\n * Only copies property if it is actually defined\n * Does not recurse into non-scalar properties\n *\n * @param  {Object} to   Destination object\n * @param  {Object} from Source object\n * @param  {Array} list List of properties to copy\n * @return {Object}      Destination object\n * @static\n * @private\n */\nexports.shallowCopyFromList = function (to, from, list) {\n  list = list || [];\n  from = from || {};\n  if ((to !== null) && (to !== undefined)) {\n    for (var i = 0; i < list.length; i++) {\n      var p = list[i];\n      if (typeof from[p] != 'undefined') {\n        if (!hasOwn(from, p)) {\n          continue;\n        }\n        if (p === '__proto__' || p === 'constructor') {\n          continue;\n        }\n        to[p] = from[p];\n      }\n    }\n  }\n  return to;\n};\n\n/**\n * Simple in-process cache implementation. Does not implement limits of any\n * sort.\n *\n * @implements {Cache}\n * @static\n * @private\n */\nexports.cache = {\n  _data: {},\n  set: function (key, val) {\n    this._data[key] = val;\n  },\n  get: function (key) {\n    return this._data[key];\n  },\n  remove: function (key) {\n    delete this._data[key];\n  },\n  reset: function () {\n    this._data = {};\n  }\n};\n\n/**\n * Transforms hyphen case variable into camel case.\n *\n * @param {String} string Hyphen case string\n * @return {String} Camel case string\n * @static\n * @private\n */\nexports.hyphenToCamel = function (str) {\n  return str.replace(/-[a-z]/g, function (match) { return match[1].toUpperCase(); });\n};\n\n/**\n * Returns a null-prototype object in runtimes that support it\n *\n * @return {Object} Object, prototype will be set to null where possible\n * @static\n * @private\n */\nexports.createNullProtoObjWherePossible = (function () {\n  if (typeof Object.create == 'function') {\n    return function () {\n      return Object.create(null);\n    };\n  }\n  if (!({__proto__: null} instanceof Object)) {\n    return function () {\n      return {__proto__: null};\n    };\n  }\n  // Not possible, just pass through\n  return function () {\n    return {};\n  };\n})();\n\nexports.hasOwnOnlyObject = function (obj) {\n  var o = exports.createNullProtoObjWherePossible();\n  for (var p in obj) {\n    if (hasOwn(obj, p)) {\n      o[p] = obj[p];\n    }\n  }\n  return o;\n};\n\n", "{\n  \"name\": \"ejs\",\n  \"description\": \"Embedded JavaScript templates\",\n  \"keywords\": [\n    \"template\",\n    \"engine\",\n    \"ejs\"\n  ],\n  \"version\": \"3.1.10\",\n  \"author\": \"Matthew Eernisse <mde@fleegix.org> (http://fleegix.org)\",\n  \"license\": \"Apache-2.0\",\n  \"bin\": {\n    \"ejs\": \"./bin/cli.js\"\n  },\n  \"main\": \"./lib/ejs.js\",\n  \"jsdelivr\": \"ejs.min.js\",\n  \"unpkg\": \"ejs.min.js\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git://github.com/mde/ejs.git\"\n  },\n  \"bugs\": \"https://github.com/mde/ejs/issues\",\n  \"homepage\": \"https://github.com/mde/ejs\",\n  \"dependencies\": {\n    \"jake\": \"^10.8.5\"\n  },\n  \"devDependencies\": {\n    \"browserify\": \"^16.5.1\",\n    \"eslint\": \"^6.8.0\",\n    \"git-directory-deploy\": \"^1.5.1\",\n    \"jsdoc\": \"^4.0.2\",\n    \"lru-cache\": \"^4.0.1\",\n    \"mocha\": \"^10.2.0\",\n    \"uglify-js\": \"^3.3.16\"\n  },\n  \"engines\": {\n    \"node\": \">=0.10.0\"\n  },\n  \"scripts\": {\n    \"test\": \"npx jake test\"\n  }\n}\n", "/*\n * EJS Embedded JavaScript templates\n * Copyright 2112 Matthew Eernisse (mde@fleegix.org)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n*/\n\n'use strict';\n\n/**\n * @file Embedded JavaScript templating engine. {@link http://ejs.co}\n * @author Matthew Eernisse <mde@fleegix.org>\n * @author Tiancheng \"Timothy\" Gu <timothygu99@gmail.com>\n * @project EJS\n * @license {@link http://www.apache.org/licenses/LICENSE-2.0 Apache License, Version 2.0}\n */\n\n/**\n * EJS internal functions.\n *\n * Technically this \"module\" lies in the same file as {@link module:ejs}, for\n * the sake of organization all the private functions re grouped into this\n * module.\n *\n * @module ejs-internal\n * @private\n */\n\n/**\n * Embedded JavaScript templating engine.\n *\n * @module ejs\n * @public\n */\n\n\nvar fs = require('fs');\nvar path = require('path');\nvar utils = require('./utils');\n\nvar scopeOptionWarned = false;\n/** @type {string} */\nvar _VERSION_STRING = require('../package.json').version;\nvar _DEFAULT_OPEN_DELIMITER = '<';\nvar _DEFAULT_CLOSE_DELIMITER = '>';\nvar _DEFAULT_DELIMITER = '%';\nvar _DEFAULT_LOCALS_NAME = 'locals';\nvar _NAME = 'ejs';\nvar _REGEX_STRING = '(<%%|%%>|<%=|<%-|<%_|<%#|<%|%>|-%>|_%>)';\nvar _OPTS_PASSABLE_WITH_DATA = ['delimiter', 'scope', 'context', 'debug', 'compileDebug',\n  'client', '_with', 'rmWhitespace', 'strict', 'filename', 'async'];\n// We don't allow 'cache' option to be passed in the data obj for\n// the normal `render` call, but this is where Express 2 & 3 put it\n// so we make an exception for `renderFile`\nvar _OPTS_PASSABLE_WITH_DATA_EXPRESS = _OPTS_PASSABLE_WITH_DATA.concat('cache');\nvar _BOM = /^\\uFEFF/;\nvar _JS_IDENTIFIER = /^[a-zA-Z_$][0-9a-zA-Z_$]*$/;\n\n/**\n * EJS template function cache. This can be a LRU object from lru-cache NPM\n * module. By default, it is {@link module:utils.cache}, a simple in-process\n * cache that grows continuously.\n *\n * @type {Cache}\n */\n\nexports.cache = utils.cache;\n\n/**\n * Custom file loader. Useful for template preprocessing or restricting access\n * to a certain part of the filesystem.\n *\n * @type {fileLoader}\n */\n\nexports.fileLoader = fs.readFileSync;\n\n/**\n * Name of the object containing the locals.\n *\n * This variable is overridden by {@link Options}`.localsName` if it is not\n * `undefined`.\n *\n * @type {String}\n * @public\n */\n\nexports.localsName = _DEFAULT_LOCALS_NAME;\n\n/**\n * Promise implementation -- defaults to the native implementation if available\n * This is mostly just for testability\n *\n * @type {PromiseConstructorLike}\n * @public\n */\n\nexports.promiseImpl = (new Function('return this;'))().Promise;\n\n/**\n * Get the path to the included file from the parent file path and the\n * specified path.\n *\n * @param {String}  name     specified path\n * @param {String}  filename parent file path\n * @param {Boolean} [isDir=false] whether the parent file path is a directory\n * @return {String}\n */\nexports.resolveInclude = function(name, filename, isDir) {\n  var dirname = path.dirname;\n  var extname = path.extname;\n  var resolve = path.resolve;\n  var includePath = resolve(isDir ? filename : dirname(filename), name);\n  var ext = extname(name);\n  if (!ext) {\n    includePath += '.ejs';\n  }\n  return includePath;\n};\n\n/**\n * Try to resolve file path on multiple directories\n *\n * @param  {String}        name  specified path\n * @param  {Array<String>} paths list of possible parent directory paths\n * @return {String}\n */\nfunction resolvePaths(name, paths) {\n  var filePath;\n  if (paths.some(function (v) {\n    filePath = exports.resolveInclude(name, v, true);\n    return fs.existsSync(filePath);\n  })) {\n    return filePath;\n  }\n}\n\n/**\n * Get the path to the included file by Options\n *\n * @param  {String}  path    specified path\n * @param  {Options} options compilation options\n * @return {String}\n */\nfunction getIncludePath(path, options) {\n  var includePath;\n  var filePath;\n  var views = options.views;\n  var match = /^[A-Za-z]+:\\\\|^\\//.exec(path);\n\n  // Abs path\n  if (match && match.length) {\n    path = path.replace(/^\\/*/, '');\n    if (Array.isArray(options.root)) {\n      includePath = resolvePaths(path, options.root);\n    } else {\n      includePath = exports.resolveInclude(path, options.root || '/', true);\n    }\n  }\n  // Relative paths\n  else {\n    // Look relative to a passed filename first\n    if (options.filename) {\n      filePath = exports.resolveInclude(path, options.filename);\n      if (fs.existsSync(filePath)) {\n        includePath = filePath;\n      }\n    }\n    // Then look in any views directories\n    if (!includePath && Array.isArray(views)) {\n      includePath = resolvePaths(path, views);\n    }\n    if (!includePath && typeof options.includer !== 'function') {\n      throw new Error('Could not find the include file \"' +\n          options.escapeFunction(path) + '\"');\n    }\n  }\n  return includePath;\n}\n\n/**\n * Get the template from a string or a file, either compiled on-the-fly or\n * read from cache (if enabled), and cache the template if needed.\n *\n * If `template` is not set, the file specified in `options.filename` will be\n * read.\n *\n * If `options.cache` is true, this function reads the file from\n * `options.filename` so it must be set prior to calling this function.\n *\n * @memberof module:ejs-internal\n * @param {Options} options   compilation options\n * @param {String} [template] template source\n * @return {(TemplateFunction|ClientFunction)}\n * Depending on the value of `options.client`, either type might be returned.\n * @static\n */\n\nfunction handleCache(options, template) {\n  var func;\n  var filename = options.filename;\n  var hasTemplate = arguments.length > 1;\n\n  if (options.cache) {\n    if (!filename) {\n      throw new Error('cache option requires a filename');\n    }\n    func = exports.cache.get(filename);\n    if (func) {\n      return func;\n    }\n    if (!hasTemplate) {\n      template = fileLoader(filename).toString().replace(_BOM, '');\n    }\n  }\n  else if (!hasTemplate) {\n    // istanbul ignore if: should not happen at all\n    if (!filename) {\n      throw new Error('Internal EJS error: no file name or template '\n                    + 'provided');\n    }\n    template = fileLoader(filename).toString().replace(_BOM, '');\n  }\n  func = exports.compile(template, options);\n  if (options.cache) {\n    exports.cache.set(filename, func);\n  }\n  return func;\n}\n\n/**\n * Try calling handleCache with the given options and data and call the\n * callback with the result. If an error occurs, call the callback with\n * the error. Used by renderFile().\n *\n * @memberof module:ejs-internal\n * @param {Options} options    compilation options\n * @param {Object} data        template data\n * @param {RenderFileCallback} cb callback\n * @static\n */\n\nfunction tryHandleCache(options, data, cb) {\n  var result;\n  if (!cb) {\n    if (typeof exports.promiseImpl == 'function') {\n      return new exports.promiseImpl(function (resolve, reject) {\n        try {\n          result = handleCache(options)(data);\n          resolve(result);\n        }\n        catch (err) {\n          reject(err);\n        }\n      });\n    }\n    else {\n      throw new Error('Please provide a callback function');\n    }\n  }\n  else {\n    try {\n      result = handleCache(options)(data);\n    }\n    catch (err) {\n      return cb(err);\n    }\n\n    cb(null, result);\n  }\n}\n\n/**\n * fileLoader is independent\n *\n * @param {String} filePath ejs file path.\n * @return {String} The contents of the specified file.\n * @static\n */\n\nfunction fileLoader(filePath){\n  return exports.fileLoader(filePath);\n}\n\n/**\n * Get the template function.\n *\n * If `options.cache` is `true`, then the template is cached.\n *\n * @memberof module:ejs-internal\n * @param {String}  path    path for the specified file\n * @param {Options} options compilation options\n * @return {(TemplateFunction|ClientFunction)}\n * Depending on the value of `options.client`, either type might be returned\n * @static\n */\n\nfunction includeFile(path, options) {\n  var opts = utils.shallowCopy(utils.createNullProtoObjWherePossible(), options);\n  opts.filename = getIncludePath(path, opts);\n  if (typeof options.includer === 'function') {\n    var includerResult = options.includer(path, opts.filename);\n    if (includerResult) {\n      if (includerResult.filename) {\n        opts.filename = includerResult.filename;\n      }\n      if (includerResult.template) {\n        return handleCache(opts, includerResult.template);\n      }\n    }\n  }\n  return handleCache(opts);\n}\n\n/**\n * Re-throw the given `err` in context to the `str` of ejs, `filename`, and\n * `lineno`.\n *\n * @implements {RethrowCallback}\n * @memberof module:ejs-internal\n * @param {Error}  err      Error object\n * @param {String} str      EJS source\n * @param {String} flnm     file name of the EJS file\n * @param {Number} lineno   line number of the error\n * @param {EscapeCallback} esc\n * @static\n */\n\nfunction rethrow(err, str, flnm, lineno, esc) {\n  var lines = str.split('\\n');\n  var start = Math.max(lineno - 3, 0);\n  var end = Math.min(lines.length, lineno + 3);\n  var filename = esc(flnm);\n  // Error context\n  var context = lines.slice(start, end).map(function (line, i){\n    var curr = i + start + 1;\n    return (curr == lineno ? ' >> ' : '    ')\n      + curr\n      + '| '\n      + line;\n  }).join('\\n');\n\n  // Alter exception message\n  err.path = filename;\n  err.message = (filename || 'ejs') + ':'\n    + lineno + '\\n'\n    + context + '\\n\\n'\n    + err.message;\n\n  throw err;\n}\n\nfunction stripSemi(str){\n  return str.replace(/;(\\s*$)/, '$1');\n}\n\n/**\n * Compile the given `str` of ejs into a template function.\n *\n * @param {String}  template EJS template\n *\n * @param {Options} [opts] compilation options\n *\n * @return {(TemplateFunction|ClientFunction)}\n * Depending on the value of `opts.client`, either type might be returned.\n * Note that the return type of the function also depends on the value of `opts.async`.\n * @public\n */\n\nexports.compile = function compile(template, opts) {\n  var templ;\n\n  // v1 compat\n  // 'scope' is 'context'\n  // FIXME: Remove this in a future version\n  if (opts && opts.scope) {\n    if (!scopeOptionWarned){\n      console.warn('`scope` option is deprecated and will be removed in EJS 3');\n      scopeOptionWarned = true;\n    }\n    if (!opts.context) {\n      opts.context = opts.scope;\n    }\n    delete opts.scope;\n  }\n  templ = new Template(template, opts);\n  return templ.compile();\n};\n\n/**\n * Render the given `template` of ejs.\n *\n * If you would like to include options but not data, you need to explicitly\n * call this function with `data` being an empty object or `null`.\n *\n * @param {String}   template EJS template\n * @param {Object}  [data={}] template data\n * @param {Options} [opts={}] compilation and rendering options\n * @return {(String|Promise<String>)}\n * Return value type depends on `opts.async`.\n * @public\n */\n\nexports.render = function (template, d, o) {\n  var data = d || utils.createNullProtoObjWherePossible();\n  var opts = o || utils.createNullProtoObjWherePossible();\n\n  // No options object -- if there are optiony names\n  // in the data, copy them to options\n  if (arguments.length == 2) {\n    utils.shallowCopyFromList(opts, data, _OPTS_PASSABLE_WITH_DATA);\n  }\n\n  return handleCache(opts, template)(data);\n};\n\n/**\n * Render an EJS file at the given `path` and callback `cb(err, str)`.\n *\n * If you would like to include options but not data, you need to explicitly\n * call this function with `data` being an empty object or `null`.\n *\n * @param {String}             path     path to the EJS file\n * @param {Object}            [data={}] template data\n * @param {Options}           [opts={}] compilation and rendering options\n * @param {RenderFileCallback} cb callback\n * @public\n */\n\nexports.renderFile = function () {\n  var args = Array.prototype.slice.call(arguments);\n  var filename = args.shift();\n  var cb;\n  var opts = {filename: filename};\n  var data;\n  var viewOpts;\n\n  // Do we have a callback?\n  if (typeof arguments[arguments.length - 1] == 'function') {\n    cb = args.pop();\n  }\n  // Do we have data/opts?\n  if (args.length) {\n    // Should always have data obj\n    data = args.shift();\n    // Normal passed opts (data obj + opts obj)\n    if (args.length) {\n      // Use shallowCopy so we don't pollute passed in opts obj with new vals\n      utils.shallowCopy(opts, args.pop());\n    }\n    // Special casing for Express (settings + opts-in-data)\n    else {\n      // Express 3 and 4\n      if (data.settings) {\n        // Pull a few things from known locations\n        if (data.settings.views) {\n          opts.views = data.settings.views;\n        }\n        if (data.settings['view cache']) {\n          opts.cache = true;\n        }\n        // Undocumented after Express 2, but still usable, esp. for\n        // items that are unsafe to be passed along with data, like `root`\n        viewOpts = data.settings['view options'];\n        if (viewOpts) {\n          utils.shallowCopy(opts, viewOpts);\n        }\n      }\n      // Express 2 and lower, values set in app.locals, or people who just\n      // want to pass options in their data. NOTE: These values will override\n      // anything previously set in settings  or settings['view options']\n      utils.shallowCopyFromList(opts, data, _OPTS_PASSABLE_WITH_DATA_EXPRESS);\n    }\n    opts.filename = filename;\n  }\n  else {\n    data = utils.createNullProtoObjWherePossible();\n  }\n\n  return tryHandleCache(opts, data, cb);\n};\n\n/**\n * Clear intermediate JavaScript cache. Calls {@link Cache#reset}.\n * @public\n */\n\n/**\n * EJS template class\n * @public\n */\nexports.Template = Template;\n\nexports.clearCache = function () {\n  exports.cache.reset();\n};\n\nfunction Template(text, optsParam) {\n  var opts = utils.hasOwnOnlyObject(optsParam);\n  var options = utils.createNullProtoObjWherePossible();\n  this.templateText = text;\n  /** @type {string | null} */\n  this.mode = null;\n  this.truncate = false;\n  this.currentLine = 1;\n  this.source = '';\n  options.client = opts.client || false;\n  options.escapeFunction = opts.escape || opts.escapeFunction || utils.escapeXML;\n  options.compileDebug = opts.compileDebug !== false;\n  options.debug = !!opts.debug;\n  options.filename = opts.filename;\n  options.openDelimiter = opts.openDelimiter || exports.openDelimiter || _DEFAULT_OPEN_DELIMITER;\n  options.closeDelimiter = opts.closeDelimiter || exports.closeDelimiter || _DEFAULT_CLOSE_DELIMITER;\n  options.delimiter = opts.delimiter || exports.delimiter || _DEFAULT_DELIMITER;\n  options.strict = opts.strict || false;\n  options.context = opts.context;\n  options.cache = opts.cache || false;\n  options.rmWhitespace = opts.rmWhitespace;\n  options.root = opts.root;\n  options.includer = opts.includer;\n  options.outputFunctionName = opts.outputFunctionName;\n  options.localsName = opts.localsName || exports.localsName || _DEFAULT_LOCALS_NAME;\n  options.views = opts.views;\n  options.async = opts.async;\n  options.destructuredLocals = opts.destructuredLocals;\n  options.legacyInclude = typeof opts.legacyInclude != 'undefined' ? !!opts.legacyInclude : true;\n\n  if (options.strict) {\n    options._with = false;\n  }\n  else {\n    options._with = typeof opts._with != 'undefined' ? opts._with : true;\n  }\n\n  this.opts = options;\n\n  this.regex = this.createRegex();\n}\n\nTemplate.modes = {\n  EVAL: 'eval',\n  ESCAPED: 'escaped',\n  RAW: 'raw',\n  COMMENT: 'comment',\n  LITERAL: 'literal'\n};\n\nTemplate.prototype = {\n  createRegex: function () {\n    var str = _REGEX_STRING;\n    var delim = utils.escapeRegExpChars(this.opts.delimiter);\n    var open = utils.escapeRegExpChars(this.opts.openDelimiter);\n    var close = utils.escapeRegExpChars(this.opts.closeDelimiter);\n    str = str.replace(/%/g, delim)\n      .replace(/</g, open)\n      .replace(/>/g, close);\n    return new RegExp(str);\n  },\n\n  compile: function () {\n    /** @type {string} */\n    var src;\n    /** @type {ClientFunction} */\n    var fn;\n    var opts = this.opts;\n    var prepended = '';\n    var appended = '';\n    /** @type {EscapeCallback} */\n    var escapeFn = opts.escapeFunction;\n    /** @type {FunctionConstructor} */\n    var ctor;\n    /** @type {string} */\n    var sanitizedFilename = opts.filename ? JSON.stringify(opts.filename) : 'undefined';\n\n    if (!this.source) {\n      this.generateSource();\n      prepended +=\n        '  var __output = \"\";\\n' +\n        '  function __append(s) { if (s !== undefined && s !== null) __output += s }\\n';\n      if (opts.outputFunctionName) {\n        if (!_JS_IDENTIFIER.test(opts.outputFunctionName)) {\n          throw new Error('outputFunctionName is not a valid JS identifier.');\n        }\n        prepended += '  var ' + opts.outputFunctionName + ' = __append;' + '\\n';\n      }\n      if (opts.localsName && !_JS_IDENTIFIER.test(opts.localsName)) {\n        throw new Error('localsName is not a valid JS identifier.');\n      }\n      if (opts.destructuredLocals && opts.destructuredLocals.length) {\n        var destructuring = '  var __locals = (' + opts.localsName + ' || {}),\\n';\n        for (var i = 0; i < opts.destructuredLocals.length; i++) {\n          var name = opts.destructuredLocals[i];\n          if (!_JS_IDENTIFIER.test(name)) {\n            throw new Error('destructuredLocals[' + i + '] is not a valid JS identifier.');\n          }\n          if (i > 0) {\n            destructuring += ',\\n  ';\n          }\n          destructuring += name + ' = __locals.' + name;\n        }\n        prepended += destructuring + ';\\n';\n      }\n      if (opts._with !== false) {\n        prepended +=  '  with (' + opts.localsName + ' || {}) {' + '\\n';\n        appended += '  }' + '\\n';\n      }\n      appended += '  return __output;' + '\\n';\n      this.source = prepended + this.source + appended;\n    }\n\n    if (opts.compileDebug) {\n      src = 'var __line = 1' + '\\n'\n        + '  , __lines = ' + JSON.stringify(this.templateText) + '\\n'\n        + '  , __filename = ' + sanitizedFilename + ';' + '\\n'\n        + 'try {' + '\\n'\n        + this.source\n        + '} catch (e) {' + '\\n'\n        + '  rethrow(e, __lines, __filename, __line, escapeFn);' + '\\n'\n        + '}' + '\\n';\n    }\n    else {\n      src = this.source;\n    }\n\n    if (opts.client) {\n      src = 'escapeFn = escapeFn || ' + escapeFn.toString() + ';' + '\\n' + src;\n      if (opts.compileDebug) {\n        src = 'rethrow = rethrow || ' + rethrow.toString() + ';' + '\\n' + src;\n      }\n    }\n\n    if (opts.strict) {\n      src = '\"use strict\";\\n' + src;\n    }\n    if (opts.debug) {\n      console.log(src);\n    }\n    if (opts.compileDebug && opts.filename) {\n      src = src + '\\n'\n        + '//# sourceURL=' + sanitizedFilename + '\\n';\n    }\n\n    try {\n      if (opts.async) {\n        // Have to use generated function for this, since in envs without support,\n        // it breaks in parsing\n        try {\n          ctor = (new Function('return (async function(){}).constructor;'))();\n        }\n        catch(e) {\n          if (e instanceof SyntaxError) {\n            throw new Error('This environment does not support async/await');\n          }\n          else {\n            throw e;\n          }\n        }\n      }\n      else {\n        ctor = Function;\n      }\n      fn = new ctor(opts.localsName + ', escapeFn, include, rethrow', src);\n    }\n    catch(e) {\n      // istanbul ignore else\n      if (e instanceof SyntaxError) {\n        if (opts.filename) {\n          e.message += ' in ' + opts.filename;\n        }\n        e.message += ' while compiling ejs\\n\\n';\n        e.message += 'If the above error is not helpful, you may want to try EJS-Lint:\\n';\n        e.message += 'https://github.com/RyanZim/EJS-Lint';\n        if (!opts.async) {\n          e.message += '\\n';\n          e.message += 'Or, if you meant to create an async function, pass `async: true` as an option.';\n        }\n      }\n      throw e;\n    }\n\n    // Return a callable function which will execute the function\n    // created by the source-code, with the passed data as locals\n    // Adds a local `include` function which allows full recursive include\n    var returnedFn = opts.client ? fn : function anonymous(data) {\n      var include = function (path, includeData) {\n        var d = utils.shallowCopy(utils.createNullProtoObjWherePossible(), data);\n        if (includeData) {\n          d = utils.shallowCopy(d, includeData);\n        }\n        return includeFile(path, opts)(d);\n      };\n      return fn.apply(opts.context,\n        [data || utils.createNullProtoObjWherePossible(), escapeFn, include, rethrow]);\n    };\n    if (opts.filename && typeof Object.defineProperty === 'function') {\n      var filename = opts.filename;\n      var basename = path.basename(filename, path.extname(filename));\n      try {\n        Object.defineProperty(returnedFn, 'name', {\n          value: basename,\n          writable: false,\n          enumerable: false,\n          configurable: true\n        });\n      } catch (e) {/* ignore */}\n    }\n    return returnedFn;\n  },\n\n  generateSource: function () {\n    var opts = this.opts;\n\n    if (opts.rmWhitespace) {\n      // Have to use two separate replace here as `^` and `$` operators don't\n      // work well with `\\r` and empty lines don't work well with the `m` flag.\n      this.templateText =\n        this.templateText.replace(/[\\r\\n]+/g, '\\n').replace(/^\\s+|\\s+$/gm, '');\n    }\n\n    // Slurp spaces and tabs before <%_ and after _%>\n    this.templateText =\n      this.templateText.replace(/[ \\t]*<%_/gm, '<%_').replace(/_%>[ \\t]*/gm, '_%>');\n\n    var self = this;\n    var matches = this.parseTemplateText();\n    var d = this.opts.delimiter;\n    var o = this.opts.openDelimiter;\n    var c = this.opts.closeDelimiter;\n\n    if (matches && matches.length) {\n      matches.forEach(function (line, index) {\n        var closing;\n        // If this is an opening tag, check for closing tags\n        // FIXME: May end up with some false positives here\n        // Better to store modes as k/v with openDelimiter + delimiter as key\n        // Then this can simply check against the map\n        if ( line.indexOf(o + d) === 0        // If it is a tag\n          && line.indexOf(o + d + d) !== 0) { // and is not escaped\n          closing = matches[index + 2];\n          if (!(closing == d + c || closing == '-' + d + c || closing == '_' + d + c)) {\n            throw new Error('Could not find matching close tag for \"' + line + '\".');\n          }\n        }\n        self.scanLine(line);\n      });\n    }\n\n  },\n\n  parseTemplateText: function () {\n    var str = this.templateText;\n    var pat = this.regex;\n    var result = pat.exec(str);\n    var arr = [];\n    var firstPos;\n\n    while (result) {\n      firstPos = result.index;\n\n      if (firstPos !== 0) {\n        arr.push(str.substring(0, firstPos));\n        str = str.slice(firstPos);\n      }\n\n      arr.push(result[0]);\n      str = str.slice(result[0].length);\n      result = pat.exec(str);\n    }\n\n    if (str) {\n      arr.push(str);\n    }\n\n    return arr;\n  },\n\n  _addOutput: function (line) {\n    if (this.truncate) {\n      // Only replace single leading linebreak in the line after\n      // -%> tag -- this is the single, trailing linebreak\n      // after the tag that the truncation mode replaces\n      // Handle Win / Unix / old Mac linebreaks -- do the \\r\\n\n      // combo first in the regex-or\n      line = line.replace(/^(?:\\r\\n|\\r|\\n)/, '');\n      this.truncate = false;\n    }\n    if (!line) {\n      return line;\n    }\n\n    // Preserve literal slashes\n    line = line.replace(/\\\\/g, '\\\\\\\\');\n\n    // Convert linebreaks\n    line = line.replace(/\\n/g, '\\\\n');\n    line = line.replace(/\\r/g, '\\\\r');\n\n    // Escape double-quotes\n    // - this will be the delimiter during execution\n    line = line.replace(/\"/g, '\\\\\"');\n    this.source += '    ; __append(\"' + line + '\")' + '\\n';\n  },\n\n  scanLine: function (line) {\n    var self = this;\n    var d = this.opts.delimiter;\n    var o = this.opts.openDelimiter;\n    var c = this.opts.closeDelimiter;\n    var newLineCount = 0;\n\n    newLineCount = (line.split('\\n').length - 1);\n\n    switch (line) {\n    case o + d:\n    case o + d + '_':\n      this.mode = Template.modes.EVAL;\n      break;\n    case o + d + '=':\n      this.mode = Template.modes.ESCAPED;\n      break;\n    case o + d + '-':\n      this.mode = Template.modes.RAW;\n      break;\n    case o + d + '#':\n      this.mode = Template.modes.COMMENT;\n      break;\n    case o + d + d:\n      this.mode = Template.modes.LITERAL;\n      this.source += '    ; __append(\"' + line.replace(o + d + d, o + d) + '\")' + '\\n';\n      break;\n    case d + d + c:\n      this.mode = Template.modes.LITERAL;\n      this.source += '    ; __append(\"' + line.replace(d + d + c, d + c) + '\")' + '\\n';\n      break;\n    case d + c:\n    case '-' + d + c:\n    case '_' + d + c:\n      if (this.mode == Template.modes.LITERAL) {\n        this._addOutput(line);\n      }\n\n      this.mode = null;\n      this.truncate = line.indexOf('-') === 0 || line.indexOf('_') === 0;\n      break;\n    default:\n      // In script mode, depends on type of tag\n      if (this.mode) {\n        // If '//' is found without a line break, add a line break.\n        switch (this.mode) {\n        case Template.modes.EVAL:\n        case Template.modes.ESCAPED:\n        case Template.modes.RAW:\n          if (line.lastIndexOf('//') > line.lastIndexOf('\\n')) {\n            line += '\\n';\n          }\n        }\n        switch (this.mode) {\n        // Just executing code\n        case Template.modes.EVAL:\n          this.source += '    ; ' + line + '\\n';\n          break;\n          // Exec, esc, and output\n        case Template.modes.ESCAPED:\n          this.source += '    ; __append(escapeFn(' + stripSemi(line) + '))' + '\\n';\n          break;\n          // Exec and output\n        case Template.modes.RAW:\n          this.source += '    ; __append(' + stripSemi(line) + ')' + '\\n';\n          break;\n        case Template.modes.COMMENT:\n          // Do nothing\n          break;\n          // Literal <%% mode, append as raw output\n        case Template.modes.LITERAL:\n          this._addOutput(line);\n          break;\n        }\n      }\n      // In string mode, just add the output\n      else {\n        this._addOutput(line);\n      }\n    }\n\n    if (self.opts.compileDebug && newLineCount) {\n      this.currentLine += newLineCount;\n      this.source += '    ; __line = ' + this.currentLine + '\\n';\n    }\n  }\n};\n\n/**\n * Escape characters reserved in XML.\n *\n * This is simply an export of {@link module:utils.escapeXML}.\n *\n * If `markup` is `undefined` or `null`, the empty string is returned.\n *\n * @param {String} markup Input string\n * @return {String} Escaped string\n * @public\n * @func\n * */\nexports.escapeXML = utils.escapeXML;\n\n/**\n * Express.js support.\n *\n * This is an alias for {@link module:ejs.renderFile}, in order to support\n * Express.js out-of-the-box.\n *\n * @func\n */\n\nexports.__express = exports.renderFile;\n\n/**\n * Version of EJS.\n *\n * @readonly\n * @type {String}\n * @public\n */\n\nexports.VERSION = _VERSION_STRING;\n\n/**\n * Name for detection of EJS.\n *\n * @readonly\n * @type {String}\n * @public\n */\n\nexports.name = _NAME;\n\n/* istanbul ignore if */\nif (typeof window != 'undefined') {\n  window.ejs = exports;\n}\n\n", "import libDefault from 'events';\nmodule.exports = libDefault;", "import libDefault from 'url';\nmodule.exports = libDefault;", "import libDefault from 'util';\nmodule.exports = libDefault;", "import libDefault from 'http';\nmodule.exports = libDefault;", "import libDefault from 'https';\nmodule.exports = libDefault;", "import libDefault from 'zlib';\nmodule.exports = libDefault;", "import libDefault from 'stream';\nmodule.exports = libDefault;", "'use strict';\n\n// module to handle cookies\n\nconst urllib = require('url');\n\nconst SESSION_TIMEOUT = 1800; // 30 min\n\n/**\n * Creates a biskviit cookie jar for managing cookie values in memory\n *\n * @constructor\n * @param {Object} [options] Optional options object\n */\nclass Cookies {\n    constructor(options) {\n        this.options = options || {};\n        this.cookies = [];\n    }\n\n    /**\n     * Stores a cookie string to the cookie storage\n     *\n     * @param {String} cookieStr Value from the 'Set-Cookie:' header\n     * @param {String} url Current URL\n     */\n    set(cookieStr, url) {\n        let urlparts = urllib.parse(url || '');\n        let cookie = this.parse(cookieStr);\n        let domain;\n\n        if (cookie.domain) {\n            domain = cookie.domain.replace(/^\\./, '');\n\n            // do not allow cross origin cookies\n            if (\n                // can't be valid if the requested domain is shorter than current hostname\n                urlparts.hostname.length < domain.length ||\n                // prefix domains with dot to be sure that partial matches are not used\n                ('.' + urlparts.hostname).substr(-domain.length + 1) !== '.' + domain\n            ) {\n                cookie.domain = urlparts.hostname;\n            }\n        } else {\n            cookie.domain = urlparts.hostname;\n        }\n\n        if (!cookie.path) {\n            cookie.path = this.getPath(urlparts.pathname);\n        }\n\n        // if no expire date, then use sessionTimeout value\n        if (!cookie.expires) {\n            cookie.expires = new Date(Date.now() + (Number(this.options.sessionTimeout || SESSION_TIMEOUT) || SESSION_TIMEOUT) * 1000);\n        }\n\n        return this.add(cookie);\n    }\n\n    /**\n     * Returns cookie string for the 'Cookie:' header.\n     *\n     * @param {String} url URL to check for\n     * @returns {String} Cookie header or empty string if no matches were found\n     */\n    get(url) {\n        return this.list(url)\n            .map(cookie => cookie.name + '=' + cookie.value)\n            .join('; ');\n    }\n\n    /**\n     * Lists all valied cookie objects for the specified URL\n     *\n     * @param {String} url URL to check for\n     * @returns {Array} An array of cookie objects\n     */\n    list(url) {\n        let result = [];\n        let i;\n        let cookie;\n\n        for (i = this.cookies.length - 1; i >= 0; i--) {\n            cookie = this.cookies[i];\n\n            if (this.isExpired(cookie)) {\n                this.cookies.splice(i, i);\n                continue;\n            }\n\n            if (this.match(cookie, url)) {\n                result.unshift(cookie);\n            }\n        }\n\n        return result;\n    }\n\n    /**\n     * Parses cookie string from the 'Set-Cookie:' header\n     *\n     * @param {String} cookieStr String from the 'Set-Cookie:' header\n     * @returns {Object} Cookie object\n     */\n    parse(cookieStr) {\n        let cookie = {};\n\n        (cookieStr || '')\n            .toString()\n            .split(';')\n            .forEach(cookiePart => {\n                let valueParts = cookiePart.split('=');\n                let key = valueParts.shift().trim().toLowerCase();\n                let value = valueParts.join('=').trim();\n                let domain;\n\n                if (!key) {\n                    // skip empty parts\n                    return;\n                }\n\n                switch (key) {\n                    case 'expires':\n                        value = new Date(value);\n                        // ignore date if can not parse it\n                        if (value.toString() !== 'Invalid Date') {\n                            cookie.expires = value;\n                        }\n                        break;\n\n                    case 'path':\n                        cookie.path = value;\n                        break;\n\n                    case 'domain':\n                        domain = value.toLowerCase();\n                        if (domain.length && domain.charAt(0) !== '.') {\n                            domain = '.' + domain; // ensure preceeding dot for user set domains\n                        }\n                        cookie.domain = domain;\n                        break;\n\n                    case 'max-age':\n                        cookie.expires = new Date(Date.now() + (Number(value) || 0) * 1000);\n                        break;\n\n                    case 'secure':\n                        cookie.secure = true;\n                        break;\n\n                    case 'httponly':\n                        cookie.httponly = true;\n                        break;\n\n                    default:\n                        if (!cookie.name) {\n                            cookie.name = key;\n                            cookie.value = value;\n                        }\n                }\n            });\n\n        return cookie;\n    }\n\n    /**\n     * Checks if a cookie object is valid for a specified URL\n     *\n     * @param {Object} cookie Cookie object\n     * @param {String} url URL to check for\n     * @returns {Boolean} true if cookie is valid for specifiec URL\n     */\n    match(cookie, url) {\n        let urlparts = urllib.parse(url || '');\n\n        // check if hostname matches\n        // .foo.com also matches subdomains, foo.com does not\n        if (\n            urlparts.hostname !== cookie.domain &&\n            (cookie.domain.charAt(0) !== '.' || ('.' + urlparts.hostname).substr(-cookie.domain.length) !== cookie.domain)\n        ) {\n            return false;\n        }\n\n        // check if path matches\n        let path = this.getPath(urlparts.pathname);\n        if (path.substr(0, cookie.path.length) !== cookie.path) {\n            return false;\n        }\n\n        // check secure argument\n        if (cookie.secure && urlparts.protocol !== 'https:') {\n            return false;\n        }\n\n        return true;\n    }\n\n    /**\n     * Adds (or updates/removes if needed) a cookie object to the cookie storage\n     *\n     * @param {Object} cookie Cookie value to be stored\n     */\n    add(cookie) {\n        let i;\n        let len;\n\n        // nothing to do here\n        if (!cookie || !cookie.name) {\n            return false;\n        }\n\n        // overwrite if has same params\n        for (i = 0, len = this.cookies.length; i < len; i++) {\n            if (this.compare(this.cookies[i], cookie)) {\n                // check if the cookie needs to be removed instead\n                if (this.isExpired(cookie)) {\n                    this.cookies.splice(i, 1); // remove expired/unset cookie\n                    return false;\n                }\n\n                this.cookies[i] = cookie;\n                return true;\n            }\n        }\n\n        // add as new if not already expired\n        if (!this.isExpired(cookie)) {\n            this.cookies.push(cookie);\n        }\n\n        return true;\n    }\n\n    /**\n     * Checks if two cookie objects are the same\n     *\n     * @param {Object} a Cookie to check against\n     * @param {Object} b Cookie to check against\n     * @returns {Boolean} True, if the cookies are the same\n     */\n    compare(a, b) {\n        return a.name === b.name && a.path === b.path && a.domain === b.domain && a.secure === b.secure && a.httponly === a.httponly;\n    }\n\n    /**\n     * Checks if a cookie is expired\n     *\n     * @param {Object} cookie Cookie object to check against\n     * @returns {Boolean} True, if the cookie is expired\n     */\n    isExpired(cookie) {\n        return (cookie.expires && cookie.expires < new Date()) || !cookie.value;\n    }\n\n    /**\n     * Returns normalized cookie path for an URL path argument\n     *\n     * @param {String} pathname\n     * @returns {String} Normalized path\n     */\n    getPath(pathname) {\n        let path = (pathname || '/').split('/');\n        path.pop(); // remove filename part\n        path = path.join('/').trim();\n\n        // ensure path prefix /\n        if (path.charAt(0) !== '/') {\n            path = '/' + path;\n        }\n\n        // ensure path suffix /\n        if (path.substr(-1) !== '/') {\n            path += '/';\n        }\n\n        return path;\n    }\n}\n\nmodule.exports = Cookies;\n", "{\n    \"name\": \"nodemailer\",\n    \"version\": \"7.0.7\",\n    \"description\": \"Easy as cake e-mail sending from your Node.js applications\",\n    \"main\": \"lib/nodemailer.js\",\n    \"scripts\": {\n        \"test\": \"node --test --test-concurrency=1 test/**/*.test.js test/**/*-test.js\",\n        \"test:coverage\": \"c8 node --test --test-concurrency=1 test/**/*.test.js test/**/*-test.js\",\n        \"format\": \"prettier --write \\\"**/*.{js,json,md}\\\"\",\n        \"format:check\": \"prettier --check \\\"**/*.{js,json,md}\\\"\",\n        \"lint\": \"eslint .\",\n        \"lint:fix\": \"eslint . --fix\",\n        \"update\": \"rm -rf node_modules/ package-lock.json && ncu -u && npm install\"\n    },\n    \"repository\": {\n        \"type\": \"git\",\n        \"url\": \"https://github.com/nodemailer/nodemailer.git\"\n    },\n    \"keywords\": [\n        \"Nodemailer\"\n    ],\n    \"author\": \"Andris Reinman\",\n    \"license\": \"MIT-0\",\n    \"bugs\": {\n        \"url\": \"https://github.com/nodemailer/nodemailer/issues\"\n    },\n    \"homepage\": \"https://nodemailer.com/\",\n    \"devDependencies\": {\n        \"@aws-sdk/client-sesv2\": \"3.901.0\",\n        \"bunyan\": \"1.8.15\",\n        \"c8\": \"10.1.3\",\n        \"eslint\": \"^9.37.0\",\n        \"eslint-config-prettier\": \"^10.1.8\",\n        \"globals\": \"^16.4.0\",\n        \"libbase64\": \"1.3.0\",\n        \"libmime\": \"5.3.7\",\n        \"libqp\": \"2.1.1\",\n        \"nodemailer-ntlm-auth\": \"1.0.4\",\n        \"prettier\": \"^3.6.2\",\n        \"proxy\": \"1.0.2\",\n        \"proxy-test-server\": \"1.0.0\",\n        \"smtp-server\": \"3.14.0\"\n    },\n    \"engines\": {\n        \"node\": \">=6.0.0\"\n    }\n}\n", "import libDefault from 'net';\nmodule.exports = libDefault;", "'use strict';\n\nconst http = require('http');\nconst https = require('https');\nconst urllib = require('url');\nconst zlib = require('zlib');\nconst PassThrough = require('stream').PassThrough;\nconst Cookies = require('./cookies');\nconst packageData = require('../../package.json');\nconst net = require('net');\n\nconst MAX_REDIRECTS = 5;\n\nmodule.exports = function (url, options) {\n    return nmfetch(url, options);\n};\n\nmodule.exports.Cookies = Cookies;\n\nfunction nmfetch(url, options) {\n    options = options || {};\n\n    options.fetchRes = options.fetchRes || new PassThrough();\n    options.cookies = options.cookies || new Cookies();\n    options.redirects = options.redirects || 0;\n    options.maxRedirects = isNaN(options.maxRedirects) ? MAX_REDIRECTS : options.maxRedirects;\n\n    if (options.cookie) {\n        [].concat(options.cookie || []).forEach(cookie => {\n            options.cookies.set(cookie, url);\n        });\n        options.cookie = false;\n    }\n\n    let fetchRes = options.fetchRes;\n    let parsed = urllib.parse(url);\n    let method = (options.method || '').toString().trim().toUpperCase() || 'GET';\n    let finished = false;\n    let cookies;\n    let body;\n\n    let handler = parsed.protocol === 'https:' ? https : http;\n\n    let headers = {\n        'accept-encoding': 'gzip,deflate',\n        'user-agent': 'nodemailer/' + packageData.version\n    };\n\n    Object.keys(options.headers || {}).forEach(key => {\n        headers[key.toLowerCase().trim()] = options.headers[key];\n    });\n\n    if (options.userAgent) {\n        headers['user-agent'] = options.userAgent;\n    }\n\n    if (parsed.auth) {\n        headers.Authorization = 'Basic ' + Buffer.from(parsed.auth).toString('base64');\n    }\n\n    if ((cookies = options.cookies.get(url))) {\n        headers.cookie = cookies;\n    }\n\n    if (options.body) {\n        if (options.contentType !== false) {\n            headers['Content-Type'] = options.contentType || 'application/x-www-form-urlencoded';\n        }\n\n        if (typeof options.body.pipe === 'function') {\n            // it's a stream\n            headers['Transfer-Encoding'] = 'chunked';\n            body = options.body;\n            body.on('error', err => {\n                if (finished) {\n                    return;\n                }\n                finished = true;\n                err.type = 'FETCH';\n                err.sourceUrl = url;\n                fetchRes.emit('error', err);\n            });\n        } else {\n            if (options.body instanceof Buffer) {\n                body = options.body;\n            } else if (typeof options.body === 'object') {\n                try {\n                    // encodeURIComponent can fail on invalid input (partial emoji etc.)\n                    body = Buffer.from(\n                        Object.keys(options.body)\n                            .map(key => {\n                                let value = options.body[key].toString().trim();\n                                return encodeURIComponent(key) + '=' + encodeURIComponent(value);\n                            })\n                            .join('&')\n                    );\n                } catch (E) {\n                    if (finished) {\n                        return;\n                    }\n                    finished = true;\n                    E.type = 'FETCH';\n                    E.sourceUrl = url;\n                    fetchRes.emit('error', E);\n                    return;\n                }\n            } else {\n                body = Buffer.from(options.body.toString().trim());\n            }\n\n            headers['Content-Type'] = options.contentType || 'application/x-www-form-urlencoded';\n            headers['Content-Length'] = body.length;\n        }\n        // if method is not provided, use POST instead of GET\n        method = (options.method || '').toString().trim().toUpperCase() || 'POST';\n    }\n\n    let req;\n    let reqOptions = {\n        method,\n        host: parsed.hostname,\n        path: parsed.path,\n        port: parsed.port ? parsed.port : parsed.protocol === 'https:' ? 443 : 80,\n        headers,\n        rejectUnauthorized: false,\n        agent: false\n    };\n\n    if (options.tls) {\n        Object.keys(options.tls).forEach(key => {\n            reqOptions[key] = options.tls[key];\n        });\n    }\n\n    if (\n        parsed.protocol === 'https:' &&\n        parsed.hostname &&\n        parsed.hostname !== reqOptions.host &&\n        !net.isIP(parsed.hostname) &&\n        !reqOptions.servername\n    ) {\n        reqOptions.servername = parsed.hostname;\n    }\n\n    try {\n        req = handler.request(reqOptions);\n    } catch (E) {\n        finished = true;\n        setImmediate(() => {\n            E.type = 'FETCH';\n            E.sourceUrl = url;\n            fetchRes.emit('error', E);\n        });\n        return fetchRes;\n    }\n\n    if (options.timeout) {\n        req.setTimeout(options.timeout, () => {\n            if (finished) {\n                return;\n            }\n            finished = true;\n            req.abort();\n            let err = new Error('Request Timeout');\n            err.type = 'FETCH';\n            err.sourceUrl = url;\n            fetchRes.emit('error', err);\n        });\n    }\n\n    req.on('error', err => {\n        if (finished) {\n            return;\n        }\n        finished = true;\n        err.type = 'FETCH';\n        err.sourceUrl = url;\n        fetchRes.emit('error', err);\n    });\n\n    req.on('response', res => {\n        let inflate;\n\n        if (finished) {\n            return;\n        }\n\n        switch (res.headers['content-encoding']) {\n            case 'gzip':\n            case 'deflate':\n                inflate = zlib.createUnzip();\n                break;\n        }\n\n        if (res.headers['set-cookie']) {\n            [].concat(res.headers['set-cookie'] || []).forEach(cookie => {\n                options.cookies.set(cookie, url);\n            });\n        }\n\n        if ([301, 302, 303, 307, 308].includes(res.statusCode) && res.headers.location) {\n            // redirect\n            options.redirects++;\n            if (options.redirects > options.maxRedirects) {\n                finished = true;\n                let err = new Error('Maximum redirect count exceeded');\n                err.type = 'FETCH';\n                err.sourceUrl = url;\n                fetchRes.emit('error', err);\n                req.abort();\n                return;\n            }\n            // redirect does not include POST body\n            options.method = 'GET';\n            options.body = false;\n            return nmfetch(urllib.resolve(url, res.headers.location), options);\n        }\n\n        fetchRes.statusCode = res.statusCode;\n        fetchRes.headers = res.headers;\n\n        if (res.statusCode >= 300 && !options.allowErrorResponse) {\n            finished = true;\n            let err = new Error('Invalid status code ' + res.statusCode);\n            err.type = 'FETCH';\n            err.sourceUrl = url;\n            fetchRes.emit('error', err);\n            req.abort();\n            return;\n        }\n\n        res.on('error', err => {\n            if (finished) {\n                return;\n            }\n            finished = true;\n            err.type = 'FETCH';\n            err.sourceUrl = url;\n            fetchRes.emit('error', err);\n            req.abort();\n        });\n\n        if (inflate) {\n            res.pipe(inflate).pipe(fetchRes);\n            inflate.on('error', err => {\n                if (finished) {\n                    return;\n                }\n                finished = true;\n                err.type = 'FETCH';\n                err.sourceUrl = url;\n                fetchRes.emit('error', err);\n                req.abort();\n            });\n        } else {\n            res.pipe(fetchRes);\n        }\n    });\n\n    setImmediate(() => {\n        if (body) {\n            try {\n                if (typeof body.pipe === 'function') {\n                    return body.pipe(req);\n                } else {\n                    req.write(body);\n                }\n            } catch (err) {\n                finished = true;\n                err.type = 'FETCH';\n                err.sourceUrl = url;\n                fetchRes.emit('error', err);\n                return;\n            }\n        }\n        req.end();\n    });\n\n    return fetchRes;\n}\n", "import libDefault from 'dns';\nmodule.exports = libDefault;", "import libDefault from 'os';\nmodule.exports = libDefault;", "/* eslint no-console: 0 */\n\n'use strict';\n\nconst urllib = require('url');\nconst util = require('util');\nconst fs = require('fs');\nconst nmfetch = require('../fetch');\nconst dns = require('dns');\nconst net = require('net');\nconst os = require('os');\n\nconst DNS_TTL = 5 * 60 * 1000;\nconst CACHE_CLEANUP_INTERVAL = 30 * 1000; // Minimum 30 seconds between cleanups\nconst MAX_CACHE_SIZE = 1000; // Maximum number of entries in cache\n\nlet lastCacheCleanup = 0;\nmodule.exports._lastCacheCleanup = () => lastCacheCleanup;\nmodule.exports._resetCacheCleanup = () => {\n    lastCacheCleanup = 0;\n};\n\nlet networkInterfaces;\ntry {\n    networkInterfaces = os.networkInterfaces();\n} catch (_err) {\n    // fails on some systems\n}\n\nmodule.exports.networkInterfaces = networkInterfaces;\n\nconst isFamilySupported = (family, allowInternal) => {\n    let networkInterfaces = module.exports.networkInterfaces;\n    if (!networkInterfaces) {\n        // hope for the best\n        return true;\n    }\n\n    const familySupported =\n        // crux that replaces Object.values(networkInterfaces) as Object.values is not supported in nodejs v6\n        Object.keys(networkInterfaces)\n            .map(key => networkInterfaces[key])\n            // crux that replaces .flat() as it is not supported in older Node versions (v10 and older)\n            .reduce((acc, val) => acc.concat(val), [])\n            .filter(i => !i.internal || allowInternal)\n            .filter(i => i.family === 'IPv' + family || i.family === family).length > 0;\n\n    return familySupported;\n};\n\nconst resolver = (family, hostname, options, callback) => {\n    options = options || {};\n    const familySupported = isFamilySupported(family, options.allowInternalNetworkInterfaces);\n\n    if (!familySupported) {\n        return callback(null, []);\n    }\n\n    const resolver = dns.Resolver ? new dns.Resolver(options) : dns;\n    resolver['resolve' + family](hostname, (err, addresses) => {\n        if (err) {\n            switch (err.code) {\n                case dns.NODATA:\n                case dns.NOTFOUND:\n                case dns.NOTIMP:\n                case dns.SERVFAIL:\n                case dns.CONNREFUSED:\n                case dns.REFUSED:\n                case 'EAI_AGAIN':\n                    return callback(null, []);\n            }\n            return callback(err);\n        }\n        return callback(null, Array.isArray(addresses) ? addresses : [].concat(addresses || []));\n    });\n};\n\nconst dnsCache = (module.exports.dnsCache = new Map());\n\nconst formatDNSValue = (value, extra) => {\n    if (!value) {\n        return Object.assign({}, extra || {});\n    }\n\n    return Object.assign(\n        {\n            servername: value.servername,\n            host:\n                !value.addresses || !value.addresses.length\n                    ? null\n                    : value.addresses.length === 1\n                      ? value.addresses[0]\n                      : value.addresses[Math.floor(Math.random() * value.addresses.length)]\n        },\n        extra || {}\n    );\n};\n\nmodule.exports.resolveHostname = (options, callback) => {\n    options = options || {};\n\n    if (!options.host && options.servername) {\n        options.host = options.servername;\n    }\n\n    if (!options.host || net.isIP(options.host)) {\n        // nothing to do here\n        let value = {\n            addresses: [options.host],\n            servername: options.servername || false\n        };\n        return callback(\n            null,\n            formatDNSValue(value, {\n                cached: false\n            })\n        );\n    }\n\n    let cached;\n    if (dnsCache.has(options.host)) {\n        cached = dnsCache.get(options.host);\n\n        // Lazy cleanup with time throttling\n        const now = Date.now();\n        if (now - lastCacheCleanup > CACHE_CLEANUP_INTERVAL) {\n            lastCacheCleanup = now;\n\n            // Clean up expired entries\n            for (const [host, entry] of dnsCache.entries()) {\n                if (entry.expires && entry.expires < now) {\n                    dnsCache.delete(host);\n                }\n            }\n\n            // If cache is still too large, remove oldest entries\n            if (dnsCache.size > MAX_CACHE_SIZE) {\n                const toDelete = Math.floor(MAX_CACHE_SIZE * 0.1); // Remove 10% of entries\n                const keys = Array.from(dnsCache.keys()).slice(0, toDelete);\n                keys.forEach(key => dnsCache.delete(key));\n            }\n        }\n\n        if (!cached.expires || cached.expires >= now) {\n            return callback(\n                null,\n                formatDNSValue(cached.value, {\n                    cached: true\n                })\n            );\n        }\n    }\n\n    resolver(4, options.host, options, (err, addresses) => {\n        if (err) {\n            if (cached) {\n                dnsCache.set(options.host, {\n                    value: cached.value,\n                    expires: Date.now() + (options.dnsTtl || DNS_TTL)\n                });\n\n                return callback(\n                    null,\n                    formatDNSValue(cached.value, {\n                        cached: true,\n                        error: err\n                    })\n                );\n            }\n            return callback(err);\n        }\n\n        if (addresses && addresses.length) {\n            let value = {\n                addresses,\n                servername: options.servername || options.host\n            };\n\n            dnsCache.set(options.host, {\n                value,\n                expires: Date.now() + (options.dnsTtl || DNS_TTL)\n            });\n\n            return callback(\n                null,\n                formatDNSValue(value, {\n                    cached: false\n                })\n            );\n        }\n\n        resolver(6, options.host, options, (err, addresses) => {\n            if (err) {\n                if (cached) {\n                    dnsCache.set(options.host, {\n                        value: cached.value,\n                        expires: Date.now() + (options.dnsTtl || DNS_TTL)\n                    });\n\n                    return callback(\n                        null,\n                        formatDNSValue(cached.value, {\n                            cached: true,\n                            error: err\n                        })\n                    );\n                }\n                return callback(err);\n            }\n\n            if (addresses && addresses.length) {\n                let value = {\n                    addresses,\n                    servername: options.servername || options.host\n                };\n\n                dnsCache.set(options.host, {\n                    value,\n                    expires: Date.now() + (options.dnsTtl || DNS_TTL)\n                });\n\n                return callback(\n                    null,\n                    formatDNSValue(value, {\n                        cached: false\n                    })\n                );\n            }\n\n            try {\n                dns.lookup(options.host, { all: true }, (err, addresses) => {\n                    if (err) {\n                        if (cached) {\n                            dnsCache.set(options.host, {\n                                value: cached.value,\n                                expires: Date.now() + (options.dnsTtl || DNS_TTL)\n                            });\n\n                            return callback(\n                                null,\n                                formatDNSValue(cached.value, {\n                                    cached: true,\n                                    error: err\n                                })\n                            );\n                        }\n                        return callback(err);\n                    }\n\n                    let address = addresses\n                        ? addresses\n                              .filter(addr => isFamilySupported(addr.family))\n                              .map(addr => addr.address)\n                              .shift()\n                        : false;\n\n                    if (addresses && addresses.length && !address) {\n                        // there are addresses but none can be used\n                        console.warn(`Failed to resolve IPv${addresses[0].family} addresses with current network`);\n                    }\n\n                    if (!address && cached) {\n                        // nothing was found, fallback to cached value\n                        return callback(\n                            null,\n                            formatDNSValue(cached.value, {\n                                cached: true\n                            })\n                        );\n                    }\n\n                    let value = {\n                        addresses: address ? [address] : [options.host],\n                        servername: options.servername || options.host\n                    };\n\n                    dnsCache.set(options.host, {\n                        value,\n                        expires: Date.now() + (options.dnsTtl || DNS_TTL)\n                    });\n\n                    return callback(\n                        null,\n                        formatDNSValue(value, {\n                            cached: false\n                        })\n                    );\n                });\n            } catch (_err) {\n                if (cached) {\n                    dnsCache.set(options.host, {\n                        value: cached.value,\n                        expires: Date.now() + (options.dnsTtl || DNS_TTL)\n                    });\n\n                    return callback(\n                        null,\n                        formatDNSValue(cached.value, {\n                            cached: true,\n                            error: err\n                        })\n                    );\n                }\n                return callback(err);\n            }\n        });\n    });\n};\n/**\n * Parses connection url to a structured configuration object\n *\n * @param {String} str Connection url\n * @return {Object} Configuration object\n */\nmodule.exports.parseConnectionUrl = str => {\n    str = str || '';\n    let options = {};\n\n    [urllib.parse(str, true)].forEach(url => {\n        let auth;\n\n        switch (url.protocol) {\n            case 'smtp:':\n                options.secure = false;\n                break;\n            case 'smtps:':\n                options.secure = true;\n                break;\n            case 'direct:':\n                options.direct = true;\n                break;\n        }\n\n        if (!isNaN(url.port) && Number(url.port)) {\n            options.port = Number(url.port);\n        }\n\n        if (url.hostname) {\n            options.host = url.hostname;\n        }\n\n        if (url.auth) {\n            auth = url.auth.split(':');\n\n            if (!options.auth) {\n                options.auth = {};\n            }\n\n            options.auth.user = auth.shift();\n            options.auth.pass = auth.join(':');\n        }\n\n        Object.keys(url.query || {}).forEach(key => {\n            let obj = options;\n            let lKey = key;\n            let value = url.query[key];\n\n            if (!isNaN(value)) {\n                value = Number(value);\n            }\n\n            switch (value) {\n                case 'true':\n                    value = true;\n                    break;\n                case 'false':\n                    value = false;\n                    break;\n            }\n\n            // tls is nested object\n            if (key.indexOf('tls.') === 0) {\n                lKey = key.substr(4);\n                if (!options.tls) {\n                    options.tls = {};\n                }\n                obj = options.tls;\n            } else if (key.indexOf('.') >= 0) {\n                // ignore nested properties besides tls\n                return;\n            }\n\n            if (!(lKey in obj)) {\n                obj[lKey] = value;\n            }\n        });\n    });\n\n    return options;\n};\n\nmodule.exports._logFunc = (logger, level, defaults, data, message, ...args) => {\n    let entry = {};\n\n    Object.keys(defaults || {}).forEach(key => {\n        if (key !== 'level') {\n            entry[key] = defaults[key];\n        }\n    });\n\n    Object.keys(data || {}).forEach(key => {\n        if (key !== 'level') {\n            entry[key] = data[key];\n        }\n    });\n\n    logger[level](entry, message, ...args);\n};\n\n/**\n * Returns a bunyan-compatible logger interface. Uses either provided logger or\n * creates a default console logger\n *\n * @param {Object} [options] Options object that might include 'logger' value\n * @return {Object} bunyan compatible logger\n */\nmodule.exports.getLogger = (options, defaults) => {\n    options = options || {};\n\n    let response = {};\n    let levels = ['trace', 'debug', 'info', 'warn', 'error', 'fatal'];\n\n    if (!options.logger) {\n        // use vanity logger\n        levels.forEach(level => {\n            response[level] = () => false;\n        });\n        return response;\n    }\n\n    let logger = options.logger;\n\n    if (options.logger === true) {\n        // create console logger\n        logger = createDefaultLogger(levels);\n    }\n\n    levels.forEach(level => {\n        response[level] = (data, message, ...args) => {\n            module.exports._logFunc(logger, level, defaults, data, message, ...args);\n        };\n    });\n\n    return response;\n};\n\n/**\n * Wrapper for creating a callback that either resolves or rejects a promise\n * based on input\n *\n * @param {Function} resolve Function to run if callback is called\n * @param {Function} reject Function to run if callback ends with an error\n */\nmodule.exports.callbackPromise = (resolve, reject) =>\n    function () {\n        let args = Array.from(arguments);\n        let err = args.shift();\n        if (err) {\n            reject(err);\n        } else {\n            resolve(...args);\n        }\n    };\n\nmodule.exports.parseDataURI = uri => {\n    if (typeof uri !== 'string') {\n        return null;\n    }\n\n    // Early return for non-data URIs to avoid unnecessary processing\n    if (!uri.startsWith('data:')) {\n        return null;\n    }\n\n    // Find the first comma safely - this prevents ReDoS\n    const commaPos = uri.indexOf(',');\n    if (commaPos === -1) {\n        return null;\n    }\n\n    const data = uri.substring(commaPos + 1);\n    const metaStr = uri.substring('data:'.length, commaPos);\n\n    let encoding;\n    const metaEntries = metaStr.split(';');\n\n    if (metaEntries.length > 0) {\n        const lastEntry = metaEntries[metaEntries.length - 1].toLowerCase().trim();\n        // Only recognize valid encoding types to prevent manipulation\n        if (['base64', 'utf8', 'utf-8'].includes(lastEntry) && lastEntry.indexOf('=') === -1) {\n            encoding = lastEntry;\n            metaEntries.pop();\n        }\n    }\n\n    const contentType = metaEntries.length > 0 ? metaEntries.shift() : 'application/octet-stream';\n    const params = {};\n\n    for (let i = 0; i < metaEntries.length; i++) {\n        const entry = metaEntries[i];\n        const sepPos = entry.indexOf('=');\n        if (sepPos > 0) {\n            // Ensure there's a key before the '='\n            const key = entry.substring(0, sepPos).trim();\n            const value = entry.substring(sepPos + 1).trim();\n            if (key) {\n                params[key] = value;\n            }\n        }\n    }\n\n    // Decode data based on encoding with proper error handling\n    let bufferData;\n    try {\n        if (encoding === 'base64') {\n            bufferData = Buffer.from(data, 'base64');\n        } else {\n            try {\n                bufferData = Buffer.from(decodeURIComponent(data));\n            } catch (_decodeError) {\n                bufferData = Buffer.from(data);\n            }\n        }\n    } catch (_bufferError) {\n        bufferData = Buffer.alloc(0);\n    }\n\n    return {\n        data: bufferData,\n        encoding: encoding || null,\n        contentType: contentType || 'application/octet-stream',\n        params\n    };\n};\n\n/**\n * Resolves a String or a Buffer value for content value. Useful if the value\n * is a Stream or a file or an URL. If the value is a Stream, overwrites\n * the stream object with the resolved value (you can't stream a value twice).\n *\n * This is useful when you want to create a plugin that needs a content value,\n * for example the `html` or `text` value as a String or a Buffer but not as\n * a file path or an URL.\n *\n * @param {Object} data An object or an Array you want to resolve an element for\n * @param {String|Number} key Property name or an Array index\n * @param {Function} callback Callback function with (err, value)\n */\nmodule.exports.resolveContent = (data, key, callback) => {\n    let promise;\n\n    if (!callback) {\n        promise = new Promise((resolve, reject) => {\n            callback = module.exports.callbackPromise(resolve, reject);\n        });\n    }\n\n    let content = (data && data[key] && data[key].content) || data[key];\n    let contentStream;\n    let encoding = ((typeof data[key] === 'object' && data[key].encoding) || 'utf8')\n        .toString()\n        .toLowerCase()\n        .replace(/[-_\\s]/g, '');\n\n    if (!content) {\n        return callback(null, content);\n    }\n\n    if (typeof content === 'object') {\n        if (typeof content.pipe === 'function') {\n            return resolveStream(content, (err, value) => {\n                if (err) {\n                    return callback(err);\n                }\n                // we can't stream twice the same content, so we need\n                // to replace the stream object with the streaming result\n                if (data[key].content) {\n                    data[key].content = value;\n                } else {\n                    data[key] = value;\n                }\n                callback(null, value);\n            });\n        } else if (/^https?:\\/\\//i.test(content.path || content.href)) {\n            contentStream = nmfetch(content.path || content.href);\n            return resolveStream(contentStream, callback);\n        } else if (/^data:/i.test(content.path || content.href)) {\n            let parsedDataUri = module.exports.parseDataURI(content.path || content.href);\n\n            if (!parsedDataUri || !parsedDataUri.data) {\n                return callback(null, Buffer.from(0));\n            }\n            return callback(null, parsedDataUri.data);\n        } else if (content.path) {\n            return resolveStream(fs.createReadStream(content.path), callback);\n        }\n    }\n\n    if (typeof data[key].content === 'string' && !['utf8', 'usascii', 'ascii'].includes(encoding)) {\n        content = Buffer.from(data[key].content, encoding);\n    }\n\n    // default action, return as is\n    setImmediate(() => callback(null, content));\n\n    return promise;\n};\n\n/**\n * Copies properties from source objects to target objects\n */\nmodule.exports.assign = function (/* target, ... sources */) {\n    let args = Array.from(arguments);\n    let target = args.shift() || {};\n\n    args.forEach(source => {\n        Object.keys(source || {}).forEach(key => {\n            if (['tls', 'auth'].includes(key) && source[key] && typeof source[key] === 'object') {\n                // tls and auth are special keys that need to be enumerated separately\n                // other objects are passed as is\n                if (!target[key]) {\n                    // ensure that target has this key\n                    target[key] = {};\n                }\n                Object.keys(source[key]).forEach(subKey => {\n                    target[key][subKey] = source[key][subKey];\n                });\n            } else {\n                target[key] = source[key];\n            }\n        });\n    });\n    return target;\n};\n\nmodule.exports.encodeXText = str => {\n    // ! 0x21\n    // + 0x2B\n    // = 0x3D\n    // ~ 0x7E\n    if (!/[^\\x21-\\x2A\\x2C-\\x3C\\x3E-\\x7E]/.test(str)) {\n        return str;\n    }\n    let buf = Buffer.from(str);\n    let result = '';\n    for (let i = 0, len = buf.length; i < len; i++) {\n        let c = buf[i];\n        if (c < 0x21 || c > 0x7e || c === 0x2b || c === 0x3d) {\n            result += '+' + (c < 0x10 ? '0' : '') + c.toString(16).toUpperCase();\n        } else {\n            result += String.fromCharCode(c);\n        }\n    }\n    return result;\n};\n\n/**\n * Streams a stream value into a Buffer\n *\n * @param {Object} stream Readable stream\n * @param {Function} callback Callback function with (err, value)\n */\nfunction resolveStream(stream, callback) {\n    let responded = false;\n    let chunks = [];\n    let chunklen = 0;\n\n    stream.on('error', err => {\n        if (responded) {\n            return;\n        }\n\n        responded = true;\n        callback(err);\n    });\n\n    stream.on('readable', () => {\n        let chunk;\n        while ((chunk = stream.read()) !== null) {\n            chunks.push(chunk);\n            chunklen += chunk.length;\n        }\n    });\n\n    stream.on('end', () => {\n        if (responded) {\n            return;\n        }\n        responded = true;\n\n        let value;\n\n        try {\n            value = Buffer.concat(chunks, chunklen);\n        } catch (E) {\n            return callback(E);\n        }\n        callback(null, value);\n    });\n}\n\n/**\n * Generates a bunyan-like logger that prints to console\n *\n * @returns {Object} Bunyan logger instance\n */\nfunction createDefaultLogger(levels) {\n    let levelMaxLen = 0;\n    let levelNames = new Map();\n    levels.forEach(level => {\n        if (level.length > levelMaxLen) {\n            levelMaxLen = level.length;\n        }\n    });\n\n    levels.forEach(level => {\n        let levelName = level.toUpperCase();\n        if (levelName.length < levelMaxLen) {\n            levelName += ' '.repeat(levelMaxLen - levelName.length);\n        }\n        levelNames.set(level, levelName);\n    });\n\n    let print = (level, entry, message, ...args) => {\n        let prefix = '';\n        if (entry) {\n            if (entry.tnx === 'server') {\n                prefix = 'S: ';\n            } else if (entry.tnx === 'client') {\n                prefix = 'C: ';\n            }\n\n            if (entry.sid) {\n                prefix = '[' + entry.sid + '] ' + prefix;\n            }\n\n            if (entry.cid) {\n                prefix = '[#' + entry.cid + '] ' + prefix;\n            }\n        }\n\n        message = util.format(message, ...args);\n        message.split(/\\r?\\n/).forEach(line => {\n            console.log('[%s] %s %s', new Date().toISOString().substr(0, 19).replace(/T/, ' '), levelNames.get(level), prefix + line);\n        });\n    };\n\n    let logger = {};\n    levels.forEach(level => {\n        logger[level] = print.bind(null, level);\n    });\n\n    return logger;\n}\n", "/* eslint quote-props: 0 */\n\n'use strict';\n\nconst path = require('path');\n\nconst defaultMimeType = 'application/octet-stream';\nconst defaultExtension = 'bin';\n\nconst mimeTypes = new Map([\n    ['application/acad', 'dwg'],\n    ['application/applixware', 'aw'],\n    ['application/arj', 'arj'],\n    ['application/atom+xml', 'xml'],\n    ['application/atomcat+xml', 'atomcat'],\n    ['application/atomsvc+xml', 'atomsvc'],\n    ['application/base64', ['mm', 'mme']],\n    ['application/binhex', 'hqx'],\n    ['application/binhex4', 'hqx'],\n    ['application/book', ['book', 'boo']],\n    ['application/ccxml+xml,', 'ccxml'],\n    ['application/cdf', 'cdf'],\n    ['application/cdmi-capability', 'cdmia'],\n    ['application/cdmi-container', 'cdmic'],\n    ['application/cdmi-domain', 'cdmid'],\n    ['application/cdmi-object', 'cdmio'],\n    ['application/cdmi-queue', 'cdmiq'],\n    ['application/clariscad', 'ccad'],\n    ['application/commonground', 'dp'],\n    ['application/cu-seeme', 'cu'],\n    ['application/davmount+xml', 'davmount'],\n    ['application/drafting', 'drw'],\n    ['application/dsptype', 'tsp'],\n    ['application/dssc+der', 'dssc'],\n    ['application/dssc+xml', 'xdssc'],\n    ['application/dxf', 'dxf'],\n    ['application/ecmascript', ['js', 'es']],\n    ['application/emma+xml', 'emma'],\n    ['application/envoy', 'evy'],\n    ['application/epub+zip', 'epub'],\n    ['application/excel', ['xls', 'xl', 'xla', 'xlb', 'xlc', 'xld', 'xlk', 'xll', 'xlm', 'xlt', 'xlv', 'xlw']],\n    ['application/exi', 'exi'],\n    ['application/font-tdpfr', 'pfr'],\n    ['application/fractals', 'fif'],\n    ['application/freeloader', 'frl'],\n    ['application/futuresplash', 'spl'],\n    ['application/geo+json', 'geojson'],\n    ['application/gnutar', 'tgz'],\n    ['application/groupwise', 'vew'],\n    ['application/hlp', 'hlp'],\n    ['application/hta', 'hta'],\n    ['application/hyperstudio', 'stk'],\n    ['application/i-deas', 'unv'],\n    ['application/iges', ['iges', 'igs']],\n    ['application/inf', 'inf'],\n    ['application/internet-property-stream', 'acx'],\n    ['application/ipfix', 'ipfix'],\n    ['application/java', 'class'],\n    ['application/java-archive', 'jar'],\n    ['application/java-byte-code', 'class'],\n    ['application/java-serialized-object', 'ser'],\n    ['application/java-vm', 'class'],\n    ['application/javascript', 'js'],\n    ['application/json', 'json'],\n    ['application/lha', 'lha'],\n    ['application/lzx', 'lzx'],\n    ['application/mac-binary', 'bin'],\n    ['application/mac-binhex', 'hqx'],\n    ['application/mac-binhex40', 'hqx'],\n    ['application/mac-compactpro', 'cpt'],\n    ['application/macbinary', 'bin'],\n    ['application/mads+xml', 'mads'],\n    ['application/marc', 'mrc'],\n    ['application/marcxml+xml', 'mrcx'],\n    ['application/mathematica', 'ma'],\n    ['application/mathml+xml', 'mathml'],\n    ['application/mbedlet', 'mbd'],\n    ['application/mbox', 'mbox'],\n    ['application/mcad', 'mcd'],\n    ['application/mediaservercontrol+xml', 'mscml'],\n    ['application/metalink4+xml', 'meta4'],\n    ['application/mets+xml', 'mets'],\n    ['application/mime', 'aps'],\n    ['application/mods+xml', 'mods'],\n    ['application/mp21', 'm21'],\n    ['application/mp4', 'mp4'],\n    ['application/mspowerpoint', ['ppt', 'pot', 'pps', 'ppz']],\n    ['application/msword', ['doc', 'dot', 'w6w', 'wiz', 'word']],\n    ['application/mswrite', 'wri'],\n    ['application/mxf', 'mxf'],\n    ['application/netmc', 'mcp'],\n    ['application/octet-stream', ['*']],\n    ['application/oda', 'oda'],\n    ['application/oebps-package+xml', 'opf'],\n    ['application/ogg', 'ogx'],\n    ['application/olescript', 'axs'],\n    ['application/onenote', 'onetoc'],\n    ['application/patch-ops-error+xml', 'xer'],\n    ['application/pdf', 'pdf'],\n    ['application/pgp-encrypted', 'asc'],\n    ['application/pgp-signature', 'pgp'],\n    ['application/pics-rules', 'prf'],\n    ['application/pkcs-12', 'p12'],\n    ['application/pkcs-crl', 'crl'],\n    ['application/pkcs10', 'p10'],\n    ['application/pkcs7-mime', ['p7c', 'p7m']],\n    ['application/pkcs7-signature', 'p7s'],\n    ['application/pkcs8', 'p8'],\n    ['application/pkix-attr-cert', 'ac'],\n    ['application/pkix-cert', ['cer', 'crt']],\n    ['application/pkix-crl', 'crl'],\n    ['application/pkix-pkipath', 'pkipath'],\n    ['application/pkixcmp', 'pki'],\n    ['application/plain', 'text'],\n    ['application/pls+xml', 'pls'],\n    ['application/postscript', ['ps', 'ai', 'eps']],\n    ['application/powerpoint', 'ppt'],\n    ['application/pro_eng', ['part', 'prt']],\n    ['application/prs.cww', 'cww'],\n    ['application/pskc+xml', 'pskcxml'],\n    ['application/rdf+xml', 'rdf'],\n    ['application/reginfo+xml', 'rif'],\n    ['application/relax-ng-compact-syntax', 'rnc'],\n    ['application/resource-lists+xml', 'rl'],\n    ['application/resource-lists-diff+xml', 'rld'],\n    ['application/ringing-tones', 'rng'],\n    ['application/rls-services+xml', 'rs'],\n    ['application/rsd+xml', 'rsd'],\n    ['application/rss+xml', 'xml'],\n    ['application/rtf', ['rtf', 'rtx']],\n    ['application/sbml+xml', 'sbml'],\n    ['application/scvp-cv-request', 'scq'],\n    ['application/scvp-cv-response', 'scs'],\n    ['application/scvp-vp-request', 'spq'],\n    ['application/scvp-vp-response', 'spp'],\n    ['application/sdp', 'sdp'],\n    ['application/sea', 'sea'],\n    ['application/set', 'set'],\n    ['application/set-payment-initiation', 'setpay'],\n    ['application/set-registration-initiation', 'setreg'],\n    ['application/shf+xml', 'shf'],\n    ['application/sla', 'stl'],\n    ['application/smil', ['smi', 'smil']],\n    ['application/smil+xml', 'smi'],\n    ['application/solids', 'sol'],\n    ['application/sounder', 'sdr'],\n    ['application/sparql-query', 'rq'],\n    ['application/sparql-results+xml', 'srx'],\n    ['application/srgs', 'gram'],\n    ['application/srgs+xml', 'grxml'],\n    ['application/sru+xml', 'sru'],\n    ['application/ssml+xml', 'ssml'],\n    ['application/step', ['step', 'stp']],\n    ['application/streamingmedia', 'ssm'],\n    ['application/tei+xml', 'tei'],\n    ['application/thraud+xml', 'tfi'],\n    ['application/timestamped-data', 'tsd'],\n    ['application/toolbook', 'tbk'],\n    ['application/vda', 'vda'],\n    ['application/vnd.3gpp.pic-bw-large', 'plb'],\n    ['application/vnd.3gpp.pic-bw-small', 'psb'],\n    ['application/vnd.3gpp.pic-bw-var', 'pvb'],\n    ['application/vnd.3gpp2.tcap', 'tcap'],\n    ['application/vnd.3m.post-it-notes', 'pwn'],\n    ['application/vnd.accpac.simply.aso', 'aso'],\n    ['application/vnd.accpac.simply.imp', 'imp'],\n    ['application/vnd.acucobol', 'acu'],\n    ['application/vnd.acucorp', 'atc'],\n    ['application/vnd.adobe.air-application-installer-package+zip', 'air'],\n    ['application/vnd.adobe.fxp', 'fxp'],\n    ['application/vnd.adobe.xdp+xml', 'xdp'],\n    ['application/vnd.adobe.xfdf', 'xfdf'],\n    ['application/vnd.ahead.space', 'ahead'],\n    ['application/vnd.airzip.filesecure.azf', 'azf'],\n    ['application/vnd.airzip.filesecure.azs', 'azs'],\n    ['application/vnd.amazon.ebook', 'azw'],\n    ['application/vnd.americandynamics.acc', 'acc'],\n    ['application/vnd.amiga.ami', 'ami'],\n    ['application/vnd.android.package-archive', 'apk'],\n    ['application/vnd.anser-web-certificate-issue-initiation', 'cii'],\n    ['application/vnd.anser-web-funds-transfer-initiation', 'fti'],\n    ['application/vnd.antix.game-component', 'atx'],\n    ['application/vnd.apple.installer+xml', 'mpkg'],\n    ['application/vnd.apple.mpegurl', 'm3u8'],\n    ['application/vnd.aristanetworks.swi', 'swi'],\n    ['application/vnd.audiograph', 'aep'],\n    ['application/vnd.blueice.multipass', 'mpm'],\n    ['application/vnd.bmi', 'bmi'],\n    ['application/vnd.businessobjects', 'rep'],\n    ['application/vnd.chemdraw+xml', 'cdxml'],\n    ['application/vnd.chipnuts.karaoke-mmd', 'mmd'],\n    ['application/vnd.cinderella', 'cdy'],\n    ['application/vnd.claymore', 'cla'],\n    ['application/vnd.cloanto.rp9', 'rp9'],\n    ['application/vnd.clonk.c4group', 'c4g'],\n    ['application/vnd.cluetrust.cartomobile-config', 'c11amc'],\n    ['application/vnd.cluetrust.cartomobile-config-pkg', 'c11amz'],\n    ['application/vnd.commonspace', 'csp'],\n    ['application/vnd.contact.cmsg', 'cdbcmsg'],\n    ['application/vnd.cosmocaller', 'cmc'],\n    ['application/vnd.crick.clicker', 'clkx'],\n    ['application/vnd.crick.clicker.keyboard', 'clkk'],\n    ['application/vnd.crick.clicker.palette', 'clkp'],\n    ['application/vnd.crick.clicker.template', 'clkt'],\n    ['application/vnd.crick.clicker.wordbank', 'clkw'],\n    ['application/vnd.criticaltools.wbs+xml', 'wbs'],\n    ['application/vnd.ctc-posml', 'pml'],\n    ['application/vnd.cups-ppd', 'ppd'],\n    ['application/vnd.curl.car', 'car'],\n    ['application/vnd.curl.pcurl', 'pcurl'],\n    ['application/vnd.data-vision.rdz', 'rdz'],\n    ['application/vnd.denovo.fcselayout-link', 'fe_launch'],\n    ['application/vnd.dna', 'dna'],\n    ['application/vnd.dolby.mlp', 'mlp'],\n    ['application/vnd.dpgraph', 'dpg'],\n    ['application/vnd.dreamfactory', 'dfac'],\n    ['application/vnd.dvb.ait', 'ait'],\n    ['application/vnd.dvb.service', 'svc'],\n    ['application/vnd.dynageo', 'geo'],\n    ['application/vnd.ecowin.chart', 'mag'],\n    ['application/vnd.enliven', 'nml'],\n    ['application/vnd.epson.esf', 'esf'],\n    ['application/vnd.epson.msf', 'msf'],\n    ['application/vnd.epson.quickanime', 'qam'],\n    ['application/vnd.epson.salt', 'slt'],\n    ['application/vnd.epson.ssf', 'ssf'],\n    ['application/vnd.eszigno3+xml', 'es3'],\n    ['application/vnd.ezpix-album', 'ez2'],\n    ['application/vnd.ezpix-package', 'ez3'],\n    ['application/vnd.fdf', 'fdf'],\n    ['application/vnd.fdsn.seed', 'seed'],\n    ['application/vnd.flographit', 'gph'],\n    ['application/vnd.fluxtime.clip', 'ftc'],\n    ['application/vnd.framemaker', 'fm'],\n    ['application/vnd.frogans.fnc', 'fnc'],\n    ['application/vnd.frogans.ltf', 'ltf'],\n    ['application/vnd.fsc.weblaunch', 'fsc'],\n    ['application/vnd.fujitsu.oasys', 'oas'],\n    ['application/vnd.fujitsu.oasys2', 'oa2'],\n    ['application/vnd.fujitsu.oasys3', 'oa3'],\n    ['application/vnd.fujitsu.oasysgp', 'fg5'],\n    ['application/vnd.fujitsu.oasysprs', 'bh2'],\n    ['application/vnd.fujixerox.ddd', 'ddd'],\n    ['application/vnd.fujixerox.docuworks', 'xdw'],\n    ['application/vnd.fujixerox.docuworks.binder', 'xbd'],\n    ['application/vnd.fuzzysheet', 'fzs'],\n    ['application/vnd.genomatix.tuxedo', 'txd'],\n    ['application/vnd.geogebra.file', 'ggb'],\n    ['application/vnd.geogebra.tool', 'ggt'],\n    ['application/vnd.geometry-explorer', 'gex'],\n    ['application/vnd.geonext', 'gxt'],\n    ['application/vnd.geoplan', 'g2w'],\n    ['application/vnd.geospace', 'g3w'],\n    ['application/vnd.gmx', 'gmx'],\n    ['application/vnd.google-earth.kml+xml', 'kml'],\n    ['application/vnd.google-earth.kmz', 'kmz'],\n    ['application/vnd.grafeq', 'gqf'],\n    ['application/vnd.groove-account', 'gac'],\n    ['application/vnd.groove-help', 'ghf'],\n    ['application/vnd.groove-identity-message', 'gim'],\n    ['application/vnd.groove-injector', 'grv'],\n    ['application/vnd.groove-tool-message', 'gtm'],\n    ['application/vnd.groove-tool-template', 'tpl'],\n    ['application/vnd.groove-vcard', 'vcg'],\n    ['application/vnd.hal+xml', 'hal'],\n    ['application/vnd.handheld-entertainment+xml', 'zmm'],\n    ['application/vnd.hbci', 'hbci'],\n    ['application/vnd.hhe.lesson-player', 'les'],\n    ['application/vnd.hp-hpgl', ['hgl', 'hpg', 'hpgl']],\n    ['application/vnd.hp-hpid', 'hpid'],\n    ['application/vnd.hp-hps', 'hps'],\n    ['application/vnd.hp-jlyt', 'jlt'],\n    ['application/vnd.hp-pcl', 'pcl'],\n    ['application/vnd.hp-pclxl', 'pclxl'],\n    ['application/vnd.hydrostatix.sof-data', 'sfd-hdstx'],\n    ['application/vnd.hzn-3d-crossword', 'x3d'],\n    ['application/vnd.ibm.minipay', 'mpy'],\n    ['application/vnd.ibm.modcap', 'afp'],\n    ['application/vnd.ibm.rights-management', 'irm'],\n    ['application/vnd.ibm.secure-container', 'sc'],\n    ['application/vnd.iccprofile', 'icc'],\n    ['application/vnd.igloader', 'igl'],\n    ['application/vnd.immervision-ivp', 'ivp'],\n    ['application/vnd.immervision-ivu', 'ivu'],\n    ['application/vnd.insors.igm', 'igm'],\n    ['application/vnd.intercon.formnet', 'xpw'],\n    ['application/vnd.intergeo', 'i2g'],\n    ['application/vnd.intu.qbo', 'qbo'],\n    ['application/vnd.intu.qfx', 'qfx'],\n    ['application/vnd.ipunplugged.rcprofile', 'rcprofile'],\n    ['application/vnd.irepository.package+xml', 'irp'],\n    ['application/vnd.is-xpr', 'xpr'],\n    ['application/vnd.isac.fcs', 'fcs'],\n    ['application/vnd.jam', 'jam'],\n    ['application/vnd.jcp.javame.midlet-rms', 'rms'],\n    ['application/vnd.jisp', 'jisp'],\n    ['application/vnd.joost.joda-archive', 'joda'],\n    ['application/vnd.kahootz', 'ktz'],\n    ['application/vnd.kde.karbon', 'karbon'],\n    ['application/vnd.kde.kchart', 'chrt'],\n    ['application/vnd.kde.kformula', 'kfo'],\n    ['application/vnd.kde.kivio', 'flw'],\n    ['application/vnd.kde.kontour', 'kon'],\n    ['application/vnd.kde.kpresenter', 'kpr'],\n    ['application/vnd.kde.kspread', 'ksp'],\n    ['application/vnd.kde.kword', 'kwd'],\n    ['application/vnd.kenameaapp', 'htke'],\n    ['application/vnd.kidspiration', 'kia'],\n    ['application/vnd.kinar', 'kne'],\n    ['application/vnd.koan', 'skp'],\n    ['application/vnd.kodak-descriptor', 'sse'],\n    ['application/vnd.las.las+xml', 'lasxml'],\n    ['application/vnd.llamagraphics.life-balance.desktop', 'lbd'],\n    ['application/vnd.llamagraphics.life-balance.exchange+xml', 'lbe'],\n    ['application/vnd.lotus-1-2-3', '123'],\n    ['application/vnd.lotus-approach', 'apr'],\n    ['application/vnd.lotus-freelance', 'pre'],\n    ['application/vnd.lotus-notes', 'nsf'],\n    ['application/vnd.lotus-organizer', 'org'],\n    ['application/vnd.lotus-screencam', 'scm'],\n    ['application/vnd.lotus-wordpro', 'lwp'],\n    ['application/vnd.macports.portpkg', 'portpkg'],\n    ['application/vnd.mcd', 'mcd'],\n    ['application/vnd.medcalcdata', 'mc1'],\n    ['application/vnd.mediastation.cdkey', 'cdkey'],\n    ['application/vnd.mfer', 'mwf'],\n    ['application/vnd.mfmp', 'mfm'],\n    ['application/vnd.micrografx.flo', 'flo'],\n    ['application/vnd.micrografx.igx', 'igx'],\n    ['application/vnd.mif', 'mif'],\n    ['application/vnd.mobius.daf', 'daf'],\n    ['application/vnd.mobius.dis', 'dis'],\n    ['application/vnd.mobius.mbk', 'mbk'],\n    ['application/vnd.mobius.mqy', 'mqy'],\n    ['application/vnd.mobius.msl', 'msl'],\n    ['application/vnd.mobius.plc', 'plc'],\n    ['application/vnd.mobius.txf', 'txf'],\n    ['application/vnd.mophun.application', 'mpn'],\n    ['application/vnd.mophun.certificate', 'mpc'],\n    ['application/vnd.mozilla.xul+xml', 'xul'],\n    ['application/vnd.ms-artgalry', 'cil'],\n    ['application/vnd.ms-cab-compressed', 'cab'],\n    ['application/vnd.ms-excel', ['xls', 'xla', 'xlc', 'xlm', 'xlt', 'xlw', 'xlb', 'xll']],\n    ['application/vnd.ms-excel.addin.macroenabled.12', 'xlam'],\n    ['application/vnd.ms-excel.sheet.binary.macroenabled.12', 'xlsb'],\n    ['application/vnd.ms-excel.sheet.macroenabled.12', 'xlsm'],\n    ['application/vnd.ms-excel.template.macroenabled.12', 'xltm'],\n    ['application/vnd.ms-fontobject', 'eot'],\n    ['application/vnd.ms-htmlhelp', 'chm'],\n    ['application/vnd.ms-ims', 'ims'],\n    ['application/vnd.ms-lrm', 'lrm'],\n    ['application/vnd.ms-officetheme', 'thmx'],\n    ['application/vnd.ms-outlook', 'msg'],\n    ['application/vnd.ms-pki.certstore', 'sst'],\n    ['application/vnd.ms-pki.pko', 'pko'],\n    ['application/vnd.ms-pki.seccat', 'cat'],\n    ['application/vnd.ms-pki.stl', 'stl'],\n    ['application/vnd.ms-pkicertstore', 'sst'],\n    ['application/vnd.ms-pkiseccat', 'cat'],\n    ['application/vnd.ms-pkistl', 'stl'],\n    ['application/vnd.ms-powerpoint', ['ppt', 'pot', 'pps', 'ppa', 'pwz']],\n    ['application/vnd.ms-powerpoint.addin.macroenabled.12', 'ppam'],\n    ['application/vnd.ms-powerpoint.presentation.macroenabled.12', 'pptm'],\n    ['application/vnd.ms-powerpoint.slide.macroenabled.12', 'sldm'],\n    ['application/vnd.ms-powerpoint.slideshow.macroenabled.12', 'ppsm'],\n    ['application/vnd.ms-powerpoint.template.macroenabled.12', 'potm'],\n    ['application/vnd.ms-project', 'mpp'],\n    ['application/vnd.ms-word.document.macroenabled.12', 'docm'],\n    ['application/vnd.ms-word.template.macroenabled.12', 'dotm'],\n    ['application/vnd.ms-works', ['wks', 'wcm', 'wdb', 'wps']],\n    ['application/vnd.ms-wpl', 'wpl'],\n    ['application/vnd.ms-xpsdocument', 'xps'],\n    ['application/vnd.mseq', 'mseq'],\n    ['application/vnd.musician', 'mus'],\n    ['application/vnd.muvee.style', 'msty'],\n    ['application/vnd.neurolanguage.nlu', 'nlu'],\n    ['application/vnd.noblenet-directory', 'nnd'],\n    ['application/vnd.noblenet-sealer', 'nns'],\n    ['application/vnd.noblenet-web', 'nnw'],\n    ['application/vnd.nokia.configuration-message', 'ncm'],\n    ['application/vnd.nokia.n-gage.data', 'ngdat'],\n    ['application/vnd.nokia.n-gage.symbian.install', 'n-gage'],\n    ['application/vnd.nokia.radio-preset', 'rpst'],\n    ['application/vnd.nokia.radio-presets', 'rpss'],\n    ['application/vnd.nokia.ringing-tone', 'rng'],\n    ['application/vnd.novadigm.edm', 'edm'],\n    ['application/vnd.novadigm.edx', 'edx'],\n    ['application/vnd.novadigm.ext', 'ext'],\n    ['application/vnd.oasis.opendocument.chart', 'odc'],\n    ['application/vnd.oasis.opendocument.chart-template', 'otc'],\n    ['application/vnd.oasis.opendocument.database', 'odb'],\n    ['application/vnd.oasis.opendocument.formula', 'odf'],\n    ['application/vnd.oasis.opendocument.formula-template', 'odft'],\n    ['application/vnd.oasis.opendocument.graphics', 'odg'],\n    ['application/vnd.oasis.opendocument.graphics-template', 'otg'],\n    ['application/vnd.oasis.opendocument.image', 'odi'],\n    ['application/vnd.oasis.opendocument.image-template', 'oti'],\n    ['application/vnd.oasis.opendocument.presentation', 'odp'],\n    ['application/vnd.oasis.opendocument.presentation-template', 'otp'],\n    ['application/vnd.oasis.opendocument.spreadsheet', 'ods'],\n    ['application/vnd.oasis.opendocument.spreadsheet-template', 'ots'],\n    ['application/vnd.oasis.opendocument.text', 'odt'],\n    ['application/vnd.oasis.opendocument.text-master', 'odm'],\n    ['application/vnd.oasis.opendocument.text-template', 'ott'],\n    ['application/vnd.oasis.opendocument.text-web', 'oth'],\n    ['application/vnd.olpc-sugar', 'xo'],\n    ['application/vnd.oma.dd2+xml', 'dd2'],\n    ['application/vnd.openofficeorg.extension', 'oxt'],\n    ['application/vnd.openxmlformats-officedocument.presentationml.presentation', 'pptx'],\n    ['application/vnd.openxmlformats-officedocument.presentationml.slide', 'sldx'],\n    ['application/vnd.openxmlformats-officedocument.presentationml.slideshow', 'ppsx'],\n    ['application/vnd.openxmlformats-officedocument.presentationml.template', 'potx'],\n    ['application/vnd.openxmlformats-officedocument.spreadsheetml.sheet', 'xlsx'],\n    ['application/vnd.openxmlformats-officedocument.spreadsheetml.template', 'xltx'],\n    ['application/vnd.openxmlformats-officedocument.wordprocessingml.document', 'docx'],\n    ['application/vnd.openxmlformats-officedocument.wordprocessingml.template', 'dotx'],\n    ['application/vnd.osgeo.mapguide.package', 'mgp'],\n    ['application/vnd.osgi.dp', 'dp'],\n    ['application/vnd.palm', 'pdb'],\n    ['application/vnd.pawaafile', 'paw'],\n    ['application/vnd.pg.format', 'str'],\n    ['application/vnd.pg.osasli', 'ei6'],\n    ['application/vnd.picsel', 'efif'],\n    ['application/vnd.pmi.widget', 'wg'],\n    ['application/vnd.pocketlearn', 'plf'],\n    ['application/vnd.powerbuilder6', 'pbd'],\n    ['application/vnd.previewsystems.box', 'box'],\n    ['application/vnd.proteus.magazine', 'mgz'],\n    ['application/vnd.publishare-delta-tree', 'qps'],\n    ['application/vnd.pvi.ptid1', 'ptid'],\n    ['application/vnd.quark.quarkxpress', 'qxd'],\n    ['application/vnd.realvnc.bed', 'bed'],\n    ['application/vnd.recordare.musicxml', 'mxl'],\n    ['application/vnd.recordare.musicxml+xml', 'musicxml'],\n    ['application/vnd.rig.cryptonote', 'cryptonote'],\n    ['application/vnd.rim.cod', 'cod'],\n    ['application/vnd.rn-realmedia', 'rm'],\n    ['application/vnd.rn-realplayer', 'rnx'],\n    ['application/vnd.route66.link66+xml', 'link66'],\n    ['application/vnd.sailingtracker.track', 'st'],\n    ['application/vnd.seemail', 'see'],\n    ['application/vnd.sema', 'sema'],\n    ['application/vnd.semd', 'semd'],\n    ['application/vnd.semf', 'semf'],\n    ['application/vnd.shana.informed.formdata', 'ifm'],\n    ['application/vnd.shana.informed.formtemplate', 'itp'],\n    ['application/vnd.shana.informed.interchange', 'iif'],\n    ['application/vnd.shana.informed.package', 'ipk'],\n    ['application/vnd.simtech-mindmapper', 'twd'],\n    ['application/vnd.smaf', 'mmf'],\n    ['application/vnd.smart.teacher', 'teacher'],\n    ['application/vnd.solent.sdkm+xml', 'sdkm'],\n    ['application/vnd.spotfire.dxp', 'dxp'],\n    ['application/vnd.spotfire.sfs', 'sfs'],\n    ['application/vnd.stardivision.calc', 'sdc'],\n    ['application/vnd.stardivision.draw', 'sda'],\n    ['application/vnd.stardivision.impress', 'sdd'],\n    ['application/vnd.stardivision.math', 'smf'],\n    ['application/vnd.stardivision.writer', 'sdw'],\n    ['application/vnd.stardivision.writer-global', 'sgl'],\n    ['application/vnd.stepmania.stepchart', 'sm'],\n    ['application/vnd.sun.xml.calc', 'sxc'],\n    ['application/vnd.sun.xml.calc.template', 'stc'],\n    ['application/vnd.sun.xml.draw', 'sxd'],\n    ['application/vnd.sun.xml.draw.template', 'std'],\n    ['application/vnd.sun.xml.impress', 'sxi'],\n    ['application/vnd.sun.xml.impress.template', 'sti'],\n    ['application/vnd.sun.xml.math', 'sxm'],\n    ['application/vnd.sun.xml.writer', 'sxw'],\n    ['application/vnd.sun.xml.writer.global', 'sxg'],\n    ['application/vnd.sun.xml.writer.template', 'stw'],\n    ['application/vnd.sus-calendar', 'sus'],\n    ['application/vnd.svd', 'svd'],\n    ['application/vnd.symbian.install', 'sis'],\n    ['application/vnd.syncml+xml', 'xsm'],\n    ['application/vnd.syncml.dm+wbxml', 'bdm'],\n    ['application/vnd.syncml.dm+xml', 'xdm'],\n    ['application/vnd.tao.intent-module-archive', 'tao'],\n    ['application/vnd.tmobile-livetv', 'tmo'],\n    ['application/vnd.trid.tpt', 'tpt'],\n    ['application/vnd.triscape.mxs', 'mxs'],\n    ['application/vnd.trueapp', 'tra'],\n    ['application/vnd.ufdl', 'ufd'],\n    ['application/vnd.uiq.theme', 'utz'],\n    ['application/vnd.umajin', 'umj'],\n    ['application/vnd.unity', 'unityweb'],\n    ['application/vnd.uoml+xml', 'uoml'],\n    ['application/vnd.vcx', 'vcx'],\n    ['application/vnd.visio', 'vsd'],\n    ['application/vnd.visionary', 'vis'],\n    ['application/vnd.vsf', 'vsf'],\n    ['application/vnd.wap.wbxml', 'wbxml'],\n    ['application/vnd.wap.wmlc', 'wmlc'],\n    ['application/vnd.wap.wmlscriptc', 'wmlsc'],\n    ['application/vnd.webturbo', 'wtb'],\n    ['application/vnd.wolfram.player', 'nbp'],\n    ['application/vnd.wordperfect', 'wpd'],\n    ['application/vnd.wqd', 'wqd'],\n    ['application/vnd.wt.stf', 'stf'],\n    ['application/vnd.xara', ['web', 'xar']],\n    ['application/vnd.xfdl', 'xfdl'],\n    ['application/vnd.yamaha.hv-dic', 'hvd'],\n    ['application/vnd.yamaha.hv-script', 'hvs'],\n    ['application/vnd.yamaha.hv-voice', 'hvp'],\n    ['application/vnd.yamaha.openscoreformat', 'osf'],\n    ['application/vnd.yamaha.openscoreformat.osfpvg+xml', 'osfpvg'],\n    ['application/vnd.yamaha.smaf-audio', 'saf'],\n    ['application/vnd.yamaha.smaf-phrase', 'spf'],\n    ['application/vnd.yellowriver-custom-menu', 'cmp'],\n    ['application/vnd.zul', 'zir'],\n    ['application/vnd.zzazz.deck+xml', 'zaz'],\n    ['application/vocaltec-media-desc', 'vmd'],\n    ['application/vocaltec-media-file', 'vmf'],\n    ['application/voicexml+xml', 'vxml'],\n    ['application/widget', 'wgt'],\n    ['application/winhlp', 'hlp'],\n    ['application/wordperfect', ['wp', 'wp5', 'wp6', 'wpd']],\n    ['application/wordperfect6.0', ['w60', 'wp5']],\n    ['application/wordperfect6.1', 'w61'],\n    ['application/wsdl+xml', 'wsdl'],\n    ['application/wspolicy+xml', 'wspolicy'],\n    ['application/x-123', 'wk1'],\n    ['application/x-7z-compressed', '7z'],\n    ['application/x-abiword', 'abw'],\n    ['application/x-ace-compressed', 'ace'],\n    ['application/x-aim', 'aim'],\n    ['application/x-authorware-bin', 'aab'],\n    ['application/x-authorware-map', 'aam'],\n    ['application/x-authorware-seg', 'aas'],\n    ['application/x-bcpio', 'bcpio'],\n    ['application/x-binary', 'bin'],\n    ['application/x-binhex40', 'hqx'],\n    ['application/x-bittorrent', 'torrent'],\n    ['application/x-bsh', ['bsh', 'sh', 'shar']],\n    ['application/x-bytecode.elisp', 'elc'],\n    ['application/x-bytecode.python', 'pyc'],\n    ['application/x-bzip', 'bz'],\n    ['application/x-bzip2', ['boz', 'bz2']],\n    ['application/x-cdf', 'cdf'],\n    ['application/x-cdlink', 'vcd'],\n    ['application/x-chat', ['cha', 'chat']],\n    ['application/x-chess-pgn', 'pgn'],\n    ['application/x-cmu-raster', 'ras'],\n    ['application/x-cocoa', 'cco'],\n    ['application/x-compactpro', 'cpt'],\n    ['application/x-compress', 'z'],\n    ['application/x-compressed', ['tgz', 'gz', 'z', 'zip']],\n    ['application/x-conference', 'nsc'],\n    ['application/x-cpio', 'cpio'],\n    ['application/x-cpt', 'cpt'],\n    ['application/x-csh', 'csh'],\n    ['application/x-debian-package', 'deb'],\n    ['application/x-deepv', 'deepv'],\n    ['application/x-director', ['dir', 'dcr', 'dxr']],\n    ['application/x-doom', 'wad'],\n    ['application/x-dtbncx+xml', 'ncx'],\n    ['application/x-dtbook+xml', 'dtb'],\n    ['application/x-dtbresource+xml', 'res'],\n    ['application/x-dvi', 'dvi'],\n    ['application/x-elc', 'elc'],\n    ['application/x-envoy', ['env', 'evy']],\n    ['application/x-esrehber', 'es'],\n    ['application/x-excel', ['xls', 'xla', 'xlb', 'xlc', 'xld', 'xlk', 'xll', 'xlm', 'xlt', 'xlv', 'xlw']],\n    ['application/x-font-bdf', 'bdf'],\n    ['application/x-font-ghostscript', 'gsf'],\n    ['application/x-font-linux-psf', 'psf'],\n    ['application/x-font-otf', 'otf'],\n    ['application/x-font-pcf', 'pcf'],\n    ['application/x-font-snf', 'snf'],\n    ['application/x-font-ttf', 'ttf'],\n    ['application/x-font-type1', 'pfa'],\n    ['application/x-font-woff', 'woff'],\n    ['application/x-frame', 'mif'],\n    ['application/x-freelance', 'pre'],\n    ['application/x-futuresplash', 'spl'],\n    ['application/x-gnumeric', 'gnumeric'],\n    ['application/x-gsp', 'gsp'],\n    ['application/x-gss', 'gss'],\n    ['application/x-gtar', 'gtar'],\n    ['application/x-gzip', ['gz', 'gzip']],\n    ['application/x-hdf', 'hdf'],\n    ['application/x-helpfile', ['help', 'hlp']],\n    ['application/x-httpd-imap', 'imap'],\n    ['application/x-ima', 'ima'],\n    ['application/x-internet-signup', ['ins', 'isp']],\n    ['application/x-internett-signup', 'ins'],\n    ['application/x-inventor', 'iv'],\n    ['application/x-ip2', 'ip'],\n    ['application/x-iphone', 'iii'],\n    ['application/x-java-class', 'class'],\n    ['application/x-java-commerce', 'jcm'],\n    ['application/x-java-jnlp-file', 'jnlp'],\n    ['application/x-javascript', 'js'],\n    ['application/x-koan', ['skd', 'skm', 'skp', 'skt']],\n    ['application/x-ksh', 'ksh'],\n    ['application/x-latex', ['latex', 'ltx']],\n    ['application/x-lha', 'lha'],\n    ['application/x-lisp', 'lsp'],\n    ['application/x-livescreen', 'ivy'],\n    ['application/x-lotus', 'wq1'],\n    ['application/x-lotusscreencam', 'scm'],\n    ['application/x-lzh', 'lzh'],\n    ['application/x-lzx', 'lzx'],\n    ['application/x-mac-binhex40', 'hqx'],\n    ['application/x-macbinary', 'bin'],\n    ['application/x-magic-cap-package-1.0', 'mc$'],\n    ['application/x-mathcad', 'mcd'],\n    ['application/x-meme', 'mm'],\n    ['application/x-midi', ['mid', 'midi']],\n    ['application/x-mif', 'mif'],\n    ['application/x-mix-transfer', 'nix'],\n    ['application/x-mobipocket-ebook', 'prc'],\n    ['application/x-mplayer2', 'asx'],\n    ['application/x-ms-application', 'application'],\n    ['application/x-ms-wmd', 'wmd'],\n    ['application/x-ms-wmz', 'wmz'],\n    ['application/x-ms-xbap', 'xbap'],\n    ['application/x-msaccess', 'mdb'],\n    ['application/x-msbinder', 'obd'],\n    ['application/x-mscardfile', 'crd'],\n    ['application/x-msclip', 'clp'],\n    ['application/x-msdownload', ['exe', 'dll']],\n    ['application/x-msexcel', ['xls', 'xla', 'xlw']],\n    ['application/x-msmediaview', ['mvb', 'm13', 'm14']],\n    ['application/x-msmetafile', 'wmf'],\n    ['application/x-msmoney', 'mny'],\n    ['application/x-mspowerpoint', 'ppt'],\n    ['application/x-mspublisher', 'pub'],\n    ['application/x-msschedule', 'scd'],\n    ['application/x-msterminal', 'trm'],\n    ['application/x-mswrite', 'wri'],\n    ['application/x-navi-animation', 'ani'],\n    ['application/x-navidoc', 'nvd'],\n    ['application/x-navimap', 'map'],\n    ['application/x-navistyle', 'stl'],\n    ['application/x-netcdf', ['cdf', 'nc']],\n    ['application/x-newton-compatible-pkg', 'pkg'],\n    ['application/x-nokia-9000-communicator-add-on-software', 'aos'],\n    ['application/x-omc', 'omc'],\n    ['application/x-omcdatamaker', 'omcd'],\n    ['application/x-omcregerator', 'omcr'],\n    ['application/x-pagemaker', ['pm4', 'pm5']],\n    ['application/x-pcl', 'pcl'],\n    ['application/x-perfmon', ['pma', 'pmc', 'pml', 'pmr', 'pmw']],\n    ['application/x-pixclscript', 'plx'],\n    ['application/x-pkcs10', 'p10'],\n    ['application/x-pkcs12', ['p12', 'pfx']],\n    ['application/x-pkcs7-certificates', ['p7b', 'spc']],\n    ['application/x-pkcs7-certreqresp', 'p7r'],\n    ['application/x-pkcs7-mime', ['p7m', 'p7c']],\n    ['application/x-pkcs7-signature', ['p7s', 'p7a']],\n    ['application/x-pointplus', 'css'],\n    ['application/x-portable-anymap', 'pnm'],\n    ['application/x-project', ['mpc', 'mpt', 'mpv', 'mpx']],\n    ['application/x-qpro', 'wb1'],\n    ['application/x-rar-compressed', 'rar'],\n    ['application/x-rtf', 'rtf'],\n    ['application/x-sdp', 'sdp'],\n    ['application/x-sea', 'sea'],\n    ['application/x-seelogo', 'sl'],\n    ['application/x-sh', 'sh'],\n    ['application/x-shar', ['shar', 'sh']],\n    ['application/x-shockwave-flash', 'swf'],\n    ['application/x-silverlight-app', 'xap'],\n    ['application/x-sit', 'sit'],\n    ['application/x-sprite', ['spr', 'sprite']],\n    ['application/x-stuffit', 'sit'],\n    ['application/x-stuffitx', 'sitx'],\n    ['application/x-sv4cpio', 'sv4cpio'],\n    ['application/x-sv4crc', 'sv4crc'],\n    ['application/x-tar', 'tar'],\n    ['application/x-tbook', ['sbk', 'tbk']],\n    ['application/x-tcl', 'tcl'],\n    ['application/x-tex', 'tex'],\n    ['application/x-tex-tfm', 'tfm'],\n    ['application/x-texinfo', ['texi', 'texinfo']],\n    ['application/x-troff', ['roff', 't', 'tr']],\n    ['application/x-troff-man', 'man'],\n    ['application/x-troff-me', 'me'],\n    ['application/x-troff-ms', 'ms'],\n    ['application/x-troff-msvideo', 'avi'],\n    ['application/x-ustar', 'ustar'],\n    ['application/x-visio', ['vsd', 'vst', 'vsw']],\n    ['application/x-vnd.audioexplosion.mzz', 'mzz'],\n    ['application/x-vnd.ls-xpix', 'xpix'],\n    ['application/x-vrml', 'vrml'],\n    ['application/x-wais-source', ['src', 'wsrc']],\n    ['application/x-winhelp', 'hlp'],\n    ['application/x-wintalk', 'wtk'],\n    ['application/x-world', ['wrl', 'svr']],\n    ['application/x-wpwin', 'wpd'],\n    ['application/x-wri', 'wri'],\n    ['application/x-x509-ca-cert', ['cer', 'crt', 'der']],\n    ['application/x-x509-user-cert', 'crt'],\n    ['application/x-xfig', 'fig'],\n    ['application/x-xpinstall', 'xpi'],\n    ['application/x-zip-compressed', 'zip'],\n    ['application/xcap-diff+xml', 'xdf'],\n    ['application/xenc+xml', 'xenc'],\n    ['application/xhtml+xml', 'xhtml'],\n    ['application/xml', 'xml'],\n    ['application/xml-dtd', 'dtd'],\n    ['application/xop+xml', 'xop'],\n    ['application/xslt+xml', 'xslt'],\n    ['application/xspf+xml', 'xspf'],\n    ['application/xv+xml', 'mxml'],\n    ['application/yang', 'yang'],\n    ['application/yin+xml', 'yin'],\n    ['application/ynd.ms-pkipko', 'pko'],\n    ['application/zip', 'zip'],\n    ['audio/adpcm', 'adp'],\n    ['audio/aiff', ['aiff', 'aif', 'aifc']],\n    ['audio/basic', ['snd', 'au']],\n    ['audio/it', 'it'],\n    ['audio/make', ['funk', 'my', 'pfunk']],\n    ['audio/make.my.funk', 'pfunk'],\n    ['audio/mid', ['mid', 'rmi']],\n    ['audio/midi', ['midi', 'kar', 'mid']],\n    ['audio/mod', 'mod'],\n    ['audio/mp4', 'mp4a'],\n    ['audio/mpeg', ['mpga', 'mp3', 'm2a', 'mp2', 'mpa', 'mpg']],\n    ['audio/mpeg3', 'mp3'],\n    ['audio/nspaudio', ['la', 'lma']],\n    ['audio/ogg', 'oga'],\n    ['audio/s3m', 's3m'],\n    ['audio/tsp-audio', 'tsi'],\n    ['audio/tsplayer', 'tsp'],\n    ['audio/vnd.dece.audio', 'uva'],\n    ['audio/vnd.digital-winds', 'eol'],\n    ['audio/vnd.dra', 'dra'],\n    ['audio/vnd.dts', 'dts'],\n    ['audio/vnd.dts.hd', 'dtshd'],\n    ['audio/vnd.lucent.voice', 'lvp'],\n    ['audio/vnd.ms-playready.media.pya', 'pya'],\n    ['audio/vnd.nuera.ecelp4800', 'ecelp4800'],\n    ['audio/vnd.nuera.ecelp7470', 'ecelp7470'],\n    ['audio/vnd.nuera.ecelp9600', 'ecelp9600'],\n    ['audio/vnd.qcelp', 'qcp'],\n    ['audio/vnd.rip', 'rip'],\n    ['audio/voc', 'voc'],\n    ['audio/voxware', 'vox'],\n    ['audio/wav', 'wav'],\n    ['audio/webm', 'weba'],\n    ['audio/x-aac', 'aac'],\n    ['audio/x-adpcm', 'snd'],\n    ['audio/x-aiff', ['aiff', 'aif', 'aifc']],\n    ['audio/x-au', 'au'],\n    ['audio/x-gsm', ['gsd', 'gsm']],\n    ['audio/x-jam', 'jam'],\n    ['audio/x-liveaudio', 'lam'],\n    ['audio/x-mid', ['mid', 'midi']],\n    ['audio/x-midi', ['midi', 'mid']],\n    ['audio/x-mod', 'mod'],\n    ['audio/x-mpeg', 'mp2'],\n    ['audio/x-mpeg-3', 'mp3'],\n    ['audio/x-mpegurl', 'm3u'],\n    ['audio/x-mpequrl', 'm3u'],\n    ['audio/x-ms-wax', 'wax'],\n    ['audio/x-ms-wma', 'wma'],\n    ['audio/x-nspaudio', ['la', 'lma']],\n    ['audio/x-pn-realaudio', ['ra', 'ram', 'rm', 'rmm', 'rmp']],\n    ['audio/x-pn-realaudio-plugin', ['ra', 'rmp', 'rpm']],\n    ['audio/x-psid', 'sid'],\n    ['audio/x-realaudio', 'ra'],\n    ['audio/x-twinvq', 'vqf'],\n    ['audio/x-twinvq-plugin', ['vqe', 'vql']],\n    ['audio/x-vnd.audioexplosion.mjuicemediafile', 'mjf'],\n    ['audio/x-voc', 'voc'],\n    ['audio/x-wav', 'wav'],\n    ['audio/xm', 'xm'],\n    ['chemical/x-cdx', 'cdx'],\n    ['chemical/x-cif', 'cif'],\n    ['chemical/x-cmdf', 'cmdf'],\n    ['chemical/x-cml', 'cml'],\n    ['chemical/x-csml', 'csml'],\n    ['chemical/x-pdb', ['pdb', 'xyz']],\n    ['chemical/x-xyz', 'xyz'],\n    ['drawing/x-dwf', 'dwf'],\n    ['i-world/i-vrml', 'ivr'],\n    ['image/bmp', ['bmp', 'bm']],\n    ['image/cgm', 'cgm'],\n    ['image/cis-cod', 'cod'],\n    ['image/cmu-raster', ['ras', 'rast']],\n    ['image/fif', 'fif'],\n    ['image/florian', ['flo', 'turbot']],\n    ['image/g3fax', 'g3'],\n    ['image/gif', 'gif'],\n    ['image/ief', ['ief', 'iefs']],\n    ['image/jpeg', ['jpeg', 'jpe', 'jpg', 'jfif', 'jfif-tbnl']],\n    ['image/jutvision', 'jut'],\n    ['image/ktx', 'ktx'],\n    ['image/naplps', ['nap', 'naplps']],\n    ['image/pict', ['pic', 'pict']],\n    ['image/pipeg', 'jfif'],\n    ['image/pjpeg', ['jfif', 'jpe', 'jpeg', 'jpg']],\n    ['image/png', ['png', 'x-png']],\n    ['image/prs.btif', 'btif'],\n    ['image/svg+xml', 'svg'],\n    ['image/tiff', ['tif', 'tiff']],\n    ['image/vasa', 'mcf'],\n    ['image/vnd.adobe.photoshop', 'psd'],\n    ['image/vnd.dece.graphic', 'uvi'],\n    ['image/vnd.djvu', 'djvu'],\n    ['image/vnd.dvb.subtitle', 'sub'],\n    ['image/vnd.dwg', ['dwg', 'dxf', 'svf']],\n    ['image/vnd.dxf', 'dxf'],\n    ['image/vnd.fastbidsheet', 'fbs'],\n    ['image/vnd.fpx', 'fpx'],\n    ['image/vnd.fst', 'fst'],\n    ['image/vnd.fujixerox.edmics-mmr', 'mmr'],\n    ['image/vnd.fujixerox.edmics-rlc', 'rlc'],\n    ['image/vnd.ms-modi', 'mdi'],\n    ['image/vnd.net-fpx', ['fpx', 'npx']],\n    ['image/vnd.rn-realflash', 'rf'],\n    ['image/vnd.rn-realpix', 'rp'],\n    ['image/vnd.wap.wbmp', 'wbmp'],\n    ['image/vnd.xiff', 'xif'],\n    ['image/webp', 'webp'],\n    ['image/x-cmu-raster', 'ras'],\n    ['image/x-cmx', 'cmx'],\n    ['image/x-dwg', ['dwg', 'dxf', 'svf']],\n    ['image/x-freehand', 'fh'],\n    ['image/x-icon', 'ico'],\n    ['image/x-jg', 'art'],\n    ['image/x-jps', 'jps'],\n    ['image/x-niff', ['niff', 'nif']],\n    ['image/x-pcx', 'pcx'],\n    ['image/x-pict', ['pct', 'pic']],\n    ['image/x-portable-anymap', 'pnm'],\n    ['image/x-portable-bitmap', 'pbm'],\n    ['image/x-portable-graymap', 'pgm'],\n    ['image/x-portable-greymap', 'pgm'],\n    ['image/x-portable-pixmap', 'ppm'],\n    ['image/x-quicktime', ['qif', 'qti', 'qtif']],\n    ['image/x-rgb', 'rgb'],\n    ['image/x-tiff', ['tif', 'tiff']],\n    ['image/x-windows-bmp', 'bmp'],\n    ['image/x-xbitmap', 'xbm'],\n    ['image/x-xbm', 'xbm'],\n    ['image/x-xpixmap', ['xpm', 'pm']],\n    ['image/x-xwd', 'xwd'],\n    ['image/x-xwindowdump', 'xwd'],\n    ['image/xbm', 'xbm'],\n    ['image/xpm', 'xpm'],\n    ['message/rfc822', ['eml', 'mht', 'mhtml', 'nws', 'mime']],\n    ['model/iges', ['iges', 'igs']],\n    ['model/mesh', 'msh'],\n    ['model/vnd.collada+xml', 'dae'],\n    ['model/vnd.dwf', 'dwf'],\n    ['model/vnd.gdl', 'gdl'],\n    ['model/vnd.gtw', 'gtw'],\n    ['model/vnd.mts', 'mts'],\n    ['model/vnd.vtu', 'vtu'],\n    ['model/vrml', ['vrml', 'wrl', 'wrz']],\n    ['model/x-pov', 'pov'],\n    ['multipart/x-gzip', 'gzip'],\n    ['multipart/x-ustar', 'ustar'],\n    ['multipart/x-zip', 'zip'],\n    ['music/crescendo', ['mid', 'midi']],\n    ['music/x-karaoke', 'kar'],\n    ['paleovu/x-pv', 'pvu'],\n    ['text/asp', 'asp'],\n    ['text/calendar', 'ics'],\n    ['text/css', 'css'],\n    ['text/csv', 'csv'],\n    ['text/ecmascript', 'js'],\n    ['text/h323', '323'],\n    ['text/html', ['html', 'htm', 'stm', 'acgi', 'htmls', 'htx', 'shtml']],\n    ['text/iuls', 'uls'],\n    ['text/javascript', 'js'],\n    ['text/mcf', 'mcf'],\n    ['text/n3', 'n3'],\n    ['text/pascal', 'pas'],\n    [\n        'text/plain',\n        [\n            'txt',\n            'bas',\n            'c',\n            'h',\n            'c++',\n            'cc',\n            'com',\n            'conf',\n            'cxx',\n            'def',\n            'f',\n            'f90',\n            'for',\n            'g',\n            'hh',\n            'idc',\n            'jav',\n            'java',\n            'list',\n            'log',\n            'lst',\n            'm',\n            'mar',\n            'pl',\n            'sdml',\n            'text'\n        ]\n    ],\n    ['text/plain-bas', 'par'],\n    ['text/prs.lines.tag', 'dsc'],\n    ['text/richtext', ['rtx', 'rt', 'rtf']],\n    ['text/scriplet', 'wsc'],\n    ['text/scriptlet', 'sct'],\n    ['text/sgml', ['sgm', 'sgml']],\n    ['text/tab-separated-values', 'tsv'],\n    ['text/troff', 't'],\n    ['text/turtle', 'ttl'],\n    ['text/uri-list', ['uni', 'unis', 'uri', 'uris']],\n    ['text/vnd.abc', 'abc'],\n    ['text/vnd.curl', 'curl'],\n    ['text/vnd.curl.dcurl', 'dcurl'],\n    ['text/vnd.curl.mcurl', 'mcurl'],\n    ['text/vnd.curl.scurl', 'scurl'],\n    ['text/vnd.fly', 'fly'],\n    ['text/vnd.fmi.flexstor', 'flx'],\n    ['text/vnd.graphviz', 'gv'],\n    ['text/vnd.in3d.3dml', '3dml'],\n    ['text/vnd.in3d.spot', 'spot'],\n    ['text/vnd.rn-realtext', 'rt'],\n    ['text/vnd.sun.j2me.app-descriptor', 'jad'],\n    ['text/vnd.wap.wml', 'wml'],\n    ['text/vnd.wap.wmlscript', 'wmls'],\n    ['text/webviewhtml', 'htt'],\n    ['text/x-asm', ['asm', 's']],\n    ['text/x-audiosoft-intra', 'aip'],\n    ['text/x-c', ['c', 'cc', 'cpp']],\n    ['text/x-component', 'htc'],\n    ['text/x-fortran', ['for', 'f', 'f77', 'f90']],\n    ['text/x-h', ['h', 'hh']],\n    ['text/x-java-source', ['java', 'jav']],\n    ['text/x-java-source,java', 'java'],\n    ['text/x-la-asf', 'lsx'],\n    ['text/x-m', 'm'],\n    ['text/x-pascal', 'p'],\n    ['text/x-script', 'hlb'],\n    ['text/x-script.csh', 'csh'],\n    ['text/x-script.elisp', 'el'],\n    ['text/x-script.guile', 'scm'],\n    ['text/x-script.ksh', 'ksh'],\n    ['text/x-script.lisp', 'lsp'],\n    ['text/x-script.perl', 'pl'],\n    ['text/x-script.perl-module', 'pm'],\n    ['text/x-script.phyton', 'py'],\n    ['text/x-script.rexx', 'rexx'],\n    ['text/x-script.scheme', 'scm'],\n    ['text/x-script.sh', 'sh'],\n    ['text/x-script.tcl', 'tcl'],\n    ['text/x-script.tcsh', 'tcsh'],\n    ['text/x-script.zsh', 'zsh'],\n    ['text/x-server-parsed-html', ['shtml', 'ssi']],\n    ['text/x-setext', 'etx'],\n    ['text/x-sgml', ['sgm', 'sgml']],\n    ['text/x-speech', ['spc', 'talk']],\n    ['text/x-uil', 'uil'],\n    ['text/x-uuencode', ['uu', 'uue']],\n    ['text/x-vcalendar', 'vcs'],\n    ['text/x-vcard', 'vcf'],\n    ['text/xml', 'xml'],\n    ['video/3gpp', '3gp'],\n    ['video/3gpp2', '3g2'],\n    ['video/animaflex', 'afl'],\n    ['video/avi', 'avi'],\n    ['video/avs-video', 'avs'],\n    ['video/dl', 'dl'],\n    ['video/fli', 'fli'],\n    ['video/gl', 'gl'],\n    ['video/h261', 'h261'],\n    ['video/h263', 'h263'],\n    ['video/h264', 'h264'],\n    ['video/jpeg', 'jpgv'],\n    ['video/jpm', 'jpm'],\n    ['video/mj2', 'mj2'],\n    ['video/mp4', 'mp4'],\n    ['video/mpeg', ['mpeg', 'mp2', 'mpa', 'mpe', 'mpg', 'mpv2', 'm1v', 'm2v', 'mp3']],\n    ['video/msvideo', 'avi'],\n    ['video/ogg', 'ogv'],\n    ['video/quicktime', ['mov', 'qt', 'moov']],\n    ['video/vdo', 'vdo'],\n    ['video/vivo', ['viv', 'vivo']],\n    ['video/vnd.dece.hd', 'uvh'],\n    ['video/vnd.dece.mobile', 'uvm'],\n    ['video/vnd.dece.pd', 'uvp'],\n    ['video/vnd.dece.sd', 'uvs'],\n    ['video/vnd.dece.video', 'uvv'],\n    ['video/vnd.fvt', 'fvt'],\n    ['video/vnd.mpegurl', 'mxu'],\n    ['video/vnd.ms-playready.media.pyv', 'pyv'],\n    ['video/vnd.rn-realvideo', 'rv'],\n    ['video/vnd.uvvu.mp4', 'uvu'],\n    ['video/vnd.vivo', ['viv', 'vivo']],\n    ['video/vosaic', 'vos'],\n    ['video/webm', 'webm'],\n    ['video/x-amt-demorun', 'xdr'],\n    ['video/x-amt-showrun', 'xsr'],\n    ['video/x-atomic3d-feature', 'fmf'],\n    ['video/x-dl', 'dl'],\n    ['video/x-dv', ['dif', 'dv']],\n    ['video/x-f4v', 'f4v'],\n    ['video/x-fli', 'fli'],\n    ['video/x-flv', 'flv'],\n    ['video/x-gl', 'gl'],\n    ['video/x-isvideo', 'isu'],\n    ['video/x-la-asf', ['lsf', 'lsx']],\n    ['video/x-m4v', 'm4v'],\n    ['video/x-motion-jpeg', 'mjpg'],\n    ['video/x-mpeg', ['mp3', 'mp2']],\n    ['video/x-mpeq2a', 'mp2'],\n    ['video/x-ms-asf', ['asf', 'asr', 'asx']],\n    ['video/x-ms-asf-plugin', 'asx'],\n    ['video/x-ms-wm', 'wm'],\n    ['video/x-ms-wmv', 'wmv'],\n    ['video/x-ms-wmx', 'wmx'],\n    ['video/x-ms-wvx', 'wvx'],\n    ['video/x-msvideo', 'avi'],\n    ['video/x-qtc', 'qtc'],\n    ['video/x-scm', 'scm'],\n    ['video/x-sgi-movie', ['movie', 'mv']],\n    ['windows/metafile', 'wmf'],\n    ['www/mime', 'mime'],\n    ['x-conference/x-cooltalk', 'ice'],\n    ['x-music/x-midi', ['mid', 'midi']],\n    ['x-world/x-3dmf', ['3dm', '3dmf', 'qd3', 'qd3d']],\n    ['x-world/x-svr', 'svr'],\n    ['x-world/x-vrml', ['flr', 'vrml', 'wrl', 'wrz', 'xaf', 'xof']],\n    ['x-world/x-vrt', 'vrt'],\n    ['xgl/drawing', 'xgz'],\n    ['xgl/movie', 'xmz']\n]);\nconst extensions = new Map([\n    ['123', 'application/vnd.lotus-1-2-3'],\n    ['323', 'text/h323'],\n    ['*', 'application/octet-stream'],\n    ['3dm', 'x-world/x-3dmf'],\n    ['3dmf', 'x-world/x-3dmf'],\n    ['3dml', 'text/vnd.in3d.3dml'],\n    ['3g2', 'video/3gpp2'],\n    ['3gp', 'video/3gpp'],\n    ['7z', 'application/x-7z-compressed'],\n    ['a', 'application/octet-stream'],\n    ['aab', 'application/x-authorware-bin'],\n    ['aac', 'audio/x-aac'],\n    ['aam', 'application/x-authorware-map'],\n    ['aas', 'application/x-authorware-seg'],\n    ['abc', 'text/vnd.abc'],\n    ['abw', 'application/x-abiword'],\n    ['ac', 'application/pkix-attr-cert'],\n    ['acc', 'application/vnd.americandynamics.acc'],\n    ['ace', 'application/x-ace-compressed'],\n    ['acgi', 'text/html'],\n    ['acu', 'application/vnd.acucobol'],\n    ['acx', 'application/internet-property-stream'],\n    ['adp', 'audio/adpcm'],\n    ['aep', 'application/vnd.audiograph'],\n    ['afl', 'video/animaflex'],\n    ['afp', 'application/vnd.ibm.modcap'],\n    ['ahead', 'application/vnd.ahead.space'],\n    ['ai', 'application/postscript'],\n    ['aif', ['audio/aiff', 'audio/x-aiff']],\n    ['aifc', ['audio/aiff', 'audio/x-aiff']],\n    ['aiff', ['audio/aiff', 'audio/x-aiff']],\n    ['aim', 'application/x-aim'],\n    ['aip', 'text/x-audiosoft-intra'],\n    ['air', 'application/vnd.adobe.air-application-installer-package+zip'],\n    ['ait', 'application/vnd.dvb.ait'],\n    ['ami', 'application/vnd.amiga.ami'],\n    ['ani', 'application/x-navi-animation'],\n    ['aos', 'application/x-nokia-9000-communicator-add-on-software'],\n    ['apk', 'application/vnd.android.package-archive'],\n    ['application', 'application/x-ms-application'],\n    ['apr', 'application/vnd.lotus-approach'],\n    ['aps', 'application/mime'],\n    ['arc', 'application/octet-stream'],\n    ['arj', ['application/arj', 'application/octet-stream']],\n    ['art', 'image/x-jg'],\n    ['asf', 'video/x-ms-asf'],\n    ['asm', 'text/x-asm'],\n    ['aso', 'application/vnd.accpac.simply.aso'],\n    ['asp', 'text/asp'],\n    ['asr', 'video/x-ms-asf'],\n    ['asx', ['video/x-ms-asf', 'application/x-mplayer2', 'video/x-ms-asf-plugin']],\n    ['atc', 'application/vnd.acucorp'],\n    ['atomcat', 'application/atomcat+xml'],\n    ['atomsvc', 'application/atomsvc+xml'],\n    ['atx', 'application/vnd.antix.game-component'],\n    ['au', ['audio/basic', 'audio/x-au']],\n    ['avi', ['video/avi', 'video/msvideo', 'application/x-troff-msvideo', 'video/x-msvideo']],\n    ['avs', 'video/avs-video'],\n    ['aw', 'application/applixware'],\n    ['axs', 'application/olescript'],\n    ['azf', 'application/vnd.airzip.filesecure.azf'],\n    ['azs', 'application/vnd.airzip.filesecure.azs'],\n    ['azw', 'application/vnd.amazon.ebook'],\n    ['bas', 'text/plain'],\n    ['bcpio', 'application/x-bcpio'],\n    ['bdf', 'application/x-font-bdf'],\n    ['bdm', 'application/vnd.syncml.dm+wbxml'],\n    ['bed', 'application/vnd.realvnc.bed'],\n    ['bh2', 'application/vnd.fujitsu.oasysprs'],\n    [\n        'bin',\n        ['application/octet-stream', 'application/mac-binary', 'application/macbinary', 'application/x-macbinary', 'application/x-binary']\n    ],\n    ['bm', 'image/bmp'],\n    ['bmi', 'application/vnd.bmi'],\n    ['bmp', ['image/bmp', 'image/x-windows-bmp']],\n    ['boo', 'application/book'],\n    ['book', 'application/book'],\n    ['box', 'application/vnd.previewsystems.box'],\n    ['boz', 'application/x-bzip2'],\n    ['bsh', 'application/x-bsh'],\n    ['btif', 'image/prs.btif'],\n    ['bz', 'application/x-bzip'],\n    ['bz2', 'application/x-bzip2'],\n    ['c', ['text/plain', 'text/x-c']],\n    ['c++', 'text/plain'],\n    ['c11amc', 'application/vnd.cluetrust.cartomobile-config'],\n    ['c11amz', 'application/vnd.cluetrust.cartomobile-config-pkg'],\n    ['c4g', 'application/vnd.clonk.c4group'],\n    ['cab', 'application/vnd.ms-cab-compressed'],\n    ['car', 'application/vnd.curl.car'],\n    ['cat', ['application/vnd.ms-pkiseccat', 'application/vnd.ms-pki.seccat']],\n    ['cc', ['text/plain', 'text/x-c']],\n    ['ccad', 'application/clariscad'],\n    ['cco', 'application/x-cocoa'],\n    ['ccxml', 'application/ccxml+xml,'],\n    ['cdbcmsg', 'application/vnd.contact.cmsg'],\n    ['cdf', ['application/cdf', 'application/x-cdf', 'application/x-netcdf']],\n    ['cdkey', 'application/vnd.mediastation.cdkey'],\n    ['cdmia', 'application/cdmi-capability'],\n    ['cdmic', 'application/cdmi-container'],\n    ['cdmid', 'application/cdmi-domain'],\n    ['cdmio', 'application/cdmi-object'],\n    ['cdmiq', 'application/cdmi-queue'],\n    ['cdx', 'chemical/x-cdx'],\n    ['cdxml', 'application/vnd.chemdraw+xml'],\n    ['cdy', 'application/vnd.cinderella'],\n    ['cer', ['application/pkix-cert', 'application/x-x509-ca-cert']],\n    ['cgm', 'image/cgm'],\n    ['cha', 'application/x-chat'],\n    ['chat', 'application/x-chat'],\n    ['chm', 'application/vnd.ms-htmlhelp'],\n    ['chrt', 'application/vnd.kde.kchart'],\n    ['cif', 'chemical/x-cif'],\n    ['cii', 'application/vnd.anser-web-certificate-issue-initiation'],\n    ['cil', 'application/vnd.ms-artgalry'],\n    ['cla', 'application/vnd.claymore'],\n    [\n        'class',\n        ['application/octet-stream', 'application/java', 'application/java-byte-code', 'application/java-vm', 'application/x-java-class']\n    ],\n    ['clkk', 'application/vnd.crick.clicker.keyboard'],\n    ['clkp', 'application/vnd.crick.clicker.palette'],\n    ['clkt', 'application/vnd.crick.clicker.template'],\n    ['clkw', 'application/vnd.crick.clicker.wordbank'],\n    ['clkx', 'application/vnd.crick.clicker'],\n    ['clp', 'application/x-msclip'],\n    ['cmc', 'application/vnd.cosmocaller'],\n    ['cmdf', 'chemical/x-cmdf'],\n    ['cml', 'chemical/x-cml'],\n    ['cmp', 'application/vnd.yellowriver-custom-menu'],\n    ['cmx', 'image/x-cmx'],\n    ['cod', ['image/cis-cod', 'application/vnd.rim.cod']],\n    ['com', ['application/octet-stream', 'text/plain']],\n    ['conf', 'text/plain'],\n    ['cpio', 'application/x-cpio'],\n    ['cpp', 'text/x-c'],\n    ['cpt', ['application/mac-compactpro', 'application/x-compactpro', 'application/x-cpt']],\n    ['crd', 'application/x-mscardfile'],\n    ['crl', ['application/pkix-crl', 'application/pkcs-crl']],\n    ['crt', ['application/pkix-cert', 'application/x-x509-user-cert', 'application/x-x509-ca-cert']],\n    ['cryptonote', 'application/vnd.rig.cryptonote'],\n    ['csh', ['text/x-script.csh', 'application/x-csh']],\n    ['csml', 'chemical/x-csml'],\n    ['csp', 'application/vnd.commonspace'],\n    ['css', ['text/css', 'application/x-pointplus']],\n    ['csv', 'text/csv'],\n    ['cu', 'application/cu-seeme'],\n    ['curl', 'text/vnd.curl'],\n    ['cww', 'application/prs.cww'],\n    ['cxx', 'text/plain'],\n    ['dae', 'model/vnd.collada+xml'],\n    ['daf', 'application/vnd.mobius.daf'],\n    ['davmount', 'application/davmount+xml'],\n    ['dcr', 'application/x-director'],\n    ['dcurl', 'text/vnd.curl.dcurl'],\n    ['dd2', 'application/vnd.oma.dd2+xml'],\n    ['ddd', 'application/vnd.fujixerox.ddd'],\n    ['deb', 'application/x-debian-package'],\n    ['deepv', 'application/x-deepv'],\n    ['def', 'text/plain'],\n    ['der', 'application/x-x509-ca-cert'],\n    ['dfac', 'application/vnd.dreamfactory'],\n    ['dif', 'video/x-dv'],\n    ['dir', 'application/x-director'],\n    ['dis', 'application/vnd.mobius.dis'],\n    ['djvu', 'image/vnd.djvu'],\n    ['dl', ['video/dl', 'video/x-dl']],\n    ['dll', 'application/x-msdownload'],\n    ['dms', 'application/octet-stream'],\n    ['dna', 'application/vnd.dna'],\n    ['doc', 'application/msword'],\n    ['docm', 'application/vnd.ms-word.document.macroenabled.12'],\n    ['docx', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'],\n    ['dot', 'application/msword'],\n    ['dotm', 'application/vnd.ms-word.template.macroenabled.12'],\n    ['dotx', 'application/vnd.openxmlformats-officedocument.wordprocessingml.template'],\n    ['dp', ['application/commonground', 'application/vnd.osgi.dp']],\n    ['dpg', 'application/vnd.dpgraph'],\n    ['dra', 'audio/vnd.dra'],\n    ['drw', 'application/drafting'],\n    ['dsc', 'text/prs.lines.tag'],\n    ['dssc', 'application/dssc+der'],\n    ['dtb', 'application/x-dtbook+xml'],\n    ['dtd', 'application/xml-dtd'],\n    ['dts', 'audio/vnd.dts'],\n    ['dtshd', 'audio/vnd.dts.hd'],\n    ['dump', 'application/octet-stream'],\n    ['dv', 'video/x-dv'],\n    ['dvi', 'application/x-dvi'],\n    ['dwf', ['model/vnd.dwf', 'drawing/x-dwf']],\n    ['dwg', ['application/acad', 'image/vnd.dwg', 'image/x-dwg']],\n    ['dxf', ['application/dxf', 'image/vnd.dwg', 'image/vnd.dxf', 'image/x-dwg']],\n    ['dxp', 'application/vnd.spotfire.dxp'],\n    ['dxr', 'application/x-director'],\n    ['ecelp4800', 'audio/vnd.nuera.ecelp4800'],\n    ['ecelp7470', 'audio/vnd.nuera.ecelp7470'],\n    ['ecelp9600', 'audio/vnd.nuera.ecelp9600'],\n    ['edm', 'application/vnd.novadigm.edm'],\n    ['edx', 'application/vnd.novadigm.edx'],\n    ['efif', 'application/vnd.picsel'],\n    ['ei6', 'application/vnd.pg.osasli'],\n    ['el', 'text/x-script.elisp'],\n    ['elc', ['application/x-elc', 'application/x-bytecode.elisp']],\n    ['eml', 'message/rfc822'],\n    ['emma', 'application/emma+xml'],\n    ['env', 'application/x-envoy'],\n    ['eol', 'audio/vnd.digital-winds'],\n    ['eot', 'application/vnd.ms-fontobject'],\n    ['eps', 'application/postscript'],\n    ['epub', 'application/epub+zip'],\n    ['es', ['application/ecmascript', 'application/x-esrehber']],\n    ['es3', 'application/vnd.eszigno3+xml'],\n    ['esf', 'application/vnd.epson.esf'],\n    ['etx', 'text/x-setext'],\n    ['evy', ['application/envoy', 'application/x-envoy']],\n    ['exe', ['application/octet-stream', 'application/x-msdownload']],\n    ['exi', 'application/exi'],\n    ['ext', 'application/vnd.novadigm.ext'],\n    ['ez2', 'application/vnd.ezpix-album'],\n    ['ez3', 'application/vnd.ezpix-package'],\n    ['f', ['text/plain', 'text/x-fortran']],\n    ['f4v', 'video/x-f4v'],\n    ['f77', 'text/x-fortran'],\n    ['f90', ['text/plain', 'text/x-fortran']],\n    ['fbs', 'image/vnd.fastbidsheet'],\n    ['fcs', 'application/vnd.isac.fcs'],\n    ['fdf', 'application/vnd.fdf'],\n    ['fe_launch', 'application/vnd.denovo.fcselayout-link'],\n    ['fg5', 'application/vnd.fujitsu.oasysgp'],\n    ['fh', 'image/x-freehand'],\n    ['fif', ['application/fractals', 'image/fif']],\n    ['fig', 'application/x-xfig'],\n    ['fli', ['video/fli', 'video/x-fli']],\n    ['flo', ['image/florian', 'application/vnd.micrografx.flo']],\n    ['flr', 'x-world/x-vrml'],\n    ['flv', 'video/x-flv'],\n    ['flw', 'application/vnd.kde.kivio'],\n    ['flx', 'text/vnd.fmi.flexstor'],\n    ['fly', 'text/vnd.fly'],\n    ['fm', 'application/vnd.framemaker'],\n    ['fmf', 'video/x-atomic3d-feature'],\n    ['fnc', 'application/vnd.frogans.fnc'],\n    ['for', ['text/plain', 'text/x-fortran']],\n    ['fpx', ['image/vnd.fpx', 'image/vnd.net-fpx']],\n    ['frl', 'application/freeloader'],\n    ['fsc', 'application/vnd.fsc.weblaunch'],\n    ['fst', 'image/vnd.fst'],\n    ['ftc', 'application/vnd.fluxtime.clip'],\n    ['fti', 'application/vnd.anser-web-funds-transfer-initiation'],\n    ['funk', 'audio/make'],\n    ['fvt', 'video/vnd.fvt'],\n    ['fxp', 'application/vnd.adobe.fxp'],\n    ['fzs', 'application/vnd.fuzzysheet'],\n    ['g', 'text/plain'],\n    ['g2w', 'application/vnd.geoplan'],\n    ['g3', 'image/g3fax'],\n    ['g3w', 'application/vnd.geospace'],\n    ['gac', 'application/vnd.groove-account'],\n    ['gdl', 'model/vnd.gdl'],\n    ['geo', 'application/vnd.dynageo'],\n    ['geojson', 'application/geo+json'],\n    ['gex', 'application/vnd.geometry-explorer'],\n    ['ggb', 'application/vnd.geogebra.file'],\n    ['ggt', 'application/vnd.geogebra.tool'],\n    ['ghf', 'application/vnd.groove-help'],\n    ['gif', 'image/gif'],\n    ['gim', 'application/vnd.groove-identity-message'],\n    ['gl', ['video/gl', 'video/x-gl']],\n    ['gmx', 'application/vnd.gmx'],\n    ['gnumeric', 'application/x-gnumeric'],\n    ['gph', 'application/vnd.flographit'],\n    ['gqf', 'application/vnd.grafeq'],\n    ['gram', 'application/srgs'],\n    ['grv', 'application/vnd.groove-injector'],\n    ['grxml', 'application/srgs+xml'],\n    ['gsd', 'audio/x-gsm'],\n    ['gsf', 'application/x-font-ghostscript'],\n    ['gsm', 'audio/x-gsm'],\n    ['gsp', 'application/x-gsp'],\n    ['gss', 'application/x-gss'],\n    ['gtar', 'application/x-gtar'],\n    ['gtm', 'application/vnd.groove-tool-message'],\n    ['gtw', 'model/vnd.gtw'],\n    ['gv', 'text/vnd.graphviz'],\n    ['gxt', 'application/vnd.geonext'],\n    ['gz', ['application/x-gzip', 'application/x-compressed']],\n    ['gzip', ['multipart/x-gzip', 'application/x-gzip']],\n    ['h', ['text/plain', 'text/x-h']],\n    ['h261', 'video/h261'],\n    ['h263', 'video/h263'],\n    ['h264', 'video/h264'],\n    ['hal', 'application/vnd.hal+xml'],\n    ['hbci', 'application/vnd.hbci'],\n    ['hdf', 'application/x-hdf'],\n    ['help', 'application/x-helpfile'],\n    ['hgl', 'application/vnd.hp-hpgl'],\n    ['hh', ['text/plain', 'text/x-h']],\n    ['hlb', 'text/x-script'],\n    ['hlp', ['application/winhlp', 'application/hlp', 'application/x-helpfile', 'application/x-winhelp']],\n    ['hpg', 'application/vnd.hp-hpgl'],\n    ['hpgl', 'application/vnd.hp-hpgl'],\n    ['hpid', 'application/vnd.hp-hpid'],\n    ['hps', 'application/vnd.hp-hps'],\n    [\n        'hqx',\n        [\n            'application/mac-binhex40',\n            'application/binhex',\n            'application/binhex4',\n            'application/mac-binhex',\n            'application/x-binhex40',\n            'application/x-mac-binhex40'\n        ]\n    ],\n    ['hta', 'application/hta'],\n    ['htc', 'text/x-component'],\n    ['htke', 'application/vnd.kenameaapp'],\n    ['htm', 'text/html'],\n    ['html', 'text/html'],\n    ['htmls', 'text/html'],\n    ['htt', 'text/webviewhtml'],\n    ['htx', 'text/html'],\n    ['hvd', 'application/vnd.yamaha.hv-dic'],\n    ['hvp', 'application/vnd.yamaha.hv-voice'],\n    ['hvs', 'application/vnd.yamaha.hv-script'],\n    ['i2g', 'application/vnd.intergeo'],\n    ['icc', 'application/vnd.iccprofile'],\n    ['ice', 'x-conference/x-cooltalk'],\n    ['ico', 'image/x-icon'],\n    ['ics', 'text/calendar'],\n    ['idc', 'text/plain'],\n    ['ief', 'image/ief'],\n    ['iefs', 'image/ief'],\n    ['ifm', 'application/vnd.shana.informed.formdata'],\n    ['iges', ['application/iges', 'model/iges']],\n    ['igl', 'application/vnd.igloader'],\n    ['igm', 'application/vnd.insors.igm'],\n    ['igs', ['application/iges', 'model/iges']],\n    ['igx', 'application/vnd.micrografx.igx'],\n    ['iif', 'application/vnd.shana.informed.interchange'],\n    ['iii', 'application/x-iphone'],\n    ['ima', 'application/x-ima'],\n    ['imap', 'application/x-httpd-imap'],\n    ['imp', 'application/vnd.accpac.simply.imp'],\n    ['ims', 'application/vnd.ms-ims'],\n    ['inf', 'application/inf'],\n    ['ins', ['application/x-internet-signup', 'application/x-internett-signup']],\n    ['ip', 'application/x-ip2'],\n    ['ipfix', 'application/ipfix'],\n    ['ipk', 'application/vnd.shana.informed.package'],\n    ['irm', 'application/vnd.ibm.rights-management'],\n    ['irp', 'application/vnd.irepository.package+xml'],\n    ['isp', 'application/x-internet-signup'],\n    ['isu', 'video/x-isvideo'],\n    ['it', 'audio/it'],\n    ['itp', 'application/vnd.shana.informed.formtemplate'],\n    ['iv', 'application/x-inventor'],\n    ['ivp', 'application/vnd.immervision-ivp'],\n    ['ivr', 'i-world/i-vrml'],\n    ['ivu', 'application/vnd.immervision-ivu'],\n    ['ivy', 'application/x-livescreen'],\n    ['jad', 'text/vnd.sun.j2me.app-descriptor'],\n    ['jam', ['application/vnd.jam', 'audio/x-jam']],\n    ['jar', 'application/java-archive'],\n    ['jav', ['text/plain', 'text/x-java-source']],\n    ['java', ['text/plain', 'text/x-java-source,java', 'text/x-java-source']],\n    ['jcm', 'application/x-java-commerce'],\n    ['jfif', ['image/pipeg', 'image/jpeg', 'image/pjpeg']],\n    ['jfif-tbnl', 'image/jpeg'],\n    ['jisp', 'application/vnd.jisp'],\n    ['jlt', 'application/vnd.hp-jlyt'],\n    ['jnlp', 'application/x-java-jnlp-file'],\n    ['joda', 'application/vnd.joost.joda-archive'],\n    ['jpe', ['image/jpeg', 'image/pjpeg']],\n    ['jpeg', ['image/jpeg', 'image/pjpeg']],\n    ['jpg', ['image/jpeg', 'image/pjpeg']],\n    ['jpgv', 'video/jpeg'],\n    ['jpm', 'video/jpm'],\n    ['jps', 'image/x-jps'],\n    ['js', ['application/javascript', 'application/ecmascript', 'text/javascript', 'text/ecmascript', 'application/x-javascript']],\n    ['json', 'application/json'],\n    ['jut', 'image/jutvision'],\n    ['kar', ['audio/midi', 'music/x-karaoke']],\n    ['karbon', 'application/vnd.kde.karbon'],\n    ['kfo', 'application/vnd.kde.kformula'],\n    ['kia', 'application/vnd.kidspiration'],\n    ['kml', 'application/vnd.google-earth.kml+xml'],\n    ['kmz', 'application/vnd.google-earth.kmz'],\n    ['kne', 'application/vnd.kinar'],\n    ['kon', 'application/vnd.kde.kontour'],\n    ['kpr', 'application/vnd.kde.kpresenter'],\n    ['ksh', ['application/x-ksh', 'text/x-script.ksh']],\n    ['ksp', 'application/vnd.kde.kspread'],\n    ['ktx', 'image/ktx'],\n    ['ktz', 'application/vnd.kahootz'],\n    ['kwd', 'application/vnd.kde.kword'],\n    ['la', ['audio/nspaudio', 'audio/x-nspaudio']],\n    ['lam', 'audio/x-liveaudio'],\n    ['lasxml', 'application/vnd.las.las+xml'],\n    ['latex', 'application/x-latex'],\n    ['lbd', 'application/vnd.llamagraphics.life-balance.desktop'],\n    ['lbe', 'application/vnd.llamagraphics.life-balance.exchange+xml'],\n    ['les', 'application/vnd.hhe.lesson-player'],\n    ['lha', ['application/octet-stream', 'application/lha', 'application/x-lha']],\n    ['lhx', 'application/octet-stream'],\n    ['link66', 'application/vnd.route66.link66+xml'],\n    ['list', 'text/plain'],\n    ['lma', ['audio/nspaudio', 'audio/x-nspaudio']],\n    ['log', 'text/plain'],\n    ['lrm', 'application/vnd.ms-lrm'],\n    ['lsf', 'video/x-la-asf'],\n    ['lsp', ['application/x-lisp', 'text/x-script.lisp']],\n    ['lst', 'text/plain'],\n    ['lsx', ['video/x-la-asf', 'text/x-la-asf']],\n    ['ltf', 'application/vnd.frogans.ltf'],\n    ['ltx', 'application/x-latex'],\n    ['lvp', 'audio/vnd.lucent.voice'],\n    ['lwp', 'application/vnd.lotus-wordpro'],\n    ['lzh', ['application/octet-stream', 'application/x-lzh']],\n    ['lzx', ['application/lzx', 'application/octet-stream', 'application/x-lzx']],\n    ['m', ['text/plain', 'text/x-m']],\n    ['m13', 'application/x-msmediaview'],\n    ['m14', 'application/x-msmediaview'],\n    ['m1v', 'video/mpeg'],\n    ['m21', 'application/mp21'],\n    ['m2a', 'audio/mpeg'],\n    ['m2v', 'video/mpeg'],\n    ['m3u', ['audio/x-mpegurl', 'audio/x-mpequrl']],\n    ['m3u8', 'application/vnd.apple.mpegurl'],\n    ['m4v', 'video/x-m4v'],\n    ['ma', 'application/mathematica'],\n    ['mads', 'application/mads+xml'],\n    ['mag', 'application/vnd.ecowin.chart'],\n    ['man', 'application/x-troff-man'],\n    ['map', 'application/x-navimap'],\n    ['mar', 'text/plain'],\n    ['mathml', 'application/mathml+xml'],\n    ['mbd', 'application/mbedlet'],\n    ['mbk', 'application/vnd.mobius.mbk'],\n    ['mbox', 'application/mbox'],\n    ['mc$', 'application/x-magic-cap-package-1.0'],\n    ['mc1', 'application/vnd.medcalcdata'],\n    ['mcd', ['application/mcad', 'application/vnd.mcd', 'application/x-mathcad']],\n    ['mcf', ['image/vasa', 'text/mcf']],\n    ['mcp', 'application/netmc'],\n    ['mcurl', 'text/vnd.curl.mcurl'],\n    ['mdb', 'application/x-msaccess'],\n    ['mdi', 'image/vnd.ms-modi'],\n    ['me', 'application/x-troff-me'],\n    ['meta4', 'application/metalink4+xml'],\n    ['mets', 'application/mets+xml'],\n    ['mfm', 'application/vnd.mfmp'],\n    ['mgp', 'application/vnd.osgeo.mapguide.package'],\n    ['mgz', 'application/vnd.proteus.magazine'],\n    ['mht', 'message/rfc822'],\n    ['mhtml', 'message/rfc822'],\n    ['mid', ['audio/mid', 'audio/midi', 'music/crescendo', 'x-music/x-midi', 'audio/x-midi', 'application/x-midi', 'audio/x-mid']],\n    ['midi', ['audio/midi', 'music/crescendo', 'x-music/x-midi', 'audio/x-midi', 'application/x-midi', 'audio/x-mid']],\n    ['mif', ['application/vnd.mif', 'application/x-mif', 'application/x-frame']],\n    ['mime', ['message/rfc822', 'www/mime']],\n    ['mj2', 'video/mj2'],\n    ['mjf', 'audio/x-vnd.audioexplosion.mjuicemediafile'],\n    ['mjpg', 'video/x-motion-jpeg'],\n    ['mlp', 'application/vnd.dolby.mlp'],\n    ['mm', ['application/base64', 'application/x-meme']],\n    ['mmd', 'application/vnd.chipnuts.karaoke-mmd'],\n    ['mme', 'application/base64'],\n    ['mmf', 'application/vnd.smaf'],\n    ['mmr', 'image/vnd.fujixerox.edmics-mmr'],\n    ['mny', 'application/x-msmoney'],\n    ['mod', ['audio/mod', 'audio/x-mod']],\n    ['mods', 'application/mods+xml'],\n    ['moov', 'video/quicktime'],\n    ['mov', 'video/quicktime'],\n    ['movie', 'video/x-sgi-movie'],\n    ['mp2', ['video/mpeg', 'audio/mpeg', 'video/x-mpeg', 'audio/x-mpeg', 'video/x-mpeq2a']],\n    ['mp3', ['audio/mpeg', 'audio/mpeg3', 'video/mpeg', 'audio/x-mpeg-3', 'video/x-mpeg']],\n    ['mp4', ['video/mp4', 'application/mp4']],\n    ['mp4a', 'audio/mp4'],\n    ['mpa', ['video/mpeg', 'audio/mpeg']],\n    ['mpc', ['application/vnd.mophun.certificate', 'application/x-project']],\n    ['mpe', 'video/mpeg'],\n    ['mpeg', 'video/mpeg'],\n    ['mpg', ['video/mpeg', 'audio/mpeg']],\n    ['mpga', 'audio/mpeg'],\n    ['mpkg', 'application/vnd.apple.installer+xml'],\n    ['mpm', 'application/vnd.blueice.multipass'],\n    ['mpn', 'application/vnd.mophun.application'],\n    ['mpp', 'application/vnd.ms-project'],\n    ['mpt', 'application/x-project'],\n    ['mpv', 'application/x-project'],\n    ['mpv2', 'video/mpeg'],\n    ['mpx', 'application/x-project'],\n    ['mpy', 'application/vnd.ibm.minipay'],\n    ['mqy', 'application/vnd.mobius.mqy'],\n    ['mrc', 'application/marc'],\n    ['mrcx', 'application/marcxml+xml'],\n    ['ms', 'application/x-troff-ms'],\n    ['mscml', 'application/mediaservercontrol+xml'],\n    ['mseq', 'application/vnd.mseq'],\n    ['msf', 'application/vnd.epson.msf'],\n    ['msg', 'application/vnd.ms-outlook'],\n    ['msh', 'model/mesh'],\n    ['msl', 'application/vnd.mobius.msl'],\n    ['msty', 'application/vnd.muvee.style'],\n    ['mts', 'model/vnd.mts'],\n    ['mus', 'application/vnd.musician'],\n    ['musicxml', 'application/vnd.recordare.musicxml+xml'],\n    ['mv', 'video/x-sgi-movie'],\n    ['mvb', 'application/x-msmediaview'],\n    ['mwf', 'application/vnd.mfer'],\n    ['mxf', 'application/mxf'],\n    ['mxl', 'application/vnd.recordare.musicxml'],\n    ['mxml', 'application/xv+xml'],\n    ['mxs', 'application/vnd.triscape.mxs'],\n    ['mxu', 'video/vnd.mpegurl'],\n    ['my', 'audio/make'],\n    ['mzz', 'application/x-vnd.audioexplosion.mzz'],\n    ['n-gage', 'application/vnd.nokia.n-gage.symbian.install'],\n    ['n3', 'text/n3'],\n    ['nap', 'image/naplps'],\n    ['naplps', 'image/naplps'],\n    ['nbp', 'application/vnd.wolfram.player'],\n    ['nc', 'application/x-netcdf'],\n    ['ncm', 'application/vnd.nokia.configuration-message'],\n    ['ncx', 'application/x-dtbncx+xml'],\n    ['ngdat', 'application/vnd.nokia.n-gage.data'],\n    ['nif', 'image/x-niff'],\n    ['niff', 'image/x-niff'],\n    ['nix', 'application/x-mix-transfer'],\n    ['nlu', 'application/vnd.neurolanguage.nlu'],\n    ['nml', 'application/vnd.enliven'],\n    ['nnd', 'application/vnd.noblenet-directory'],\n    ['nns', 'application/vnd.noblenet-sealer'],\n    ['nnw', 'application/vnd.noblenet-web'],\n    ['npx', 'image/vnd.net-fpx'],\n    ['nsc', 'application/x-conference'],\n    ['nsf', 'application/vnd.lotus-notes'],\n    ['nvd', 'application/x-navidoc'],\n    ['nws', 'message/rfc822'],\n    ['o', 'application/octet-stream'],\n    ['oa2', 'application/vnd.fujitsu.oasys2'],\n    ['oa3', 'application/vnd.fujitsu.oasys3'],\n    ['oas', 'application/vnd.fujitsu.oasys'],\n    ['obd', 'application/x-msbinder'],\n    ['oda', 'application/oda'],\n    ['odb', 'application/vnd.oasis.opendocument.database'],\n    ['odc', 'application/vnd.oasis.opendocument.chart'],\n    ['odf', 'application/vnd.oasis.opendocument.formula'],\n    ['odft', 'application/vnd.oasis.opendocument.formula-template'],\n    ['odg', 'application/vnd.oasis.opendocument.graphics'],\n    ['odi', 'application/vnd.oasis.opendocument.image'],\n    ['odm', 'application/vnd.oasis.opendocument.text-master'],\n    ['odp', 'application/vnd.oasis.opendocument.presentation'],\n    ['ods', 'application/vnd.oasis.opendocument.spreadsheet'],\n    ['odt', 'application/vnd.oasis.opendocument.text'],\n    ['oga', 'audio/ogg'],\n    ['ogv', 'video/ogg'],\n    ['ogx', 'application/ogg'],\n    ['omc', 'application/x-omc'],\n    ['omcd', 'application/x-omcdatamaker'],\n    ['omcr', 'application/x-omcregerator'],\n    ['onetoc', 'application/onenote'],\n    ['opf', 'application/oebps-package+xml'],\n    ['org', 'application/vnd.lotus-organizer'],\n    ['osf', 'application/vnd.yamaha.openscoreformat'],\n    ['osfpvg', 'application/vnd.yamaha.openscoreformat.osfpvg+xml'],\n    ['otc', 'application/vnd.oasis.opendocument.chart-template'],\n    ['otf', 'application/x-font-otf'],\n    ['otg', 'application/vnd.oasis.opendocument.graphics-template'],\n    ['oth', 'application/vnd.oasis.opendocument.text-web'],\n    ['oti', 'application/vnd.oasis.opendocument.image-template'],\n    ['otp', 'application/vnd.oasis.opendocument.presentation-template'],\n    ['ots', 'application/vnd.oasis.opendocument.spreadsheet-template'],\n    ['ott', 'application/vnd.oasis.opendocument.text-template'],\n    ['oxt', 'application/vnd.openofficeorg.extension'],\n    ['p', 'text/x-pascal'],\n    ['p10', ['application/pkcs10', 'application/x-pkcs10']],\n    ['p12', ['application/pkcs-12', 'application/x-pkcs12']],\n    ['p7a', 'application/x-pkcs7-signature'],\n    ['p7b', 'application/x-pkcs7-certificates'],\n    ['p7c', ['application/pkcs7-mime', 'application/x-pkcs7-mime']],\n    ['p7m', ['application/pkcs7-mime', 'application/x-pkcs7-mime']],\n    ['p7r', 'application/x-pkcs7-certreqresp'],\n    ['p7s', ['application/pkcs7-signature', 'application/x-pkcs7-signature']],\n    ['p8', 'application/pkcs8'],\n    ['par', 'text/plain-bas'],\n    ['part', 'application/pro_eng'],\n    ['pas', 'text/pascal'],\n    ['paw', 'application/vnd.pawaafile'],\n    ['pbd', 'application/vnd.powerbuilder6'],\n    ['pbm', 'image/x-portable-bitmap'],\n    ['pcf', 'application/x-font-pcf'],\n    ['pcl', ['application/vnd.hp-pcl', 'application/x-pcl']],\n    ['pclxl', 'application/vnd.hp-pclxl'],\n    ['pct', 'image/x-pict'],\n    ['pcurl', 'application/vnd.curl.pcurl'],\n    ['pcx', 'image/x-pcx'],\n    ['pdb', ['application/vnd.palm', 'chemical/x-pdb']],\n    ['pdf', 'application/pdf'],\n    ['pfa', 'application/x-font-type1'],\n    ['pfr', 'application/font-tdpfr'],\n    ['pfunk', ['audio/make', 'audio/make.my.funk']],\n    ['pfx', 'application/x-pkcs12'],\n    ['pgm', ['image/x-portable-graymap', 'image/x-portable-greymap']],\n    ['pgn', 'application/x-chess-pgn'],\n    ['pgp', 'application/pgp-signature'],\n    ['pic', ['image/pict', 'image/x-pict']],\n    ['pict', 'image/pict'],\n    ['pkg', 'application/x-newton-compatible-pkg'],\n    ['pki', 'application/pkixcmp'],\n    ['pkipath', 'application/pkix-pkipath'],\n    ['pko', ['application/ynd.ms-pkipko', 'application/vnd.ms-pki.pko']],\n    ['pl', ['text/plain', 'text/x-script.perl']],\n    ['plb', 'application/vnd.3gpp.pic-bw-large'],\n    ['plc', 'application/vnd.mobius.plc'],\n    ['plf', 'application/vnd.pocketlearn'],\n    ['pls', 'application/pls+xml'],\n    ['plx', 'application/x-pixclscript'],\n    ['pm', ['text/x-script.perl-module', 'image/x-xpixmap']],\n    ['pm4', 'application/x-pagemaker'],\n    ['pm5', 'application/x-pagemaker'],\n    ['pma', 'application/x-perfmon'],\n    ['pmc', 'application/x-perfmon'],\n    ['pml', ['application/vnd.ctc-posml', 'application/x-perfmon']],\n    ['pmr', 'application/x-perfmon'],\n    ['pmw', 'application/x-perfmon'],\n    ['png', 'image/png'],\n    ['pnm', ['application/x-portable-anymap', 'image/x-portable-anymap']],\n    ['portpkg', 'application/vnd.macports.portpkg'],\n    ['pot', ['application/vnd.ms-powerpoint', 'application/mspowerpoint']],\n    ['potm', 'application/vnd.ms-powerpoint.template.macroenabled.12'],\n    ['potx', 'application/vnd.openxmlformats-officedocument.presentationml.template'],\n    ['pov', 'model/x-pov'],\n    ['ppa', 'application/vnd.ms-powerpoint'],\n    ['ppam', 'application/vnd.ms-powerpoint.addin.macroenabled.12'],\n    ['ppd', 'application/vnd.cups-ppd'],\n    ['ppm', 'image/x-portable-pixmap'],\n    ['pps', ['application/vnd.ms-powerpoint', 'application/mspowerpoint']],\n    ['ppsm', 'application/vnd.ms-powerpoint.slideshow.macroenabled.12'],\n    ['ppsx', 'application/vnd.openxmlformats-officedocument.presentationml.slideshow'],\n    ['ppt', ['application/vnd.ms-powerpoint', 'application/mspowerpoint', 'application/powerpoint', 'application/x-mspowerpoint']],\n    ['pptm', 'application/vnd.ms-powerpoint.presentation.macroenabled.12'],\n    ['pptx', 'application/vnd.openxmlformats-officedocument.presentationml.presentation'],\n    ['ppz', 'application/mspowerpoint'],\n    ['prc', 'application/x-mobipocket-ebook'],\n    ['pre', ['application/vnd.lotus-freelance', 'application/x-freelance']],\n    ['prf', 'application/pics-rules'],\n    ['prt', 'application/pro_eng'],\n    ['ps', 'application/postscript'],\n    ['psb', 'application/vnd.3gpp.pic-bw-small'],\n    ['psd', ['application/octet-stream', 'image/vnd.adobe.photoshop']],\n    ['psf', 'application/x-font-linux-psf'],\n    ['pskcxml', 'application/pskc+xml'],\n    ['ptid', 'application/vnd.pvi.ptid1'],\n    ['pub', 'application/x-mspublisher'],\n    ['pvb', 'application/vnd.3gpp.pic-bw-var'],\n    ['pvu', 'paleovu/x-pv'],\n    ['pwn', 'application/vnd.3m.post-it-notes'],\n    ['pwz', 'application/vnd.ms-powerpoint'],\n    ['py', 'text/x-script.phyton'],\n    ['pya', 'audio/vnd.ms-playready.media.pya'],\n    ['pyc', 'application/x-bytecode.python'],\n    ['pyv', 'video/vnd.ms-playready.media.pyv'],\n    ['qam', 'application/vnd.epson.quickanime'],\n    ['qbo', 'application/vnd.intu.qbo'],\n    ['qcp', 'audio/vnd.qcelp'],\n    ['qd3', 'x-world/x-3dmf'],\n    ['qd3d', 'x-world/x-3dmf'],\n    ['qfx', 'application/vnd.intu.qfx'],\n    ['qif', 'image/x-quicktime'],\n    ['qps', 'application/vnd.publishare-delta-tree'],\n    ['qt', 'video/quicktime'],\n    ['qtc', 'video/x-qtc'],\n    ['qti', 'image/x-quicktime'],\n    ['qtif', 'image/x-quicktime'],\n    ['qxd', 'application/vnd.quark.quarkxpress'],\n    ['ra', ['audio/x-realaudio', 'audio/x-pn-realaudio', 'audio/x-pn-realaudio-plugin']],\n    ['ram', 'audio/x-pn-realaudio'],\n    ['rar', 'application/x-rar-compressed'],\n    ['ras', ['image/cmu-raster', 'application/x-cmu-raster', 'image/x-cmu-raster']],\n    ['rast', 'image/cmu-raster'],\n    ['rcprofile', 'application/vnd.ipunplugged.rcprofile'],\n    ['rdf', 'application/rdf+xml'],\n    ['rdz', 'application/vnd.data-vision.rdz'],\n    ['rep', 'application/vnd.businessobjects'],\n    ['res', 'application/x-dtbresource+xml'],\n    ['rexx', 'text/x-script.rexx'],\n    ['rf', 'image/vnd.rn-realflash'],\n    ['rgb', 'image/x-rgb'],\n    ['rif', 'application/reginfo+xml'],\n    ['rip', 'audio/vnd.rip'],\n    ['rl', 'application/resource-lists+xml'],\n    ['rlc', 'image/vnd.fujixerox.edmics-rlc'],\n    ['rld', 'application/resource-lists-diff+xml'],\n    ['rm', ['application/vnd.rn-realmedia', 'audio/x-pn-realaudio']],\n    ['rmi', 'audio/mid'],\n    ['rmm', 'audio/x-pn-realaudio'],\n    ['rmp', ['audio/x-pn-realaudio-plugin', 'audio/x-pn-realaudio']],\n    ['rms', 'application/vnd.jcp.javame.midlet-rms'],\n    ['rnc', 'application/relax-ng-compact-syntax'],\n    ['rng', ['application/ringing-tones', 'application/vnd.nokia.ringing-tone']],\n    ['rnx', 'application/vnd.rn-realplayer'],\n    ['roff', 'application/x-troff'],\n    ['rp', 'image/vnd.rn-realpix'],\n    ['rp9', 'application/vnd.cloanto.rp9'],\n    ['rpm', 'audio/x-pn-realaudio-plugin'],\n    ['rpss', 'application/vnd.nokia.radio-presets'],\n    ['rpst', 'application/vnd.nokia.radio-preset'],\n    ['rq', 'application/sparql-query'],\n    ['rs', 'application/rls-services+xml'],\n    ['rsd', 'application/rsd+xml'],\n    ['rt', ['text/richtext', 'text/vnd.rn-realtext']],\n    ['rtf', ['application/rtf', 'text/richtext', 'application/x-rtf']],\n    ['rtx', ['text/richtext', 'application/rtf']],\n    ['rv', 'video/vnd.rn-realvideo'],\n    ['s', 'text/x-asm'],\n    ['s3m', 'audio/s3m'],\n    ['saf', 'application/vnd.yamaha.smaf-audio'],\n    ['saveme', 'application/octet-stream'],\n    ['sbk', 'application/x-tbook'],\n    ['sbml', 'application/sbml+xml'],\n    ['sc', 'application/vnd.ibm.secure-container'],\n    ['scd', 'application/x-msschedule'],\n    [\n        'scm',\n        ['application/vnd.lotus-screencam', 'video/x-scm', 'text/x-script.guile', 'application/x-lotusscreencam', 'text/x-script.scheme']\n    ],\n    ['scq', 'application/scvp-cv-request'],\n    ['scs', 'application/scvp-cv-response'],\n    ['sct', 'text/scriptlet'],\n    ['scurl', 'text/vnd.curl.scurl'],\n    ['sda', 'application/vnd.stardivision.draw'],\n    ['sdc', 'application/vnd.stardivision.calc'],\n    ['sdd', 'application/vnd.stardivision.impress'],\n    ['sdkm', 'application/vnd.solent.sdkm+xml'],\n    ['sdml', 'text/plain'],\n    ['sdp', ['application/sdp', 'application/x-sdp']],\n    ['sdr', 'application/sounder'],\n    ['sdw', 'application/vnd.stardivision.writer'],\n    ['sea', ['application/sea', 'application/x-sea']],\n    ['see', 'application/vnd.seemail'],\n    ['seed', 'application/vnd.fdsn.seed'],\n    ['sema', 'application/vnd.sema'],\n    ['semd', 'application/vnd.semd'],\n    ['semf', 'application/vnd.semf'],\n    ['ser', 'application/java-serialized-object'],\n    ['set', 'application/set'],\n    ['setpay', 'application/set-payment-initiation'],\n    ['setreg', 'application/set-registration-initiation'],\n    ['sfd-hdstx', 'application/vnd.hydrostatix.sof-data'],\n    ['sfs', 'application/vnd.spotfire.sfs'],\n    ['sgl', 'application/vnd.stardivision.writer-global'],\n    ['sgm', ['text/sgml', 'text/x-sgml']],\n    ['sgml', ['text/sgml', 'text/x-sgml']],\n    ['sh', ['application/x-shar', 'application/x-bsh', 'application/x-sh', 'text/x-script.sh']],\n    ['shar', ['application/x-bsh', 'application/x-shar']],\n    ['shf', 'application/shf+xml'],\n    ['shtml', ['text/html', 'text/x-server-parsed-html']],\n    ['sid', 'audio/x-psid'],\n    ['sis', 'application/vnd.symbian.install'],\n    ['sit', ['application/x-stuffit', 'application/x-sit']],\n    ['sitx', 'application/x-stuffitx'],\n    ['skd', 'application/x-koan'],\n    ['skm', 'application/x-koan'],\n    ['skp', ['application/vnd.koan', 'application/x-koan']],\n    ['skt', 'application/x-koan'],\n    ['sl', 'application/x-seelogo'],\n    ['sldm', 'application/vnd.ms-powerpoint.slide.macroenabled.12'],\n    ['sldx', 'application/vnd.openxmlformats-officedocument.presentationml.slide'],\n    ['slt', 'application/vnd.epson.salt'],\n    ['sm', 'application/vnd.stepmania.stepchart'],\n    ['smf', 'application/vnd.stardivision.math'],\n    ['smi', ['application/smil', 'application/smil+xml']],\n    ['smil', 'application/smil'],\n    ['snd', ['audio/basic', 'audio/x-adpcm']],\n    ['snf', 'application/x-font-snf'],\n    ['sol', 'application/solids'],\n    ['spc', ['text/x-speech', 'application/x-pkcs7-certificates']],\n    ['spf', 'application/vnd.yamaha.smaf-phrase'],\n    ['spl', ['application/futuresplash', 'application/x-futuresplash']],\n    ['spot', 'text/vnd.in3d.spot'],\n    ['spp', 'application/scvp-vp-response'],\n    ['spq', 'application/scvp-vp-request'],\n    ['spr', 'application/x-sprite'],\n    ['sprite', 'application/x-sprite'],\n    ['src', 'application/x-wais-source'],\n    ['sru', 'application/sru+xml'],\n    ['srx', 'application/sparql-results+xml'],\n    ['sse', 'application/vnd.kodak-descriptor'],\n    ['ssf', 'application/vnd.epson.ssf'],\n    ['ssi', 'text/x-server-parsed-html'],\n    ['ssm', 'application/streamingmedia'],\n    ['ssml', 'application/ssml+xml'],\n    ['sst', ['application/vnd.ms-pkicertstore', 'application/vnd.ms-pki.certstore']],\n    ['st', 'application/vnd.sailingtracker.track'],\n    ['stc', 'application/vnd.sun.xml.calc.template'],\n    ['std', 'application/vnd.sun.xml.draw.template'],\n    ['step', 'application/step'],\n    ['stf', 'application/vnd.wt.stf'],\n    ['sti', 'application/vnd.sun.xml.impress.template'],\n    ['stk', 'application/hyperstudio'],\n    ['stl', ['application/vnd.ms-pkistl', 'application/sla', 'application/vnd.ms-pki.stl', 'application/x-navistyle']],\n    ['stm', 'text/html'],\n    ['stp', 'application/step'],\n    ['str', 'application/vnd.pg.format'],\n    ['stw', 'application/vnd.sun.xml.writer.template'],\n    ['sub', 'image/vnd.dvb.subtitle'],\n    ['sus', 'application/vnd.sus-calendar'],\n    ['sv4cpio', 'application/x-sv4cpio'],\n    ['sv4crc', 'application/x-sv4crc'],\n    ['svc', 'application/vnd.dvb.service'],\n    ['svd', 'application/vnd.svd'],\n    ['svf', ['image/vnd.dwg', 'image/x-dwg']],\n    ['svg', 'image/svg+xml'],\n    ['svr', ['x-world/x-svr', 'application/x-world']],\n    ['swf', 'application/x-shockwave-flash'],\n    ['swi', 'application/vnd.aristanetworks.swi'],\n    ['sxc', 'application/vnd.sun.xml.calc'],\n    ['sxd', 'application/vnd.sun.xml.draw'],\n    ['sxg', 'application/vnd.sun.xml.writer.global'],\n    ['sxi', 'application/vnd.sun.xml.impress'],\n    ['sxm', 'application/vnd.sun.xml.math'],\n    ['sxw', 'application/vnd.sun.xml.writer'],\n    ['t', ['text/troff', 'application/x-troff']],\n    ['talk', 'text/x-speech'],\n    ['tao', 'application/vnd.tao.intent-module-archive'],\n    ['tar', 'application/x-tar'],\n    ['tbk', ['application/toolbook', 'application/x-tbook']],\n    ['tcap', 'application/vnd.3gpp2.tcap'],\n    ['tcl', ['text/x-script.tcl', 'application/x-tcl']],\n    ['tcsh', 'text/x-script.tcsh'],\n    ['teacher', 'application/vnd.smart.teacher'],\n    ['tei', 'application/tei+xml'],\n    ['tex', 'application/x-tex'],\n    ['texi', 'application/x-texinfo'],\n    ['texinfo', 'application/x-texinfo'],\n    ['text', ['application/plain', 'text/plain']],\n    ['tfi', 'application/thraud+xml'],\n    ['tfm', 'application/x-tex-tfm'],\n    ['tgz', ['application/gnutar', 'application/x-compressed']],\n    ['thmx', 'application/vnd.ms-officetheme'],\n    ['tif', ['image/tiff', 'image/x-tiff']],\n    ['tiff', ['image/tiff', 'image/x-tiff']],\n    ['tmo', 'application/vnd.tmobile-livetv'],\n    ['torrent', 'application/x-bittorrent'],\n    ['tpl', 'application/vnd.groove-tool-template'],\n    ['tpt', 'application/vnd.trid.tpt'],\n    ['tr', 'application/x-troff'],\n    ['tra', 'application/vnd.trueapp'],\n    ['trm', 'application/x-msterminal'],\n    ['tsd', 'application/timestamped-data'],\n    ['tsi', 'audio/tsp-audio'],\n    ['tsp', ['application/dsptype', 'audio/tsplayer']],\n    ['tsv', 'text/tab-separated-values'],\n    ['ttf', 'application/x-font-ttf'],\n    ['ttl', 'text/turtle'],\n    ['turbot', 'image/florian'],\n    ['twd', 'application/vnd.simtech-mindmapper'],\n    ['txd', 'application/vnd.genomatix.tuxedo'],\n    ['txf', 'application/vnd.mobius.txf'],\n    ['txt', 'text/plain'],\n    ['ufd', 'application/vnd.ufdl'],\n    ['uil', 'text/x-uil'],\n    ['uls', 'text/iuls'],\n    ['umj', 'application/vnd.umajin'],\n    ['uni', 'text/uri-list'],\n    ['unis', 'text/uri-list'],\n    ['unityweb', 'application/vnd.unity'],\n    ['unv', 'application/i-deas'],\n    ['uoml', 'application/vnd.uoml+xml'],\n    ['uri', 'text/uri-list'],\n    ['uris', 'text/uri-list'],\n    ['ustar', ['application/x-ustar', 'multipart/x-ustar']],\n    ['utz', 'application/vnd.uiq.theme'],\n    ['uu', ['application/octet-stream', 'text/x-uuencode']],\n    ['uue', 'text/x-uuencode'],\n    ['uva', 'audio/vnd.dece.audio'],\n    ['uvh', 'video/vnd.dece.hd'],\n    ['uvi', 'image/vnd.dece.graphic'],\n    ['uvm', 'video/vnd.dece.mobile'],\n    ['uvp', 'video/vnd.dece.pd'],\n    ['uvs', 'video/vnd.dece.sd'],\n    ['uvu', 'video/vnd.uvvu.mp4'],\n    ['uvv', 'video/vnd.dece.video'],\n    ['vcd', 'application/x-cdlink'],\n    ['vcf', 'text/x-vcard'],\n    ['vcg', 'application/vnd.groove-vcard'],\n    ['vcs', 'text/x-vcalendar'],\n    ['vcx', 'application/vnd.vcx'],\n    ['vda', 'application/vda'],\n    ['vdo', 'video/vdo'],\n    ['vew', 'application/groupwise'],\n    ['vis', 'application/vnd.visionary'],\n    ['viv', ['video/vivo', 'video/vnd.vivo']],\n    ['vivo', ['video/vivo', 'video/vnd.vivo']],\n    ['vmd', 'application/vocaltec-media-desc'],\n    ['vmf', 'application/vocaltec-media-file'],\n    ['voc', ['audio/voc', 'audio/x-voc']],\n    ['vos', 'video/vosaic'],\n    ['vox', 'audio/voxware'],\n    ['vqe', 'audio/x-twinvq-plugin'],\n    ['vqf', 'audio/x-twinvq'],\n    ['vql', 'audio/x-twinvq-plugin'],\n    ['vrml', ['model/vrml', 'x-world/x-vrml', 'application/x-vrml']],\n    ['vrt', 'x-world/x-vrt'],\n    ['vsd', ['application/vnd.visio', 'application/x-visio']],\n    ['vsf', 'application/vnd.vsf'],\n    ['vst', 'application/x-visio'],\n    ['vsw', 'application/x-visio'],\n    ['vtu', 'model/vnd.vtu'],\n    ['vxml', 'application/voicexml+xml'],\n    ['w60', 'application/wordperfect6.0'],\n    ['w61', 'application/wordperfect6.1'],\n    ['w6w', 'application/msword'],\n    ['wad', 'application/x-doom'],\n    ['wav', ['audio/wav', 'audio/x-wav']],\n    ['wax', 'audio/x-ms-wax'],\n    ['wb1', 'application/x-qpro'],\n    ['wbmp', 'image/vnd.wap.wbmp'],\n    ['wbs', 'application/vnd.criticaltools.wbs+xml'],\n    ['wbxml', 'application/vnd.wap.wbxml'],\n    ['wcm', 'application/vnd.ms-works'],\n    ['wdb', 'application/vnd.ms-works'],\n    ['web', 'application/vnd.xara'],\n    ['weba', 'audio/webm'],\n    ['webm', 'video/webm'],\n    ['webp', 'image/webp'],\n    ['wg', 'application/vnd.pmi.widget'],\n    ['wgt', 'application/widget'],\n    ['wiz', 'application/msword'],\n    ['wk1', 'application/x-123'],\n    ['wks', 'application/vnd.ms-works'],\n    ['wm', 'video/x-ms-wm'],\n    ['wma', 'audio/x-ms-wma'],\n    ['wmd', 'application/x-ms-wmd'],\n    ['wmf', ['windows/metafile', 'application/x-msmetafile']],\n    ['wml', 'text/vnd.wap.wml'],\n    ['wmlc', 'application/vnd.wap.wmlc'],\n    ['wmls', 'text/vnd.wap.wmlscript'],\n    ['wmlsc', 'application/vnd.wap.wmlscriptc'],\n    ['wmv', 'video/x-ms-wmv'],\n    ['wmx', 'video/x-ms-wmx'],\n    ['wmz', 'application/x-ms-wmz'],\n    ['woff', 'application/x-font-woff'],\n    ['word', 'application/msword'],\n    ['wp', 'application/wordperfect'],\n    ['wp5', ['application/wordperfect', 'application/wordperfect6.0']],\n    ['wp6', 'application/wordperfect'],\n    ['wpd', ['application/wordperfect', 'application/vnd.wordperfect', 'application/x-wpwin']],\n    ['wpl', 'application/vnd.ms-wpl'],\n    ['wps', 'application/vnd.ms-works'],\n    ['wq1', 'application/x-lotus'],\n    ['wqd', 'application/vnd.wqd'],\n    ['wri', ['application/mswrite', 'application/x-wri', 'application/x-mswrite']],\n    ['wrl', ['model/vrml', 'x-world/x-vrml', 'application/x-world']],\n    ['wrz', ['model/vrml', 'x-world/x-vrml']],\n    ['wsc', 'text/scriplet'],\n    ['wsdl', 'application/wsdl+xml'],\n    ['wspolicy', 'application/wspolicy+xml'],\n    ['wsrc', 'application/x-wais-source'],\n    ['wtb', 'application/vnd.webturbo'],\n    ['wtk', 'application/x-wintalk'],\n    ['wvx', 'video/x-ms-wvx'],\n    ['x-png', 'image/png'],\n    ['x3d', 'application/vnd.hzn-3d-crossword'],\n    ['xaf', 'x-world/x-vrml'],\n    ['xap', 'application/x-silverlight-app'],\n    ['xar', 'application/vnd.xara'],\n    ['xbap', 'application/x-ms-xbap'],\n    ['xbd', 'application/vnd.fujixerox.docuworks.binder'],\n    ['xbm', ['image/xbm', 'image/x-xbm', 'image/x-xbitmap']],\n    ['xdf', 'application/xcap-diff+xml'],\n    ['xdm', 'application/vnd.syncml.dm+xml'],\n    ['xdp', 'application/vnd.adobe.xdp+xml'],\n    ['xdr', 'video/x-amt-demorun'],\n    ['xdssc', 'application/dssc+xml'],\n    ['xdw', 'application/vnd.fujixerox.docuworks'],\n    ['xenc', 'application/xenc+xml'],\n    ['xer', 'application/patch-ops-error+xml'],\n    ['xfdf', 'application/vnd.adobe.xfdf'],\n    ['xfdl', 'application/vnd.xfdl'],\n    ['xgz', 'xgl/drawing'],\n    ['xhtml', 'application/xhtml+xml'],\n    ['xif', 'image/vnd.xiff'],\n    ['xl', 'application/excel'],\n    ['xla', ['application/vnd.ms-excel', 'application/excel', 'application/x-msexcel', 'application/x-excel']],\n    ['xlam', 'application/vnd.ms-excel.addin.macroenabled.12'],\n    ['xlb', ['application/excel', 'application/vnd.ms-excel', 'application/x-excel']],\n    ['xlc', ['application/vnd.ms-excel', 'application/excel', 'application/x-excel']],\n    ['xld', ['application/excel', 'application/x-excel']],\n    ['xlk', ['application/excel', 'application/x-excel']],\n    ['xll', ['application/excel', 'application/vnd.ms-excel', 'application/x-excel']],\n    ['xlm', ['application/vnd.ms-excel', 'application/excel', 'application/x-excel']],\n    ['xls', ['application/vnd.ms-excel', 'application/excel', 'application/x-msexcel', 'application/x-excel']],\n    ['xlsb', 'application/vnd.ms-excel.sheet.binary.macroenabled.12'],\n    ['xlsm', 'application/vnd.ms-excel.sheet.macroenabled.12'],\n    ['xlsx', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'],\n    ['xlt', ['application/vnd.ms-excel', 'application/excel', 'application/x-excel']],\n    ['xltm', 'application/vnd.ms-excel.template.macroenabled.12'],\n    ['xltx', 'application/vnd.openxmlformats-officedocument.spreadsheetml.template'],\n    ['xlv', ['application/excel', 'application/x-excel']],\n    ['xlw', ['application/vnd.ms-excel', 'application/excel', 'application/x-msexcel', 'application/x-excel']],\n    ['xm', 'audio/xm'],\n    ['xml', ['application/xml', 'text/xml', 'application/atom+xml', 'application/rss+xml']],\n    ['xmz', 'xgl/movie'],\n    ['xo', 'application/vnd.olpc-sugar'],\n    ['xof', 'x-world/x-vrml'],\n    ['xop', 'application/xop+xml'],\n    ['xpi', 'application/x-xpinstall'],\n    ['xpix', 'application/x-vnd.ls-xpix'],\n    ['xpm', ['image/xpm', 'image/x-xpixmap']],\n    ['xpr', 'application/vnd.is-xpr'],\n    ['xps', 'application/vnd.ms-xpsdocument'],\n    ['xpw', 'application/vnd.intercon.formnet'],\n    ['xslt', 'application/xslt+xml'],\n    ['xsm', 'application/vnd.syncml+xml'],\n    ['xspf', 'application/xspf+xml'],\n    ['xsr', 'video/x-amt-showrun'],\n    ['xul', 'application/vnd.mozilla.xul+xml'],\n    ['xwd', ['image/x-xwd', 'image/x-xwindowdump']],\n    ['xyz', ['chemical/x-xyz', 'chemical/x-pdb']],\n    ['yang', 'application/yang'],\n    ['yin', 'application/yin+xml'],\n    ['z', ['application/x-compressed', 'application/x-compress']],\n    ['zaz', 'application/vnd.zzazz.deck+xml'],\n    ['zip', ['application/zip', 'multipart/x-zip', 'application/x-zip-compressed', 'application/x-compressed']],\n    ['zir', 'application/vnd.zul'],\n    ['zmm', 'application/vnd.handheld-entertainment+xml'],\n    ['zoo', 'application/octet-stream'],\n    ['zsh', 'text/x-script.zsh']\n]);\n\nmodule.exports = {\n    detectMimeType(filename) {\n        if (!filename) {\n            return defaultMimeType;\n        }\n\n        let parsed = path.parse(filename);\n        let extension = (parsed.ext.substr(1) || parsed.name || '').split('?').shift().trim().toLowerCase();\n        let value = defaultMimeType;\n\n        if (extensions.has(extension)) {\n            value = extensions.get(extension);\n        }\n\n        if (Array.isArray(value)) {\n            return value[0];\n        }\n        return value;\n    },\n\n    detectExtension(mimeType) {\n        if (!mimeType) {\n            return defaultExtension;\n        }\n        let parts = (mimeType || '').toLowerCase().trim().split('/');\n        let rootType = parts.shift().trim();\n        let subType = parts.join('/').trim();\n\n        if (mimeTypes.has(rootType + '/' + subType)) {\n            let value = mimeTypes.get(rootType + '/' + subType);\n            if (Array.isArray(value)) {\n                return value[0];\n            }\n            return value;\n        }\n\n        switch (rootType) {\n            case 'text':\n                return 'txt';\n            default:\n                return 'bin';\n        }\n    }\n};\n", "import libDefault from 'crypto';\nmodule.exports = libDefault;", "/*\n\nCopied from https://github.com/mathiasbynens/punycode.js/blob/ef3505c8abb5143a00d53ce59077c9f7f4b2ac47/punycode.js\n\nCopyright Mathias Bynens <https://mathiasbynens.be/>\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\n/* eslint callback-return: 0, no-bitwise: 0, eqeqeq: 0, prefer-arrow-callback: 0, object-shorthand: 0 */\n\n'use strict';\n\n/** Highest positive signed 32-bit float value */\nconst maxInt = 2147483647; // aka. 0x7FFFFFFF or 2^31-1\n\n/** Bootstring parameters */\nconst base = 36;\nconst tMin = 1;\nconst tMax = 26;\nconst skew = 38;\nconst damp = 700;\nconst initialBias = 72;\nconst initialN = 128; // 0x80\nconst delimiter = '-'; // '\\x2D'\n\n/** Regular expressions */\nconst regexPunycode = /^xn--/;\nconst regexNonASCII = /[^\\0-\\x7F]/; // Note: U+007F DEL is excluded too.\nconst regexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g; // RFC 3490 separators\n\n/** Error messages */\nconst errors = {\n    overflow: 'Overflow: input needs wider integers to process',\n    'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n    'invalid-input': 'Invalid input'\n};\n\n/** Convenience shortcuts */\nconst baseMinusTMin = base - tMin;\nconst floor = Math.floor;\nconst stringFromCharCode = String.fromCharCode;\n\n/*--------------------------------------------------------------------------*/\n\n/**\n * A generic error utility function.\n * @private\n * @param {String} type The error type.\n * @returns {Error} Throws a `RangeError` with the applicable error message.\n */\nfunction error(type) {\n    throw new RangeError(errors[type]);\n}\n\n/**\n * A generic `Array#map` utility function.\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} callback The function that gets called for every array\n * item.\n * @returns {Array} A new array of values returned by the callback function.\n */\nfunction map(array, callback) {\n    const result = [];\n    let length = array.length;\n    while (length--) {\n        result[length] = callback(array[length]);\n    }\n    return result;\n}\n\n/**\n * A simple `Array#map`-like wrapper to work with domain name strings or email\n * addresses.\n * @private\n * @param {String} domain The domain name or email address.\n * @param {Function} callback The function that gets called for every\n * character.\n * @returns {String} A new string of characters returned by the callback\n * function.\n */\nfunction mapDomain(domain, callback) {\n    const parts = domain.split('@');\n    let result = '';\n    if (parts.length > 1) {\n        // In email addresses, only the domain name should be punycoded. Leave\n        // the local part (i.e. everything up to `@`) intact.\n        result = parts[0] + '@';\n        domain = parts[1];\n    }\n    // Avoid `split(regex)` for IE8 compatibility. See #17.\n    domain = domain.replace(regexSeparators, '\\x2E');\n    const labels = domain.split('.');\n    const encoded = map(labels, callback).join('.');\n    return result + encoded;\n}\n\n/**\n * Creates an array containing the numeric code points of each Unicode\n * character in the string. While JavaScript uses UCS-2 internally,\n * this function will convert a pair of surrogate halves (each of which\n * UCS-2 exposes as separate characters) into a single code point,\n * matching UTF-16.\n * @see `punycode.ucs2.encode`\n * @see <https://mathiasbynens.be/notes/javascript-encoding>\n * @memberOf punycode.ucs2\n * @name decode\n * @param {String} string The Unicode input string (UCS-2).\n * @returns {Array} The new array of code points.\n */\nfunction ucs2decode(string) {\n    const output = [];\n    let counter = 0;\n    const length = string.length;\n    while (counter < length) {\n        const value = string.charCodeAt(counter++);\n        if (value >= 0xd800 && value <= 0xdbff && counter < length) {\n            // It's a high surrogate, and there is a next character.\n            const extra = string.charCodeAt(counter++);\n            if ((extra & 0xfc00) == 0xdc00) {\n                // Low surrogate.\n                output.push(((value & 0x3ff) << 10) + (extra & 0x3ff) + 0x10000);\n            } else {\n                // It's an unmatched surrogate; only append this code unit, in case the\n                // next code unit is the high surrogate of a surrogate pair.\n                output.push(value);\n                counter--;\n            }\n        } else {\n            output.push(value);\n        }\n    }\n    return output;\n}\n\n/**\n * Creates a string based on an array of numeric code points.\n * @see `punycode.ucs2.decode`\n * @memberOf punycode.ucs2\n * @name encode\n * @param {Array} codePoints The array of numeric code points.\n * @returns {String} The new Unicode string (UCS-2).\n */\nconst ucs2encode = codePoints => String.fromCodePoint(...codePoints);\n\n/**\n * Converts a basic code point into a digit/integer.\n * @see `digitToBasic()`\n * @private\n * @param {Number} codePoint The basic numeric code point value.\n * @returns {Number} The numeric value of a basic code point (for use in\n * representing integers) in the range `0` to `base - 1`, or `base` if\n * the code point does not represent a value.\n */\nconst basicToDigit = function (codePoint) {\n    if (codePoint >= 0x30 && codePoint < 0x3a) {\n        return 26 + (codePoint - 0x30);\n    }\n    if (codePoint >= 0x41 && codePoint < 0x5b) {\n        return codePoint - 0x41;\n    }\n    if (codePoint >= 0x61 && codePoint < 0x7b) {\n        return codePoint - 0x61;\n    }\n    return base;\n};\n\n/**\n * Converts a digit/integer into a basic code point.\n * @see `basicToDigit()`\n * @private\n * @param {Number} digit The numeric value of a basic code point.\n * @returns {Number} The basic code point whose value (when used for\n * representing integers) is `digit`, which needs to be in the range\n * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n * used; else, the lowercase form is used. The behavior is undefined\n * if `flag` is non-zero and `digit` has no uppercase form.\n */\nconst digitToBasic = function (digit, flag) {\n    //  0..25 map to ASCII a..z or A..Z\n    // 26..35 map to ASCII 0..9\n    return digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n};\n\n/**\n * Bias adaptation function as per section 3.4 of RFC 3492.\n * https://tools.ietf.org/html/rfc3492#section-3.4\n * @private\n */\nconst adapt = function (delta, numPoints, firstTime) {\n    let k = 0;\n    delta = firstTime ? floor(delta / damp) : delta >> 1;\n    delta += floor(delta / numPoints);\n    for (; /* no initialization */ delta > (baseMinusTMin * tMax) >> 1; k += base) {\n        delta = floor(delta / baseMinusTMin);\n    }\n    return floor(k + ((baseMinusTMin + 1) * delta) / (delta + skew));\n};\n\n/**\n * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n * symbols.\n * @memberOf punycode\n * @param {String} input The Punycode string of ASCII-only symbols.\n * @returns {String} The resulting string of Unicode symbols.\n */\nconst decode = function (input) {\n    // Don't use UCS-2.\n    const output = [];\n    const inputLength = input.length;\n    let i = 0;\n    let n = initialN;\n    let bias = initialBias;\n\n    // Handle the basic code points: let `basic` be the number of input code\n    // points before the last delimiter, or `0` if there is none, then copy\n    // the first basic code points to the output.\n\n    let basic = input.lastIndexOf(delimiter);\n    if (basic < 0) {\n        basic = 0;\n    }\n\n    for (let j = 0; j < basic; ++j) {\n        // if it's not a basic code point\n        if (input.charCodeAt(j) >= 0x80) {\n            error('not-basic');\n        }\n        output.push(input.charCodeAt(j));\n    }\n\n    // Main decoding loop: start just after the last delimiter if any basic code\n    // points were copied; start at the beginning otherwise.\n\n    for (let index = basic > 0 ? basic + 1 : 0; index < inputLength /* no final expression */; ) {\n        // `index` is the index of the next character to be consumed.\n        // Decode a generalized variable-length integer into `delta`,\n        // which gets added to `i`. The overflow checking is easier\n        // if we increase `i` as we go, then subtract off its starting\n        // value at the end to obtain `delta`.\n        const oldi = i;\n        for (let w = 1, k = base /* no condition */; ; k += base) {\n            if (index >= inputLength) {\n                error('invalid-input');\n            }\n\n            const digit = basicToDigit(input.charCodeAt(index++));\n\n            if (digit >= base) {\n                error('invalid-input');\n            }\n            if (digit > floor((maxInt - i) / w)) {\n                error('overflow');\n            }\n\n            i += digit * w;\n            const t = k <= bias ? tMin : k >= bias + tMax ? tMax : k - bias;\n\n            if (digit < t) {\n                break;\n            }\n\n            const baseMinusT = base - t;\n            if (w > floor(maxInt / baseMinusT)) {\n                error('overflow');\n            }\n\n            w *= baseMinusT;\n        }\n\n        const out = output.length + 1;\n        bias = adapt(i - oldi, out, oldi == 0);\n\n        // `i` was supposed to wrap around from `out` to `0`,\n        // incrementing `n` each time, so we'll fix that now:\n        if (floor(i / out) > maxInt - n) {\n            error('overflow');\n        }\n\n        n += floor(i / out);\n        i %= out;\n\n        // Insert `n` at position `i` of the output.\n        output.splice(i++, 0, n);\n    }\n\n    return String.fromCodePoint(...output);\n};\n\n/**\n * Converts a string of Unicode symbols (e.g. a domain name label) to a\n * Punycode string of ASCII-only symbols.\n * @memberOf punycode\n * @param {String} input The string of Unicode symbols.\n * @returns {String} The resulting Punycode string of ASCII-only symbols.\n */\nconst encode = function (input) {\n    const output = [];\n\n    // Convert the input in UCS-2 to an array of Unicode code points.\n    input = ucs2decode(input);\n\n    // Cache the length.\n    const inputLength = input.length;\n\n    // Initialize the state.\n    let n = initialN;\n    let delta = 0;\n    let bias = initialBias;\n\n    // Handle the basic code points.\n    for (const currentValue of input) {\n        if (currentValue < 0x80) {\n            output.push(stringFromCharCode(currentValue));\n        }\n    }\n\n    const basicLength = output.length;\n    let handledCPCount = basicLength;\n\n    // `handledCPCount` is the number of code points that have been handled;\n    // `basicLength` is the number of basic code points.\n\n    // Finish the basic string with a delimiter unless it's empty.\n    if (basicLength) {\n        output.push(delimiter);\n    }\n\n    // Main encoding loop:\n    while (handledCPCount < inputLength) {\n        // All non-basic code points < n have been handled already. Find the next\n        // larger one:\n        let m = maxInt;\n        for (const currentValue of input) {\n            if (currentValue >= n && currentValue < m) {\n                m = currentValue;\n            }\n        }\n\n        // Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n        // but guard against overflow.\n        const handledCPCountPlusOne = handledCPCount + 1;\n        if (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n            error('overflow');\n        }\n\n        delta += (m - n) * handledCPCountPlusOne;\n        n = m;\n\n        for (const currentValue of input) {\n            if (currentValue < n && ++delta > maxInt) {\n                error('overflow');\n            }\n            if (currentValue === n) {\n                // Represent delta as a generalized variable-length integer.\n                let q = delta;\n                for (let k = base /* no condition */; ; k += base) {\n                    const t = k <= bias ? tMin : k >= bias + tMax ? tMax : k - bias;\n                    if (q < t) {\n                        break;\n                    }\n                    const qMinusT = q - t;\n                    const baseMinusT = base - t;\n                    output.push(stringFromCharCode(digitToBasic(t + (qMinusT % baseMinusT), 0)));\n                    q = floor(qMinusT / baseMinusT);\n                }\n\n                output.push(stringFromCharCode(digitToBasic(q, 0)));\n                bias = adapt(delta, handledCPCountPlusOne, handledCPCount === basicLength);\n                delta = 0;\n                ++handledCPCount;\n            }\n        }\n\n        ++delta;\n        ++n;\n    }\n    return output.join('');\n};\n\n/**\n * Converts a Punycode string representing a domain name or an email address\n * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n * it doesn't matter if you call it on a string that has already been\n * converted to Unicode.\n * @memberOf punycode\n * @param {String} input The Punycoded domain name or email address to\n * convert to Unicode.\n * @returns {String} The Unicode representation of the given Punycode\n * string.\n */\nconst toUnicode = function (input) {\n    return mapDomain(input, function (string) {\n        return regexPunycode.test(string) ? decode(string.slice(4).toLowerCase()) : string;\n    });\n};\n\n/**\n * Converts a Unicode string representing a domain name or an email address to\n * Punycode. Only the non-ASCII parts of the domain name will be converted,\n * i.e. it doesn't matter if you call it with a domain that's already in\n * ASCII.\n * @memberOf punycode\n * @param {String} input The domain name or email address to convert, as a\n * Unicode string.\n * @returns {String} The Punycode representation of the given domain name or\n * email address.\n */\nconst toASCII = function (input) {\n    return mapDomain(input, function (string) {\n        return regexNonASCII.test(string) ? 'xn--' + encode(string) : string;\n    });\n};\n\n/*--------------------------------------------------------------------------*/\n\n/** Define the public API */\nconst punycode = {\n    /**\n     * A string representing the current Punycode.js version number.\n     * @memberOf punycode\n     * @type String\n     */\n    version: '2.3.1',\n    /**\n     * An object of methods to convert from JavaScript's internal character\n     * representation (UCS-2) to Unicode code points, and back.\n     * @see <https://mathiasbynens.be/notes/javascript-encoding>\n     * @memberOf punycode\n     * @type Object\n     */\n    ucs2: {\n        decode: ucs2decode,\n        encode: ucs2encode\n    },\n    decode: decode,\n    encode: encode,\n    toASCII: toASCII,\n    toUnicode: toUnicode\n};\n\nmodule.exports = punycode;\n", "'use strict';\n\nconst Transform = require('stream').Transform;\n\n/**\n * Encodes a Buffer into a base64 encoded string\n *\n * @param {Buffer} buffer Buffer to convert\n * @returns {String} base64 encoded string\n */\nfunction encode(buffer) {\n    if (typeof buffer === 'string') {\n        buffer = Buffer.from(buffer, 'utf-8');\n    }\n\n    return buffer.toString('base64');\n}\n\n/**\n * Adds soft line breaks to a base64 string\n *\n * @param {String} str base64 encoded string that might need line wrapping\n * @param {Number} [lineLength=76] Maximum allowed length for a line\n * @returns {String} Soft-wrapped base64 encoded string\n */\nfunction wrap(str, lineLength) {\n    str = (str || '').toString();\n    lineLength = lineLength || 76;\n\n    if (str.length <= lineLength) {\n        return str;\n    }\n\n    let result = [];\n    let pos = 0;\n    let chunkLength = lineLength * 1024;\n    while (pos < str.length) {\n        let wrappedLines = str.substr(pos, chunkLength).replace(new RegExp('.{' + lineLength + '}', 'g'), '$&\\r\\n');\n        result.push(wrappedLines);\n        pos += chunkLength;\n    }\n\n    return result.join('');\n}\n\n/**\n * Creates a transform stream for encoding data to base64 encoding\n *\n * @constructor\n * @param {Object} options Stream options\n * @param {Number} [options.lineLength=76] Maximum length for lines, set to false to disable wrapping\n */\nclass Encoder extends Transform {\n    constructor(options) {\n        super();\n        this.options = options || {};\n\n        if (this.options.lineLength !== false) {\n            this.options.lineLength = this.options.lineLength || 76;\n        }\n\n        this._curLine = '';\n        this._remainingBytes = false;\n\n        this.inputBytes = 0;\n        this.outputBytes = 0;\n    }\n\n    _transform(chunk, encoding, done) {\n        if (encoding !== 'buffer') {\n            chunk = Buffer.from(chunk, encoding);\n        }\n\n        if (!chunk || !chunk.length) {\n            return setImmediate(done);\n        }\n\n        this.inputBytes += chunk.length;\n\n        if (this._remainingBytes && this._remainingBytes.length) {\n            chunk = Buffer.concat([this._remainingBytes, chunk], this._remainingBytes.length + chunk.length);\n            this._remainingBytes = false;\n        }\n\n        if (chunk.length % 3) {\n            this._remainingBytes = chunk.slice(chunk.length - (chunk.length % 3));\n            chunk = chunk.slice(0, chunk.length - (chunk.length % 3));\n        } else {\n            this._remainingBytes = false;\n        }\n\n        let b64 = this._curLine + encode(chunk);\n\n        if (this.options.lineLength) {\n            b64 = wrap(b64, this.options.lineLength);\n\n            let lastLF = b64.lastIndexOf('\\n');\n            if (lastLF < 0) {\n                this._curLine = b64;\n                b64 = '';\n            } else {\n                this._curLine = b64.substring(lastLF + 1);\n                b64 = b64.substring(0, lastLF + 1);\n\n                if (b64 && !b64.endsWith('\\r\\n')) {\n                    b64 += '\\r\\n';\n                }\n            }\n        } else {\n            this._curLine = '';\n        }\n\n        if (b64) {\n            this.outputBytes += b64.length;\n            this.push(Buffer.from(b64, 'ascii'));\n        }\n\n        setImmediate(done);\n    }\n\n    _flush(done) {\n        if (this._remainingBytes && this._remainingBytes.length) {\n            this._curLine += encode(this._remainingBytes);\n        }\n\n        if (this._curLine) {\n            this.outputBytes += this._curLine.length;\n            this.push(Buffer.from(this._curLine, 'ascii'));\n            this._curLine = '';\n        }\n        done();\n    }\n}\n\nmodule.exports = {\n    encode,\n    wrap,\n    Encoder\n};\n", "'use strict';\n\nconst Transform = require('stream').Transform;\n\n/**\n * Encodes a Buffer into a Quoted-Printable encoded string\n *\n * @param {Buffer} buffer Buffer to convert\n * @returns {String} Quoted-Printable encoded string\n */\nfunction encode(buffer) {\n    if (typeof buffer === 'string') {\n        buffer = Buffer.from(buffer, 'utf-8');\n    }\n\n    // usable characters that do not need encoding\n    let ranges = [\n        // https://tools.ietf.org/html/rfc2045#section-6.7\n        [0x09], // <TAB>\n        [0x0a], // <LF>\n        [0x0d], // <CR>\n        [0x20, 0x3c], // <SP>!\"#$%&'()*+,-./0123456789:;\n        [0x3e, 0x7e] // >?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}\n    ];\n    let result = '';\n    let ord;\n\n    for (let i = 0, len = buffer.length; i < len; i++) {\n        ord = buffer[i];\n        // if the char is in allowed range, then keep as is, unless it is a WS in the end of a line\n        if (\n            checkRanges(ord, ranges) &&\n            !((ord === 0x20 || ord === 0x09) && (i === len - 1 || buffer[i + 1] === 0x0a || buffer[i + 1] === 0x0d))\n        ) {\n            result += String.fromCharCode(ord);\n            continue;\n        }\n        result += '=' + (ord < 0x10 ? '0' : '') + ord.toString(16).toUpperCase();\n    }\n\n    return result;\n}\n\n/**\n * Adds soft line breaks to a Quoted-Printable string\n *\n * @param {String} str Quoted-Printable encoded string that might need line wrapping\n * @param {Number} [lineLength=76] Maximum allowed length for a line\n * @returns {String} Soft-wrapped Quoted-Printable encoded string\n */\nfunction wrap(str, lineLength) {\n    str = (str || '').toString();\n    lineLength = lineLength || 76;\n\n    if (str.length <= lineLength) {\n        return str;\n    }\n\n    let pos = 0;\n    let len = str.length;\n    let match, code, line;\n    let lineMargin = Math.floor(lineLength / 3);\n    let result = '';\n\n    // insert soft linebreaks where needed\n    while (pos < len) {\n        line = str.substr(pos, lineLength);\n        if ((match = line.match(/\\r\\n/))) {\n            line = line.substr(0, match.index + match[0].length);\n            result += line;\n            pos += line.length;\n            continue;\n        }\n\n        if (line.substr(-1) === '\\n') {\n            // nothing to change here\n            result += line;\n            pos += line.length;\n            continue;\n        } else if ((match = line.substr(-lineMargin).match(/\\n.*?$/))) {\n            // truncate to nearest line break\n            line = line.substr(0, line.length - (match[0].length - 1));\n            result += line;\n            pos += line.length;\n            continue;\n        } else if (line.length > lineLength - lineMargin && (match = line.substr(-lineMargin).match(/[ \\t.,!?][^ \\t.,!?]*$/))) {\n            // truncate to nearest space\n            line = line.substr(0, line.length - (match[0].length - 1));\n        } else if (line.match(/[=][\\da-f]{0,2}$/i)) {\n            // push incomplete encoding sequences to the next line\n            if ((match = line.match(/[=][\\da-f]{0,1}$/i))) {\n                line = line.substr(0, line.length - match[0].length);\n            }\n\n            // ensure that utf-8 sequences are not split\n            while (\n                line.length > 3 &&\n                line.length < len - pos &&\n                !line.match(/^(?:=[\\da-f]{2}){1,4}$/i) &&\n                (match = line.match(/[=][\\da-f]{2}$/gi))\n            ) {\n                code = parseInt(match[0].substr(1, 2), 16);\n                if (code < 128) {\n                    break;\n                }\n\n                line = line.substr(0, line.length - 3);\n\n                if (code >= 0xc0) {\n                    break;\n                }\n            }\n        }\n\n        if (pos + line.length < len && line.substr(-1) !== '\\n') {\n            if (line.length === lineLength && line.match(/[=][\\da-f]{2}$/i)) {\n                line = line.substr(0, line.length - 3);\n            } else if (line.length === lineLength) {\n                line = line.substr(0, line.length - 1);\n            }\n            pos += line.length;\n            line += '=\\r\\n';\n        } else {\n            pos += line.length;\n        }\n\n        result += line;\n    }\n\n    return result;\n}\n\n/**\n * Helper function to check if a number is inside provided ranges\n *\n * @param {Number} nr Number to check for\n * @param {Array} ranges An Array of allowed values\n * @returns {Boolean} True if the value was found inside allowed ranges, false otherwise\n */\nfunction checkRanges(nr, ranges) {\n    for (let i = ranges.length - 1; i >= 0; i--) {\n        if (!ranges[i].length) {\n            continue;\n        }\n        if (ranges[i].length === 1 && nr === ranges[i][0]) {\n            return true;\n        }\n        if (ranges[i].length === 2 && nr >= ranges[i][0] && nr <= ranges[i][1]) {\n            return true;\n        }\n    }\n    return false;\n}\n\n/**\n * Creates a transform stream for encoding data to Quoted-Printable encoding\n *\n * @constructor\n * @param {Object} options Stream options\n * @param {Number} [options.lineLength=76] Maximum length for lines, set to false to disable wrapping\n */\nclass Encoder extends Transform {\n    constructor(options) {\n        super();\n\n        // init Transform\n        this.options = options || {};\n\n        if (this.options.lineLength !== false) {\n            this.options.lineLength = this.options.lineLength || 76;\n        }\n\n        this._curLine = '';\n\n        this.inputBytes = 0;\n        this.outputBytes = 0;\n    }\n\n    _transform(chunk, encoding, done) {\n        let qp;\n\n        if (encoding !== 'buffer') {\n            chunk = Buffer.from(chunk, encoding);\n        }\n\n        if (!chunk || !chunk.length) {\n            return done();\n        }\n\n        this.inputBytes += chunk.length;\n\n        if (this.options.lineLength) {\n            qp = this._curLine + encode(chunk);\n            qp = wrap(qp, this.options.lineLength);\n            qp = qp.replace(/(^|\\n)([^\\n]*)$/, (match, lineBreak, lastLine) => {\n                this._curLine = lastLine;\n                return lineBreak;\n            });\n\n            if (qp) {\n                this.outputBytes += qp.length;\n                this.push(qp);\n            }\n        } else {\n            qp = encode(chunk);\n            this.outputBytes += qp.length;\n            this.push(qp, 'ascii');\n        }\n\n        done();\n    }\n\n    _flush(done) {\n        if (this._curLine) {\n            this.outputBytes += this._curLine.length;\n            this.push(this._curLine, 'ascii');\n        }\n        done();\n    }\n}\n\n// expose to the world\nmodule.exports = {\n    encode,\n    wrap,\n    Encoder\n};\n", "/* eslint no-control-regex:0 */\n\n'use strict';\n\nconst base64 = require('../base64');\nconst qp = require('../qp');\nconst mimeTypes = require('./mime-types');\n\nmodule.exports = {\n    /**\n     * Checks if a value is plaintext string (uses only printable 7bit chars)\n     *\n     * @param {String} value String to be tested\n     * @returns {Boolean} true if it is a plaintext string\n     */\n    isPlainText(value, isParam) {\n        const re = isParam ? /[\\x00-\\x08\\x0b\\x0c\\x0e-\\x1f\"\\u0080-\\uFFFF]/ : /[\\x00-\\x08\\x0b\\x0c\\x0e-\\x1f\\u0080-\\uFFFF]/;\n        if (typeof value !== 'string' || re.test(value)) {\n            return false;\n        } else {\n            return true;\n        }\n    },\n\n    /**\n     * Checks if a multi line string containes lines longer than the selected value.\n     *\n     * Useful when detecting if a mail message needs any processing at all \u2013\n     * if only plaintext characters are used and lines are short, then there is\n     * no need to encode the values in any way. If the value is plaintext but has\n     * longer lines then allowed, then use format=flowed\n     *\n     * @param {Number} lineLength Max line length to check for\n     * @returns {Boolean} Returns true if there is at least one line longer than lineLength chars\n     */\n    hasLongerLines(str, lineLength) {\n        if (str.length > 128 * 1024) {\n            // do not test strings longer than 128kB\n            return true;\n        }\n        return new RegExp('^.{' + (lineLength + 1) + ',}', 'm').test(str);\n    },\n\n    /**\n     * Encodes a string or an Buffer to an UTF-8 MIME Word (rfc2047)\n     *\n     * @param {String|Buffer} data String to be encoded\n     * @param {String} mimeWordEncoding='Q' Encoding for the mime word, either Q or B\n     * @param {Number} [maxLength=0] If set, split mime words into several chunks if needed\n     * @return {String} Single or several mime words joined together\n     */\n    encodeWord(data, mimeWordEncoding, maxLength) {\n        mimeWordEncoding = (mimeWordEncoding || 'Q').toString().toUpperCase().trim().charAt(0);\n        maxLength = maxLength || 0;\n\n        let encodedStr;\n        let toCharset = 'UTF-8';\n\n        if (maxLength && maxLength > 7 + toCharset.length) {\n            maxLength -= 7 + toCharset.length;\n        }\n\n        if (mimeWordEncoding === 'Q') {\n            // https://tools.ietf.org/html/rfc2047#section-5 rule (3)\n            encodedStr = qp.encode(data).replace(/[^a-z0-9!*+\\-/=]/gi, chr => {\n                let ord = chr.charCodeAt(0).toString(16).toUpperCase();\n                if (chr === ' ') {\n                    return '_';\n                } else {\n                    return '=' + (ord.length === 1 ? '0' + ord : ord);\n                }\n            });\n        } else if (mimeWordEncoding === 'B') {\n            encodedStr = typeof data === 'string' ? data : base64.encode(data);\n            maxLength = maxLength ? Math.max(3, ((maxLength - (maxLength % 4)) / 4) * 3) : 0;\n        }\n\n        if (maxLength && (mimeWordEncoding !== 'B' ? encodedStr : base64.encode(data)).length > maxLength) {\n            if (mimeWordEncoding === 'Q') {\n                encodedStr = this.splitMimeEncodedString(encodedStr, maxLength).join('?= =?' + toCharset + '?' + mimeWordEncoding + '?');\n            } else {\n                // RFC2047 6.3 (2) states that encoded-word must include an integral number of characters, so no chopping unicode sequences\n                let parts = [];\n                let lpart = '';\n                for (let i = 0, len = encodedStr.length; i < len; i++) {\n                    let chr = encodedStr.charAt(i);\n\n                    if (/[\\ud83c\\ud83d\\ud83e]/.test(chr) && i < len - 1) {\n                        // composite emoji byte, so add the next byte as well\n                        chr += encodedStr.charAt(++i);\n                    }\n\n                    // check if we can add this character to the existing string\n                    // without breaking byte length limit\n                    if (Buffer.byteLength(lpart + chr) <= maxLength || i === 0) {\n                        lpart += chr;\n                    } else {\n                        // we hit the length limit, so push the existing string and start over\n                        parts.push(base64.encode(lpart));\n                        lpart = chr;\n                    }\n                }\n                if (lpart) {\n                    parts.push(base64.encode(lpart));\n                }\n\n                if (parts.length > 1) {\n                    encodedStr = parts.join('?= =?' + toCharset + '?' + mimeWordEncoding + '?');\n                } else {\n                    encodedStr = parts.join('');\n                }\n            }\n        } else if (mimeWordEncoding === 'B') {\n            encodedStr = base64.encode(data);\n        }\n\n        return '=?' + toCharset + '?' + mimeWordEncoding + '?' + encodedStr + (encodedStr.substr(-2) === '?=' ? '' : '?=');\n    },\n\n    /**\n     * Finds word sequences with non ascii text and converts these to mime words\n     *\n     * @param {String} value String to be encoded\n     * @param {String} mimeWordEncoding='Q' Encoding for the mime word, either Q or B\n     * @param {Number} [maxLength=0] If set, split mime words into several chunks if needed\n     * @param {Boolean} [encodeAll=false] If true and the value needs encoding then encodes entire string, not just the smallest match\n     * @return {String} String with possible mime words\n     */\n    encodeWords(value, mimeWordEncoding, maxLength, encodeAll) {\n        maxLength = maxLength || 0;\n\n        let encodedValue;\n\n        // find first word with a non-printable ascii or special symbol in it\n        let firstMatch = value.match(/(?:^|\\s)([^\\s]*[\"\\u0080-\\uFFFF])/);\n        if (!firstMatch) {\n            return value;\n        }\n\n        if (encodeAll) {\n            // if it is requested to encode everything or the string contains something that resebles encoded word, then encode everything\n\n            return this.encodeWord(value, mimeWordEncoding, maxLength);\n        }\n\n        // find the last word with a non-printable ascii in it\n        let lastMatch = value.match(/([\"\\u0080-\\uFFFF][^\\s]*)[^\"\\u0080-\\uFFFF]*$/);\n        if (!lastMatch) {\n            // should not happen\n            return value;\n        }\n\n        let startIndex =\n            firstMatch.index +\n            (\n                firstMatch[0].match(/[^\\s]/) || {\n                    index: 0\n                }\n            ).index;\n        let endIndex = lastMatch.index + (lastMatch[1] || '').length;\n\n        encodedValue =\n            (startIndex ? value.substr(0, startIndex) : '') +\n            this.encodeWord(value.substring(startIndex, endIndex), mimeWordEncoding || 'Q', maxLength) +\n            (endIndex < value.length ? value.substr(endIndex) : '');\n\n        return encodedValue;\n    },\n\n    /**\n     * Joins parsed header value together as 'value; param1=value1; param2=value2'\n     * PS: We are following RFC 822 for the list of special characters that we need to keep in quotes.\n     *      Refer: https://www.w3.org/Protocols/rfc1341/4_Content-Type.html\n     * @param {Object} structured Parsed header value\n     * @return {String} joined header value\n     */\n    buildHeaderValue(structured) {\n        let paramsArray = [];\n\n        Object.keys(structured.params || {}).forEach(param => {\n            // filename might include unicode characters so it is a special case\n            // other values probably do not\n            let value = structured.params[param];\n            if (!this.isPlainText(value, true) || value.length >= 75) {\n                this.buildHeaderParam(param, value, 50).forEach(encodedParam => {\n                    if (!/[\\s\"\\\\;:/=(),<>@[\\]?]|^[-']|'$/.test(encodedParam.value) || encodedParam.key.substr(-1) === '*') {\n                        paramsArray.push(encodedParam.key + '=' + encodedParam.value);\n                    } else {\n                        paramsArray.push(encodedParam.key + '=' + JSON.stringify(encodedParam.value));\n                    }\n                });\n            } else if (/[\\s'\"\\\\;:/=(),<>@[\\]?]|^-/.test(value)) {\n                paramsArray.push(param + '=' + JSON.stringify(value));\n            } else {\n                paramsArray.push(param + '=' + value);\n            }\n        });\n\n        return structured.value + (paramsArray.length ? '; ' + paramsArray.join('; ') : '');\n    },\n\n    /**\n     * Encodes a string or an Buffer to an UTF-8 Parameter Value Continuation encoding (rfc2231)\n     * Useful for splitting long parameter values.\n     *\n     * For example\n     *      title=\"unicode string\"\n     * becomes\n     *     title*0*=utf-8''unicode\n     *     title*1*=%20string\n     *\n     * @param {String|Buffer} data String to be encoded\n     * @param {Number} [maxLength=50] Max length for generated chunks\n     * @param {String} [fromCharset='UTF-8'] Source sharacter set\n     * @return {Array} A list of encoded keys and headers\n     */\n    buildHeaderParam(key, data, maxLength) {\n        let list = [];\n        let encodedStr = typeof data === 'string' ? data : (data || '').toString();\n        let encodedStrArr;\n        let chr, ord;\n        let line;\n        let startPos = 0;\n        let i, len;\n\n        maxLength = maxLength || 50;\n\n        // process ascii only text\n        if (this.isPlainText(data, true)) {\n            // check if conversion is even needed\n            if (encodedStr.length <= maxLength) {\n                return [\n                    {\n                        key,\n                        value: encodedStr\n                    }\n                ];\n            }\n\n            encodedStr = encodedStr.replace(new RegExp('.{' + maxLength + '}', 'g'), str => {\n                list.push({\n                    line: str\n                });\n                return '';\n            });\n\n            if (encodedStr) {\n                list.push({\n                    line: encodedStr\n                });\n            }\n        } else {\n            if (/[\\uD800-\\uDBFF]/.test(encodedStr)) {\n                // string containts surrogate pairs, so normalize it to an array of bytes\n                encodedStrArr = [];\n                for (i = 0, len = encodedStr.length; i < len; i++) {\n                    chr = encodedStr.charAt(i);\n                    ord = chr.charCodeAt(0);\n                    if (ord >= 0xd800 && ord <= 0xdbff && i < len - 1) {\n                        chr += encodedStr.charAt(i + 1);\n                        encodedStrArr.push(chr);\n                        i++;\n                    } else {\n                        encodedStrArr.push(chr);\n                    }\n                }\n                encodedStr = encodedStrArr;\n            }\n\n            // first line includes the charset and language info and needs to be encoded\n            // even if it does not contain any unicode characters\n            line = \"utf-8''\";\n            let encoded = true;\n            startPos = 0;\n\n            // process text with unicode or special chars\n            for (i = 0, len = encodedStr.length; i < len; i++) {\n                chr = encodedStr[i];\n\n                if (encoded) {\n                    chr = this.safeEncodeURIComponent(chr);\n                } else {\n                    // try to urlencode current char\n                    chr = chr === ' ' ? chr : this.safeEncodeURIComponent(chr);\n                    // By default it is not required to encode a line, the need\n                    // only appears when the string contains unicode or special chars\n                    // in this case we start processing the line over and encode all chars\n                    if (chr !== encodedStr[i]) {\n                        // Check if it is even possible to add the encoded char to the line\n                        // If not, there is no reason to use this line, just push it to the list\n                        // and start a new line with the char that needs encoding\n                        if ((this.safeEncodeURIComponent(line) + chr).length >= maxLength) {\n                            list.push({\n                                line,\n                                encoded\n                            });\n                            line = '';\n                            startPos = i - 1;\n                        } else {\n                            encoded = true;\n                            i = startPos;\n                            line = '';\n                            continue;\n                        }\n                    }\n                }\n\n                // if the line is already too long, push it to the list and start a new one\n                if ((line + chr).length >= maxLength) {\n                    list.push({\n                        line,\n                        encoded\n                    });\n                    line = chr = encodedStr[i] === ' ' ? ' ' : this.safeEncodeURIComponent(encodedStr[i]);\n                    if (chr === encodedStr[i]) {\n                        encoded = false;\n                        startPos = i - 1;\n                    } else {\n                        encoded = true;\n                    }\n                } else {\n                    line += chr;\n                }\n            }\n\n            if (line) {\n                list.push({\n                    line,\n                    encoded\n                });\n            }\n        }\n\n        return list.map((item, i) => ({\n            // encoded lines: {name}*{part}*\n            // unencoded lines: {name}*{part}\n            // if any line needs to be encoded then the first line (part==0) is always encoded\n            key: key + '*' + i + (item.encoded ? '*' : ''),\n            value: item.line\n        }));\n    },\n\n    /**\n     * Parses a header value with key=value arguments into a structured\n     * object.\n     *\n     *   parseHeaderValue('content-type: text/plain; CHARSET='UTF-8'') ->\n     *   {\n     *     'value': 'text/plain',\n     *     'params': {\n     *       'charset': 'UTF-8'\n     *     }\n     *   }\n     *\n     * @param {String} str Header value\n     * @return {Object} Header value as a parsed structure\n     */\n    parseHeaderValue(str) {\n        let response = {\n            value: false,\n            params: {}\n        };\n        let key = false;\n        let value = '';\n        let type = 'value';\n        let quote = false;\n        let escaped = false;\n        let chr;\n\n        for (let i = 0, len = str.length; i < len; i++) {\n            chr = str.charAt(i);\n            if (type === 'key') {\n                if (chr === '=') {\n                    key = value.trim().toLowerCase();\n                    type = 'value';\n                    value = '';\n                    continue;\n                }\n                value += chr;\n            } else {\n                if (escaped) {\n                    value += chr;\n                } else if (chr === '\\\\') {\n                    escaped = true;\n                    continue;\n                } else if (quote && chr === quote) {\n                    quote = false;\n                } else if (!quote && chr === '\"') {\n                    quote = chr;\n                } else if (!quote && chr === ';') {\n                    if (key === false) {\n                        response.value = value.trim();\n                    } else {\n                        response.params[key] = value.trim();\n                    }\n                    type = 'key';\n                    value = '';\n                } else {\n                    value += chr;\n                }\n                escaped = false;\n            }\n        }\n\n        if (type === 'value') {\n            if (key === false) {\n                response.value = value.trim();\n            } else {\n                response.params[key] = value.trim();\n            }\n        } else if (value.trim()) {\n            response.params[value.trim().toLowerCase()] = '';\n        }\n\n        // handle parameter value continuations\n        // https://tools.ietf.org/html/rfc2231#section-3\n\n        // preprocess values\n        Object.keys(response.params).forEach(key => {\n            let actualKey, nr, match, value;\n            if ((match = key.match(/(\\*(\\d+)|\\*(\\d+)\\*|\\*)$/))) {\n                actualKey = key.substr(0, match.index);\n                nr = Number(match[2] || match[3]) || 0;\n\n                if (!response.params[actualKey] || typeof response.params[actualKey] !== 'object') {\n                    response.params[actualKey] = {\n                        charset: false,\n                        values: []\n                    };\n                }\n\n                value = response.params[key];\n\n                if (nr === 0 && match[0].substr(-1) === '*' && (match = value.match(/^([^']*)'[^']*'(.*)$/))) {\n                    response.params[actualKey].charset = match[1] || 'iso-8859-1';\n                    value = match[2];\n                }\n\n                response.params[actualKey].values[nr] = value;\n\n                // remove the old reference\n                delete response.params[key];\n            }\n        });\n\n        // concatenate split rfc2231 strings and convert encoded strings to mime encoded words\n        Object.keys(response.params).forEach(key => {\n            let value;\n            if (response.params[key] && Array.isArray(response.params[key].values)) {\n                value = response.params[key].values.map(val => val || '').join('');\n\n                if (response.params[key].charset) {\n                    // convert \"%AB\" to \"=?charset?Q?=AB?=\"\n                    response.params[key] =\n                        '=?' +\n                        response.params[key].charset +\n                        '?Q?' +\n                        value\n                            // fix invalidly encoded chars\n                            .replace(/[=?_\\s]/g, s => {\n                                let c = s.charCodeAt(0).toString(16);\n                                if (s === ' ') {\n                                    return '_';\n                                } else {\n                                    return '%' + (c.length < 2 ? '0' : '') + c;\n                                }\n                            })\n                            // change from urlencoding to percent encoding\n                            .replace(/%/g, '=') +\n                        '?=';\n                } else {\n                    response.params[key] = value;\n                }\n            }\n        });\n\n        return response;\n    },\n\n    /**\n     * Returns file extension for a content type string. If no suitable extensions\n     * are found, 'bin' is used as the default extension\n     *\n     * @param {String} mimeType Content type to be checked for\n     * @return {String} File extension\n     */\n    detectExtension: mimeType => mimeTypes.detectExtension(mimeType),\n\n    /**\n     * Returns content type for a file extension. If no suitable content types\n     * are found, 'application/octet-stream' is used as the default content type\n     *\n     * @param {String} extension Extension to be checked for\n     * @return {String} File extension\n     */\n    detectMimeType: extension => mimeTypes.detectMimeType(extension),\n\n    /**\n     * Folds long lines, useful for folding header lines (afterSpace=false) and\n     * flowed text (afterSpace=true)\n     *\n     * @param {String} str String to be folded\n     * @param {Number} [lineLength=76] Maximum length of a line\n     * @param {Boolean} afterSpace If true, leave a space in th end of a line\n     * @return {String} String with folded lines\n     */\n    foldLines(str, lineLength, afterSpace) {\n        str = (str || '').toString();\n        lineLength = lineLength || 76;\n\n        let pos = 0,\n            len = str.length,\n            result = '',\n            line,\n            match;\n\n        while (pos < len) {\n            line = str.substr(pos, lineLength);\n            if (line.length < lineLength) {\n                result += line;\n                break;\n            }\n            if ((match = line.match(/^[^\\n\\r]*(\\r?\\n|\\r)/))) {\n                line = match[0];\n                result += line;\n                pos += line.length;\n                continue;\n            } else if ((match = line.match(/(\\s+)[^\\s]*$/)) && match[0].length - (afterSpace ? (match[1] || '').length : 0) < line.length) {\n                line = line.substr(0, line.length - (match[0].length - (afterSpace ? (match[1] || '').length : 0)));\n            } else if ((match = str.substr(pos + line.length).match(/^[^\\s]+(\\s*)/))) {\n                line = line + match[0].substr(0, match[0].length - (!afterSpace ? (match[1] || '').length : 0));\n            }\n\n            result += line;\n            pos += line.length;\n            if (pos < len) {\n                result += '\\r\\n';\n            }\n        }\n\n        return result;\n    },\n\n    /**\n     * Splits a mime encoded string. Needed for dividing mime words into smaller chunks\n     *\n     * @param {String} str Mime encoded string to be split up\n     * @param {Number} maxlen Maximum length of characters for one part (minimum 12)\n     * @return {Array} Split string\n     */\n    splitMimeEncodedString: (str, maxlen) => {\n        let curLine,\n            match,\n            chr,\n            done,\n            lines = [];\n\n        // require at least 12 symbols to fit possible 4 octet UTF-8 sequences\n        maxlen = Math.max(maxlen || 0, 12);\n\n        while (str.length) {\n            curLine = str.substr(0, maxlen);\n\n            // move incomplete escaped char back to main\n            if ((match = curLine.match(/[=][0-9A-F]?$/i))) {\n                curLine = curLine.substr(0, match.index);\n            }\n\n            done = false;\n            while (!done) {\n                done = true;\n                // check if not middle of a unicode char sequence\n                if ((match = str.substr(curLine.length).match(/^[=]([0-9A-F]{2})/i))) {\n                    chr = parseInt(match[1], 16);\n                    // invalid sequence, move one char back anc recheck\n                    if (chr < 0xc2 && chr > 0x7f) {\n                        curLine = curLine.substr(0, curLine.length - 3);\n                        done = false;\n                    }\n                }\n            }\n\n            if (curLine.length) {\n                lines.push(curLine);\n            }\n            str = str.substr(curLine.length);\n        }\n\n        return lines;\n    },\n\n    encodeURICharComponent: chr => {\n        let res = '';\n        let ord = chr.charCodeAt(0).toString(16).toUpperCase();\n\n        if (ord.length % 2) {\n            ord = '0' + ord;\n        }\n\n        if (ord.length > 2) {\n            for (let i = 0, len = ord.length / 2; i < len; i++) {\n                res += '%' + ord.substr(i, 2);\n            }\n        } else {\n            res += '%' + ord;\n        }\n\n        return res;\n    },\n\n    safeEncodeURIComponent(str) {\n        str = (str || '').toString();\n\n        try {\n            // might throw if we try to encode invalid sequences, eg. partial emoji\n            str = encodeURIComponent(str);\n        } catch (_E) {\n            // should never run\n            return str.replace(/[^\\x00-\\x1F *'()<>@,;:\\\\\"[\\]?=\\u007F-\\uFFFF]+/g, '');\n        }\n\n        // ensure chars that are not handled by encodeURICompent are converted as well\n        return str.replace(/[\\x00-\\x1F *'()<>@,;:\\\\\"[\\]?=\\u007F-\\uFFFF]/g, chr => this.encodeURICharComponent(chr));\n    }\n};\n", "'use strict';\n\n/**\n * Converts tokens for a single address into an address object\n *\n * @param {Array} tokens Tokens object\n * @return {Object} Address object\n */\nfunction _handleAddress(tokens) {\n    let isGroup = false;\n    let state = 'text';\n    let address;\n    let addresses = [];\n    let data = {\n        address: [],\n        comment: [],\n        group: [],\n        text: [],\n        textWasQuoted: [] // Track which text tokens came from inside quotes\n    };\n    let i;\n    let len;\n    let insideQuotes = false; // Track if we're currently inside a quoted string\n\n    // Filter out <addresses>, (comments) and regular text\n    for (i = 0, len = tokens.length; i < len; i++) {\n        let token = tokens[i];\n        let prevToken = i ? tokens[i - 1] : null;\n        if (token.type === 'operator') {\n            switch (token.value) {\n                case '<':\n                    state = 'address';\n                    insideQuotes = false;\n                    break;\n                case '(':\n                    state = 'comment';\n                    insideQuotes = false;\n                    break;\n                case ':':\n                    state = 'group';\n                    isGroup = true;\n                    insideQuotes = false;\n                    break;\n                case '\"':\n                    // Track quote state for text tokens\n                    insideQuotes = !insideQuotes;\n                    state = 'text';\n                    break;\n                default:\n                    state = 'text';\n                    insideQuotes = false;\n                    break;\n            }\n        } else if (token.value) {\n            if (state === 'address') {\n                // handle use case where unquoted name includes a \"<\"\n                // Apple Mail truncates everything between an unexpected < and an address\n                // and so will we\n                token.value = token.value.replace(/^[^<]*<\\s*/, '');\n            }\n\n            if (prevToken && prevToken.noBreak && data[state].length) {\n                // join values\n                data[state][data[state].length - 1] += token.value;\n                if (state === 'text' && insideQuotes) {\n                    data.textWasQuoted[data.textWasQuoted.length - 1] = true;\n                }\n            } else {\n                data[state].push(token.value);\n                if (state === 'text') {\n                    data.textWasQuoted.push(insideQuotes);\n                }\n            }\n        }\n    }\n\n    // If there is no text but a comment, replace the two\n    if (!data.text.length && data.comment.length) {\n        data.text = data.comment;\n        data.comment = [];\n    }\n\n    if (isGroup) {\n        // http://tools.ietf.org/html/rfc2822#appendix-A.1.3\n        data.text = data.text.join(' ');\n        addresses.push({\n            name: data.text || (address && address.name),\n            group: data.group.length ? addressparser(data.group.join(',')) : []\n        });\n    } else {\n        // If no address was found, try to detect one from regular text\n        if (!data.address.length && data.text.length) {\n            for (i = data.text.length - 1; i >= 0; i--) {\n                // Security fix: Do not extract email addresses from quoted strings\n                // RFC 5321 allows @ inside quoted local-parts like \"user@domain\"@example.com\n                // Extracting emails from quoted text leads to misrouting vulnerabilities\n                if (!data.textWasQuoted[i] && data.text[i].match(/^[^@\\s]+@[^@\\s]+$/)) {\n                    data.address = data.text.splice(i, 1);\n                    data.textWasQuoted.splice(i, 1);\n                    break;\n                }\n            }\n\n            let _regexHandler = function (address) {\n                if (!data.address.length) {\n                    data.address = [address.trim()];\n                    return ' ';\n                } else {\n                    return address;\n                }\n            };\n\n            // still no address\n            if (!data.address.length) {\n                for (i = data.text.length - 1; i >= 0; i--) {\n                    // Security fix: Do not extract email addresses from quoted strings\n                    if (!data.textWasQuoted[i]) {\n                        // fixed the regex to parse email address correctly when email address has more than one @\n                        data.text[i] = data.text[i].replace(/\\s*\\b[^@\\s]+@[^\\s]+\\b\\s*/, _regexHandler).trim();\n                        if (data.address.length) {\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n\n        // If there's still is no text but a comment exixts, replace the two\n        if (!data.text.length && data.comment.length) {\n            data.text = data.comment;\n            data.comment = [];\n        }\n\n        // Keep only the first address occurence, push others to regular text\n        if (data.address.length > 1) {\n            data.text = data.text.concat(data.address.splice(1));\n        }\n\n        // Join values with spaces\n        data.text = data.text.join(' ');\n        data.address = data.address.join(' ');\n\n        if (!data.address && isGroup) {\n            return [];\n        } else {\n            address = {\n                address: data.address || data.text || '',\n                name: data.text || data.address || ''\n            };\n\n            if (address.address === address.name) {\n                if ((address.address || '').match(/@/)) {\n                    address.name = '';\n                } else {\n                    address.address = '';\n                }\n            }\n\n            addresses.push(address);\n        }\n    }\n\n    return addresses;\n}\n\n/**\n * Creates a Tokenizer object for tokenizing address field strings\n *\n * @constructor\n * @param {String} str Address field string\n */\nclass Tokenizer {\n    constructor(str) {\n        this.str = (str || '').toString();\n        this.operatorCurrent = '';\n        this.operatorExpecting = '';\n        this.node = null;\n        this.escaped = false;\n\n        this.list = [];\n        /**\n         * Operator tokens and which tokens are expected to end the sequence\n         */\n        this.operators = {\n            '\"': '\"',\n            '(': ')',\n            '<': '>',\n            ',': '',\n            ':': ';',\n            // Semicolons are not a legal delimiter per the RFC2822 grammar other\n            // than for terminating a group, but they are also not valid for any\n            // other use in this context.  Given that some mail clients have\n            // historically allowed the semicolon as a delimiter equivalent to the\n            // comma in their UI, it makes sense to treat them the same as a comma\n            // when used outside of a group.\n            ';': ''\n        };\n    }\n\n    /**\n     * Tokenizes the original input string\n     *\n     * @return {Array} An array of operator|text tokens\n     */\n    tokenize() {\n        let list = [];\n\n        for (let i = 0, len = this.str.length; i < len; i++) {\n            let chr = this.str.charAt(i);\n            let nextChr = i < len - 1 ? this.str.charAt(i + 1) : null;\n            this.checkChar(chr, nextChr);\n        }\n\n        this.list.forEach(node => {\n            node.value = (node.value || '').toString().trim();\n            if (node.value) {\n                list.push(node);\n            }\n        });\n\n        return list;\n    }\n\n    /**\n     * Checks if a character is an operator or text and acts accordingly\n     *\n     * @param {String} chr Character from the address field\n     */\n    checkChar(chr, nextChr) {\n        if (this.escaped) {\n            // ignore next condition blocks\n        } else if (chr === this.operatorExpecting) {\n            this.node = {\n                type: 'operator',\n                value: chr\n            };\n\n            if (nextChr && ![' ', '\\t', '\\r', '\\n', ',', ';'].includes(nextChr)) {\n                this.node.noBreak = true;\n            }\n\n            this.list.push(this.node);\n            this.node = null;\n            this.operatorExpecting = '';\n            this.escaped = false;\n\n            return;\n        } else if (!this.operatorExpecting && chr in this.operators) {\n            this.node = {\n                type: 'operator',\n                value: chr\n            };\n            this.list.push(this.node);\n            this.node = null;\n            this.operatorExpecting = this.operators[chr];\n            this.escaped = false;\n            return;\n        } else if (['\"', \"'\"].includes(this.operatorExpecting) && chr === '\\\\') {\n            this.escaped = true;\n            return;\n        }\n\n        if (!this.node) {\n            this.node = {\n                type: 'text',\n                value: ''\n            };\n            this.list.push(this.node);\n        }\n\n        if (chr === '\\n') {\n            // Convert newlines to spaces. Carriage return is ignored as \\r and \\n usually\n            // go together anyway and there already is a WS for \\n. Lone \\r means something is fishy.\n            chr = ' ';\n        }\n\n        if (chr.charCodeAt(0) >= 0x21 || [' ', '\\t'].includes(chr)) {\n            // skip command bytes\n            this.node.value += chr;\n        }\n\n        this.escaped = false;\n    }\n}\n\n/**\n * Parses structured e-mail addresses from an address field\n *\n * Example:\n *\n *    'Name <address@domain>'\n *\n * will be converted to\n *\n *     [{name: 'Name', address: 'address@domain'}]\n *\n * @param {String} str Address field\n * @return {Array} An array of address objects\n */\nfunction addressparser(str, options) {\n    options = options || {};\n\n    let tokenizer = new Tokenizer(str);\n    let tokens = tokenizer.tokenize();\n\n    let addresses = [];\n    let address = [];\n    let parsedAddresses = [];\n\n    tokens.forEach(token => {\n        if (token.type === 'operator' && (token.value === ',' || token.value === ';')) {\n            if (address.length) {\n                addresses.push(address);\n            }\n            address = [];\n        } else {\n            address.push(token);\n        }\n    });\n\n    if (address.length) {\n        addresses.push(address);\n    }\n\n    addresses.forEach(address => {\n        address = _handleAddress(address);\n        if (address.length) {\n            parsedAddresses = parsedAddresses.concat(address);\n        }\n    });\n\n    if (options.flatten) {\n        let addresses = [];\n        let walkAddressList = list => {\n            list.forEach(address => {\n                if (address.group) {\n                    return walkAddressList(address.group);\n                } else {\n                    addresses.push(address);\n                }\n            });\n        };\n        walkAddressList(parsedAddresses);\n        return addresses;\n    }\n\n    return parsedAddresses;\n}\n\n// expose to the world\nmodule.exports = addressparser;\n", "'use strict';\n\nconst Transform = require('stream').Transform;\n\nclass LastNewline extends Transform {\n    constructor() {\n        super();\n        this.lastByte = false;\n    }\n\n    _transform(chunk, encoding, done) {\n        if (chunk.length) {\n            this.lastByte = chunk[chunk.length - 1];\n        }\n\n        this.push(chunk);\n        done();\n    }\n\n    _flush(done) {\n        if (this.lastByte === 0x0a) {\n            return done();\n        }\n        if (this.lastByte === 0x0d) {\n            this.push(Buffer.from('\\n'));\n            return done();\n        }\n        this.push(Buffer.from('\\r\\n'));\n        return done();\n    }\n}\n\nmodule.exports = LastNewline;\n", "'use strict';\n\nconst stream = require('stream');\nconst Transform = stream.Transform;\n\n/**\n * Ensures that only <CR><LF> sequences are used for linebreaks\n *\n * @param {Object} options Stream options\n */\nclass LeWindows extends Transform {\n    constructor(options) {\n        super(options);\n        // init Transform\n        this.options = options || {};\n        this.lastByte = false;\n    }\n\n    /**\n     * Escapes dots\n     */\n    _transform(chunk, encoding, done) {\n        let buf;\n        let lastPos = 0;\n\n        for (let i = 0, len = chunk.length; i < len; i++) {\n            if (chunk[i] === 0x0a) {\n                // \\n\n                if ((i && chunk[i - 1] !== 0x0d) || (!i && this.lastByte !== 0x0d)) {\n                    if (i > lastPos) {\n                        buf = chunk.slice(lastPos, i);\n                        this.push(buf);\n                    }\n                    this.push(Buffer.from('\\r\\n'));\n                    lastPos = i + 1;\n                }\n            }\n        }\n\n        if (lastPos && lastPos < chunk.length) {\n            buf = chunk.slice(lastPos);\n            this.push(buf);\n        } else if (!lastPos) {\n            this.push(chunk);\n        }\n\n        this.lastByte = chunk[chunk.length - 1];\n        done();\n    }\n}\n\nmodule.exports = LeWindows;\n", "'use strict';\n\nconst stream = require('stream');\nconst Transform = stream.Transform;\n\n/**\n * Ensures that only <LF> is used for linebreaks\n *\n * @param {Object} options Stream options\n */\nclass LeWindows extends Transform {\n    constructor(options) {\n        super(options);\n        // init Transform\n        this.options = options || {};\n    }\n\n    /**\n     * Escapes dots\n     */\n    _transform(chunk, encoding, done) {\n        let buf;\n        let lastPos = 0;\n\n        for (let i = 0, len = chunk.length; i < len; i++) {\n            if (chunk[i] === 0x0d) {\n                // \\n\n                buf = chunk.slice(lastPos, i);\n                lastPos = i + 1;\n                this.push(buf);\n            }\n        }\n        if (lastPos && lastPos < chunk.length) {\n            buf = chunk.slice(lastPos);\n            this.push(buf);\n        } else if (!lastPos) {\n            this.push(chunk);\n        }\n        done();\n    }\n}\n\nmodule.exports = LeWindows;\n", "/* eslint no-undefined: 0, prefer-spread: 0, no-control-regex: 0 */\n\n'use strict';\n\nconst crypto = require('crypto');\nconst fs = require('fs');\nconst punycode = require('../punycode');\nconst PassThrough = require('stream').PassThrough;\nconst shared = require('../shared');\n\nconst mimeFuncs = require('../mime-funcs');\nconst qp = require('../qp');\nconst base64 = require('../base64');\nconst addressparser = require('../addressparser');\nconst nmfetch = require('../fetch');\nconst LastNewline = require('./last-newline');\n\nconst LeWindows = require('./le-windows');\nconst LeUnix = require('./le-unix');\n\n/**\n * Creates a new mime tree node. Assumes 'multipart/*' as the content type\n * if it is a branch, anything else counts as leaf. If rootNode is missing from\n * the options, assumes this is the root.\n *\n * @param {String} contentType Define the content type for the node. Can be left blank for attachments (derived from filename)\n * @param {Object} [options] optional options\n * @param {Object} [options.rootNode] root node for this tree\n * @param {Object} [options.parentNode] immediate parent for this node\n * @param {Object} [options.filename] filename for an attachment node\n * @param {String} [options.baseBoundary] shared part of the unique multipart boundary\n * @param {Boolean} [options.keepBcc] If true, do not exclude Bcc from the generated headers\n * @param {Function} [options.normalizeHeaderKey] method to normalize header keys for custom caseing\n * @param {String} [options.textEncoding] either 'Q' (the default) or 'B'\n */\nclass MimeNode {\n    constructor(contentType, options) {\n        this.nodeCounter = 0;\n\n        options = options || {};\n\n        /**\n         * shared part of the unique multipart boundary\n         */\n        this.baseBoundary = options.baseBoundary || crypto.randomBytes(8).toString('hex');\n        this.boundaryPrefix = options.boundaryPrefix || '--_NmP';\n\n        this.disableFileAccess = !!options.disableFileAccess;\n        this.disableUrlAccess = !!options.disableUrlAccess;\n\n        this.normalizeHeaderKey = options.normalizeHeaderKey;\n\n        /**\n         * If date headers is missing and current node is the root, this value is used instead\n         */\n        this.date = new Date();\n\n        /**\n         * Root node for current mime tree\n         */\n        this.rootNode = options.rootNode || this;\n\n        /**\n         * If true include Bcc in generated headers (if available)\n         */\n        this.keepBcc = !!options.keepBcc;\n\n        /**\n         * If filename is specified but contentType is not (probably an attachment)\n         * detect the content type from filename extension\n         */\n        if (options.filename) {\n            /**\n             * Filename for this node. Useful with attachments\n             */\n            this.filename = options.filename;\n            if (!contentType) {\n                contentType = mimeFuncs.detectMimeType(this.filename.split('.').pop());\n            }\n        }\n\n        /**\n         * Indicates which encoding should be used for header strings: \"Q\" or \"B\"\n         */\n        this.textEncoding = (options.textEncoding || '').toString().trim().charAt(0).toUpperCase();\n\n        /**\n         * Immediate parent for this node (or undefined if not set)\n         */\n        this.parentNode = options.parentNode;\n\n        /**\n         * Hostname for default message-id values\n         */\n        this.hostname = options.hostname;\n\n        /**\n         * If set to 'win' then uses \\r\\n, if 'linux' then \\n. If not set (or `raw` is used) then newlines are kept as is.\n         */\n        this.newline = options.newline;\n\n        /**\n         * An array for possible child nodes\n         */\n        this.childNodes = [];\n\n        /**\n         * Used for generating unique boundaries (prepended to the shared base)\n         */\n        this._nodeId = ++this.rootNode.nodeCounter;\n\n        /**\n         * A list of header values for this node in the form of [{key:'', value:''}]\n         */\n        this._headers = [];\n\n        /**\n         * True if the content only uses ASCII printable characters\n         * @type {Boolean}\n         */\n        this._isPlainText = false;\n\n        /**\n         * True if the content is plain text but has longer lines than allowed\n         * @type {Boolean}\n         */\n        this._hasLongLines = false;\n\n        /**\n         * If set, use instead this value for envelopes instead of generating one\n         * @type {Boolean}\n         */\n        this._envelope = false;\n\n        /**\n         * If set then use this value as the stream content instead of building it\n         * @type {String|Buffer|Stream}\n         */\n        this._raw = false;\n\n        /**\n         * Additional transform streams that the message will be piped before\n         * exposing by createReadStream\n         * @type {Array}\n         */\n        this._transforms = [];\n\n        /**\n         * Additional process functions that the message will be piped through before\n         * exposing by createReadStream. These functions are run after transforms\n         * @type {Array}\n         */\n        this._processFuncs = [];\n\n        /**\n         * If content type is set (or derived from the filename) add it to headers\n         */\n        if (contentType) {\n            this.setHeader('Content-Type', contentType);\n        }\n    }\n\n    /////// PUBLIC METHODS\n\n    /**\n     * Creates and appends a child node.Arguments provided are passed to MimeNode constructor\n     *\n     * @param {String} [contentType] Optional content type\n     * @param {Object} [options] Optional options object\n     * @return {Object} Created node object\n     */\n    createChild(contentType, options) {\n        if (!options && typeof contentType === 'object') {\n            options = contentType;\n            contentType = undefined;\n        }\n        let node = new MimeNode(contentType, options);\n        this.appendChild(node);\n        return node;\n    }\n\n    /**\n     * Appends an existing node to the mime tree. Removes the node from an existing\n     * tree if needed\n     *\n     * @param {Object} childNode node to be appended\n     * @return {Object} Appended node object\n     */\n    appendChild(childNode) {\n        if (childNode.rootNode !== this.rootNode) {\n            childNode.rootNode = this.rootNode;\n            childNode._nodeId = ++this.rootNode.nodeCounter;\n        }\n\n        childNode.parentNode = this;\n\n        this.childNodes.push(childNode);\n        return childNode;\n    }\n\n    /**\n     * Replaces current node with another node\n     *\n     * @param {Object} node Replacement node\n     * @return {Object} Replacement node\n     */\n    replace(node) {\n        if (node === this) {\n            return this;\n        }\n\n        this.parentNode.childNodes.forEach((childNode, i) => {\n            if (childNode === this) {\n                node.rootNode = this.rootNode;\n                node.parentNode = this.parentNode;\n                node._nodeId = this._nodeId;\n\n                this.rootNode = this;\n                this.parentNode = undefined;\n\n                node.parentNode.childNodes[i] = node;\n            }\n        });\n\n        return node;\n    }\n\n    /**\n     * Removes current node from the mime tree\n     *\n     * @return {Object} removed node\n     */\n    remove() {\n        if (!this.parentNode) {\n            return this;\n        }\n\n        for (let i = this.parentNode.childNodes.length - 1; i >= 0; i--) {\n            if (this.parentNode.childNodes[i] === this) {\n                this.parentNode.childNodes.splice(i, 1);\n                this.parentNode = undefined;\n                this.rootNode = this;\n                return this;\n            }\n        }\n    }\n\n    /**\n     * Sets a header value. If the value for selected key exists, it is overwritten.\n     * You can set multiple values as well by using [{key:'', value:''}] or\n     * {key: 'value'} as the first argument.\n     *\n     * @param {String|Array|Object} key Header key or a list of key value pairs\n     * @param {String} value Header value\n     * @return {Object} current node\n     */\n    setHeader(key, value) {\n        let added = false,\n            headerValue;\n\n        // Allow setting multiple headers at once\n        if (!value && key && typeof key === 'object') {\n            // allow {key:'content-type', value: 'text/plain'}\n            if (key.key && 'value' in key) {\n                this.setHeader(key.key, key.value);\n            } else if (Array.isArray(key)) {\n                // allow [{key:'content-type', value: 'text/plain'}]\n                key.forEach(i => {\n                    this.setHeader(i.key, i.value);\n                });\n            } else {\n                // allow {'content-type': 'text/plain'}\n                Object.keys(key).forEach(i => {\n                    this.setHeader(i, key[i]);\n                });\n            }\n            return this;\n        }\n\n        key = this._normalizeHeaderKey(key);\n\n        headerValue = {\n            key,\n            value\n        };\n\n        // Check if the value exists and overwrite\n        for (let i = 0, len = this._headers.length; i < len; i++) {\n            if (this._headers[i].key === key) {\n                if (!added) {\n                    // replace the first match\n                    this._headers[i] = headerValue;\n                    added = true;\n                } else {\n                    // remove following matches\n                    this._headers.splice(i, 1);\n                    i--;\n                    len--;\n                }\n            }\n        }\n\n        // match not found, append the value\n        if (!added) {\n            this._headers.push(headerValue);\n        }\n\n        return this;\n    }\n\n    /**\n     * Adds a header value. If the value for selected key exists, the value is appended\n     * as a new field and old one is not touched.\n     * You can set multiple values as well by using [{key:'', value:''}] or\n     * {key: 'value'} as the first argument.\n     *\n     * @param {String|Array|Object} key Header key or a list of key value pairs\n     * @param {String} value Header value\n     * @return {Object} current node\n     */\n    addHeader(key, value) {\n        // Allow setting multiple headers at once\n        if (!value && key && typeof key === 'object') {\n            // allow {key:'content-type', value: 'text/plain'}\n            if (key.key && key.value) {\n                this.addHeader(key.key, key.value);\n            } else if (Array.isArray(key)) {\n                // allow [{key:'content-type', value: 'text/plain'}]\n                key.forEach(i => {\n                    this.addHeader(i.key, i.value);\n                });\n            } else {\n                // allow {'content-type': 'text/plain'}\n                Object.keys(key).forEach(i => {\n                    this.addHeader(i, key[i]);\n                });\n            }\n            return this;\n        } else if (Array.isArray(value)) {\n            value.forEach(val => {\n                this.addHeader(key, val);\n            });\n            return this;\n        }\n\n        this._headers.push({\n            key: this._normalizeHeaderKey(key),\n            value\n        });\n\n        return this;\n    }\n\n    /**\n     * Retrieves the first mathcing value of a selected key\n     *\n     * @param {String} key Key to search for\n     * @retun {String} Value for the key\n     */\n    getHeader(key) {\n        key = this._normalizeHeaderKey(key);\n        for (let i = 0, len = this._headers.length; i < len; i++) {\n            if (this._headers[i].key === key) {\n                return this._headers[i].value;\n            }\n        }\n    }\n\n    /**\n     * Sets body content for current node. If the value is a string, charset is added automatically\n     * to Content-Type (if it is text/*). If the value is a Buffer, you need to specify\n     * the charset yourself\n     *\n     * @param (String|Buffer) content Body content\n     * @return {Object} current node\n     */\n    setContent(content) {\n        this.content = content;\n        if (typeof this.content.pipe === 'function') {\n            // pre-stream handler. might be triggered if a stream is set as content\n            // and 'error' fires before anything is done with this stream\n            this._contentErrorHandler = err => {\n                this.content.removeListener('error', this._contentErrorHandler);\n                this.content = err;\n            };\n            this.content.once('error', this._contentErrorHandler);\n        } else if (typeof this.content === 'string') {\n            this._isPlainText = mimeFuncs.isPlainText(this.content);\n            if (this._isPlainText && mimeFuncs.hasLongerLines(this.content, 76)) {\n                // If there are lines longer than 76 symbols/bytes do not use 7bit\n                this._hasLongLines = true;\n            }\n        }\n        return this;\n    }\n\n    build(callback) {\n        let promise;\n\n        if (!callback) {\n            promise = new Promise((resolve, reject) => {\n                callback = shared.callbackPromise(resolve, reject);\n            });\n        }\n\n        let stream = this.createReadStream();\n        let buf = [];\n        let buflen = 0;\n        let returned = false;\n\n        stream.on('readable', () => {\n            let chunk;\n\n            while ((chunk = stream.read()) !== null) {\n                buf.push(chunk);\n                buflen += chunk.length;\n            }\n        });\n\n        stream.once('error', err => {\n            if (returned) {\n                return;\n            }\n            returned = true;\n\n            return callback(err);\n        });\n\n        stream.once('end', chunk => {\n            if (returned) {\n                return;\n            }\n            returned = true;\n\n            if (chunk && chunk.length) {\n                buf.push(chunk);\n                buflen += chunk.length;\n            }\n            return callback(null, Buffer.concat(buf, buflen));\n        });\n\n        return promise;\n    }\n\n    getTransferEncoding() {\n        let transferEncoding = false;\n        let contentType = (this.getHeader('Content-Type') || '').toString().toLowerCase().trim();\n\n        if (this.content) {\n            transferEncoding = (this.getHeader('Content-Transfer-Encoding') || '').toString().toLowerCase().trim();\n            if (!transferEncoding || !['base64', 'quoted-printable'].includes(transferEncoding)) {\n                if (/^text\\//i.test(contentType)) {\n                    // If there are no special symbols, no need to modify the text\n                    if (this._isPlainText && !this._hasLongLines) {\n                        transferEncoding = '7bit';\n                    } else if (typeof this.content === 'string' || this.content instanceof Buffer) {\n                        // detect preferred encoding for string value\n                        transferEncoding = this._getTextEncoding(this.content) === 'Q' ? 'quoted-printable' : 'base64';\n                    } else {\n                        // we can not check content for a stream, so either use preferred encoding or fallback to QP\n                        transferEncoding = this.textEncoding === 'B' ? 'base64' : 'quoted-printable';\n                    }\n                } else if (!/^(multipart|message)\\//i.test(contentType)) {\n                    transferEncoding = transferEncoding || 'base64';\n                }\n            }\n        }\n        return transferEncoding;\n    }\n\n    /**\n     * Builds the header block for the mime node. Append \\r\\n\\r\\n before writing the content\n     *\n     * @returns {String} Headers\n     */\n    buildHeaders() {\n        let transferEncoding = this.getTransferEncoding();\n        let headers = [];\n\n        if (transferEncoding) {\n            this.setHeader('Content-Transfer-Encoding', transferEncoding);\n        }\n\n        if (this.filename && !this.getHeader('Content-Disposition')) {\n            this.setHeader('Content-Disposition', 'attachment');\n        }\n\n        // Ensure mandatory header fields\n        if (this.rootNode === this) {\n            if (!this.getHeader('Date')) {\n                this.setHeader('Date', this.date.toUTCString().replace(/GMT/, '+0000'));\n            }\n\n            // ensure that Message-Id is present\n            this.messageId();\n\n            if (!this.getHeader('MIME-Version')) {\n                this.setHeader('MIME-Version', '1.0');\n            }\n\n            // Ensure that Content-Type is the last header for the root node\n            for (let i = this._headers.length - 2; i >= 0; i--) {\n                let header = this._headers[i];\n                if (header.key === 'Content-Type') {\n                    this._headers.splice(i, 1);\n                    this._headers.push(header);\n                }\n            }\n        }\n\n        this._headers.forEach(header => {\n            let key = header.key;\n            let value = header.value;\n            let structured;\n            let param;\n            let options = {};\n            let formattedHeaders = ['From', 'Sender', 'To', 'Cc', 'Bcc', 'Reply-To', 'Date', 'References'];\n\n            if (value && typeof value === 'object' && !formattedHeaders.includes(key)) {\n                Object.keys(value).forEach(key => {\n                    if (key !== 'value') {\n                        options[key] = value[key];\n                    }\n                });\n                value = (value.value || '').toString();\n                if (!value.trim()) {\n                    return;\n                }\n            }\n\n            if (options.prepared) {\n                // header value is\n                if (options.foldLines) {\n                    headers.push(mimeFuncs.foldLines(key + ': ' + value));\n                } else {\n                    headers.push(key + ': ' + value);\n                }\n                return;\n            }\n\n            switch (header.key) {\n                case 'Content-Disposition':\n                    structured = mimeFuncs.parseHeaderValue(value);\n                    if (this.filename) {\n                        structured.params.filename = this.filename;\n                    }\n                    value = mimeFuncs.buildHeaderValue(structured);\n                    break;\n\n                case 'Content-Type':\n                    structured = mimeFuncs.parseHeaderValue(value);\n\n                    this._handleContentType(structured);\n\n                    if (\n                        structured.value.match(/^text\\/plain\\b/) &&\n                        typeof this.content === 'string' &&\n                        /[\\u0080-\\uFFFF]/.test(this.content)\n                    ) {\n                        structured.params.charset = 'utf-8';\n                    }\n\n                    value = mimeFuncs.buildHeaderValue(structured);\n\n                    if (this.filename) {\n                        // add support for non-compliant clients like QQ webmail\n                        // we can't build the value with buildHeaderValue as the value is non standard and\n                        // would be converted to parameter continuation encoding that we do not want\n                        param = this._encodeWords(this.filename);\n\n                        if (param !== this.filename || /[\\s'\"\\\\;:/=(),<>@[\\]?]|^-/.test(param)) {\n                            // include value in quotes if needed\n                            param = '\"' + param + '\"';\n                        }\n                        value += '; name=' + param;\n                    }\n                    break;\n\n                case 'Bcc':\n                    if (!this.keepBcc) {\n                        // skip BCC values\n                        return;\n                    }\n                    break;\n            }\n\n            value = this._encodeHeaderValue(key, value);\n\n            // skip empty lines\n            if (!(value || '').toString().trim()) {\n                return;\n            }\n\n            if (typeof this.normalizeHeaderKey === 'function') {\n                let normalized = this.normalizeHeaderKey(key, value);\n                if (normalized && typeof normalized === 'string' && normalized.length) {\n                    key = normalized;\n                }\n            }\n\n            headers.push(mimeFuncs.foldLines(key + ': ' + value, 76));\n        });\n\n        return headers.join('\\r\\n');\n    }\n\n    /**\n     * Streams the rfc2822 message from the current node. If this is a root node,\n     * mandatory header fields are set if missing (Date, Message-Id, MIME-Version)\n     *\n     * @return {String} Compiled message\n     */\n    createReadStream(options) {\n        options = options || {};\n\n        let stream = new PassThrough(options);\n        let outputStream = stream;\n        let transform;\n\n        this.stream(stream, options, err => {\n            if (err) {\n                outputStream.emit('error', err);\n                return;\n            }\n            stream.end();\n        });\n\n        for (let i = 0, len = this._transforms.length; i < len; i++) {\n            transform = typeof this._transforms[i] === 'function' ? this._transforms[i]() : this._transforms[i];\n            outputStream.once('error', err => {\n                transform.emit('error', err);\n            });\n            outputStream = outputStream.pipe(transform);\n        }\n\n        // ensure terminating newline after possible user transforms\n        transform = new LastNewline();\n        outputStream.once('error', err => {\n            transform.emit('error', err);\n        });\n        outputStream = outputStream.pipe(transform);\n\n        // dkim and stuff\n        for (let i = 0, len = this._processFuncs.length; i < len; i++) {\n            transform = this._processFuncs[i];\n            outputStream = transform(outputStream);\n        }\n\n        if (this.newline) {\n            const winbreak = ['win', 'windows', 'dos', '\\r\\n'].includes(this.newline.toString().toLowerCase());\n            const newlineTransform = winbreak ? new LeWindows() : new LeUnix();\n\n            const stream = outputStream.pipe(newlineTransform);\n            outputStream.on('error', err => stream.emit('error', err));\n            return stream;\n        }\n\n        return outputStream;\n    }\n\n    /**\n     * Appends a transform stream object to the transforms list. Final output\n     * is passed through this stream before exposing\n     *\n     * @param {Object} transform Read-Write stream\n     */\n    transform(transform) {\n        this._transforms.push(transform);\n    }\n\n    /**\n     * Appends a post process function. The functon is run after transforms and\n     * uses the following syntax\n     *\n     *   processFunc(input) -> outputStream\n     *\n     * @param {Object} processFunc Read-Write stream\n     */\n    processFunc(processFunc) {\n        this._processFuncs.push(processFunc);\n    }\n\n    stream(outputStream, options, done) {\n        let transferEncoding = this.getTransferEncoding();\n        let contentStream;\n        let localStream;\n\n        // protect actual callback against multiple triggering\n        let returned = false;\n        let callback = err => {\n            if (returned) {\n                return;\n            }\n            returned = true;\n            done(err);\n        };\n\n        // for multipart nodes, push child nodes\n        // for content nodes end the stream\n        let finalize = () => {\n            let childId = 0;\n            let processChildNode = () => {\n                if (childId >= this.childNodes.length) {\n                    outputStream.write('\\r\\n--' + this.boundary + '--\\r\\n');\n                    return callback();\n                }\n                let child = this.childNodes[childId++];\n                outputStream.write((childId > 1 ? '\\r\\n' : '') + '--' + this.boundary + '\\r\\n');\n                child.stream(outputStream, options, err => {\n                    if (err) {\n                        return callback(err);\n                    }\n                    setImmediate(processChildNode);\n                });\n            };\n\n            if (this.multipart) {\n                setImmediate(processChildNode);\n            } else {\n                return callback();\n            }\n        };\n\n        // pushes node content\n        let sendContent = () => {\n            if (this.content) {\n                if (Object.prototype.toString.call(this.content) === '[object Error]') {\n                    // content is already errored\n                    return callback(this.content);\n                }\n\n                if (typeof this.content.pipe === 'function') {\n                    this.content.removeListener('error', this._contentErrorHandler);\n                    this._contentErrorHandler = err => callback(err);\n                    this.content.once('error', this._contentErrorHandler);\n                }\n\n                let createStream = () => {\n                    if (['quoted-printable', 'base64'].includes(transferEncoding)) {\n                        contentStream = new (transferEncoding === 'base64' ? base64 : qp).Encoder(options);\n\n                        contentStream.pipe(outputStream, {\n                            end: false\n                        });\n                        contentStream.once('end', finalize);\n                        contentStream.once('error', err => callback(err));\n\n                        localStream = this._getStream(this.content);\n                        localStream.pipe(contentStream);\n                    } else {\n                        // anything that is not QP or Base54 passes as-is\n                        localStream = this._getStream(this.content);\n                        localStream.pipe(outputStream, {\n                            end: false\n                        });\n                        localStream.once('end', finalize);\n                    }\n\n                    localStream.once('error', err => callback(err));\n                };\n\n                if (this.content._resolve) {\n                    let chunks = [];\n                    let chunklen = 0;\n                    let returned = false;\n                    let sourceStream = this._getStream(this.content);\n                    sourceStream.on('error', err => {\n                        if (returned) {\n                            return;\n                        }\n                        returned = true;\n                        callback(err);\n                    });\n                    sourceStream.on('readable', () => {\n                        let chunk;\n                        while ((chunk = sourceStream.read()) !== null) {\n                            chunks.push(chunk);\n                            chunklen += chunk.length;\n                        }\n                    });\n                    sourceStream.on('end', () => {\n                        if (returned) {\n                            return;\n                        }\n                        returned = true;\n                        this.content._resolve = false;\n                        this.content._resolvedValue = Buffer.concat(chunks, chunklen);\n                        setImmediate(createStream);\n                    });\n                } else {\n                    setImmediate(createStream);\n                }\n                return;\n            } else {\n                return setImmediate(finalize);\n            }\n        };\n\n        if (this._raw) {\n            setImmediate(() => {\n                if (Object.prototype.toString.call(this._raw) === '[object Error]') {\n                    // content is already errored\n                    return callback(this._raw);\n                }\n\n                // remove default error handler (if set)\n                if (typeof this._raw.pipe === 'function') {\n                    this._raw.removeListener('error', this._contentErrorHandler);\n                }\n\n                let raw = this._getStream(this._raw);\n                raw.pipe(outputStream, {\n                    end: false\n                });\n                raw.on('error', err => outputStream.emit('error', err));\n                raw.on('end', finalize);\n            });\n        } else {\n            outputStream.write(this.buildHeaders() + '\\r\\n\\r\\n');\n            setImmediate(sendContent);\n        }\n    }\n\n    /**\n     * Sets envelope to be used instead of the generated one\n     *\n     * @return {Object} SMTP envelope in the form of {from: 'from@example.com', to: ['to@example.com']}\n     */\n    setEnvelope(envelope) {\n        let list;\n\n        this._envelope = {\n            from: false,\n            to: []\n        };\n\n        if (envelope.from) {\n            list = [];\n            this._convertAddresses(this._parseAddresses(envelope.from), list);\n            list = list.filter(address => address && address.address);\n            if (list.length && list[0]) {\n                this._envelope.from = list[0].address;\n            }\n        }\n        ['to', 'cc', 'bcc'].forEach(key => {\n            if (envelope[key]) {\n                this._convertAddresses(this._parseAddresses(envelope[key]), this._envelope.to);\n            }\n        });\n\n        this._envelope.to = this._envelope.to.map(to => to.address).filter(address => address);\n\n        let standardFields = ['to', 'cc', 'bcc', 'from'];\n        Object.keys(envelope).forEach(key => {\n            if (!standardFields.includes(key)) {\n                this._envelope[key] = envelope[key];\n            }\n        });\n\n        return this;\n    }\n\n    /**\n     * Generates and returns an object with parsed address fields\n     *\n     * @return {Object} Address object\n     */\n    getAddresses() {\n        let addresses = {};\n\n        this._headers.forEach(header => {\n            let key = header.key.toLowerCase();\n            if (['from', 'sender', 'reply-to', 'to', 'cc', 'bcc'].includes(key)) {\n                if (!Array.isArray(addresses[key])) {\n                    addresses[key] = [];\n                }\n\n                this._convertAddresses(this._parseAddresses(header.value), addresses[key]);\n            }\n        });\n\n        return addresses;\n    }\n\n    /**\n     * Generates and returns SMTP envelope with the sender address and a list of recipients addresses\n     *\n     * @return {Object} SMTP envelope in the form of {from: 'from@example.com', to: ['to@example.com']}\n     */\n    getEnvelope() {\n        if (this._envelope) {\n            return this._envelope;\n        }\n\n        let envelope = {\n            from: false,\n            to: []\n        };\n        this._headers.forEach(header => {\n            let list = [];\n            if (header.key === 'From' || (!envelope.from && ['Reply-To', 'Sender'].includes(header.key))) {\n                this._convertAddresses(this._parseAddresses(header.value), list);\n                if (list.length && list[0]) {\n                    envelope.from = list[0].address;\n                }\n            } else if (['To', 'Cc', 'Bcc'].includes(header.key)) {\n                this._convertAddresses(this._parseAddresses(header.value), envelope.to);\n            }\n        });\n\n        envelope.to = envelope.to.map(to => to.address);\n\n        return envelope;\n    }\n\n    /**\n     * Returns Message-Id value. If it does not exist, then creates one\n     *\n     * @return {String} Message-Id value\n     */\n    messageId() {\n        let messageId = this.getHeader('Message-ID');\n        // You really should define your own Message-Id field!\n        if (!messageId) {\n            messageId = this._generateMessageId();\n            this.setHeader('Message-ID', messageId);\n        }\n        return messageId;\n    }\n\n    /**\n     * Sets pregenerated content that will be used as the output of this node\n     *\n     * @param {String|Buffer|Stream} Raw MIME contents\n     */\n    setRaw(raw) {\n        this._raw = raw;\n\n        if (this._raw && typeof this._raw.pipe === 'function') {\n            // pre-stream handler. might be triggered if a stream is set as content\n            // and 'error' fires before anything is done with this stream\n            this._contentErrorHandler = err => {\n                this._raw.removeListener('error', this._contentErrorHandler);\n                this._raw = err;\n            };\n            this._raw.once('error', this._contentErrorHandler);\n        }\n\n        return this;\n    }\n\n    /////// PRIVATE METHODS\n\n    /**\n     * Detects and returns handle to a stream related with the content.\n     *\n     * @param {Mixed} content Node content\n     * @returns {Object} Stream object\n     */\n    _getStream(content) {\n        let contentStream;\n\n        if (content._resolvedValue) {\n            // pass string or buffer content as a stream\n            contentStream = new PassThrough();\n\n            setImmediate(() => {\n                try {\n                    contentStream.end(content._resolvedValue);\n                } catch (_err) {\n                    contentStream.emit('error', _err);\n                }\n            });\n\n            return contentStream;\n        } else if (typeof content.pipe === 'function') {\n            // assume as stream\n            return content;\n        } else if (content && typeof content.path === 'string' && !content.href) {\n            if (this.disableFileAccess) {\n                contentStream = new PassThrough();\n                setImmediate(() => contentStream.emit('error', new Error('File access rejected for ' + content.path)));\n                return contentStream;\n            }\n            // read file\n            return fs.createReadStream(content.path);\n        } else if (content && typeof content.href === 'string') {\n            if (this.disableUrlAccess) {\n                contentStream = new PassThrough();\n                setImmediate(() => contentStream.emit('error', new Error('Url access rejected for ' + content.href)));\n                return contentStream;\n            }\n            // fetch URL\n            return nmfetch(content.href, { headers: content.httpHeaders });\n        } else {\n            // pass string or buffer content as a stream\n            contentStream = new PassThrough();\n\n            setImmediate(() => {\n                try {\n                    contentStream.end(content || '');\n                } catch (_err) {\n                    contentStream.emit('error', _err);\n                }\n            });\n            return contentStream;\n        }\n    }\n\n    /**\n     * Parses addresses. Takes in a single address or an array or an\n     * array of address arrays (eg. To: [[first group], [second group],...])\n     *\n     * @param {Mixed} addresses Addresses to be parsed\n     * @return {Array} An array of address objects\n     */\n    _parseAddresses(addresses) {\n        return [].concat.apply(\n            [],\n            [].concat(addresses).map(address => {\n                if (address && address.address) {\n                    address.address = this._normalizeAddress(address.address);\n                    address.name = address.name || '';\n                    return [address];\n                }\n                return addressparser(address);\n            })\n        );\n    }\n\n    /**\n     * Normalizes a header key, uses Camel-Case form, except for uppercase MIME-\n     *\n     * @param {String} key Key to be normalized\n     * @return {String} key in Camel-Case form\n     */\n    _normalizeHeaderKey(key) {\n        key = (key || '')\n            .toString()\n            // no newlines in keys\n            .replace(/\\r?\\n|\\r/g, ' ')\n            .trim()\n            .toLowerCase()\n            // use uppercase words, except MIME\n            .replace(/^X-SMTPAPI$|^(MIME|DKIM|ARC|BIMI)\\b|^[a-z]|-(SPF|FBL|ID|MD5)$|-[a-z]/gi, c => c.toUpperCase())\n            // special case\n            .replace(/^Content-Features$/i, 'Content-features');\n\n        return key;\n    }\n\n    /**\n     * Checks if the content type is multipart and defines boundary if needed.\n     * Doesn't return anything, modifies object argument instead.\n     *\n     * @param {Object} structured Parsed header value for 'Content-Type' key\n     */\n    _handleContentType(structured) {\n        this.contentType = structured.value.trim().toLowerCase();\n\n        this.multipart = /^multipart\\//i.test(this.contentType) ? this.contentType.substr(this.contentType.indexOf('/') + 1) : false;\n\n        if (this.multipart) {\n            this.boundary = structured.params.boundary = structured.params.boundary || this.boundary || this._generateBoundary();\n        } else {\n            this.boundary = false;\n        }\n    }\n\n    /**\n     * Generates a multipart boundary value\n     *\n     * @return {String} boundary value\n     */\n    _generateBoundary() {\n        return this.rootNode.boundaryPrefix + '-' + this.rootNode.baseBoundary + '-Part_' + this._nodeId;\n    }\n\n    /**\n     * Encodes a header value for use in the generated rfc2822 email.\n     *\n     * @param {String} key Header key\n     * @param {String} value Header value\n     */\n    _encodeHeaderValue(key, value) {\n        key = this._normalizeHeaderKey(key);\n\n        switch (key) {\n            // Structured headers\n            case 'From':\n            case 'Sender':\n            case 'To':\n            case 'Cc':\n            case 'Bcc':\n            case 'Reply-To':\n                return this._convertAddresses(this._parseAddresses(value));\n\n            // values enclosed in <>\n            case 'Message-ID':\n            case 'In-Reply-To':\n            case 'Content-Id':\n                value = (value || '').toString().replace(/\\r?\\n|\\r/g, ' ');\n\n                if (value.charAt(0) !== '<') {\n                    value = '<' + value;\n                }\n\n                if (value.charAt(value.length - 1) !== '>') {\n                    value = value + '>';\n                }\n                return value;\n\n            // space separated list of values enclosed in <>\n            case 'References':\n                value = [].concat\n                    .apply(\n                        [],\n                        [].concat(value || '').map(elm => {\n                            elm = (elm || '')\n                                .toString()\n                                .replace(/\\r?\\n|\\r/g, ' ')\n                                .trim();\n                            return elm.replace(/<[^>]*>/g, str => str.replace(/\\s/g, '')).split(/\\s+/);\n                        })\n                    )\n                    .map(elm => {\n                        if (elm.charAt(0) !== '<') {\n                            elm = '<' + elm;\n                        }\n                        if (elm.charAt(elm.length - 1) !== '>') {\n                            elm = elm + '>';\n                        }\n                        return elm;\n                    });\n\n                return value.join(' ').trim();\n\n            case 'Date':\n                if (Object.prototype.toString.call(value) === '[object Date]') {\n                    return value.toUTCString().replace(/GMT/, '+0000');\n                }\n\n                value = (value || '').toString().replace(/\\r?\\n|\\r/g, ' ');\n                return this._encodeWords(value);\n\n            case 'Content-Type':\n            case 'Content-Disposition':\n                // if it includes a filename then it is already encoded\n                return (value || '').toString().replace(/\\r?\\n|\\r/g, ' ');\n\n            default:\n                value = (value || '').toString().replace(/\\r?\\n|\\r/g, ' ');\n                // encodeWords only encodes if needed, otherwise the original string is returned\n                return this._encodeWords(value);\n        }\n    }\n\n    /**\n     * Rebuilds address object using punycode and other adjustments\n     *\n     * @param {Array} addresses An array of address objects\n     * @param {Array} [uniqueList] An array to be populated with addresses\n     * @return {String} address string\n     */\n    _convertAddresses(addresses, uniqueList) {\n        let values = [];\n\n        uniqueList = uniqueList || [];\n\n        [].concat(addresses || []).forEach(address => {\n            if (address.address) {\n                address.address = this._normalizeAddress(address.address);\n\n                if (!address.name) {\n                    values.push(address.address.indexOf(' ') >= 0 ? `<${address.address}>` : `${address.address}`);\n                } else if (address.name) {\n                    values.push(`${this._encodeAddressName(address.name)} <${address.address}>`);\n                }\n\n                if (address.address) {\n                    if (!uniqueList.filter(a => a.address === address.address).length) {\n                        uniqueList.push(address);\n                    }\n                }\n            } else if (address.group) {\n                let groupListAddresses = (address.group.length ? this._convertAddresses(address.group, uniqueList) : '').trim();\n                values.push(`${this._encodeAddressName(address.name)}:${groupListAddresses};`);\n            }\n        });\n\n        return values.join(', ');\n    }\n\n    /**\n     * Normalizes an email address\n     *\n     * @param {Array} address An array of address objects\n     * @return {String} address string\n     */\n    _normalizeAddress(address) {\n        address = (address || '')\n            .toString()\n            .replace(/[\\x00-\\x1F<>]+/g, ' ') // remove unallowed characters\n            .trim();\n\n        let lastAt = address.lastIndexOf('@');\n        if (lastAt < 0) {\n            // Bare username\n            return address;\n        }\n\n        let user = address.substr(0, lastAt);\n        let domain = address.substr(lastAt + 1);\n\n        // Usernames are not touched and are kept as is even if these include unicode\n        // Domains are punycoded by default\n        // 'j\u00F5geva.ee' will be converted to 'xn--jgeva-dua.ee'\n        // non-unicode domains are left as is\n\n        let encodedDomain;\n\n        try {\n            encodedDomain = punycode.toASCII(domain.toLowerCase());\n        } catch (_err) {\n            // keep as is?\n        }\n\n        if (user.indexOf(' ') >= 0) {\n            if (user.charAt(0) !== '\"') {\n                user = '\"' + user;\n            }\n            if (user.substr(-1) !== '\"') {\n                user = user + '\"';\n            }\n        }\n\n        return `${user}@${encodedDomain}`;\n    }\n\n    /**\n     * If needed, mime encodes the name part\n     *\n     * @param {String} name Name part of an address\n     * @returns {String} Mime word encoded string if needed\n     */\n    _encodeAddressName(name) {\n        if (!/^[\\w ]*$/.test(name)) {\n            if (/^[\\x20-\\x7e]*$/.test(name)) {\n                return '\"' + name.replace(/([\\\\\"])/g, '\\\\$1') + '\"';\n            } else {\n                return mimeFuncs.encodeWord(name, this._getTextEncoding(name), 52);\n            }\n        }\n        return name;\n    }\n\n    /**\n     * If needed, mime encodes the name part\n     *\n     * @param {String} name Name part of an address\n     * @returns {String} Mime word encoded string if needed\n     */\n    _encodeWords(value) {\n        // set encodeAll parameter to true even though it is against the recommendation of RFC2047,\n        // by default only words that include non-ascii should be converted into encoded words\n        // but some clients (eg. Zimbra) do not handle it properly and remove surrounding whitespace\n        return mimeFuncs.encodeWords(value, this._getTextEncoding(value), 52, true);\n    }\n\n    /**\n     * Detects best mime encoding for a text value\n     *\n     * @param {String} value Value to check for\n     * @return {String} either 'Q' or 'B'\n     */\n    _getTextEncoding(value) {\n        value = (value || '').toString();\n\n        let encoding = this.textEncoding;\n        let latinLen;\n        let nonLatinLen;\n\n        if (!encoding) {\n            // count latin alphabet symbols and 8-bit range symbols + control symbols\n            // if there are more latin characters, then use quoted-printable\n            // encoding, otherwise use base64\n            nonLatinLen = (value.match(/[\\x00-\\x08\\x0B\\x0C\\x0E-\\x1F\\u0080-\\uFFFF]/g) || []).length;\n            latinLen = (value.match(/[a-z]/gi) || []).length;\n            // if there are more latin symbols than binary/unicode, then prefer Q, otherwise B\n            encoding = nonLatinLen < latinLen ? 'Q' : 'B';\n        }\n        return encoding;\n    }\n\n    /**\n     * Generates a message id\n     *\n     * @return {String} Random Message-ID value\n     */\n    _generateMessageId() {\n        return (\n            '<' +\n            [2, 2, 2, 6].reduce(\n                // crux to generate UUID-like random strings\n                (prev, len) => prev + '-' + crypto.randomBytes(len).toString('hex'),\n                crypto.randomBytes(4).toString('hex')\n            ) +\n            '@' +\n            // try to use the domain of the FROM address or fallback to server hostname\n            (this.getEnvelope().from || this.hostname || 'localhost').split('@').pop() +\n            '>'\n        );\n    }\n}\n\nmodule.exports = MimeNode;\n", "/* eslint no-undefined: 0 */\n\n'use strict';\n\nconst MimeNode = require('../mime-node');\nconst mimeFuncs = require('../mime-funcs');\nconst parseDataURI = require('../shared').parseDataURI;\n\n/**\n * Creates the object for composing a MimeNode instance out from the mail options\n *\n * @constructor\n * @param {Object} mail Mail options\n */\nclass MailComposer {\n    constructor(mail) {\n        this.mail = mail || {};\n        this.message = false;\n    }\n\n    /**\n     * Builds MimeNode instance\n     */\n    compile() {\n        this._alternatives = this.getAlternatives();\n        this._htmlNode = this._alternatives.filter(alternative => /^text\\/html\\b/i.test(alternative.contentType)).pop();\n        this._attachments = this.getAttachments(!!this._htmlNode);\n\n        this._useRelated = !!(this._htmlNode && this._attachments.related.length);\n        this._useAlternative = this._alternatives.length > 1;\n        this._useMixed = this._attachments.attached.length > 1 || (this._alternatives.length && this._attachments.attached.length === 1);\n\n        // Compose MIME tree\n        if (this.mail.raw) {\n            this.message = new MimeNode('message/rfc822', { newline: this.mail.newline }).setRaw(this.mail.raw);\n        } else if (this._useMixed) {\n            this.message = this._createMixed();\n        } else if (this._useAlternative) {\n            this.message = this._createAlternative();\n        } else if (this._useRelated) {\n            this.message = this._createRelated();\n        } else {\n            this.message = this._createContentNode(\n                false,\n                []\n                    .concat(this._alternatives || [])\n                    .concat(this._attachments.attached || [])\n                    .shift() || {\n                    contentType: 'text/plain',\n                    content: ''\n                }\n            );\n        }\n\n        // Add custom headers\n        if (this.mail.headers) {\n            this.message.addHeader(this.mail.headers);\n        }\n\n        // Add headers to the root node, always overrides custom headers\n        ['from', 'sender', 'to', 'cc', 'bcc', 'reply-to', 'in-reply-to', 'references', 'subject', 'message-id', 'date'].forEach(header => {\n            let key = header.replace(/-(\\w)/g, (o, c) => c.toUpperCase());\n            if (this.mail[key]) {\n                this.message.setHeader(header, this.mail[key]);\n            }\n        });\n\n        // Sets custom envelope\n        if (this.mail.envelope) {\n            this.message.setEnvelope(this.mail.envelope);\n        }\n\n        // ensure Message-Id value\n        this.message.messageId();\n\n        return this.message;\n    }\n\n    /**\n     * List all attachments. Resulting attachment objects can be used as input for MimeNode nodes\n     *\n     * @param {Boolean} findRelated If true separate related attachments from attached ones\n     * @returns {Object} An object of arrays (`related` and `attached`)\n     */\n    getAttachments(findRelated) {\n        let icalEvent, eventObject;\n        let attachments = [].concat(this.mail.attachments || []).map((attachment, i) => {\n            let data;\n\n            if (/^data:/i.test(attachment.path || attachment.href)) {\n                attachment = this._processDataUrl(attachment);\n            }\n\n            let contentType =\n                attachment.contentType || mimeFuncs.detectMimeType(attachment.filename || attachment.path || attachment.href || 'bin');\n\n            let isImage = /^image\\//i.test(contentType);\n            let isMessageNode = /^message\\//i.test(contentType);\n\n            let contentDisposition =\n                attachment.contentDisposition || (isMessageNode || (isImage && attachment.cid) ? 'inline' : 'attachment');\n\n            let contentTransferEncoding;\n            if ('contentTransferEncoding' in attachment) {\n                // also contains `false`, to set\n                contentTransferEncoding = attachment.contentTransferEncoding;\n            } else if (isMessageNode) {\n                contentTransferEncoding = '7bit';\n            } else {\n                contentTransferEncoding = 'base64'; // the default\n            }\n\n            data = {\n                contentType,\n                contentDisposition,\n                contentTransferEncoding\n            };\n\n            if (attachment.filename) {\n                data.filename = attachment.filename;\n            } else if (!isMessageNode && attachment.filename !== false) {\n                data.filename = (attachment.path || attachment.href || '').split('/').pop().split('?').shift() || 'attachment-' + (i + 1);\n                if (data.filename.indexOf('.') < 0) {\n                    data.filename += '.' + mimeFuncs.detectExtension(data.contentType);\n                }\n            }\n\n            if (/^https?:\\/\\//i.test(attachment.path)) {\n                attachment.href = attachment.path;\n                attachment.path = undefined;\n            }\n\n            if (attachment.cid) {\n                data.cid = attachment.cid;\n            }\n\n            if (attachment.raw) {\n                data.raw = attachment.raw;\n            } else if (attachment.path) {\n                data.content = {\n                    path: attachment.path\n                };\n            } else if (attachment.href) {\n                data.content = {\n                    href: attachment.href,\n                    httpHeaders: attachment.httpHeaders\n                };\n            } else {\n                data.content = attachment.content || '';\n            }\n\n            if (attachment.encoding) {\n                data.encoding = attachment.encoding;\n            }\n\n            if (attachment.headers) {\n                data.headers = attachment.headers;\n            }\n\n            return data;\n        });\n\n        if (this.mail.icalEvent) {\n            if (\n                typeof this.mail.icalEvent === 'object' &&\n                (this.mail.icalEvent.content || this.mail.icalEvent.path || this.mail.icalEvent.href || this.mail.icalEvent.raw)\n            ) {\n                icalEvent = this.mail.icalEvent;\n            } else {\n                icalEvent = {\n                    content: this.mail.icalEvent\n                };\n            }\n\n            eventObject = {};\n            Object.keys(icalEvent).forEach(key => {\n                eventObject[key] = icalEvent[key];\n            });\n\n            eventObject.contentType = 'application/ics';\n            if (!eventObject.headers) {\n                eventObject.headers = {};\n            }\n            eventObject.filename = eventObject.filename || 'invite.ics';\n            eventObject.headers['Content-Disposition'] = 'attachment';\n            eventObject.headers['Content-Transfer-Encoding'] = 'base64';\n        }\n\n        if (!findRelated) {\n            return {\n                attached: attachments.concat(eventObject || []),\n                related: []\n            };\n        } else {\n            return {\n                attached: attachments.filter(attachment => !attachment.cid).concat(eventObject || []),\n                related: attachments.filter(attachment => !!attachment.cid)\n            };\n        }\n    }\n\n    /**\n     * List alternatives. Resulting objects can be used as input for MimeNode nodes\n     *\n     * @returns {Array} An array of alternative elements. Includes the `text` and `html` values as well\n     */\n    getAlternatives() {\n        let alternatives = [],\n            text,\n            html,\n            watchHtml,\n            amp,\n            icalEvent,\n            eventObject;\n\n        if (this.mail.text) {\n            if (\n                typeof this.mail.text === 'object' &&\n                (this.mail.text.content || this.mail.text.path || this.mail.text.href || this.mail.text.raw)\n            ) {\n                text = this.mail.text;\n            } else {\n                text = {\n                    content: this.mail.text\n                };\n            }\n            text.contentType = 'text/plain; charset=utf-8';\n        }\n\n        if (this.mail.watchHtml) {\n            if (\n                typeof this.mail.watchHtml === 'object' &&\n                (this.mail.watchHtml.content || this.mail.watchHtml.path || this.mail.watchHtml.href || this.mail.watchHtml.raw)\n            ) {\n                watchHtml = this.mail.watchHtml;\n            } else {\n                watchHtml = {\n                    content: this.mail.watchHtml\n                };\n            }\n            watchHtml.contentType = 'text/watch-html; charset=utf-8';\n        }\n\n        if (this.mail.amp) {\n            if (\n                typeof this.mail.amp === 'object' &&\n                (this.mail.amp.content || this.mail.amp.path || this.mail.amp.href || this.mail.amp.raw)\n            ) {\n                amp = this.mail.amp;\n            } else {\n                amp = {\n                    content: this.mail.amp\n                };\n            }\n            amp.contentType = 'text/x-amp-html; charset=utf-8';\n        }\n\n        // NB! when including attachments with a calendar alternative you might end up in a blank screen on some clients\n        if (this.mail.icalEvent) {\n            if (\n                typeof this.mail.icalEvent === 'object' &&\n                (this.mail.icalEvent.content || this.mail.icalEvent.path || this.mail.icalEvent.href || this.mail.icalEvent.raw)\n            ) {\n                icalEvent = this.mail.icalEvent;\n            } else {\n                icalEvent = {\n                    content: this.mail.icalEvent\n                };\n            }\n\n            eventObject = {};\n            Object.keys(icalEvent).forEach(key => {\n                eventObject[key] = icalEvent[key];\n            });\n\n            if (eventObject.content && typeof eventObject.content === 'object') {\n                // we are going to have the same attachment twice, so mark this to be\n                // resolved just once\n                eventObject.content._resolve = true;\n            }\n\n            eventObject.filename = false;\n            eventObject.contentType =\n                'text/calendar; charset=utf-8; method=' + (eventObject.method || 'PUBLISH').toString().trim().toUpperCase();\n            if (!eventObject.headers) {\n                eventObject.headers = {};\n            }\n        }\n\n        if (this.mail.html) {\n            if (\n                typeof this.mail.html === 'object' &&\n                (this.mail.html.content || this.mail.html.path || this.mail.html.href || this.mail.html.raw)\n            ) {\n                html = this.mail.html;\n            } else {\n                html = {\n                    content: this.mail.html\n                };\n            }\n            html.contentType = 'text/html; charset=utf-8';\n        }\n\n        []\n            .concat(text || [])\n            .concat(watchHtml || [])\n            .concat(amp || [])\n            .concat(html || [])\n            .concat(eventObject || [])\n            .concat(this.mail.alternatives || [])\n            .forEach(alternative => {\n                let data;\n\n                if (/^data:/i.test(alternative.path || alternative.href)) {\n                    alternative = this._processDataUrl(alternative);\n                }\n\n                data = {\n                    contentType:\n                        alternative.contentType ||\n                        mimeFuncs.detectMimeType(alternative.filename || alternative.path || alternative.href || 'txt'),\n                    contentTransferEncoding: alternative.contentTransferEncoding\n                };\n\n                if (alternative.filename) {\n                    data.filename = alternative.filename;\n                }\n\n                if (/^https?:\\/\\//i.test(alternative.path)) {\n                    alternative.href = alternative.path;\n                    alternative.path = undefined;\n                }\n\n                if (alternative.raw) {\n                    data.raw = alternative.raw;\n                } else if (alternative.path) {\n                    data.content = {\n                        path: alternative.path\n                    };\n                } else if (alternative.href) {\n                    data.content = {\n                        href: alternative.href\n                    };\n                } else {\n                    data.content = alternative.content || '';\n                }\n\n                if (alternative.encoding) {\n                    data.encoding = alternative.encoding;\n                }\n\n                if (alternative.headers) {\n                    data.headers = alternative.headers;\n                }\n\n                alternatives.push(data);\n            });\n\n        return alternatives;\n    }\n\n    /**\n     * Builds multipart/mixed node. It should always contain different type of elements on the same level\n     * eg. text + attachments\n     *\n     * @param {Object} parentNode Parent for this note. If it does not exist, a root node is created\n     * @returns {Object} MimeNode node element\n     */\n    _createMixed(parentNode) {\n        let node;\n\n        if (!parentNode) {\n            node = new MimeNode('multipart/mixed', {\n                baseBoundary: this.mail.baseBoundary,\n                textEncoding: this.mail.textEncoding,\n                boundaryPrefix: this.mail.boundaryPrefix,\n                disableUrlAccess: this.mail.disableUrlAccess,\n                disableFileAccess: this.mail.disableFileAccess,\n                normalizeHeaderKey: this.mail.normalizeHeaderKey,\n                newline: this.mail.newline\n            });\n        } else {\n            node = parentNode.createChild('multipart/mixed', {\n                disableUrlAccess: this.mail.disableUrlAccess,\n                disableFileAccess: this.mail.disableFileAccess,\n                normalizeHeaderKey: this.mail.normalizeHeaderKey,\n                newline: this.mail.newline\n            });\n        }\n\n        if (this._useAlternative) {\n            this._createAlternative(node);\n        } else if (this._useRelated) {\n            this._createRelated(node);\n        }\n\n        []\n            .concat((!this._useAlternative && this._alternatives) || [])\n            .concat(this._attachments.attached || [])\n            .forEach(element => {\n                // if the element is a html node from related subpart then ignore it\n                if (!this._useRelated || element !== this._htmlNode) {\n                    this._createContentNode(node, element);\n                }\n            });\n\n        return node;\n    }\n\n    /**\n     * Builds multipart/alternative node. It should always contain same type of elements on the same level\n     * eg. text + html view of the same data\n     *\n     * @param {Object} parentNode Parent for this note. If it does not exist, a root node is created\n     * @returns {Object} MimeNode node element\n     */\n    _createAlternative(parentNode) {\n        let node;\n\n        if (!parentNode) {\n            node = new MimeNode('multipart/alternative', {\n                baseBoundary: this.mail.baseBoundary,\n                textEncoding: this.mail.textEncoding,\n                boundaryPrefix: this.mail.boundaryPrefix,\n                disableUrlAccess: this.mail.disableUrlAccess,\n                disableFileAccess: this.mail.disableFileAccess,\n                normalizeHeaderKey: this.mail.normalizeHeaderKey,\n                newline: this.mail.newline\n            });\n        } else {\n            node = parentNode.createChild('multipart/alternative', {\n                disableUrlAccess: this.mail.disableUrlAccess,\n                disableFileAccess: this.mail.disableFileAccess,\n                normalizeHeaderKey: this.mail.normalizeHeaderKey,\n                newline: this.mail.newline\n            });\n        }\n\n        this._alternatives.forEach(alternative => {\n            if (this._useRelated && this._htmlNode === alternative) {\n                this._createRelated(node);\n            } else {\n                this._createContentNode(node, alternative);\n            }\n        });\n\n        return node;\n    }\n\n    /**\n     * Builds multipart/related node. It should always contain html node with related attachments\n     *\n     * @param {Object} parentNode Parent for this note. If it does not exist, a root node is created\n     * @returns {Object} MimeNode node element\n     */\n    _createRelated(parentNode) {\n        let node;\n\n        if (!parentNode) {\n            node = new MimeNode('multipart/related; type=\"text/html\"', {\n                baseBoundary: this.mail.baseBoundary,\n                textEncoding: this.mail.textEncoding,\n                boundaryPrefix: this.mail.boundaryPrefix,\n                disableUrlAccess: this.mail.disableUrlAccess,\n                disableFileAccess: this.mail.disableFileAccess,\n                normalizeHeaderKey: this.mail.normalizeHeaderKey,\n                newline: this.mail.newline\n            });\n        } else {\n            node = parentNode.createChild('multipart/related; type=\"text/html\"', {\n                disableUrlAccess: this.mail.disableUrlAccess,\n                disableFileAccess: this.mail.disableFileAccess,\n                normalizeHeaderKey: this.mail.normalizeHeaderKey,\n                newline: this.mail.newline\n            });\n        }\n\n        this._createContentNode(node, this._htmlNode);\n\n        this._attachments.related.forEach(alternative => this._createContentNode(node, alternative));\n\n        return node;\n    }\n\n    /**\n     * Creates a regular node with contents\n     *\n     * @param {Object} parentNode Parent for this note. If it does not exist, a root node is created\n     * @param {Object} element Node data\n     * @returns {Object} MimeNode node element\n     */\n    _createContentNode(parentNode, element) {\n        element = element || {};\n        element.content = element.content || '';\n\n        let node;\n        let encoding = (element.encoding || 'utf8')\n            .toString()\n            .toLowerCase()\n            .replace(/[-_\\s]/g, '');\n\n        if (!parentNode) {\n            node = new MimeNode(element.contentType, {\n                filename: element.filename,\n                baseBoundary: this.mail.baseBoundary,\n                textEncoding: this.mail.textEncoding,\n                boundaryPrefix: this.mail.boundaryPrefix,\n                disableUrlAccess: this.mail.disableUrlAccess,\n                disableFileAccess: this.mail.disableFileAccess,\n                normalizeHeaderKey: this.mail.normalizeHeaderKey,\n                newline: this.mail.newline\n            });\n        } else {\n            node = parentNode.createChild(element.contentType, {\n                filename: element.filename,\n                textEncoding: this.mail.textEncoding,\n                disableUrlAccess: this.mail.disableUrlAccess,\n                disableFileAccess: this.mail.disableFileAccess,\n                normalizeHeaderKey: this.mail.normalizeHeaderKey,\n                newline: this.mail.newline\n            });\n        }\n\n        // add custom headers\n        if (element.headers) {\n            node.addHeader(element.headers);\n        }\n\n        if (element.cid) {\n            node.setHeader('Content-Id', '<' + element.cid.replace(/[<>]/g, '') + '>');\n        }\n\n        if (element.contentTransferEncoding) {\n            node.setHeader('Content-Transfer-Encoding', element.contentTransferEncoding);\n        } else if (this.mail.encoding && /^text\\//i.test(element.contentType)) {\n            node.setHeader('Content-Transfer-Encoding', this.mail.encoding);\n        }\n\n        if (!/^text\\//i.test(element.contentType) || element.contentDisposition) {\n            node.setHeader(\n                'Content-Disposition',\n                element.contentDisposition || (element.cid && /^image\\//i.test(element.contentType) ? 'inline' : 'attachment')\n            );\n        }\n\n        if (typeof element.content === 'string' && !['utf8', 'usascii', 'ascii'].includes(encoding)) {\n            element.content = Buffer.from(element.content, encoding);\n        }\n\n        // prefer pregenerated raw content\n        if (element.raw) {\n            node.setRaw(element.raw);\n        } else {\n            node.setContent(element.content);\n        }\n\n        return node;\n    }\n\n    /**\n     * Parses data uri and converts it to a Buffer\n     *\n     * @param {Object} element Content element\n     * @return {Object} Parsed element\n     */\n    _processDataUrl(element) {\n        const dataUrl = element.path || element.href;\n\n        // Early validation to prevent ReDoS\n        if (!dataUrl || typeof dataUrl !== 'string') {\n            return element;\n        }\n\n        if (!dataUrl.startsWith('data:')) {\n            return element;\n        }\n\n        if (dataUrl.length > 100000) {\n            // 100KB limit for data URL string\n            // Return empty content for excessively long data URLs\n            return Object.assign({}, element, {\n                path: false,\n                href: false,\n                content: Buffer.alloc(0),\n                contentType: element.contentType || 'application/octet-stream'\n            });\n        }\n\n        let parsedDataUri;\n        try {\n            parsedDataUri = parseDataURI(dataUrl);\n        } catch (_err) {\n            return element;\n        }\n\n        if (!parsedDataUri) {\n            return element;\n        }\n\n        element.content = parsedDataUri.data;\n        element.contentType = element.contentType || parsedDataUri.contentType;\n\n        if ('path' in element) {\n            element.path = false;\n        }\n\n        if ('href' in element) {\n            element.href = false;\n        }\n\n        return element;\n    }\n}\n\nmodule.exports = MailComposer;\n", "'use strict';\n\nconst Transform = require('stream').Transform;\n\n/**\n * MessageParser instance is a transform stream that separates message headers\n * from the rest of the body. Headers are emitted with the 'headers' event. Message\n * body is passed on as the resulting stream.\n */\nclass MessageParser extends Transform {\n    constructor(options) {\n        super(options);\n        this.lastBytes = Buffer.alloc(4);\n        this.headersParsed = false;\n        this.headerBytes = 0;\n        this.headerChunks = [];\n        this.rawHeaders = false;\n        this.bodySize = 0;\n    }\n\n    /**\n     * Keeps count of the last 4 bytes in order to detect line breaks on chunk boundaries\n     *\n     * @param {Buffer} data Next data chunk from the stream\n     */\n    updateLastBytes(data) {\n        let lblen = this.lastBytes.length;\n        let nblen = Math.min(data.length, lblen);\n\n        // shift existing bytes\n        for (let i = 0, len = lblen - nblen; i < len; i++) {\n            this.lastBytes[i] = this.lastBytes[i + nblen];\n        }\n\n        // add new bytes\n        for (let i = 1; i <= nblen; i++) {\n            this.lastBytes[lblen - i] = data[data.length - i];\n        }\n    }\n\n    /**\n     * Finds and removes message headers from the remaining body. We want to keep\n     * headers separated until final delivery to be able to modify these\n     *\n     * @param {Buffer} data Next chunk of data\n     * @return {Boolean} Returns true if headers are already found or false otherwise\n     */\n    checkHeaders(data) {\n        if (this.headersParsed) {\n            return true;\n        }\n\n        let lblen = this.lastBytes.length;\n        let headerPos = 0;\n        this.curLinePos = 0;\n        for (let i = 0, len = this.lastBytes.length + data.length; i < len; i++) {\n            let chr;\n            if (i < lblen) {\n                chr = this.lastBytes[i];\n            } else {\n                chr = data[i - lblen];\n            }\n            if (chr === 0x0a && i) {\n                let pr1 = i - 1 < lblen ? this.lastBytes[i - 1] : data[i - 1 - lblen];\n                let pr2 = i > 1 ? (i - 2 < lblen ? this.lastBytes[i - 2] : data[i - 2 - lblen]) : false;\n                if (pr1 === 0x0a) {\n                    this.headersParsed = true;\n                    headerPos = i - lblen + 1;\n                    this.headerBytes += headerPos;\n                    break;\n                } else if (pr1 === 0x0d && pr2 === 0x0a) {\n                    this.headersParsed = true;\n                    headerPos = i - lblen + 1;\n                    this.headerBytes += headerPos;\n                    break;\n                }\n            }\n        }\n\n        if (this.headersParsed) {\n            this.headerChunks.push(data.slice(0, headerPos));\n            this.rawHeaders = Buffer.concat(this.headerChunks, this.headerBytes);\n            this.headerChunks = null;\n            this.emit('headers', this.parseHeaders());\n            if (data.length - 1 > headerPos) {\n                let chunk = data.slice(headerPos);\n                this.bodySize += chunk.length;\n                // this would be the first chunk of data sent downstream\n                setImmediate(() => this.push(chunk));\n            }\n            return false;\n        } else {\n            this.headerBytes += data.length;\n            this.headerChunks.push(data);\n        }\n\n        // store last 4 bytes to catch header break\n        this.updateLastBytes(data);\n\n        return false;\n    }\n\n    _transform(chunk, encoding, callback) {\n        if (!chunk || !chunk.length) {\n            return callback();\n        }\n\n        if (typeof chunk === 'string') {\n            chunk = Buffer.from(chunk, encoding);\n        }\n\n        let headersFound;\n\n        try {\n            headersFound = this.checkHeaders(chunk);\n        } catch (E) {\n            return callback(E);\n        }\n\n        if (headersFound) {\n            this.bodySize += chunk.length;\n            this.push(chunk);\n        }\n\n        setImmediate(callback);\n    }\n\n    _flush(callback) {\n        if (this.headerChunks) {\n            let chunk = Buffer.concat(this.headerChunks, this.headerBytes);\n            this.bodySize += chunk.length;\n            this.push(chunk);\n            this.headerChunks = null;\n        }\n        callback();\n    }\n\n    parseHeaders() {\n        let lines = (this.rawHeaders || '').toString().split(/\\r?\\n/);\n        for (let i = lines.length - 1; i > 0; i--) {\n            if (/^\\s/.test(lines[i])) {\n                lines[i - 1] += '\\n' + lines[i];\n                lines.splice(i, 1);\n            }\n        }\n        return lines\n            .filter(line => line.trim())\n            .map(line => ({\n                key: line.substr(0, line.indexOf(':')).trim().toLowerCase(),\n                line\n            }));\n    }\n}\n\nmodule.exports = MessageParser;\n", "'use strict';\n\n// streams through a message body and calculates relaxed body hash\n\nconst Transform = require('stream').Transform;\nconst crypto = require('crypto');\n\nclass RelaxedBody extends Transform {\n    constructor(options) {\n        super();\n        options = options || {};\n        this.chunkBuffer = [];\n        this.chunkBufferLen = 0;\n        this.bodyHash = crypto.createHash(options.hashAlgo || 'sha1');\n        this.remainder = '';\n        this.byteLength = 0;\n\n        this.debug = options.debug;\n        this._debugBody = options.debug ? [] : false;\n    }\n\n    updateHash(chunk) {\n        let bodyStr;\n\n        // find next remainder\n        let nextRemainder = '';\n\n        // This crux finds and removes the spaces from the last line and the newline characters after the last non-empty line\n        // If we get another chunk that does not match this description then we can restore the previously processed data\n        let state = 'file';\n        for (let i = chunk.length - 1; i >= 0; i--) {\n            let c = chunk[i];\n\n            if (state === 'file' && (c === 0x0a || c === 0x0d)) {\n                // do nothing, found \\n or \\r at the end of chunk, stil end of file\n            } else if (state === 'file' && (c === 0x09 || c === 0x20)) {\n                // switch to line ending mode, this is the last non-empty line\n                state = 'line';\n            } else if (state === 'line' && (c === 0x09 || c === 0x20)) {\n                // do nothing, found ' ' or \\t at the end of line, keep processing the last non-empty line\n            } else if (state === 'file' || state === 'line') {\n                // non line/file ending character found, switch to body mode\n                state = 'body';\n                if (i === chunk.length - 1) {\n                    // final char is not part of line end or file end, so do nothing\n                    break;\n                }\n            }\n\n            if (i === 0) {\n                // reached to the beginning of the chunk, check if it is still about the ending\n                // and if the remainder also matches\n                if (\n                    (state === 'file' && (!this.remainder || /[\\r\\n]$/.test(this.remainder))) ||\n                    (state === 'line' && (!this.remainder || /[ \\t]$/.test(this.remainder)))\n                ) {\n                    // keep everything\n                    this.remainder += chunk.toString('binary');\n                    return;\n                } else if (state === 'line' || state === 'file') {\n                    // process existing remainder as normal line but store the current chunk\n                    nextRemainder = chunk.toString('binary');\n                    chunk = false;\n                    break;\n                }\n            }\n\n            if (state !== 'body') {\n                continue;\n            }\n\n            // reached first non ending byte\n            nextRemainder = chunk.slice(i + 1).toString('binary');\n            chunk = chunk.slice(0, i + 1);\n            break;\n        }\n\n        let needsFixing = !!this.remainder;\n        if (chunk && !needsFixing) {\n            // check if we even need to change anything\n            for (let i = 0, len = chunk.length; i < len; i++) {\n                if (i && chunk[i] === 0x0a && chunk[i - 1] !== 0x0d) {\n                    // missing \\r before \\n\n                    needsFixing = true;\n                    break;\n                } else if (i && chunk[i] === 0x0d && chunk[i - 1] === 0x20) {\n                    // trailing WSP found\n                    needsFixing = true;\n                    break;\n                } else if (i && chunk[i] === 0x20 && chunk[i - 1] === 0x20) {\n                    // multiple spaces found, needs to be replaced with just one\n                    needsFixing = true;\n                    break;\n                } else if (chunk[i] === 0x09) {\n                    // TAB found, needs to be replaced with a space\n                    needsFixing = true;\n                    break;\n                }\n            }\n        }\n\n        if (needsFixing) {\n            bodyStr = this.remainder + (chunk ? chunk.toString('binary') : '');\n            this.remainder = nextRemainder;\n            bodyStr = bodyStr\n                .replace(/\\r?\\n/g, '\\n') // use js line endings\n                .replace(/[ \\t]*$/gm, '') // remove line endings, rtrim\n                .replace(/[ \\t]+/gm, ' ') // single spaces\n                .replace(/\\n/g, '\\r\\n'); // restore rfc822 line endings\n            chunk = Buffer.from(bodyStr, 'binary');\n        } else if (nextRemainder) {\n            this.remainder = nextRemainder;\n        }\n\n        if (this.debug) {\n            this._debugBody.push(chunk);\n        }\n        this.bodyHash.update(chunk);\n    }\n\n    _transform(chunk, encoding, callback) {\n        if (!chunk || !chunk.length) {\n            return callback();\n        }\n\n        if (typeof chunk === 'string') {\n            chunk = Buffer.from(chunk, encoding);\n        }\n\n        this.updateHash(chunk);\n\n        this.byteLength += chunk.length;\n        this.push(chunk);\n        callback();\n    }\n\n    _flush(callback) {\n        // generate final hash and emit it\n        if (/[\\r\\n]$/.test(this.remainder) && this.byteLength > 2) {\n            // add terminating line end\n            this.bodyHash.update(Buffer.from('\\r\\n'));\n        }\n        if (!this.byteLength) {\n            // emit empty line buffer to keep the stream flowing\n            this.push(Buffer.from('\\r\\n'));\n            // this.bodyHash.update(Buffer.from('\\r\\n'));\n        }\n\n        this.emit('hash', this.bodyHash.digest('base64'), this.debug ? Buffer.concat(this._debugBody) : false);\n        callback();\n    }\n}\n\nmodule.exports = RelaxedBody;\n", "'use strict';\n\nconst punycode = require('../punycode');\nconst mimeFuncs = require('../mime-funcs');\nconst crypto = require('crypto');\n\n/**\n * Returns DKIM signature header line\n *\n * @param {Object} headers Parsed headers object from MessageParser\n * @param {String} bodyHash Base64 encoded hash of the message\n * @param {Object} options DKIM options\n * @param {String} options.domainName Domain name to be signed for\n * @param {String} options.keySelector DKIM key selector to use\n * @param {String} options.privateKey DKIM private key to use\n * @return {String} Complete header line\n */\n\nmodule.exports = (headers, hashAlgo, bodyHash, options) => {\n    options = options || {};\n\n    // all listed fields from RFC4871 #5.5\n    let defaultFieldNames =\n        'From:Sender:Reply-To:Subject:Date:Message-ID:To:' +\n        'Cc:MIME-Version:Content-Type:Content-Transfer-Encoding:Content-ID:' +\n        'Content-Description:Resent-Date:Resent-From:Resent-Sender:' +\n        'Resent-To:Resent-Cc:Resent-Message-ID:In-Reply-To:References:' +\n        'List-Id:List-Help:List-Unsubscribe:List-Subscribe:List-Post:' +\n        'List-Owner:List-Archive';\n\n    let fieldNames = options.headerFieldNames || defaultFieldNames;\n\n    let canonicalizedHeaderData = relaxedHeaders(headers, fieldNames, options.skipFields);\n    let dkimHeader = generateDKIMHeader(options.domainName, options.keySelector, canonicalizedHeaderData.fieldNames, hashAlgo, bodyHash);\n\n    let signer, signature;\n\n    canonicalizedHeaderData.headers += 'dkim-signature:' + relaxedHeaderLine(dkimHeader);\n\n    signer = crypto.createSign(('rsa-' + hashAlgo).toUpperCase());\n    signer.update(canonicalizedHeaderData.headers);\n    try {\n        signature = signer.sign(options.privateKey, 'base64');\n    } catch (_E) {\n        return false;\n    }\n\n    return dkimHeader + signature.replace(/(^.{73}|.{75}(?!\\r?\\n|\\r))/g, '$&\\r\\n ').trim();\n};\n\nmodule.exports.relaxedHeaders = relaxedHeaders;\n\nfunction generateDKIMHeader(domainName, keySelector, fieldNames, hashAlgo, bodyHash) {\n    let dkim = [\n        'v=1',\n        'a=rsa-' + hashAlgo,\n        'c=relaxed/relaxed',\n        'd=' + punycode.toASCII(domainName),\n        'q=dns/txt',\n        's=' + keySelector,\n        'bh=' + bodyHash,\n        'h=' + fieldNames\n    ].join('; ');\n\n    return mimeFuncs.foldLines('DKIM-Signature: ' + dkim, 76) + ';\\r\\n b=';\n}\n\nfunction relaxedHeaders(headers, fieldNames, skipFields) {\n    let includedFields = new Set();\n    let skip = new Set();\n    let headerFields = new Map();\n\n    (skipFields || '')\n        .toLowerCase()\n        .split(':')\n        .forEach(field => {\n            skip.add(field.trim());\n        });\n\n    (fieldNames || '')\n        .toLowerCase()\n        .split(':')\n        .filter(field => !skip.has(field.trim()))\n        .forEach(field => {\n            includedFields.add(field.trim());\n        });\n\n    for (let i = headers.length - 1; i >= 0; i--) {\n        let line = headers[i];\n        // only include the first value from bottom to top\n        if (includedFields.has(line.key) && !headerFields.has(line.key)) {\n            headerFields.set(line.key, relaxedHeaderLine(line.line));\n        }\n    }\n\n    let headersList = [];\n    let fields = [];\n    includedFields.forEach(field => {\n        if (headerFields.has(field)) {\n            fields.push(field);\n            headersList.push(field + ':' + headerFields.get(field));\n        }\n    });\n\n    return {\n        headers: headersList.join('\\r\\n') + '\\r\\n',\n        fieldNames: fields.join(':')\n    };\n}\n\nfunction relaxedHeaderLine(line) {\n    return line\n        .substr(line.indexOf(':') + 1)\n        .replace(/\\r?\\n/g, '')\n        .replace(/\\s+/g, ' ')\n        .trim();\n}\n", "'use strict';\n\n// FIXME:\n// replace this Transform mess with a method that pipes input argument to output argument\n\nconst MessageParser = require('./message-parser');\nconst RelaxedBody = require('./relaxed-body');\nconst sign = require('./sign');\nconst PassThrough = require('stream').PassThrough;\nconst fs = require('fs');\nconst path = require('path');\nconst crypto = require('crypto');\n\nconst DKIM_ALGO = 'sha256';\nconst MAX_MESSAGE_SIZE = 2 * 1024 * 1024; // buffer messages larger than this to disk\n\n/*\n// Usage:\n\nlet dkim = new DKIM({\n    domainName: 'example.com',\n    keySelector: 'key-selector',\n    privateKey,\n    cacheDir: '/tmp'\n});\ndkim.sign(input).pipe(process.stdout);\n\n// Where inputStream is a rfc822 message (either a stream, string or Buffer)\n// and outputStream is a DKIM signed rfc822 message\n*/\n\nclass DKIMSigner {\n    constructor(options, keys, input, output) {\n        this.options = options || {};\n        this.keys = keys;\n\n        this.cacheTreshold = Number(this.options.cacheTreshold) || MAX_MESSAGE_SIZE;\n        this.hashAlgo = this.options.hashAlgo || DKIM_ALGO;\n\n        this.cacheDir = this.options.cacheDir || false;\n\n        this.chunks = [];\n        this.chunklen = 0;\n        this.readPos = 0;\n        this.cachePath = this.cacheDir\n            ? path.join(this.cacheDir, 'message.' + Date.now() + '-' + crypto.randomBytes(14).toString('hex'))\n            : false;\n        this.cache = false;\n\n        this.headers = false;\n        this.bodyHash = false;\n        this.parser = false;\n        this.relaxedBody = false;\n\n        this.input = input;\n        this.output = output;\n        this.output.usingCache = false;\n\n        this.hasErrored = false;\n\n        this.input.on('error', err => {\n            this.hasErrored = true;\n            this.cleanup();\n            output.emit('error', err);\n        });\n    }\n\n    cleanup() {\n        if (!this.cache || !this.cachePath) {\n            return;\n        }\n        fs.unlink(this.cachePath, () => false);\n    }\n\n    createReadCache() {\n        // pipe remainings to cache file\n        this.cache = fs.createReadStream(this.cachePath);\n        this.cache.once('error', err => {\n            this.cleanup();\n            this.output.emit('error', err);\n        });\n        this.cache.once('close', () => {\n            this.cleanup();\n        });\n        this.cache.pipe(this.output);\n    }\n\n    sendNextChunk() {\n        if (this.hasErrored) {\n            return;\n        }\n\n        if (this.readPos >= this.chunks.length) {\n            if (!this.cache) {\n                return this.output.end();\n            }\n            return this.createReadCache();\n        }\n        let chunk = this.chunks[this.readPos++];\n        if (this.output.write(chunk) === false) {\n            return this.output.once('drain', () => {\n                this.sendNextChunk();\n            });\n        }\n        setImmediate(() => this.sendNextChunk());\n    }\n\n    sendSignedOutput() {\n        let keyPos = 0;\n        let signNextKey = () => {\n            if (keyPos >= this.keys.length) {\n                this.output.write(this.parser.rawHeaders);\n                return setImmediate(() => this.sendNextChunk());\n            }\n            let key = this.keys[keyPos++];\n            let dkimField = sign(this.headers, this.hashAlgo, this.bodyHash, {\n                domainName: key.domainName,\n                keySelector: key.keySelector,\n                privateKey: key.privateKey,\n                headerFieldNames: this.options.headerFieldNames,\n                skipFields: this.options.skipFields\n            });\n            if (dkimField) {\n                this.output.write(Buffer.from(dkimField + '\\r\\n'));\n            }\n            return setImmediate(signNextKey);\n        };\n\n        if (this.bodyHash && this.headers) {\n            return signNextKey();\n        }\n\n        this.output.write(this.parser.rawHeaders);\n        this.sendNextChunk();\n    }\n\n    createWriteCache() {\n        this.output.usingCache = true;\n        // pipe remainings to cache file\n        this.cache = fs.createWriteStream(this.cachePath);\n        this.cache.once('error', err => {\n            this.cleanup();\n            // drain input\n            this.relaxedBody.unpipe(this.cache);\n            this.relaxedBody.on('readable', () => {\n                while (this.relaxedBody.read() !== null) {\n                    // do nothing\n                }\n            });\n            this.hasErrored = true;\n            // emit error\n            this.output.emit('error', err);\n        });\n        this.cache.once('close', () => {\n            this.sendSignedOutput();\n        });\n        this.relaxedBody.removeAllListeners('readable');\n        this.relaxedBody.pipe(this.cache);\n    }\n\n    signStream() {\n        this.parser = new MessageParser();\n        this.relaxedBody = new RelaxedBody({\n            hashAlgo: this.hashAlgo\n        });\n\n        this.parser.on('headers', value => {\n            this.headers = value;\n        });\n\n        this.relaxedBody.on('hash', value => {\n            this.bodyHash = value;\n        });\n\n        this.relaxedBody.on('readable', () => {\n            let chunk;\n            if (this.cache) {\n                return;\n            }\n            while ((chunk = this.relaxedBody.read()) !== null) {\n                this.chunks.push(chunk);\n                this.chunklen += chunk.length;\n                if (this.chunklen >= this.cacheTreshold && this.cachePath) {\n                    return this.createWriteCache();\n                }\n            }\n        });\n\n        this.relaxedBody.on('end', () => {\n            if (this.cache) {\n                return;\n            }\n            this.sendSignedOutput();\n        });\n\n        this.parser.pipe(this.relaxedBody);\n        setImmediate(() => this.input.pipe(this.parser));\n    }\n}\n\nclass DKIM {\n    constructor(options) {\n        this.options = options || {};\n        this.keys = [].concat(\n            this.options.keys || {\n                domainName: options.domainName,\n                keySelector: options.keySelector,\n                privateKey: options.privateKey\n            }\n        );\n    }\n\n    sign(input, extraOptions) {\n        let output = new PassThrough();\n        let inputStream = input;\n        let writeValue = false;\n\n        if (Buffer.isBuffer(input)) {\n            writeValue = input;\n            inputStream = new PassThrough();\n        } else if (typeof input === 'string') {\n            writeValue = Buffer.from(input);\n            inputStream = new PassThrough();\n        }\n\n        let options = this.options;\n        if (extraOptions && Object.keys(extraOptions).length) {\n            options = {};\n            Object.keys(this.options || {}).forEach(key => {\n                options[key] = this.options[key];\n            });\n            Object.keys(extraOptions || {}).forEach(key => {\n                if (!(key in options)) {\n                    options[key] = extraOptions[key];\n                }\n            });\n        }\n\n        let signer = new DKIMSigner(options, this.keys, inputStream, output);\n        setImmediate(() => {\n            signer.signStream();\n            if (writeValue) {\n                setImmediate(() => {\n                    inputStream.end(writeValue);\n                });\n            }\n        });\n\n        return output;\n    }\n}\n\nmodule.exports = DKIM;\n", "import libDefault from 'tls';\nmodule.exports = libDefault;", "'use strict';\n\n/**\n * Minimal HTTP/S proxy client\n */\n\nconst net = require('net');\nconst tls = require('tls');\nconst urllib = require('url');\n\n/**\n * Establishes proxied connection to destinationPort\n *\n * httpProxyClient(\"http://localhost:3128/\", 80, \"google.com\", function(err, socket){\n *     socket.write(\"GET / HTTP/1.0\\r\\n\\r\\n\");\n * });\n *\n * @param {String} proxyUrl proxy configuration, etg \"http://proxy.host:3128/\"\n * @param {Number} destinationPort Port to open in destination host\n * @param {String} destinationHost Destination hostname\n * @param {Function} callback Callback to run with the rocket object once connection is established\n */\nfunction httpProxyClient(proxyUrl, destinationPort, destinationHost, callback) {\n    let proxy = urllib.parse(proxyUrl);\n\n    // create a socket connection to the proxy server\n    let options;\n    let connect;\n    let socket;\n\n    options = {\n        host: proxy.hostname,\n        port: Number(proxy.port) ? Number(proxy.port) : proxy.protocol === 'https:' ? 443 : 80\n    };\n\n    if (proxy.protocol === 'https:') {\n        // we can use untrusted proxies as long as we verify actual SMTP certificates\n        options.rejectUnauthorized = false;\n        connect = tls.connect.bind(tls);\n    } else {\n        connect = net.connect.bind(net);\n    }\n\n    // Error harness for initial connection. Once connection is established, the responsibility\n    // to handle errors is passed to whoever uses this socket\n    let finished = false;\n    let tempSocketErr = err => {\n        if (finished) {\n            return;\n        }\n        finished = true;\n        try {\n            socket.destroy();\n        } catch (_E) {\n            // ignore\n        }\n        callback(err);\n    };\n\n    let timeoutErr = () => {\n        let err = new Error('Proxy socket timed out');\n        err.code = 'ETIMEDOUT';\n        tempSocketErr(err);\n    };\n\n    socket = connect(options, () => {\n        if (finished) {\n            return;\n        }\n\n        let reqHeaders = {\n            Host: destinationHost + ':' + destinationPort,\n            Connection: 'close'\n        };\n        if (proxy.auth) {\n            reqHeaders['Proxy-Authorization'] = 'Basic ' + Buffer.from(proxy.auth).toString('base64');\n        }\n\n        socket.write(\n            // HTTP method\n            'CONNECT ' +\n                destinationHost +\n                ':' +\n                destinationPort +\n                ' HTTP/1.1\\r\\n' +\n                // HTTP request headers\n                Object.keys(reqHeaders)\n                    .map(key => key + ': ' + reqHeaders[key])\n                    .join('\\r\\n') +\n                // End request\n                '\\r\\n\\r\\n'\n        );\n\n        let headers = '';\n        let onSocketData = chunk => {\n            let match;\n            let remainder;\n\n            if (finished) {\n                return;\n            }\n\n            headers += chunk.toString('binary');\n            if ((match = headers.match(/\\r\\n\\r\\n/))) {\n                socket.removeListener('data', onSocketData);\n\n                remainder = headers.substr(match.index + match[0].length);\n                headers = headers.substr(0, match.index);\n                if (remainder) {\n                    socket.unshift(Buffer.from(remainder, 'binary'));\n                }\n\n                // proxy connection is now established\n                finished = true;\n\n                // check response code\n                match = headers.match(/^HTTP\\/\\d+\\.\\d+ (\\d+)/i);\n                if (!match || (match[1] || '').charAt(0) !== '2') {\n                    try {\n                        socket.destroy();\n                    } catch (_E) {\n                        // ignore\n                    }\n                    return callback(new Error('Invalid response from proxy' + ((match && ': ' + match[1]) || '')));\n                }\n\n                socket.removeListener('error', tempSocketErr);\n                socket.removeListener('timeout', timeoutErr);\n                socket.setTimeout(0);\n\n                return callback(null, socket);\n            }\n        };\n        socket.on('data', onSocketData);\n    });\n\n    socket.setTimeout(httpProxyClient.timeout || 30 * 1000);\n    socket.on('timeout', timeoutErr);\n\n    socket.once('error', tempSocketErr);\n}\n\nmodule.exports = httpProxyClient;\n", "'use strict';\n\nconst shared = require('../shared');\nconst MimeNode = require('../mime-node');\nconst mimeFuncs = require('../mime-funcs');\n\nclass MailMessage {\n    constructor(mailer, data) {\n        this.mailer = mailer;\n        this.data = {};\n        this.message = null;\n\n        data = data || {};\n        let options = mailer.options || {};\n        let defaults = mailer._defaults || {};\n\n        Object.keys(data).forEach(key => {\n            this.data[key] = data[key];\n        });\n\n        this.data.headers = this.data.headers || {};\n\n        // apply defaults\n        Object.keys(defaults).forEach(key => {\n            if (!(key in this.data)) {\n                this.data[key] = defaults[key];\n            } else if (key === 'headers') {\n                // headers is a special case. Allow setting individual default headers\n                Object.keys(defaults.headers).forEach(key => {\n                    if (!(key in this.data.headers)) {\n                        this.data.headers[key] = defaults.headers[key];\n                    }\n                });\n            }\n        });\n\n        // force specific keys from transporter options\n        ['disableFileAccess', 'disableUrlAccess', 'normalizeHeaderKey'].forEach(key => {\n            if (key in options) {\n                this.data[key] = options[key];\n            }\n        });\n    }\n\n    resolveContent(...args) {\n        return shared.resolveContent(...args);\n    }\n\n    resolveAll(callback) {\n        let keys = [\n            [this.data, 'html'],\n            [this.data, 'text'],\n            [this.data, 'watchHtml'],\n            [this.data, 'amp'],\n            [this.data, 'icalEvent']\n        ];\n\n        if (this.data.alternatives && this.data.alternatives.length) {\n            this.data.alternatives.forEach((alternative, i) => {\n                keys.push([this.data.alternatives, i]);\n            });\n        }\n\n        if (this.data.attachments && this.data.attachments.length) {\n            this.data.attachments.forEach((attachment, i) => {\n                if (!attachment.filename) {\n                    attachment.filename =\n                        (attachment.path || attachment.href || '').split('/').pop().split('?').shift() || 'attachment-' + (i + 1);\n                    if (attachment.filename.indexOf('.') < 0) {\n                        attachment.filename += '.' + mimeFuncs.detectExtension(attachment.contentType);\n                    }\n                }\n\n                if (!attachment.contentType) {\n                    attachment.contentType = mimeFuncs.detectMimeType(attachment.filename || attachment.path || attachment.href || 'bin');\n                }\n\n                keys.push([this.data.attachments, i]);\n            });\n        }\n\n        let mimeNode = new MimeNode();\n\n        let addressKeys = ['from', 'to', 'cc', 'bcc', 'sender', 'replyTo'];\n\n        addressKeys.forEach(address => {\n            let value;\n            if (this.message) {\n                value = [].concat(mimeNode._parseAddresses(this.message.getHeader(address === 'replyTo' ? 'reply-to' : address)) || []);\n            } else if (this.data[address]) {\n                value = [].concat(mimeNode._parseAddresses(this.data[address]) || []);\n            }\n            if (value && value.length) {\n                this.data[address] = value;\n            } else if (address in this.data) {\n                this.data[address] = null;\n            }\n        });\n\n        let singleKeys = ['from', 'sender'];\n        singleKeys.forEach(address => {\n            if (this.data[address]) {\n                this.data[address] = this.data[address].shift();\n            }\n        });\n\n        let pos = 0;\n        let resolveNext = () => {\n            if (pos >= keys.length) {\n                return callback(null, this.data);\n            }\n            let args = keys[pos++];\n            if (!args[0] || !args[0][args[1]]) {\n                return resolveNext();\n            }\n            shared.resolveContent(...args, (err, value) => {\n                if (err) {\n                    return callback(err);\n                }\n\n                let node = {\n                    content: value\n                };\n                if (args[0][args[1]] && typeof args[0][args[1]] === 'object' && !Buffer.isBuffer(args[0][args[1]])) {\n                    Object.keys(args[0][args[1]]).forEach(key => {\n                        if (!(key in node) && !['content', 'path', 'href', 'raw'].includes(key)) {\n                            node[key] = args[0][args[1]][key];\n                        }\n                    });\n                }\n\n                args[0][args[1]] = node;\n                resolveNext();\n            });\n        };\n\n        setImmediate(() => resolveNext());\n    }\n\n    normalize(callback) {\n        let envelope = this.data.envelope || this.message.getEnvelope();\n        let messageId = this.message.messageId();\n\n        this.resolveAll((err, data) => {\n            if (err) {\n                return callback(err);\n            }\n\n            data.envelope = envelope;\n            data.messageId = messageId;\n\n            ['html', 'text', 'watchHtml', 'amp'].forEach(key => {\n                if (data[key] && data[key].content) {\n                    if (typeof data[key].content === 'string') {\n                        data[key] = data[key].content;\n                    } else if (Buffer.isBuffer(data[key].content)) {\n                        data[key] = data[key].content.toString();\n                    }\n                }\n            });\n\n            if (data.icalEvent && Buffer.isBuffer(data.icalEvent.content)) {\n                data.icalEvent.content = data.icalEvent.content.toString('base64');\n                data.icalEvent.encoding = 'base64';\n            }\n\n            if (data.alternatives && data.alternatives.length) {\n                data.alternatives.forEach(alternative => {\n                    if (alternative && alternative.content && Buffer.isBuffer(alternative.content)) {\n                        alternative.content = alternative.content.toString('base64');\n                        alternative.encoding = 'base64';\n                    }\n                });\n            }\n\n            if (data.attachments && data.attachments.length) {\n                data.attachments.forEach(attachment => {\n                    if (attachment && attachment.content && Buffer.isBuffer(attachment.content)) {\n                        attachment.content = attachment.content.toString('base64');\n                        attachment.encoding = 'base64';\n                    }\n                });\n            }\n\n            data.normalizedHeaders = {};\n            Object.keys(data.headers || {}).forEach(key => {\n                let value = [].concat(data.headers[key] || []).shift();\n                value = (value && value.value) || value;\n                if (value) {\n                    if (['references', 'in-reply-to', 'message-id', 'content-id'].includes(key)) {\n                        value = this.message._encodeHeaderValue(key, value);\n                    }\n                    data.normalizedHeaders[key] = value;\n                }\n            });\n\n            if (data.list && typeof data.list === 'object') {\n                let listHeaders = this._getListHeaders(data.list);\n                listHeaders.forEach(entry => {\n                    data.normalizedHeaders[entry.key] = entry.value.map(val => (val && val.value) || val).join(', ');\n                });\n            }\n\n            if (data.references) {\n                data.normalizedHeaders.references = this.message._encodeHeaderValue('references', data.references);\n            }\n\n            if (data.inReplyTo) {\n                data.normalizedHeaders['in-reply-to'] = this.message._encodeHeaderValue('in-reply-to', data.inReplyTo);\n            }\n\n            return callback(null, data);\n        });\n    }\n\n    setMailerHeader() {\n        if (!this.message || !this.data.xMailer) {\n            return;\n        }\n        this.message.setHeader('X-Mailer', this.data.xMailer);\n    }\n\n    setPriorityHeaders() {\n        if (!this.message || !this.data.priority) {\n            return;\n        }\n        switch ((this.data.priority || '').toString().toLowerCase()) {\n            case 'high':\n                this.message.setHeader('X-Priority', '1 (Highest)');\n                this.message.setHeader('X-MSMail-Priority', 'High');\n                this.message.setHeader('Importance', 'High');\n                break;\n            case 'low':\n                this.message.setHeader('X-Priority', '5 (Lowest)');\n                this.message.setHeader('X-MSMail-Priority', 'Low');\n                this.message.setHeader('Importance', 'Low');\n                break;\n            default:\n            // do not add anything, since all messages are 'Normal' by default\n        }\n    }\n\n    setListHeaders() {\n        if (!this.message || !this.data.list || typeof this.data.list !== 'object') {\n            return;\n        }\n        // add optional List-* headers\n        if (this.data.list && typeof this.data.list === 'object') {\n            this._getListHeaders(this.data.list).forEach(listHeader => {\n                listHeader.value.forEach(value => {\n                    this.message.addHeader(listHeader.key, value);\n                });\n            });\n        }\n    }\n\n    _getListHeaders(listData) {\n        // make sure an url looks like <protocol:url>\n        return Object.keys(listData).map(key => ({\n            key: 'list-' + key.toLowerCase().trim(),\n            value: [].concat(listData[key] || []).map(value => ({\n                prepared: true,\n                foldLines: true,\n                value: []\n                    .concat(value || [])\n                    .map(value => {\n                        if (typeof value === 'string') {\n                            value = {\n                                url: value\n                            };\n                        }\n\n                        if (value && value.url) {\n                            if (key.toLowerCase().trim() === 'id') {\n                                // List-ID: \"comment\" <domain>\n                                let comment = value.comment || '';\n                                if (mimeFuncs.isPlainText(comment)) {\n                                    comment = '\"' + comment + '\"';\n                                } else {\n                                    comment = mimeFuncs.encodeWord(comment);\n                                }\n\n                                return (value.comment ? comment + ' ' : '') + this._formatListUrl(value.url).replace(/^<[^:]+\\/{,2}/, '');\n                            }\n\n                            // List-*: <http://domain> (comment)\n                            let comment = value.comment || '';\n                            if (!mimeFuncs.isPlainText(comment)) {\n                                comment = mimeFuncs.encodeWord(comment);\n                            }\n\n                            return this._formatListUrl(value.url) + (value.comment ? ' (' + comment + ')' : '');\n                        }\n\n                        return '';\n                    })\n                    .filter(value => value)\n                    .join(', ')\n            }))\n        }));\n    }\n\n    _formatListUrl(url) {\n        url = url.replace(/[\\s<]+|[\\s>]+/g, '');\n        if (/^(https?|mailto|ftp):/.test(url)) {\n            return '<' + url + '>';\n        }\n        if (/^[^@]+@[^@]+$/.test(url)) {\n            return '<mailto:' + url + '>';\n        }\n\n        return '<http://' + url + '>';\n    }\n}\n\nmodule.exports = MailMessage;\n", "'use strict';\n\nconst EventEmitter = require('events');\nconst shared = require('../shared');\nconst mimeTypes = require('../mime-funcs/mime-types');\nconst MailComposer = require('../mail-composer');\nconst DKIM = require('../dkim');\nconst httpProxyClient = require('../smtp-connection/http-proxy-client');\nconst util = require('util');\nconst urllib = require('url');\nconst packageData = require('../../package.json');\nconst MailMessage = require('./mail-message');\nconst net = require('net');\nconst dns = require('dns');\nconst crypto = require('crypto');\n\n/**\n * Creates an object for exposing the Mail API\n *\n * @constructor\n * @param {Object} transporter Transport object instance to pass the mails to\n */\nclass Mail extends EventEmitter {\n    constructor(transporter, options, defaults) {\n        super();\n\n        this.options = options || {};\n        this._defaults = defaults || {};\n\n        this._defaultPlugins = {\n            compile: [(...args) => this._convertDataImages(...args)],\n            stream: []\n        };\n\n        this._userPlugins = {\n            compile: [],\n            stream: []\n        };\n\n        this.meta = new Map();\n\n        this.dkim = this.options.dkim ? new DKIM(this.options.dkim) : false;\n\n        this.transporter = transporter;\n        this.transporter.mailer = this;\n\n        this.logger = shared.getLogger(this.options, {\n            component: this.options.component || 'mail'\n        });\n\n        this.logger.debug(\n            {\n                tnx: 'create'\n            },\n            'Creating transport: %s',\n            this.getVersionString()\n        );\n\n        // setup emit handlers for the transporter\n        if (typeof this.transporter.on === 'function') {\n            // deprecated log interface\n            this.transporter.on('log', log => {\n                this.logger.debug(\n                    {\n                        tnx: 'transport'\n                    },\n                    '%s: %s',\n                    log.type,\n                    log.message\n                );\n            });\n\n            // transporter errors\n            this.transporter.on('error', err => {\n                this.logger.error(\n                    {\n                        err,\n                        tnx: 'transport'\n                    },\n                    'Transport Error: %s',\n                    err.message\n                );\n                this.emit('error', err);\n            });\n\n            // indicates if the sender has became idle\n            this.transporter.on('idle', (...args) => {\n                this.emit('idle', ...args);\n            });\n\n            // indicates if the sender has became idle and all connections are terminated\n            this.transporter.on('clear', (...args) => {\n                this.emit('clear', ...args);\n            });\n        }\n\n        /**\n         * Optional methods passed to the underlying transport object\n         */\n        ['close', 'isIdle', 'verify'].forEach(method => {\n            this[method] = (...args) => {\n                if (typeof this.transporter[method] === 'function') {\n                    if (method === 'verify' && typeof this.getSocket === 'function') {\n                        this.transporter.getSocket = this.getSocket;\n                        this.getSocket = false;\n                    }\n                    return this.transporter[method](...args);\n                } else {\n                    this.logger.warn(\n                        {\n                            tnx: 'transport',\n                            methodName: method\n                        },\n                        'Non existing method %s called for transport',\n                        method\n                    );\n                    return false;\n                }\n            };\n        });\n\n        // setup proxy handling\n        if (this.options.proxy && typeof this.options.proxy === 'string') {\n            this.setupProxy(this.options.proxy);\n        }\n    }\n\n    use(step, plugin) {\n        step = (step || '').toString();\n        if (!this._userPlugins.hasOwnProperty(step)) {\n            this._userPlugins[step] = [plugin];\n        } else {\n            this._userPlugins[step].push(plugin);\n        }\n\n        return this;\n    }\n\n    /**\n     * Sends an email using the preselected transport object\n     *\n     * @param {Object} data E-data description\n     * @param {Function?} callback Callback to run once the sending succeeded or failed\n     */\n    sendMail(data, callback = null) {\n        let promise;\n\n        if (!callback) {\n            promise = new Promise((resolve, reject) => {\n                callback = shared.callbackPromise(resolve, reject);\n            });\n        }\n\n        if (typeof this.getSocket === 'function') {\n            this.transporter.getSocket = this.getSocket;\n            this.getSocket = false;\n        }\n\n        let mail = new MailMessage(this, data);\n\n        this.logger.debug(\n            {\n                tnx: 'transport',\n                name: this.transporter.name,\n                version: this.transporter.version,\n                action: 'send'\n            },\n            'Sending mail using %s/%s',\n            this.transporter.name,\n            this.transporter.version\n        );\n\n        this._processPlugins('compile', mail, err => {\n            if (err) {\n                this.logger.error(\n                    {\n                        err,\n                        tnx: 'plugin',\n                        action: 'compile'\n                    },\n                    'PluginCompile Error: %s',\n                    err.message\n                );\n                return callback(err);\n            }\n\n            mail.message = new MailComposer(mail.data).compile();\n\n            mail.setMailerHeader();\n            mail.setPriorityHeaders();\n            mail.setListHeaders();\n\n            this._processPlugins('stream', mail, err => {\n                if (err) {\n                    this.logger.error(\n                        {\n                            err,\n                            tnx: 'plugin',\n                            action: 'stream'\n                        },\n                        'PluginStream Error: %s',\n                        err.message\n                    );\n                    return callback(err);\n                }\n\n                if (mail.data.dkim || this.dkim) {\n                    mail.message.processFunc(input => {\n                        let dkim = mail.data.dkim ? new DKIM(mail.data.dkim) : this.dkim;\n                        this.logger.debug(\n                            {\n                                tnx: 'DKIM',\n                                messageId: mail.message.messageId(),\n                                dkimDomains: dkim.keys.map(key => key.keySelector + '.' + key.domainName).join(', ')\n                            },\n                            'Signing outgoing message with %s keys',\n                            dkim.keys.length\n                        );\n                        return dkim.sign(input, mail.data._dkim);\n                    });\n                }\n\n                this.transporter.send(mail, (...args) => {\n                    if (args[0]) {\n                        this.logger.error(\n                            {\n                                err: args[0],\n                                tnx: 'transport',\n                                action: 'send'\n                            },\n                            'Send Error: %s',\n                            args[0].message\n                        );\n                    }\n                    callback(...args);\n                });\n            });\n        });\n\n        return promise;\n    }\n\n    getVersionString() {\n        return util.format(\n            '%s (%s; +%s; %s/%s)',\n            packageData.name,\n            packageData.version,\n            packageData.homepage,\n            this.transporter.name,\n            this.transporter.version\n        );\n    }\n\n    _processPlugins(step, mail, callback) {\n        step = (step || '').toString();\n\n        if (!this._userPlugins.hasOwnProperty(step)) {\n            return callback();\n        }\n\n        let userPlugins = this._userPlugins[step] || [];\n        let defaultPlugins = this._defaultPlugins[step] || [];\n\n        if (userPlugins.length) {\n            this.logger.debug(\n                {\n                    tnx: 'transaction',\n                    pluginCount: userPlugins.length,\n                    step\n                },\n                'Using %s plugins for %s',\n                userPlugins.length,\n                step\n            );\n        }\n\n        if (userPlugins.length + defaultPlugins.length === 0) {\n            return callback();\n        }\n\n        let pos = 0;\n        let block = 'default';\n        let processPlugins = () => {\n            let curplugins = block === 'default' ? defaultPlugins : userPlugins;\n            if (pos >= curplugins.length) {\n                if (block === 'default' && userPlugins.length) {\n                    block = 'user';\n                    pos = 0;\n                    curplugins = userPlugins;\n                } else {\n                    return callback();\n                }\n            }\n            let plugin = curplugins[pos++];\n            plugin(mail, err => {\n                if (err) {\n                    return callback(err);\n                }\n                processPlugins();\n            });\n        };\n\n        processPlugins();\n    }\n\n    /**\n     * Sets up proxy handler for a Nodemailer object\n     *\n     * @param {String} proxyUrl Proxy configuration url\n     */\n    setupProxy(proxyUrl) {\n        let proxy = urllib.parse(proxyUrl);\n\n        // setup socket handler for the mailer object\n        this.getSocket = (options, callback) => {\n            let protocol = proxy.protocol.replace(/:$/, '').toLowerCase();\n\n            if (this.meta.has('proxy_handler_' + protocol)) {\n                return this.meta.get('proxy_handler_' + protocol)(proxy, options, callback);\n            }\n\n            switch (protocol) {\n                // Connect using a HTTP CONNECT method\n                case 'http':\n                case 'https':\n                    httpProxyClient(proxy.href, options.port, options.host, (err, socket) => {\n                        if (err) {\n                            return callback(err);\n                        }\n                        return callback(null, {\n                            connection: socket\n                        });\n                    });\n                    return;\n                case 'socks':\n                case 'socks5':\n                case 'socks4':\n                case 'socks4a': {\n                    if (!this.meta.has('proxy_socks_module')) {\n                        return callback(new Error('Socks module not loaded'));\n                    }\n                    let connect = ipaddress => {\n                        let proxyV2 = !!this.meta.get('proxy_socks_module').SocksClient;\n                        let socksClient = proxyV2 ? this.meta.get('proxy_socks_module').SocksClient : this.meta.get('proxy_socks_module');\n                        let proxyType = Number(proxy.protocol.replace(/\\D/g, '')) || 5;\n                        let connectionOpts = {\n                            proxy: {\n                                ipaddress,\n                                port: Number(proxy.port),\n                                type: proxyType\n                            },\n                            [proxyV2 ? 'destination' : 'target']: {\n                                host: options.host,\n                                port: options.port\n                            },\n                            command: 'connect'\n                        };\n\n                        if (proxy.auth) {\n                            let username = decodeURIComponent(proxy.auth.split(':').shift());\n                            let password = decodeURIComponent(proxy.auth.split(':').pop());\n                            if (proxyV2) {\n                                connectionOpts.proxy.userId = username;\n                                connectionOpts.proxy.password = password;\n                            } else if (proxyType === 4) {\n                                connectionOpts.userid = username;\n                            } else {\n                                connectionOpts.authentication = {\n                                    username,\n                                    password\n                                };\n                            }\n                        }\n\n                        socksClient.createConnection(connectionOpts, (err, info) => {\n                            if (err) {\n                                return callback(err);\n                            }\n                            return callback(null, {\n                                connection: info.socket || info\n                            });\n                        });\n                    };\n\n                    if (net.isIP(proxy.hostname)) {\n                        return connect(proxy.hostname);\n                    }\n\n                    return dns.resolve(proxy.hostname, (err, address) => {\n                        if (err) {\n                            return callback(err);\n                        }\n                        connect(Array.isArray(address) ? address[0] : address);\n                    });\n                }\n            }\n            callback(new Error('Unknown proxy configuration'));\n        };\n    }\n\n    _convertDataImages(mail, callback) {\n        if ((!this.options.attachDataUrls && !mail.data.attachDataUrls) || !mail.data.html) {\n            return callback();\n        }\n        mail.resolveContent(mail.data, 'html', (err, html) => {\n            if (err) {\n                return callback(err);\n            }\n            let cidCounter = 0;\n            html = (html || '')\n                .toString()\n                .replace(/(<img\\b[^<>]{0,1024} src\\s{0,20}=[\\s\"']{0,20})(data:([^;]+);[^\"'>\\s]+)/gi, (match, prefix, dataUri, mimeType) => {\n                    let cid = crypto.randomBytes(10).toString('hex') + '@localhost';\n                    if (!mail.data.attachments) {\n                        mail.data.attachments = [];\n                    }\n                    if (!Array.isArray(mail.data.attachments)) {\n                        mail.data.attachments = [].concat(mail.data.attachments || []);\n                    }\n                    mail.data.attachments.push({\n                        path: dataUri,\n                        cid,\n                        filename: 'image-' + ++cidCounter + '.' + mimeTypes.detectExtension(mimeType)\n                    });\n                    return prefix + 'cid:' + cid;\n                });\n            mail.data.html = html;\n            callback();\n        });\n    }\n\n    set(key, value) {\n        return this.meta.set(key, value);\n    }\n\n    get(key) {\n        return this.meta.get(key);\n    }\n}\n\nmodule.exports = Mail;\n", "'use strict';\n\nconst stream = require('stream');\nconst Transform = stream.Transform;\n\n/**\n * Escapes dots in the beginning of lines. Ends the stream with <CR><LF>.<CR><LF>\n * Also makes sure that only <CR><LF> sequences are used for linebreaks\n *\n * @param {Object} options Stream options\n */\nclass DataStream extends Transform {\n    constructor(options) {\n        super(options);\n        // init Transform\n        this.options = options || {};\n        this._curLine = '';\n\n        this.inByteCount = 0;\n        this.outByteCount = 0;\n        this.lastByte = false;\n    }\n\n    /**\n     * Escapes dots\n     */\n    _transform(chunk, encoding, done) {\n        let chunks = [];\n        let chunklen = 0;\n        let i,\n            len,\n            lastPos = 0;\n        let buf;\n\n        if (!chunk || !chunk.length) {\n            return done();\n        }\n\n        if (typeof chunk === 'string') {\n            chunk = Buffer.from(chunk);\n        }\n\n        this.inByteCount += chunk.length;\n\n        for (i = 0, len = chunk.length; i < len; i++) {\n            if (chunk[i] === 0x2e) {\n                // .\n                if ((i && chunk[i - 1] === 0x0a) || (!i && (!this.lastByte || this.lastByte === 0x0a))) {\n                    buf = chunk.slice(lastPos, i + 1);\n                    chunks.push(buf);\n                    chunks.push(Buffer.from('.'));\n                    chunklen += buf.length + 1;\n                    lastPos = i + 1;\n                }\n            } else if (chunk[i] === 0x0a) {\n                // .\n                if ((i && chunk[i - 1] !== 0x0d) || (!i && this.lastByte !== 0x0d)) {\n                    if (i > lastPos) {\n                        buf = chunk.slice(lastPos, i);\n                        chunks.push(buf);\n                        chunklen += buf.length + 2;\n                    } else {\n                        chunklen += 2;\n                    }\n                    chunks.push(Buffer.from('\\r\\n'));\n                    lastPos = i + 1;\n                }\n            }\n        }\n\n        if (chunklen) {\n            // add last piece\n            if (lastPos < chunk.length) {\n                buf = chunk.slice(lastPos);\n                chunks.push(buf);\n                chunklen += buf.length;\n            }\n\n            this.outByteCount += chunklen;\n            this.push(Buffer.concat(chunks, chunklen));\n        } else {\n            this.outByteCount += chunk.length;\n            this.push(chunk);\n        }\n\n        this.lastByte = chunk[chunk.length - 1];\n        done();\n    }\n\n    /**\n     * Finalizes the stream with a dot on a single line\n     */\n    _flush(done) {\n        let buf;\n        if (this.lastByte === 0x0a) {\n            buf = Buffer.from('.\\r\\n');\n        } else if (this.lastByte === 0x0d) {\n            buf = Buffer.from('\\n.\\r\\n');\n        } else {\n            buf = Buffer.from('\\r\\n.\\r\\n');\n        }\n        this.outByteCount += buf.length;\n        this.push(buf);\n        done();\n    }\n}\n\nmodule.exports = DataStream;\n", "'use strict';\n\nconst packageInfo = require('../../package.json');\nconst EventEmitter = require('events').EventEmitter;\nconst net = require('net');\nconst tls = require('tls');\nconst os = require('os');\nconst crypto = require('crypto');\nconst DataStream = require('./data-stream');\nconst PassThrough = require('stream').PassThrough;\nconst shared = require('../shared');\n\n// default timeout values in ms\nconst CONNECTION_TIMEOUT = 2 * 60 * 1000; // how much to wait for the connection to be established\nconst SOCKET_TIMEOUT = 10 * 60 * 1000; // how much to wait for socket inactivity before disconnecting the client\nconst GREETING_TIMEOUT = 30 * 1000; // how much to wait after connection is established but SMTP greeting is not receieved\nconst DNS_TIMEOUT = 30 * 1000; // how much to wait for resolveHostname\n\n/**\n * Generates a SMTP connection object\n *\n * Optional options object takes the following possible properties:\n *\n *  * **port** - is the port to connect to (defaults to 587 or 465)\n *  * **host** - is the hostname or IP address to connect to (defaults to 'localhost')\n *  * **secure** - use SSL\n *  * **ignoreTLS** - ignore server support for STARTTLS\n *  * **requireTLS** - forces the client to use STARTTLS\n *  * **name** - the name of the client server\n *  * **localAddress** - outbound address to bind to (see: http://nodejs.org/api/net.html#net_net_connect_options_connectionlistener)\n *  * **greetingTimeout** - Time to wait in ms until greeting message is received from the server (defaults to 10000)\n *  * **connectionTimeout** - how many milliseconds to wait for the connection to establish\n *  * **socketTimeout** - Time of inactivity until the connection is closed (defaults to 1 hour)\n *  * **dnsTimeout** - Time to wait in ms for the DNS requests to be resolved (defaults to 30 seconds)\n *  * **lmtp** - if true, uses LMTP instead of SMTP protocol\n *  * **logger** - bunyan compatible logger interface\n *  * **debug** - if true pass SMTP traffic to the logger\n *  * **tls** - options for createCredentials\n *  * **socket** - existing socket to use instead of creating a new one (see: http://nodejs.org/api/net.html#net_class_net_socket)\n *  * **secured** - boolean indicates that the provided socket has already been upgraded to tls\n *\n * @constructor\n * @namespace SMTP Client module\n * @param {Object} [options] Option properties\n */\nclass SMTPConnection extends EventEmitter {\n    constructor(options) {\n        super(options);\n\n        this.id = crypto.randomBytes(8).toString('base64').replace(/\\W/g, '');\n        this.stage = 'init';\n\n        this.options = options || {};\n\n        this.secureConnection = !!this.options.secure;\n        this.alreadySecured = !!this.options.secured;\n\n        this.port = Number(this.options.port) || (this.secureConnection ? 465 : 587);\n        this.host = this.options.host || 'localhost';\n\n        this.servername = this.options.servername ? this.options.servername : !net.isIP(this.host) ? this.host : false;\n\n        this.allowInternalNetworkInterfaces = this.options.allowInternalNetworkInterfaces || false;\n\n        if (typeof this.options.secure === 'undefined' && this.port === 465) {\n            // if secure option is not set but port is 465, then default to secure\n            this.secureConnection = true;\n        }\n\n        this.name = this.options.name || this._getHostname();\n\n        this.logger = shared.getLogger(this.options, {\n            component: this.options.component || 'smtp-connection',\n            sid: this.id\n        });\n\n        this.customAuth = new Map();\n        Object.keys(this.options.customAuth || {}).forEach(key => {\n            let mapKey = (key || '').toString().trim().toUpperCase();\n            if (!mapKey) {\n                return;\n            }\n            this.customAuth.set(mapKey, this.options.customAuth[key]);\n        });\n\n        /**\n         * Expose version nr, just for the reference\n         * @type {String}\n         */\n        this.version = packageInfo.version;\n\n        /**\n         * If true, then the user is authenticated\n         * @type {Boolean}\n         */\n        this.authenticated = false;\n\n        /**\n         * If set to true, this instance is no longer active\n         * @private\n         */\n        this.destroyed = false;\n\n        /**\n         * Defines if the current connection is secure or not. If not,\n         * STARTTLS can be used if available\n         * @private\n         */\n        this.secure = !!this.secureConnection;\n\n        /**\n         * Store incomplete messages coming from the server\n         * @private\n         */\n        this._remainder = '';\n\n        /**\n         * Unprocessed responses from the server\n         * @type {Array}\n         */\n        this._responseQueue = [];\n\n        this.lastServerResponse = false;\n\n        /**\n         * The socket connecting to the server\n         * @public\n         */\n        this._socket = false;\n\n        /**\n         * Lists supported auth mechanisms\n         * @private\n         */\n        this._supportedAuth = [];\n\n        /**\n         * Set to true, if EHLO response includes \"AUTH\".\n         * If false then authentication is not tried\n         */\n        this.allowsAuth = false;\n\n        /**\n         * Includes current envelope (from, to)\n         * @private\n         */\n        this._envelope = false;\n\n        /**\n         * Lists supported extensions\n         * @private\n         */\n        this._supportedExtensions = [];\n\n        /**\n         * Defines the maximum allowed size for a single message\n         * @private\n         */\n        this._maxAllowedSize = 0;\n\n        /**\n         * Function queue to run if a data chunk comes from the server\n         * @private\n         */\n        this._responseActions = [];\n        this._recipientQueue = [];\n\n        /**\n         * Timeout variable for waiting the greeting\n         * @private\n         */\n        this._greetingTimeout = false;\n\n        /**\n         * Timeout variable for waiting the connection to start\n         * @private\n         */\n        this._connectionTimeout = false;\n\n        /**\n         * If the socket is deemed already closed\n         * @private\n         */\n        this._destroyed = false;\n\n        /**\n         * If the socket is already being closed\n         * @private\n         */\n        this._closing = false;\n\n        /**\n         * Callbacks for socket's listeners\n         */\n        this._onSocketData = chunk => this._onData(chunk);\n        this._onSocketError = error => this._onError(error, 'ESOCKET', false, 'CONN');\n        this._onSocketClose = () => this._onClose();\n        this._onSocketEnd = () => this._onEnd();\n        this._onSocketTimeout = () => this._onTimeout();\n    }\n\n    /**\n     * Creates a connection to a SMTP server and sets up connection\n     * listener\n     */\n    connect(connectCallback) {\n        if (typeof connectCallback === 'function') {\n            this.once('connect', () => {\n                this.logger.debug(\n                    {\n                        tnx: 'smtp'\n                    },\n                    'SMTP handshake finished'\n                );\n                connectCallback();\n            });\n\n            const isDestroyedMessage = this._isDestroyedMessage('connect');\n            if (isDestroyedMessage) {\n                return connectCallback(this._formatError(isDestroyedMessage, 'ECONNECTION', false, 'CONN'));\n            }\n        }\n\n        let opts = {\n            port: this.port,\n            host: this.host,\n            allowInternalNetworkInterfaces: this.allowInternalNetworkInterfaces,\n            timeout: this.options.dnsTimeout || DNS_TIMEOUT\n        };\n\n        if (this.options.localAddress) {\n            opts.localAddress = this.options.localAddress;\n        }\n\n        let setupConnectionHandlers = () => {\n            this._connectionTimeout = setTimeout(() => {\n                this._onError('Connection timeout', 'ETIMEDOUT', false, 'CONN');\n            }, this.options.connectionTimeout || CONNECTION_TIMEOUT);\n\n            this._socket.on('error', this._onSocketError);\n        };\n\n        if (this.options.connection) {\n            // connection is already opened\n            this._socket = this.options.connection;\n            setupConnectionHandlers();\n\n            if (this.secureConnection && !this.alreadySecured) {\n                setImmediate(() =>\n                    this._upgradeConnection(err => {\n                        if (err) {\n                            this._onError(new Error('Error initiating TLS - ' + (err.message || err)), 'ETLS', false, 'CONN');\n                            return;\n                        }\n                        this._onConnect();\n                    })\n                );\n            } else {\n                setImmediate(() => this._onConnect());\n            }\n            return;\n        } else if (this.options.socket) {\n            // socket object is set up but not yet connected\n            this._socket = this.options.socket;\n            return shared.resolveHostname(opts, (err, resolved) => {\n                if (err) {\n                    return setImmediate(() => this._onError(err, 'EDNS', false, 'CONN'));\n                }\n                this.logger.debug(\n                    {\n                        tnx: 'dns',\n                        source: opts.host,\n                        resolved: resolved.host,\n                        cached: !!resolved.cached\n                    },\n                    'Resolved %s as %s [cache %s]',\n                    opts.host,\n                    resolved.host,\n                    resolved.cached ? 'hit' : 'miss'\n                );\n                Object.keys(resolved).forEach(key => {\n                    if (key.charAt(0) !== '_' && resolved[key]) {\n                        opts[key] = resolved[key];\n                    }\n                });\n                try {\n                    this._socket.connect(this.port, this.host, () => {\n                        this._socket.setKeepAlive(true);\n                        this._onConnect();\n                    });\n                    setupConnectionHandlers();\n                } catch (E) {\n                    return setImmediate(() => this._onError(E, 'ECONNECTION', false, 'CONN'));\n                }\n            });\n        } else if (this.secureConnection) {\n            // connect using tls\n            if (this.options.tls) {\n                Object.keys(this.options.tls).forEach(key => {\n                    opts[key] = this.options.tls[key];\n                });\n            }\n\n            // ensure servername for SNI\n            if (this.servername && !opts.servername) {\n                opts.servername = this.servername;\n            }\n\n            return shared.resolveHostname(opts, (err, resolved) => {\n                if (err) {\n                    return setImmediate(() => this._onError(err, 'EDNS', false, 'CONN'));\n                }\n                this.logger.debug(\n                    {\n                        tnx: 'dns',\n                        source: opts.host,\n                        resolved: resolved.host,\n                        cached: !!resolved.cached\n                    },\n                    'Resolved %s as %s [cache %s]',\n                    opts.host,\n                    resolved.host,\n                    resolved.cached ? 'hit' : 'miss'\n                );\n                Object.keys(resolved).forEach(key => {\n                    if (key.charAt(0) !== '_' && resolved[key]) {\n                        opts[key] = resolved[key];\n                    }\n                });\n                try {\n                    this._socket = tls.connect(opts, () => {\n                        this._socket.setKeepAlive(true);\n                        this._onConnect();\n                    });\n                    setupConnectionHandlers();\n                } catch (E) {\n                    return setImmediate(() => this._onError(E, 'ECONNECTION', false, 'CONN'));\n                }\n            });\n        } else {\n            // connect using plaintext\n            return shared.resolveHostname(opts, (err, resolved) => {\n                if (err) {\n                    return setImmediate(() => this._onError(err, 'EDNS', false, 'CONN'));\n                }\n                this.logger.debug(\n                    {\n                        tnx: 'dns',\n                        source: opts.host,\n                        resolved: resolved.host,\n                        cached: !!resolved.cached\n                    },\n                    'Resolved %s as %s [cache %s]',\n                    opts.host,\n                    resolved.host,\n                    resolved.cached ? 'hit' : 'miss'\n                );\n                Object.keys(resolved).forEach(key => {\n                    if (key.charAt(0) !== '_' && resolved[key]) {\n                        opts[key] = resolved[key];\n                    }\n                });\n                try {\n                    this._socket = net.connect(opts, () => {\n                        this._socket.setKeepAlive(true);\n                        this._onConnect();\n                    });\n                    setupConnectionHandlers();\n                } catch (E) {\n                    return setImmediate(() => this._onError(E, 'ECONNECTION', false, 'CONN'));\n                }\n            });\n        }\n    }\n\n    /**\n     * Sends QUIT\n     */\n    quit() {\n        this._sendCommand('QUIT');\n        this._responseActions.push(this.close);\n    }\n\n    /**\n     * Closes the connection to the server\n     */\n    close() {\n        clearTimeout(this._connectionTimeout);\n        clearTimeout(this._greetingTimeout);\n        this._responseActions = [];\n\n        // allow to run this function only once\n        if (this._closing) {\n            return;\n        }\n        this._closing = true;\n\n        let closeMethod = 'end';\n\n        if (this.stage === 'init') {\n            // Close the socket immediately when connection timed out\n            closeMethod = 'destroy';\n        }\n\n        this.logger.debug(\n            {\n                tnx: 'smtp'\n            },\n            'Closing connection to the server using \"%s\"',\n            closeMethod\n        );\n\n        let socket = (this._socket && this._socket.socket) || this._socket;\n\n        if (socket && !socket.destroyed) {\n            try {\n                socket[closeMethod]();\n            } catch (_E) {\n                // just ignore\n            }\n        }\n\n        this._destroy();\n    }\n\n    /**\n     * Authenticate user\n     */\n    login(authData, callback) {\n        const isDestroyedMessage = this._isDestroyedMessage('login');\n        if (isDestroyedMessage) {\n            return callback(this._formatError(isDestroyedMessage, 'ECONNECTION', false, 'API'));\n        }\n\n        this._auth = authData || {};\n        // Select SASL authentication method\n        this._authMethod = (this._auth.method || '').toString().trim().toUpperCase() || false;\n\n        if (!this._authMethod && this._auth.oauth2 && !this._auth.credentials) {\n            this._authMethod = 'XOAUTH2';\n        } else if (!this._authMethod || (this._authMethod === 'XOAUTH2' && !this._auth.oauth2)) {\n            // use first supported\n            this._authMethod = (this._supportedAuth[0] || 'PLAIN').toUpperCase().trim();\n        }\n\n        if (this._authMethod !== 'XOAUTH2' && (!this._auth.credentials || !this._auth.credentials.user || !this._auth.credentials.pass)) {\n            if ((this._auth.user && this._auth.pass) || this.customAuth.has(this._authMethod)) {\n                this._auth.credentials = {\n                    user: this._auth.user,\n                    pass: this._auth.pass,\n                    options: this._auth.options\n                };\n            } else {\n                return callback(this._formatError('Missing credentials for \"' + this._authMethod + '\"', 'EAUTH', false, 'API'));\n            }\n        }\n\n        if (this.customAuth.has(this._authMethod)) {\n            let handler = this.customAuth.get(this._authMethod);\n            let lastResponse;\n            let returned = false;\n\n            let resolve = () => {\n                if (returned) {\n                    return;\n                }\n                returned = true;\n                this.logger.info(\n                    {\n                        tnx: 'smtp',\n                        username: this._auth.user,\n                        action: 'authenticated',\n                        method: this._authMethod\n                    },\n                    'User %s authenticated',\n                    JSON.stringify(this._auth.user)\n                );\n                this.authenticated = true;\n                callback(null, true);\n            };\n\n            let reject = err => {\n                if (returned) {\n                    return;\n                }\n                returned = true;\n                callback(this._formatError(err, 'EAUTH', lastResponse, 'AUTH ' + this._authMethod));\n            };\n\n            let handlerResponse = handler({\n                auth: this._auth,\n                method: this._authMethod,\n\n                extensions: [].concat(this._supportedExtensions),\n                authMethods: [].concat(this._supportedAuth),\n                maxAllowedSize: this._maxAllowedSize || false,\n\n                sendCommand: (cmd, done) => {\n                    let promise;\n\n                    if (!done) {\n                        promise = new Promise((resolve, reject) => {\n                            done = shared.callbackPromise(resolve, reject);\n                        });\n                    }\n\n                    this._responseActions.push(str => {\n                        lastResponse = str;\n\n                        let codes = str.match(/^(\\d+)(?:\\s(\\d+\\.\\d+\\.\\d+))?\\s/);\n                        let data = {\n                            command: cmd,\n                            response: str\n                        };\n                        if (codes) {\n                            data.status = Number(codes[1]) || 0;\n                            if (codes[2]) {\n                                data.code = codes[2];\n                            }\n                            data.text = str.substr(codes[0].length);\n                        } else {\n                            data.text = str;\n                            data.status = 0; // just in case we need to perform numeric comparisons\n                        }\n                        done(null, data);\n                    });\n                    setImmediate(() => this._sendCommand(cmd));\n\n                    return promise;\n                },\n\n                resolve,\n                reject\n            });\n\n            if (handlerResponse && typeof handlerResponse.catch === 'function') {\n                // a promise was returned\n                handlerResponse.then(resolve).catch(reject);\n            }\n\n            return;\n        }\n\n        switch (this._authMethod) {\n            case 'XOAUTH2':\n                this._handleXOauth2Token(false, callback);\n                return;\n            case 'LOGIN':\n                this._responseActions.push(str => {\n                    this._actionAUTH_LOGIN_USER(str, callback);\n                });\n                this._sendCommand('AUTH LOGIN');\n                return;\n            case 'PLAIN':\n                this._responseActions.push(str => {\n                    this._actionAUTHComplete(str, callback);\n                });\n                this._sendCommand(\n                    'AUTH PLAIN ' +\n                        Buffer.from(\n                            //this._auth.user+'\\u0000'+\n                            '\\u0000' + // skip authorization identity as it causes problems with some servers\n                                this._auth.credentials.user +\n                                '\\u0000' +\n                                this._auth.credentials.pass,\n                            'utf-8'\n                        ).toString('base64'),\n                    // log entry without passwords\n                    'AUTH PLAIN ' +\n                        Buffer.from(\n                            //this._auth.user+'\\u0000'+\n                            '\\u0000' + // skip authorization identity as it causes problems with some servers\n                                this._auth.credentials.user +\n                                '\\u0000' +\n                                '/* secret */',\n                            'utf-8'\n                        ).toString('base64')\n                );\n                return;\n            case 'CRAM-MD5':\n                this._responseActions.push(str => {\n                    this._actionAUTH_CRAM_MD5(str, callback);\n                });\n                this._sendCommand('AUTH CRAM-MD5');\n                return;\n        }\n\n        return callback(this._formatError('Unknown authentication method \"' + this._authMethod + '\"', 'EAUTH', false, 'API'));\n    }\n\n    /**\n     * Sends a message\n     *\n     * @param {Object} envelope Envelope object, {from: addr, to: [addr]}\n     * @param {Object} message String, Buffer or a Stream\n     * @param {Function} callback Callback to return once sending is completed\n     */\n    send(envelope, message, done) {\n        if (!message) {\n            return done(this._formatError('Empty message', 'EMESSAGE', false, 'API'));\n        }\n\n        const isDestroyedMessage = this._isDestroyedMessage('send message');\n        if (isDestroyedMessage) {\n            return done(this._formatError(isDestroyedMessage, 'ECONNECTION', false, 'API'));\n        }\n\n        // reject larger messages than allowed\n        if (this._maxAllowedSize && envelope.size > this._maxAllowedSize) {\n            return setImmediate(() => {\n                done(this._formatError('Message size larger than allowed ' + this._maxAllowedSize, 'EMESSAGE', false, 'MAIL FROM'));\n            });\n        }\n\n        // ensure that callback is only called once\n        let returned = false;\n        let callback = function () {\n            if (returned) {\n                return;\n            }\n            returned = true;\n\n            done(...arguments);\n        };\n\n        if (typeof message.on === 'function') {\n            message.on('error', err => callback(this._formatError(err, 'ESTREAM', false, 'API')));\n        }\n\n        let startTime = Date.now();\n        this._setEnvelope(envelope, (err, info) => {\n            if (err) {\n                // create passthrough stream to consume to prevent OOM\n                let stream = new PassThrough();\n                if (typeof message.pipe === 'function') {\n                    message.pipe(stream);\n                } else {\n                    stream.write(message);\n                    stream.end();\n                }\n\n                return callback(err);\n            }\n            let envelopeTime = Date.now();\n            let stream = this._createSendStream((err, str) => {\n                if (err) {\n                    return callback(err);\n                }\n\n                info.envelopeTime = envelopeTime - startTime;\n                info.messageTime = Date.now() - envelopeTime;\n                info.messageSize = stream.outByteCount;\n                info.response = str;\n\n                return callback(null, info);\n            });\n            if (typeof message.pipe === 'function') {\n                message.pipe(stream);\n            } else {\n                stream.write(message);\n                stream.end();\n            }\n        });\n    }\n\n    /**\n     * Resets connection state\n     *\n     * @param {Function} callback Callback to return once connection is reset\n     */\n    reset(callback) {\n        this._sendCommand('RSET');\n        this._responseActions.push(str => {\n            if (str.charAt(0) !== '2') {\n                return callback(this._formatError('Could not reset session state. response=' + str, 'EPROTOCOL', str, 'RSET'));\n            }\n            this._envelope = false;\n            return callback(null, true);\n        });\n    }\n\n    /**\n     * Connection listener that is run when the connection to\n     * the server is opened\n     *\n     * @event\n     */\n    _onConnect() {\n        clearTimeout(this._connectionTimeout);\n\n        this.logger.info(\n            {\n                tnx: 'network',\n                localAddress: this._socket.localAddress,\n                localPort: this._socket.localPort,\n                remoteAddress: this._socket.remoteAddress,\n                remotePort: this._socket.remotePort\n            },\n            '%s established to %s:%s',\n            this.secure ? 'Secure connection' : 'Connection',\n            this._socket.remoteAddress,\n            this._socket.remotePort\n        );\n\n        if (this._destroyed) {\n            // Connection was established after we already had canceled it\n            this.close();\n            return;\n        }\n\n        this.stage = 'connected';\n\n        // clear existing listeners for the socket\n        this._socket.removeListener('data', this._onSocketData);\n        this._socket.removeListener('timeout', this._onSocketTimeout);\n        this._socket.removeListener('close', this._onSocketClose);\n        this._socket.removeListener('end', this._onSocketEnd);\n\n        this._socket.on('data', this._onSocketData);\n        this._socket.once('close', this._onSocketClose);\n        this._socket.once('end', this._onSocketEnd);\n\n        this._socket.setTimeout(this.options.socketTimeout || SOCKET_TIMEOUT);\n        this._socket.on('timeout', this._onSocketTimeout);\n\n        this._greetingTimeout = setTimeout(() => {\n            // if still waiting for greeting, give up\n            if (this._socket && !this._destroyed && this._responseActions[0] === this._actionGreeting) {\n                this._onError('Greeting never received', 'ETIMEDOUT', false, 'CONN');\n            }\n        }, this.options.greetingTimeout || GREETING_TIMEOUT);\n\n        this._responseActions.push(this._actionGreeting);\n\n        // we have a 'data' listener set up so resume socket if it was paused\n        this._socket.resume();\n    }\n\n    /**\n     * 'data' listener for data coming from the server\n     *\n     * @event\n     * @param {Buffer} chunk Data chunk coming from the server\n     */\n    _onData(chunk) {\n        if (this._destroyed || !chunk || !chunk.length) {\n            return;\n        }\n\n        let data = (chunk || '').toString('binary');\n        let lines = (this._remainder + data).split(/\\r?\\n/);\n        let lastline;\n\n        this._remainder = lines.pop();\n\n        for (let i = 0, len = lines.length; i < len; i++) {\n            if (this._responseQueue.length) {\n                lastline = this._responseQueue[this._responseQueue.length - 1];\n                if (/^\\d+-/.test(lastline.split('\\n').pop())) {\n                    this._responseQueue[this._responseQueue.length - 1] += '\\n' + lines[i];\n                    continue;\n                }\n            }\n            this._responseQueue.push(lines[i]);\n        }\n\n        if (this._responseQueue.length) {\n            lastline = this._responseQueue[this._responseQueue.length - 1];\n            if (/^\\d+-/.test(lastline.split('\\n').pop())) {\n                return;\n            }\n        }\n\n        this._processResponse();\n    }\n\n    /**\n     * 'error' listener for the socket\n     *\n     * @event\n     * @param {Error} err Error object\n     * @param {String} type Error name\n     */\n    _onError(err, type, data, command) {\n        clearTimeout(this._connectionTimeout);\n        clearTimeout(this._greetingTimeout);\n\n        if (this._destroyed) {\n            // just ignore, already closed\n            // this might happen when a socket is canceled because of reached timeout\n            // but the socket timeout error itself receives only after\n            return;\n        }\n\n        err = this._formatError(err, type, data, command);\n\n        this.logger.error(data, err.message);\n\n        this.emit('error', err);\n        this.close();\n    }\n\n    _formatError(message, type, response, command) {\n        let err;\n\n        if (/Error\\]$/i.test(Object.prototype.toString.call(message))) {\n            err = message;\n        } else {\n            err = new Error(message);\n        }\n\n        if (type && type !== 'Error') {\n            err.code = type;\n        }\n\n        if (response) {\n            err.response = response;\n            err.message += ': ' + response;\n        }\n\n        let responseCode = (typeof response === 'string' && Number((response.match(/^\\d+/) || [])[0])) || false;\n        if (responseCode) {\n            err.responseCode = responseCode;\n        }\n\n        if (command) {\n            err.command = command;\n        }\n\n        return err;\n    }\n\n    /**\n     * 'close' listener for the socket\n     *\n     * @event\n     */\n    _onClose() {\n        let serverResponse = false;\n\n        if (this._remainder && this._remainder.trim()) {\n            if (this.options.debug || this.options.transactionLog) {\n                this.logger.debug(\n                    {\n                        tnx: 'server'\n                    },\n                    this._remainder.replace(/\\r?\\n$/, '')\n                );\n            }\n            this.lastServerResponse = serverResponse = this._remainder.trim();\n        }\n\n        this.logger.info(\n            {\n                tnx: 'network'\n            },\n            'Connection closed'\n        );\n\n        if (this.upgrading && !this._destroyed) {\n            return this._onError(new Error('Connection closed unexpectedly'), 'ETLS', serverResponse, 'CONN');\n        } else if (![this._actionGreeting, this.close].includes(this._responseActions[0]) && !this._destroyed) {\n            return this._onError(new Error('Connection closed unexpectedly'), 'ECONNECTION', serverResponse, 'CONN');\n        } else if (/^[45]\\d{2}\\b/.test(serverResponse)) {\n            return this._onError(new Error('Connection closed unexpectedly'), 'ECONNECTION', serverResponse, 'CONN');\n        }\n\n        this._destroy();\n    }\n\n    /**\n     * 'end' listener for the socket\n     *\n     * @event\n     */\n    _onEnd() {\n        if (this._socket && !this._socket.destroyed) {\n            this._socket.destroy();\n        }\n    }\n\n    /**\n     * 'timeout' listener for the socket\n     *\n     * @event\n     */\n    _onTimeout() {\n        return this._onError(new Error('Timeout'), 'ETIMEDOUT', false, 'CONN');\n    }\n\n    /**\n     * Destroys the client, emits 'end'\n     */\n    _destroy() {\n        if (this._destroyed) {\n            return;\n        }\n        this._destroyed = true;\n        this.emit('end');\n    }\n\n    /**\n     * Upgrades the connection to TLS\n     *\n     * @param {Function} callback Callback function to run when the connection\n     *        has been secured\n     */\n    _upgradeConnection(callback) {\n        // do not remove all listeners or it breaks node v0.10 as there's\n        // apparently a 'finish' event set that would be cleared as well\n\n        // we can safely keep 'error', 'end', 'close' etc. events\n        this._socket.removeListener('data', this._onSocketData); // incoming data is going to be gibberish from this point onwards\n        this._socket.removeListener('timeout', this._onSocketTimeout); // timeout will be re-set for the new socket object\n\n        let socketPlain = this._socket;\n        let opts = {\n            socket: this._socket,\n            host: this.host\n        };\n\n        Object.keys(this.options.tls || {}).forEach(key => {\n            opts[key] = this.options.tls[key];\n        });\n\n        // ensure servername for SNI\n        if (this.servername && !opts.servername) {\n            opts.servername = this.servername;\n        }\n\n        this.upgrading = true;\n        // tls.connect is not an asynchronous function however it may still throw errors and requires to be wrapped with try/catch\n        try {\n            this._socket = tls.connect(opts, () => {\n                this.secure = true;\n                this.upgrading = false;\n                this._socket.on('data', this._onSocketData);\n\n                socketPlain.removeListener('close', this._onSocketClose);\n                socketPlain.removeListener('end', this._onSocketEnd);\n\n                return callback(null, true);\n            });\n        } catch (err) {\n            return callback(err);\n        }\n\n        this._socket.on('error', this._onSocketError);\n        this._socket.once('close', this._onSocketClose);\n        this._socket.once('end', this._onSocketEnd);\n\n        this._socket.setTimeout(this.options.socketTimeout || SOCKET_TIMEOUT); // 10 min.\n        this._socket.on('timeout', this._onSocketTimeout);\n\n        // resume in case the socket was paused\n        socketPlain.resume();\n    }\n\n    /**\n     * Processes queued responses from the server\n     *\n     * @param {Boolean} force If true, ignores _processing flag\n     */\n    _processResponse() {\n        if (!this._responseQueue.length) {\n            return false;\n        }\n\n        let str = (this.lastServerResponse = (this._responseQueue.shift() || '').toString());\n\n        if (/^\\d+-/.test(str.split('\\n').pop())) {\n            // keep waiting for the final part of multiline response\n            return;\n        }\n\n        if (this.options.debug || this.options.transactionLog) {\n            this.logger.debug(\n                {\n                    tnx: 'server'\n                },\n                str.replace(/\\r?\\n$/, '')\n            );\n        }\n\n        if (!str.trim()) {\n            // skip unexpected empty lines\n            setImmediate(() => this._processResponse());\n        }\n\n        let action = this._responseActions.shift();\n\n        if (typeof action === 'function') {\n            action.call(this, str);\n            setImmediate(() => this._processResponse());\n        } else {\n            return this._onError(new Error('Unexpected Response'), 'EPROTOCOL', str, 'CONN');\n        }\n    }\n\n    /**\n     * Send a command to the server, append \\r\\n\n     *\n     * @param {String} str String to be sent to the server\n     * @param {String} logStr Optional string to be used for logging instead of the actual string\n     */\n    _sendCommand(str, logStr) {\n        if (this._destroyed) {\n            // Connection already closed, can't send any more data\n            return;\n        }\n\n        if (this._socket.destroyed) {\n            return this.close();\n        }\n\n        if (this.options.debug || this.options.transactionLog) {\n            this.logger.debug(\n                {\n                    tnx: 'client'\n                },\n                (logStr || str || '').toString().replace(/\\r?\\n$/, '')\n            );\n        }\n\n        this._socket.write(Buffer.from(str + '\\r\\n', 'utf-8'));\n    }\n\n    /**\n     * Initiates a new message by submitting envelope data, starting with\n     * MAIL FROM: command\n     *\n     * @param {Object} envelope Envelope object in the form of\n     *        {from:'...', to:['...']}\n     *        or\n     *        {from:{address:'...',name:'...'}, to:[address:'...',name:'...']}\n     */\n    _setEnvelope(envelope, callback) {\n        let args = [];\n        let useSmtpUtf8 = false;\n\n        this._envelope = envelope || {};\n        this._envelope.from = ((this._envelope.from && this._envelope.from.address) || this._envelope.from || '').toString().trim();\n\n        this._envelope.to = [].concat(this._envelope.to || []).map(to => ((to && to.address) || to || '').toString().trim());\n\n        if (!this._envelope.to.length) {\n            return callback(this._formatError('No recipients defined', 'EENVELOPE', false, 'API'));\n        }\n\n        if (this._envelope.from && /[\\r\\n<>]/.test(this._envelope.from)) {\n            return callback(this._formatError('Invalid sender ' + JSON.stringify(this._envelope.from), 'EENVELOPE', false, 'API'));\n        }\n\n        // check if the sender address uses only ASCII characters,\n        // otherwise require usage of SMTPUTF8 extension\n        if (/[\\x80-\\uFFFF]/.test(this._envelope.from)) {\n            useSmtpUtf8 = true;\n        }\n\n        for (let i = 0, len = this._envelope.to.length; i < len; i++) {\n            if (!this._envelope.to[i] || /[\\r\\n<>]/.test(this._envelope.to[i])) {\n                return callback(this._formatError('Invalid recipient ' + JSON.stringify(this._envelope.to[i]), 'EENVELOPE', false, 'API'));\n            }\n\n            // check if the recipients addresses use only ASCII characters,\n            // otherwise require usage of SMTPUTF8 extension\n            if (/[\\x80-\\uFFFF]/.test(this._envelope.to[i])) {\n                useSmtpUtf8 = true;\n            }\n        }\n\n        // clone the recipients array for latter manipulation\n        this._envelope.rcptQueue = JSON.parse(JSON.stringify(this._envelope.to || []));\n        this._envelope.rejected = [];\n        this._envelope.rejectedErrors = [];\n        this._envelope.accepted = [];\n\n        if (this._envelope.dsn) {\n            try {\n                this._envelope.dsn = this._setDsnEnvelope(this._envelope.dsn);\n            } catch (err) {\n                return callback(this._formatError('Invalid DSN ' + err.message, 'EENVELOPE', false, 'API'));\n            }\n        }\n\n        this._responseActions.push(str => {\n            this._actionMAIL(str, callback);\n        });\n\n        // If the server supports SMTPUTF8 and the envelope includes an internationalized\n        // email address then append SMTPUTF8 keyword to the MAIL FROM command\n        if (useSmtpUtf8 && this._supportedExtensions.includes('SMTPUTF8')) {\n            args.push('SMTPUTF8');\n            this._usingSmtpUtf8 = true;\n        }\n\n        // If the server supports 8BITMIME and the message might contain non-ascii bytes\n        // then append the 8BITMIME keyword to the MAIL FROM command\n        if (this._envelope.use8BitMime && this._supportedExtensions.includes('8BITMIME')) {\n            args.push('BODY=8BITMIME');\n            this._using8BitMime = true;\n        }\n\n        if (this._envelope.size && this._supportedExtensions.includes('SIZE')) {\n            args.push('SIZE=' + this._envelope.size);\n        }\n\n        // If the server supports DSN and the envelope includes an DSN prop\n        // then append DSN params to the MAIL FROM command\n        if (this._envelope.dsn && this._supportedExtensions.includes('DSN')) {\n            if (this._envelope.dsn.ret) {\n                args.push('RET=' + shared.encodeXText(this._envelope.dsn.ret));\n            }\n            if (this._envelope.dsn.envid) {\n                args.push('ENVID=' + shared.encodeXText(this._envelope.dsn.envid));\n            }\n        }\n\n        this._sendCommand('MAIL FROM:<' + this._envelope.from + '>' + (args.length ? ' ' + args.join(' ') : ''));\n    }\n\n    _setDsnEnvelope(params) {\n        let ret = (params.ret || params.return || '').toString().toUpperCase() || null;\n        if (ret) {\n            switch (ret) {\n                case 'HDRS':\n                case 'HEADERS':\n                    ret = 'HDRS';\n                    break;\n                case 'FULL':\n                case 'BODY':\n                    ret = 'FULL';\n                    break;\n            }\n        }\n\n        if (ret && !['FULL', 'HDRS'].includes(ret)) {\n            throw new Error('ret: ' + JSON.stringify(ret));\n        }\n\n        let envid = (params.envid || params.id || '').toString() || null;\n\n        let notify = params.notify || null;\n        if (notify) {\n            if (typeof notify === 'string') {\n                notify = notify.split(',');\n            }\n            notify = notify.map(n => n.trim().toUpperCase());\n            let validNotify = ['NEVER', 'SUCCESS', 'FAILURE', 'DELAY'];\n            let invaliNotify = notify.filter(n => !validNotify.includes(n));\n            if (invaliNotify.length || (notify.length > 1 && notify.includes('NEVER'))) {\n                throw new Error('notify: ' + JSON.stringify(notify.join(',')));\n            }\n            notify = notify.join(',');\n        }\n\n        let orcpt = (params.recipient || params.orcpt || '').toString() || null;\n        if (orcpt && orcpt.indexOf(';') < 0) {\n            orcpt = 'rfc822;' + orcpt;\n        }\n\n        return {\n            ret,\n            envid,\n            notify,\n            orcpt\n        };\n    }\n\n    _getDsnRcptToArgs() {\n        let args = [];\n        // If the server supports DSN and the envelope includes an DSN prop\n        // then append DSN params to the RCPT TO command\n        if (this._envelope.dsn && this._supportedExtensions.includes('DSN')) {\n            if (this._envelope.dsn.notify) {\n                args.push('NOTIFY=' + shared.encodeXText(this._envelope.dsn.notify));\n            }\n            if (this._envelope.dsn.orcpt) {\n                args.push('ORCPT=' + shared.encodeXText(this._envelope.dsn.orcpt));\n            }\n        }\n        return args.length ? ' ' + args.join(' ') : '';\n    }\n\n    _createSendStream(callback) {\n        let dataStream = new DataStream();\n        let logStream;\n\n        if (this.options.lmtp) {\n            this._envelope.accepted.forEach((recipient, i) => {\n                let final = i === this._envelope.accepted.length - 1;\n                this._responseActions.push(str => {\n                    this._actionLMTPStream(recipient, final, str, callback);\n                });\n            });\n        } else {\n            this._responseActions.push(str => {\n                this._actionSMTPStream(str, callback);\n            });\n        }\n\n        dataStream.pipe(this._socket, {\n            end: false\n        });\n\n        if (this.options.debug) {\n            logStream = new PassThrough();\n            logStream.on('readable', () => {\n                let chunk;\n                while ((chunk = logStream.read())) {\n                    this.logger.debug(\n                        {\n                            tnx: 'message'\n                        },\n                        chunk.toString('binary').replace(/\\r?\\n$/, '')\n                    );\n                }\n            });\n            dataStream.pipe(logStream);\n        }\n\n        dataStream.once('end', () => {\n            this.logger.info(\n                {\n                    tnx: 'message',\n                    inByteCount: dataStream.inByteCount,\n                    outByteCount: dataStream.outByteCount\n                },\n                '<%s bytes encoded mime message (source size %s bytes)>',\n                dataStream.outByteCount,\n                dataStream.inByteCount\n            );\n        });\n\n        return dataStream;\n    }\n\n    /** ACTIONS **/\n\n    /**\n     * Will be run after the connection is created and the server sends\n     * a greeting. If the incoming message starts with 220 initiate\n     * SMTP session by sending EHLO command\n     *\n     * @param {String} str Message from the server\n     */\n    _actionGreeting(str) {\n        clearTimeout(this._greetingTimeout);\n\n        if (str.substr(0, 3) !== '220') {\n            this._onError(new Error('Invalid greeting. response=' + str), 'EPROTOCOL', str, 'CONN');\n            return;\n        }\n\n        if (this.options.lmtp) {\n            this._responseActions.push(this._actionLHLO);\n            this._sendCommand('LHLO ' + this.name);\n        } else {\n            this._responseActions.push(this._actionEHLO);\n            this._sendCommand('EHLO ' + this.name);\n        }\n    }\n\n    /**\n     * Handles server response for LHLO command. If it yielded in\n     * error, emit 'error', otherwise treat this as an EHLO response\n     *\n     * @param {String} str Message from the server\n     */\n    _actionLHLO(str) {\n        if (str.charAt(0) !== '2') {\n            this._onError(new Error('Invalid LHLO. response=' + str), 'EPROTOCOL', str, 'LHLO');\n            return;\n        }\n\n        this._actionEHLO(str);\n    }\n\n    /**\n     * Handles server response for EHLO command. If it yielded in\n     * error, try HELO instead, otherwise initiate TLS negotiation\n     * if STARTTLS is supported by the server or move into the\n     * authentication phase.\n     *\n     * @param {String} str Message from the server\n     */\n    _actionEHLO(str) {\n        let match;\n\n        if (str.substr(0, 3) === '421') {\n            this._onError(new Error('Server terminates connection. response=' + str), 'ECONNECTION', str, 'EHLO');\n            return;\n        }\n\n        if (str.charAt(0) !== '2') {\n            if (this.options.requireTLS) {\n                this._onError(\n                    new Error('EHLO failed but HELO does not support required STARTTLS. response=' + str),\n                    'ECONNECTION',\n                    str,\n                    'EHLO'\n                );\n                return;\n            }\n\n            // Try HELO instead\n            this._responseActions.push(this._actionHELO);\n            this._sendCommand('HELO ' + this.name);\n            return;\n        }\n\n        this._ehloLines = str\n            .split(/\\r?\\n/)\n            .map(line => line.replace(/^\\d+[ -]/, '').trim())\n            .filter(line => line)\n            .slice(1);\n\n        // Detect if the server supports STARTTLS\n        if (!this.secure && !this.options.ignoreTLS && (/[ -]STARTTLS\\b/im.test(str) || this.options.requireTLS)) {\n            this._sendCommand('STARTTLS');\n            this._responseActions.push(this._actionSTARTTLS);\n            return;\n        }\n\n        // Detect if the server supports SMTPUTF8\n        if (/[ -]SMTPUTF8\\b/im.test(str)) {\n            this._supportedExtensions.push('SMTPUTF8');\n        }\n\n        // Detect if the server supports DSN\n        if (/[ -]DSN\\b/im.test(str)) {\n            this._supportedExtensions.push('DSN');\n        }\n\n        // Detect if the server supports 8BITMIME\n        if (/[ -]8BITMIME\\b/im.test(str)) {\n            this._supportedExtensions.push('8BITMIME');\n        }\n\n        // Detect if the server supports PIPELINING\n        if (/[ -]PIPELINING\\b/im.test(str)) {\n            this._supportedExtensions.push('PIPELINING');\n        }\n\n        // Detect if the server supports AUTH\n        if (/[ -]AUTH\\b/i.test(str)) {\n            this.allowsAuth = true;\n        }\n\n        // Detect if the server supports PLAIN auth\n        if (/[ -]AUTH(?:(\\s+|=)[^\\n]*\\s+|\\s+|=)PLAIN/i.test(str)) {\n            this._supportedAuth.push('PLAIN');\n        }\n\n        // Detect if the server supports LOGIN auth\n        if (/[ -]AUTH(?:(\\s+|=)[^\\n]*\\s+|\\s+|=)LOGIN/i.test(str)) {\n            this._supportedAuth.push('LOGIN');\n        }\n\n        // Detect if the server supports CRAM-MD5 auth\n        if (/[ -]AUTH(?:(\\s+|=)[^\\n]*\\s+|\\s+|=)CRAM-MD5/i.test(str)) {\n            this._supportedAuth.push('CRAM-MD5');\n        }\n\n        // Detect if the server supports XOAUTH2 auth\n        if (/[ -]AUTH(?:(\\s+|=)[^\\n]*\\s+|\\s+|=)XOAUTH2/i.test(str)) {\n            this._supportedAuth.push('XOAUTH2');\n        }\n\n        // Detect if the server supports SIZE extensions (and the max allowed size)\n        if ((match = str.match(/[ -]SIZE(?:[ \\t]+(\\d+))?/im))) {\n            this._supportedExtensions.push('SIZE');\n            this._maxAllowedSize = Number(match[1]) || 0;\n        }\n\n        this.emit('connect');\n    }\n\n    /**\n     * Handles server response for HELO command. If it yielded in\n     * error, emit 'error', otherwise move into the authentication phase.\n     *\n     * @param {String} str Message from the server\n     */\n    _actionHELO(str) {\n        if (str.charAt(0) !== '2') {\n            this._onError(new Error('Invalid HELO. response=' + str), 'EPROTOCOL', str, 'HELO');\n            return;\n        }\n\n        // assume that authentication is enabled (most probably is not though)\n        this.allowsAuth = true;\n\n        this.emit('connect');\n    }\n\n    /**\n     * Handles server response for STARTTLS command. If there's an error\n     * try HELO instead, otherwise initiate TLS upgrade. If the upgrade\n     * succeedes restart the EHLO\n     *\n     * @param {String} str Message from the server\n     */\n    _actionSTARTTLS(str) {\n        if (str.charAt(0) !== '2') {\n            if (this.options.opportunisticTLS) {\n                this.logger.info(\n                    {\n                        tnx: 'smtp'\n                    },\n                    'Failed STARTTLS upgrade, continuing unencrypted'\n                );\n                return this.emit('connect');\n            }\n            this._onError(new Error('Error upgrading connection with STARTTLS'), 'ETLS', str, 'STARTTLS');\n            return;\n        }\n\n        this._upgradeConnection((err, secured) => {\n            if (err) {\n                this._onError(new Error('Error initiating TLS - ' + (err.message || err)), 'ETLS', false, 'STARTTLS');\n                return;\n            }\n\n            this.logger.info(\n                {\n                    tnx: 'smtp'\n                },\n                'Connection upgraded with STARTTLS'\n            );\n\n            if (secured) {\n                // restart session\n                if (this.options.lmtp) {\n                    this._responseActions.push(this._actionLHLO);\n                    this._sendCommand('LHLO ' + this.name);\n                } else {\n                    this._responseActions.push(this._actionEHLO);\n                    this._sendCommand('EHLO ' + this.name);\n                }\n            } else {\n                this.emit('connect');\n            }\n        });\n    }\n\n    /**\n     * Handle the response for AUTH LOGIN command. We are expecting\n     * '334 VXNlcm5hbWU6' (base64 for 'Username:'). Data to be sent as\n     * response needs to be base64 encoded username. We do not need\n     * exact match but settle with 334 response in general as some\n     * hosts invalidly use a longer message than VXNlcm5hbWU6\n     *\n     * @param {String} str Message from the server\n     */\n    _actionAUTH_LOGIN_USER(str, callback) {\n        if (!/^334[ -]/.test(str)) {\n            // expecting '334 VXNlcm5hbWU6'\n            callback(this._formatError('Invalid login sequence while waiting for \"334 VXNlcm5hbWU6\"', 'EAUTH', str, 'AUTH LOGIN'));\n            return;\n        }\n\n        this._responseActions.push(str => {\n            this._actionAUTH_LOGIN_PASS(str, callback);\n        });\n\n        this._sendCommand(Buffer.from(this._auth.credentials.user + '', 'utf-8').toString('base64'));\n    }\n\n    /**\n     * Handle the response for AUTH CRAM-MD5 command. We are expecting\n     * '334 <challenge string>'. Data to be sent as response needs to be\n     * base64 decoded challenge string, MD5 hashed using the password as\n     * a HMAC key, prefixed by the username and a space, and finally all\n     * base64 encoded again.\n     *\n     * @param {String} str Message from the server\n     */\n    _actionAUTH_CRAM_MD5(str, callback) {\n        let challengeMatch = str.match(/^334\\s+(.+)$/);\n        let challengeString = '';\n\n        if (!challengeMatch) {\n            return callback(\n                this._formatError('Invalid login sequence while waiting for server challenge string', 'EAUTH', str, 'AUTH CRAM-MD5')\n            );\n        } else {\n            challengeString = challengeMatch[1];\n        }\n\n        // Decode from base64\n        let base64decoded = Buffer.from(challengeString, 'base64').toString('ascii'),\n            hmacMD5 = crypto.createHmac('md5', this._auth.credentials.pass);\n\n        hmacMD5.update(base64decoded);\n\n        let prepended = this._auth.credentials.user + ' ' + hmacMD5.digest('hex');\n\n        this._responseActions.push(str => {\n            this._actionAUTH_CRAM_MD5_PASS(str, callback);\n        });\n\n        this._sendCommand(\n            Buffer.from(prepended).toString('base64'),\n            // hidden hash for logs\n            Buffer.from(this._auth.credentials.user + ' /* secret */').toString('base64')\n        );\n    }\n\n    /**\n     * Handles the response to CRAM-MD5 authentication, if there's no error,\n     * the user can be considered logged in. Start waiting for a message to send\n     *\n     * @param {String} str Message from the server\n     */\n    _actionAUTH_CRAM_MD5_PASS(str, callback) {\n        if (!str.match(/^235\\s+/)) {\n            return callback(this._formatError('Invalid login sequence while waiting for \"235\"', 'EAUTH', str, 'AUTH CRAM-MD5'));\n        }\n\n        this.logger.info(\n            {\n                tnx: 'smtp',\n                username: this._auth.user,\n                action: 'authenticated',\n                method: this._authMethod\n            },\n            'User %s authenticated',\n            JSON.stringify(this._auth.user)\n        );\n        this.authenticated = true;\n        callback(null, true);\n    }\n\n    /**\n     * Handle the response for AUTH LOGIN command. We are expecting\n     * '334 UGFzc3dvcmQ6' (base64 for 'Password:'). Data to be sent as\n     * response needs to be base64 encoded password.\n     *\n     * @param {String} str Message from the server\n     */\n    _actionAUTH_LOGIN_PASS(str, callback) {\n        if (!/^334[ -]/.test(str)) {\n            // expecting '334 UGFzc3dvcmQ6'\n            return callback(this._formatError('Invalid login sequence while waiting for \"334 UGFzc3dvcmQ6\"', 'EAUTH', str, 'AUTH LOGIN'));\n        }\n\n        this._responseActions.push(str => {\n            this._actionAUTHComplete(str, callback);\n        });\n\n        this._sendCommand(\n            Buffer.from((this._auth.credentials.pass || '').toString(), 'utf-8').toString('base64'),\n            // Hidden pass for logs\n            Buffer.from('/* secret */', 'utf-8').toString('base64')\n        );\n    }\n\n    /**\n     * Handles the response for authentication, if there's no error,\n     * the user can be considered logged in. Start waiting for a message to send\n     *\n     * @param {String} str Message from the server\n     */\n    _actionAUTHComplete(str, isRetry, callback) {\n        if (!callback && typeof isRetry === 'function') {\n            callback = isRetry;\n            isRetry = false;\n        }\n\n        if (str.substr(0, 3) === '334') {\n            this._responseActions.push(str => {\n                if (isRetry || this._authMethod !== 'XOAUTH2') {\n                    this._actionAUTHComplete(str, true, callback);\n                } else {\n                    // fetch a new OAuth2 access token\n                    setImmediate(() => this._handleXOauth2Token(true, callback));\n                }\n            });\n            this._sendCommand('');\n            return;\n        }\n\n        if (str.charAt(0) !== '2') {\n            this.logger.info(\n                {\n                    tnx: 'smtp',\n                    username: this._auth.user,\n                    action: 'authfail',\n                    method: this._authMethod\n                },\n                'User %s failed to authenticate',\n                JSON.stringify(this._auth.user)\n            );\n            return callback(this._formatError('Invalid login', 'EAUTH', str, 'AUTH ' + this._authMethod));\n        }\n\n        this.logger.info(\n            {\n                tnx: 'smtp',\n                username: this._auth.user,\n                action: 'authenticated',\n                method: this._authMethod\n            },\n            'User %s authenticated',\n            JSON.stringify(this._auth.user)\n        );\n        this.authenticated = true;\n        callback(null, true);\n    }\n\n    /**\n     * Handle response for a MAIL FROM: command\n     *\n     * @param {String} str Message from the server\n     */\n    _actionMAIL(str, callback) {\n        let message, curRecipient;\n        if (Number(str.charAt(0)) !== 2) {\n            if (this._usingSmtpUtf8 && /^550 /.test(str) && /[\\x80-\\uFFFF]/.test(this._envelope.from)) {\n                message = 'Internationalized mailbox name not allowed';\n            } else {\n                message = 'Mail command failed';\n            }\n            return callback(this._formatError(message, 'EENVELOPE', str, 'MAIL FROM'));\n        }\n\n        if (!this._envelope.rcptQueue.length) {\n            return callback(this._formatError(\"Can't send mail - no recipients defined\", 'EENVELOPE', false, 'API'));\n        } else {\n            this._recipientQueue = [];\n\n            if (this._supportedExtensions.includes('PIPELINING')) {\n                while (this._envelope.rcptQueue.length) {\n                    curRecipient = this._envelope.rcptQueue.shift();\n                    this._recipientQueue.push(curRecipient);\n                    this._responseActions.push(str => {\n                        this._actionRCPT(str, callback);\n                    });\n                    this._sendCommand('RCPT TO:<' + curRecipient + '>' + this._getDsnRcptToArgs());\n                }\n            } else {\n                curRecipient = this._envelope.rcptQueue.shift();\n                this._recipientQueue.push(curRecipient);\n                this._responseActions.push(str => {\n                    this._actionRCPT(str, callback);\n                });\n                this._sendCommand('RCPT TO:<' + curRecipient + '>' + this._getDsnRcptToArgs());\n            }\n        }\n    }\n\n    /**\n     * Handle response for a RCPT TO: command\n     *\n     * @param {String} str Message from the server\n     */\n    _actionRCPT(str, callback) {\n        let message,\n            err,\n            curRecipient = this._recipientQueue.shift();\n        if (Number(str.charAt(0)) !== 2) {\n            // this is a soft error\n            if (this._usingSmtpUtf8 && /^553 /.test(str) && /[\\x80-\\uFFFF]/.test(curRecipient)) {\n                message = 'Internationalized mailbox name not allowed';\n            } else {\n                message = 'Recipient command failed';\n            }\n            this._envelope.rejected.push(curRecipient);\n            // store error for the failed recipient\n            err = this._formatError(message, 'EENVELOPE', str, 'RCPT TO');\n            err.recipient = curRecipient;\n            this._envelope.rejectedErrors.push(err);\n        } else {\n            this._envelope.accepted.push(curRecipient);\n        }\n\n        if (!this._envelope.rcptQueue.length && !this._recipientQueue.length) {\n            if (this._envelope.rejected.length < this._envelope.to.length) {\n                this._responseActions.push(str => {\n                    this._actionDATA(str, callback);\n                });\n                this._sendCommand('DATA');\n            } else {\n                err = this._formatError(\"Can't send mail - all recipients were rejected\", 'EENVELOPE', str, 'RCPT TO');\n                err.rejected = this._envelope.rejected;\n                err.rejectedErrors = this._envelope.rejectedErrors;\n                return callback(err);\n            }\n        } else if (this._envelope.rcptQueue.length) {\n            curRecipient = this._envelope.rcptQueue.shift();\n            this._recipientQueue.push(curRecipient);\n            this._responseActions.push(str => {\n                this._actionRCPT(str, callback);\n            });\n            this._sendCommand('RCPT TO:<' + curRecipient + '>' + this._getDsnRcptToArgs());\n        }\n    }\n\n    /**\n     * Handle response for a DATA command\n     *\n     * @param {String} str Message from the server\n     */\n    _actionDATA(str, callback) {\n        // response should be 354 but according to this issue https://github.com/eleith/emailjs/issues/24\n        // some servers might use 250 instead, so lets check for 2 or 3 as the first digit\n        if (!/^[23]/.test(str)) {\n            return callback(this._formatError('Data command failed', 'EENVELOPE', str, 'DATA'));\n        }\n\n        let response = {\n            accepted: this._envelope.accepted,\n            rejected: this._envelope.rejected\n        };\n\n        if (this._ehloLines && this._ehloLines.length) {\n            response.ehlo = this._ehloLines;\n        }\n\n        if (this._envelope.rejectedErrors.length) {\n            response.rejectedErrors = this._envelope.rejectedErrors;\n        }\n\n        callback(null, response);\n    }\n\n    /**\n     * Handle response for a DATA stream when using SMTP\n     * We expect a single response that defines if the sending succeeded or failed\n     *\n     * @param {String} str Message from the server\n     */\n    _actionSMTPStream(str, callback) {\n        if (Number(str.charAt(0)) !== 2) {\n            // Message failed\n            return callback(this._formatError('Message failed', 'EMESSAGE', str, 'DATA'));\n        } else {\n            // Message sent succesfully\n            return callback(null, str);\n        }\n    }\n\n    /**\n     * Handle response for a DATA stream\n     * We expect a separate response for every recipient. All recipients can either\n     * succeed or fail separately\n     *\n     * @param {String} recipient The recipient this response applies to\n     * @param {Boolean} final Is this the final recipient?\n     * @param {String} str Message from the server\n     */\n    _actionLMTPStream(recipient, final, str, callback) {\n        let err;\n        if (Number(str.charAt(0)) !== 2) {\n            // Message failed\n            err = this._formatError('Message failed for recipient ' + recipient, 'EMESSAGE', str, 'DATA');\n            err.recipient = recipient;\n            this._envelope.rejected.push(recipient);\n            this._envelope.rejectedErrors.push(err);\n            for (let i = 0, len = this._envelope.accepted.length; i < len; i++) {\n                if (this._envelope.accepted[i] === recipient) {\n                    this._envelope.accepted.splice(i, 1);\n                }\n            }\n        }\n        if (final) {\n            return callback(null, str);\n        }\n    }\n\n    _handleXOauth2Token(isRetry, callback) {\n        this._auth.oauth2.getToken(isRetry, (err, accessToken) => {\n            if (err) {\n                this.logger.info(\n                    {\n                        tnx: 'smtp',\n                        username: this._auth.user,\n                        action: 'authfail',\n                        method: this._authMethod\n                    },\n                    'User %s failed to authenticate',\n                    JSON.stringify(this._auth.user)\n                );\n                return callback(this._formatError(err, 'EAUTH', false, 'AUTH XOAUTH2'));\n            }\n            this._responseActions.push(str => {\n                this._actionAUTHComplete(str, isRetry, callback);\n            });\n            this._sendCommand(\n                'AUTH XOAUTH2 ' + this._auth.oauth2.buildXOAuth2Token(accessToken),\n                //  Hidden for logs\n                'AUTH XOAUTH2 ' + this._auth.oauth2.buildXOAuth2Token('/* secret */')\n            );\n        });\n    }\n\n    /**\n     *\n     * @param {string} command\n     * @private\n     */\n    _isDestroyedMessage(command) {\n        if (this._destroyed) {\n            return 'Cannot ' + command + ' - smtp connection is already destroyed.';\n        }\n\n        if (this._socket) {\n            if (this._socket.destroyed) {\n                return 'Cannot ' + command + ' - smtp connection socket is already destroyed.';\n            }\n\n            if (!this._socket.writable) {\n                return 'Cannot ' + command + ' - smtp connection socket is already half-closed.';\n            }\n        }\n    }\n\n    _getHostname() {\n        // defaul hostname is machine hostname or [IP]\n        let defaultHostname;\n        try {\n            defaultHostname = os.hostname() || '';\n        } catch (_err) {\n            // fails on windows 7\n            defaultHostname = 'localhost';\n        }\n\n        // ignore if not FQDN\n        if (!defaultHostname || defaultHostname.indexOf('.') < 0) {\n            defaultHostname = '[127.0.0.1]';\n        }\n\n        // IP should be enclosed in []\n        if (defaultHostname.match(/^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}$/)) {\n            defaultHostname = '[' + defaultHostname + ']';\n        }\n\n        return defaultHostname;\n    }\n}\n\nmodule.exports = SMTPConnection;\n", "'use strict';\n\nconst Stream = require('stream').Stream;\nconst nmfetch = require('../fetch');\nconst crypto = require('crypto');\nconst shared = require('../shared');\n\n/**\n * XOAUTH2 access_token generator for Gmail.\n * Create client ID for web applications in Google API console to use it.\n * See Offline Access for receiving the needed refreshToken for an user\n * https://developers.google.com/accounts/docs/OAuth2WebServer#offline\n *\n * Usage for generating access tokens with a custom method using provisionCallback:\n * provisionCallback(user, renew, callback)\n *   * user is the username to get the token for\n *   * renew is a boolean that if true indicates that existing token failed and needs to be renewed\n *   * callback is the callback to run with (error, accessToken [, expires])\n *     * accessToken is a string\n *     * expires is an optional expire time in milliseconds\n * If provisionCallback is used, then Nodemailer does not try to attempt generating the token by itself\n *\n * @constructor\n * @param {Object} options Client information for token generation\n * @param {String} options.user User e-mail address\n * @param {String} options.clientId Client ID value\n * @param {String} options.clientSecret Client secret value\n * @param {String} options.refreshToken Refresh token for an user\n * @param {String} options.accessUrl Endpoint for token generation, defaults to 'https://accounts.google.com/o/oauth2/token'\n * @param {String} options.accessToken An existing valid accessToken\n * @param {String} options.privateKey Private key for JSW\n * @param {Number} options.expires Optional Access Token expire time in ms\n * @param {Number} options.timeout Optional TTL for Access Token in seconds\n * @param {Function} options.provisionCallback Function to run when a new access token is required\n */\nclass XOAuth2 extends Stream {\n    constructor(options, logger) {\n        super();\n\n        this.options = options || {};\n\n        if (options && options.serviceClient) {\n            if (!options.privateKey || !options.user) {\n                setImmediate(() => this.emit('error', new Error('Options \"privateKey\" and \"user\" are required for service account!')));\n                return;\n            }\n\n            let serviceRequestTimeout = Math.min(Math.max(Number(this.options.serviceRequestTimeout) || 0, 0), 3600);\n            this.options.serviceRequestTimeout = serviceRequestTimeout || 5 * 60;\n        }\n\n        this.logger = shared.getLogger(\n            {\n                logger\n            },\n            {\n                component: this.options.component || 'OAuth2'\n            }\n        );\n\n        this.provisionCallback = typeof this.options.provisionCallback === 'function' ? this.options.provisionCallback : false;\n\n        this.options.accessUrl = this.options.accessUrl || 'https://accounts.google.com/o/oauth2/token';\n        this.options.customHeaders = this.options.customHeaders || {};\n        this.options.customParams = this.options.customParams || {};\n\n        this.accessToken = this.options.accessToken || false;\n\n        if (this.options.expires && Number(this.options.expires)) {\n            this.expires = this.options.expires;\n        } else {\n            let timeout = Math.max(Number(this.options.timeout) || 0, 0);\n            this.expires = (timeout && Date.now() + timeout * 1000) || 0;\n        }\n\n        this.renewing = false; // Track if renewal is in progress\n        this.renewalQueue = []; // Queue for pending requests during renewal\n    }\n\n    /**\n     * Returns or generates (if previous has expired) a XOAuth2 token\n     *\n     * @param {Boolean} renew If false then use cached access token (if available)\n     * @param {Function} callback Callback function with error object and token string\n     */\n    getToken(renew, callback) {\n        if (!renew && this.accessToken && (!this.expires || this.expires > Date.now())) {\n            this.logger.debug(\n                {\n                    tnx: 'OAUTH2',\n                    user: this.options.user,\n                    action: 'reuse'\n                },\n                'Reusing existing access token for %s',\n                this.options.user\n            );\n            return callback(null, this.accessToken);\n        }\n\n        // check if it is possible to renew, if not, return the current token or error\n        if (!this.provisionCallback && !this.options.refreshToken && !this.options.serviceClient) {\n            if (this.accessToken) {\n                this.logger.debug(\n                    {\n                        tnx: 'OAUTH2',\n                        user: this.options.user,\n                        action: 'reuse'\n                    },\n                    'Reusing existing access token (no refresh capability) for %s',\n                    this.options.user\n                );\n                return callback(null, this.accessToken);\n            }\n            this.logger.error(\n                {\n                    tnx: 'OAUTH2',\n                    user: this.options.user,\n                    action: 'renew'\n                },\n                'Cannot renew access token for %s: No refresh mechanism available',\n                this.options.user\n            );\n            return callback(new Error(\"Can't create new access token for user\"));\n        }\n\n        // If renewal already in progress, queue this request instead of starting another\n        if (this.renewing) {\n            return this.renewalQueue.push({ renew, callback });\n        }\n\n        this.renewing = true;\n\n        // Handles token renewal completion - processes queued requests and cleans up\n        const generateCallback = (err, accessToken) => {\n            this.renewalQueue.forEach(item => item.callback(err, accessToken));\n            this.renewalQueue = [];\n            this.renewing = false;\n\n            if (err) {\n                this.logger.error(\n                    {\n                        err,\n                        tnx: 'OAUTH2',\n                        user: this.options.user,\n                        action: 'renew'\n                    },\n                    'Failed generating new Access Token for %s',\n                    this.options.user\n                );\n            } else {\n                this.logger.info(\n                    {\n                        tnx: 'OAUTH2',\n                        user: this.options.user,\n                        action: 'renew'\n                    },\n                    'Generated new Access Token for %s',\n                    this.options.user\n                );\n            }\n            // Complete original request\n            callback(err, accessToken);\n        };\n\n        if (this.provisionCallback) {\n            this.provisionCallback(this.options.user, !!renew, (err, accessToken, expires) => {\n                if (!err && accessToken) {\n                    this.accessToken = accessToken;\n                    this.expires = expires || 0;\n                }\n                generateCallback(err, accessToken);\n            });\n        } else {\n            this.generateToken(generateCallback);\n        }\n    }\n\n    /**\n     * Updates token values\n     *\n     * @param {String} accessToken New access token\n     * @param {Number} timeout Access token lifetime in seconds\n     *\n     * Emits 'token': { user: User email-address, accessToken: the new accessToken, timeout: TTL in seconds}\n     */\n    updateToken(accessToken, timeout) {\n        this.accessToken = accessToken;\n        timeout = Math.max(Number(timeout) || 0, 0);\n        this.expires = (timeout && Date.now() + timeout * 1000) || 0;\n\n        this.emit('token', {\n            user: this.options.user,\n            accessToken: accessToken || '',\n            expires: this.expires\n        });\n    }\n\n    /**\n     * Generates a new XOAuth2 token with the credentials provided at initialization\n     *\n     * @param {Function} callback Callback function with error object and token string\n     */\n    generateToken(callback) {\n        let urlOptions;\n        let loggedUrlOptions;\n        if (this.options.serviceClient) {\n            // service account - https://developers.google.com/identity/protocols/OAuth2ServiceAccount\n            let iat = Math.floor(Date.now() / 1000); // unix time\n            let tokenData = {\n                iss: this.options.serviceClient,\n                scope: this.options.scope || 'https://mail.google.com/',\n                sub: this.options.user,\n                aud: this.options.accessUrl,\n                iat,\n                exp: iat + this.options.serviceRequestTimeout\n            };\n            let token;\n            try {\n                token = this.jwtSignRS256(tokenData);\n            } catch (_err) {\n                return callback(new Error(\"Can't generate token. Check your auth options\"));\n            }\n\n            urlOptions = {\n                grant_type: 'urn:ietf:params:oauth:grant-type:jwt-bearer',\n                assertion: token\n            };\n\n            loggedUrlOptions = {\n                grant_type: 'urn:ietf:params:oauth:grant-type:jwt-bearer',\n                assertion: tokenData\n            };\n        } else {\n            if (!this.options.refreshToken) {\n                return callback(new Error(\"Can't create new access token for user\"));\n            }\n\n            // web app - https://developers.google.com/identity/protocols/OAuth2WebServer\n            urlOptions = {\n                client_id: this.options.clientId || '',\n                client_secret: this.options.clientSecret || '',\n                refresh_token: this.options.refreshToken,\n                grant_type: 'refresh_token'\n            };\n\n            loggedUrlOptions = {\n                client_id: this.options.clientId || '',\n                client_secret: (this.options.clientSecret || '').substr(0, 6) + '...',\n                refresh_token: (this.options.refreshToken || '').substr(0, 6) + '...',\n                grant_type: 'refresh_token'\n            };\n        }\n\n        Object.keys(this.options.customParams).forEach(key => {\n            urlOptions[key] = this.options.customParams[key];\n            loggedUrlOptions[key] = this.options.customParams[key];\n        });\n\n        this.logger.debug(\n            {\n                tnx: 'OAUTH2',\n                user: this.options.user,\n                action: 'generate'\n            },\n            'Requesting token using: %s',\n            JSON.stringify(loggedUrlOptions)\n        );\n\n        this.postRequest(this.options.accessUrl, urlOptions, this.options, (error, body) => {\n            let data;\n\n            if (error) {\n                return callback(error);\n            }\n\n            try {\n                data = JSON.parse(body.toString());\n            } catch (E) {\n                return callback(E);\n            }\n\n            if (!data || typeof data !== 'object') {\n                this.logger.debug(\n                    {\n                        tnx: 'OAUTH2',\n                        user: this.options.user,\n                        action: 'post'\n                    },\n                    'Response: %s',\n                    (body || '').toString()\n                );\n                return callback(new Error('Invalid authentication response'));\n            }\n\n            let logData = {};\n            Object.keys(data).forEach(key => {\n                if (key !== 'access_token') {\n                    logData[key] = data[key];\n                } else {\n                    logData[key] = (data[key] || '').toString().substr(0, 6) + '...';\n                }\n            });\n\n            this.logger.debug(\n                {\n                    tnx: 'OAUTH2',\n                    user: this.options.user,\n                    action: 'post'\n                },\n                'Response: %s',\n                JSON.stringify(logData)\n            );\n\n            if (data.error) {\n                // Error Response : https://tools.ietf.org/html/rfc6749#section-5.2\n                let errorMessage = data.error;\n                if (data.error_description) {\n                    errorMessage += ': ' + data.error_description;\n                }\n                if (data.error_uri) {\n                    errorMessage += ' (' + data.error_uri + ')';\n                }\n                return callback(new Error(errorMessage));\n            }\n\n            if (data.access_token) {\n                this.updateToken(data.access_token, data.expires_in);\n                return callback(null, this.accessToken);\n            }\n\n            return callback(new Error('No access token'));\n        });\n    }\n\n    /**\n     * Converts an access_token and user id into a base64 encoded XOAuth2 token\n     *\n     * @param {String} [accessToken] Access token string\n     * @return {String} Base64 encoded token for IMAP or SMTP login\n     */\n    buildXOAuth2Token(accessToken) {\n        let authData = ['user=' + (this.options.user || ''), 'auth=Bearer ' + (accessToken || this.accessToken), '', ''];\n        return Buffer.from(authData.join('\\x01'), 'utf-8').toString('base64');\n    }\n\n    /**\n     * Custom POST request handler.\n     * This is only needed to keep paths short in Windows \u2013 usually this module\n     * is a dependency of a dependency and if it tries to require something\n     * like the request module the paths get way too long to handle for Windows.\n     * As we do only a simple POST request we do not actually require complicated\n     * logic support (no redirects, no nothing) anyway.\n     *\n     * @param {String} url Url to POST to\n     * @param {String|Buffer} payload Payload to POST\n     * @param {Function} callback Callback function with (err, buff)\n     */\n    postRequest(url, payload, params, callback) {\n        let returned = false;\n\n        let chunks = [];\n        let chunklen = 0;\n\n        let req = nmfetch(url, {\n            method: 'post',\n            headers: params.customHeaders,\n            body: payload,\n            allowErrorResponse: true\n        });\n\n        req.on('readable', () => {\n            let chunk;\n            while ((chunk = req.read()) !== null) {\n                chunks.push(chunk);\n                chunklen += chunk.length;\n            }\n        });\n\n        req.once('error', err => {\n            if (returned) {\n                return;\n            }\n            returned = true;\n            return callback(err);\n        });\n\n        req.once('end', () => {\n            if (returned) {\n                return;\n            }\n            returned = true;\n            return callback(null, Buffer.concat(chunks, chunklen));\n        });\n    }\n\n    /**\n     * Encodes a buffer or a string into Base64url format\n     *\n     * @param {Buffer|String} data The data to convert\n     * @return {String} The encoded string\n     */\n    toBase64URL(data) {\n        if (typeof data === 'string') {\n            data = Buffer.from(data);\n        }\n\n        return data\n            .toString('base64')\n            .replace(/[=]+/g, '') // remove '='s\n            .replace(/\\+/g, '-') // '+' \u2192 '-'\n            .replace(/\\//g, '_'); // '/' \u2192 '_'\n    }\n\n    /**\n     * Creates a JSON Web Token signed with RS256 (SHA256 + RSA)\n     *\n     * @param {Object} payload The payload to include in the generated token\n     * @return {String} The generated and signed token\n     */\n    jwtSignRS256(payload) {\n        payload = ['{\"alg\":\"RS256\",\"typ\":\"JWT\"}', JSON.stringify(payload)].map(val => this.toBase64URL(val)).join('.');\n        let signature = crypto.createSign('RSA-SHA256').update(payload).sign(this.options.privateKey);\n        return payload + '.' + this.toBase64URL(signature);\n    }\n}\n\nmodule.exports = XOAuth2;\n", "'use strict';\n\nconst SMTPConnection = require('../smtp-connection');\nconst assign = require('../shared').assign;\nconst XOAuth2 = require('../xoauth2');\nconst EventEmitter = require('events');\n\n/**\n * Creates an element for the pool\n *\n * @constructor\n * @param {Object} options SMTPPool instance\n */\nclass PoolResource extends EventEmitter {\n    constructor(pool) {\n        super();\n\n        this.pool = pool;\n        this.options = pool.options;\n        this.logger = this.pool.logger;\n\n        if (this.options.auth) {\n            switch ((this.options.auth.type || '').toString().toUpperCase()) {\n                case 'OAUTH2': {\n                    let oauth2 = new XOAuth2(this.options.auth, this.logger);\n                    oauth2.provisionCallback =\n                        (this.pool.mailer && this.pool.mailer.get('oauth2_provision_cb')) || oauth2.provisionCallback;\n                    this.auth = {\n                        type: 'OAUTH2',\n                        user: this.options.auth.user,\n                        oauth2,\n                        method: 'XOAUTH2'\n                    };\n                    oauth2.on('token', token => this.pool.mailer.emit('token', token));\n                    oauth2.on('error', err => this.emit('error', err));\n                    break;\n                }\n                default:\n                    if (!this.options.auth.user && !this.options.auth.pass) {\n                        break;\n                    }\n                    this.auth = {\n                        type: (this.options.auth.type || '').toString().toUpperCase() || 'LOGIN',\n                        user: this.options.auth.user,\n                        credentials: {\n                            user: this.options.auth.user || '',\n                            pass: this.options.auth.pass,\n                            options: this.options.auth.options\n                        },\n                        method: (this.options.auth.method || '').trim().toUpperCase() || this.options.authMethod || false\n                    };\n            }\n        }\n\n        this._connection = false;\n        this._connected = false;\n\n        this.messages = 0;\n        this.available = true;\n    }\n\n    /**\n     * Initiates a connection to the SMTP server\n     *\n     * @param {Function} callback Callback function to run once the connection is established or failed\n     */\n    connect(callback) {\n        this.pool.getSocket(this.options, (err, socketOptions) => {\n            if (err) {\n                return callback(err);\n            }\n\n            let returned = false;\n            let options = this.options;\n            if (socketOptions && socketOptions.connection) {\n                this.logger.info(\n                    {\n                        tnx: 'proxy',\n                        remoteAddress: socketOptions.connection.remoteAddress,\n                        remotePort: socketOptions.connection.remotePort,\n                        destHost: options.host || '',\n                        destPort: options.port || '',\n                        action: 'connected'\n                    },\n                    'Using proxied socket from %s:%s to %s:%s',\n                    socketOptions.connection.remoteAddress,\n                    socketOptions.connection.remotePort,\n                    options.host || '',\n                    options.port || ''\n                );\n\n                options = assign(false, options);\n                Object.keys(socketOptions).forEach(key => {\n                    options[key] = socketOptions[key];\n                });\n            }\n\n            this.connection = new SMTPConnection(options);\n\n            this.connection.once('error', err => {\n                this.emit('error', err);\n                if (returned) {\n                    return;\n                }\n                returned = true;\n                return callback(err);\n            });\n\n            this.connection.once('end', () => {\n                this.close();\n                if (returned) {\n                    return;\n                }\n                returned = true;\n\n                let timer = setTimeout(() => {\n                    if (returned) {\n                        return;\n                    }\n                    // still have not returned, this means we have an unexpected connection close\n                    let err = new Error('Unexpected socket close');\n                    if (this.connection && this.connection._socket && this.connection._socket.upgrading) {\n                        // starttls connection errors\n                        err.code = 'ETLS';\n                    }\n                    callback(err);\n                }, 1000);\n\n                try {\n                    timer.unref();\n                } catch (_E) {\n                    // Ignore. Happens on envs with non-node timer implementation\n                }\n            });\n\n            this.connection.connect(() => {\n                if (returned) {\n                    return;\n                }\n\n                if (this.auth && (this.connection.allowsAuth || options.forceAuth)) {\n                    this.connection.login(this.auth, err => {\n                        if (returned) {\n                            return;\n                        }\n                        returned = true;\n\n                        if (err) {\n                            this.connection.close();\n                            this.emit('error', err);\n                            return callback(err);\n                        }\n\n                        this._connected = true;\n                        callback(null, true);\n                    });\n                } else {\n                    returned = true;\n                    this._connected = true;\n                    return callback(null, true);\n                }\n            });\n        });\n    }\n\n    /**\n     * Sends an e-mail to be sent using the selected settings\n     *\n     * @param {Object} mail Mail object\n     * @param {Function} callback Callback function\n     */\n    send(mail, callback) {\n        if (!this._connected) {\n            return this.connect(err => {\n                if (err) {\n                    return callback(err);\n                }\n                return this.send(mail, callback);\n            });\n        }\n\n        let envelope = mail.message.getEnvelope();\n        let messageId = mail.message.messageId();\n\n        let recipients = [].concat(envelope.to || []);\n        if (recipients.length > 3) {\n            recipients.push('...and ' + recipients.splice(2).length + ' more');\n        }\n        this.logger.info(\n            {\n                tnx: 'send',\n                messageId,\n                cid: this.id\n            },\n            'Sending message %s using #%s to <%s>',\n            messageId,\n            this.id,\n            recipients.join(', ')\n        );\n\n        if (mail.data.dsn) {\n            envelope.dsn = mail.data.dsn;\n        }\n\n        this.connection.send(envelope, mail.message.createReadStream(), (err, info) => {\n            this.messages++;\n\n            if (err) {\n                this.connection.close();\n                this.emit('error', err);\n                return callback(err);\n            }\n\n            info.envelope = {\n                from: envelope.from,\n                to: envelope.to\n            };\n            info.messageId = messageId;\n\n            setImmediate(() => {\n                let err;\n                if (this.messages >= this.options.maxMessages) {\n                    err = new Error('Resource exhausted');\n                    err.code = 'EMAXLIMIT';\n                    this.connection.close();\n                    this.emit('error', err);\n                } else {\n                    this.pool._checkRateLimit(() => {\n                        this.available = true;\n                        this.emit('available');\n                    });\n                }\n            });\n\n            callback(null, info);\n        });\n    }\n\n    /**\n     * Closes the connection\n     */\n    close() {\n        this._connected = false;\n        if (this.auth && this.auth.oauth2) {\n            this.auth.oauth2.removeAllListeners();\n        }\n        if (this.connection) {\n            this.connection.close();\n        }\n        this.emit('close');\n    }\n}\n\nmodule.exports = PoolResource;\n", "{\n    \"1und1\": {\n        \"description\": \"1&1 Mail (German hosting provider)\",\n        \"host\": \"smtp.1und1.de\",\n        \"port\": 465,\n        \"secure\": true,\n        \"authMethod\": \"LOGIN\"\n    },\n\n    \"126\": {\n        \"description\": \"126 Mail (NetEase)\",\n        \"host\": \"smtp.126.com\",\n        \"port\": 465,\n        \"secure\": true\n    },\n\n    \"163\": {\n        \"description\": \"163 Mail (NetEase)\",\n        \"host\": \"smtp.163.com\",\n        \"port\": 465,\n        \"secure\": true\n    },\n\n    \"Aliyun\": {\n        \"description\": \"Alibaba Cloud Mail\",\n        \"domains\": [\"aliyun.com\"],\n        \"host\": \"smtp.aliyun.com\",\n        \"port\": 465,\n        \"secure\": true\n    },\n\n    \"AliyunQiye\": {\n        \"description\": \"Alibaba Cloud Enterprise Mail\",\n        \"host\": \"smtp.qiye.aliyun.com\",\n        \"port\": 465,\n        \"secure\": true\n    },\n\n    \"AOL\": {\n        \"description\": \"AOL Mail\",\n        \"domains\": [\"aol.com\"],\n        \"host\": \"smtp.aol.com\",\n        \"port\": 587\n    },\n\n    \"Aruba\": {\n        \"description\": \"Aruba PEC (Italian email provider)\",\n        \"domains\": [\"aruba.it\", \"pec.aruba.it\"],\n        \"aliases\": [\"Aruba PEC\"],\n        \"host\": \"smtps.aruba.it\",\n        \"port\": 465,\n        \"secure\": true,\n        \"authMethod\": \"LOGIN\"\n    },\n\n    \"Bluewin\": {\n        \"description\": \"Bluewin (Swiss email provider)\",\n        \"host\": \"smtpauths.bluewin.ch\",\n        \"domains\": [\"bluewin.ch\"],\n        \"port\": 465\n    },\n\n    \"BOL\": {\n        \"description\": \"BOL Mail (Brazilian provider)\",\n        \"domains\": [\"bol.com.br\"],\n        \"host\": \"smtp.bol.com.br\",\n        \"port\": 587,\n        \"requireTLS\": true\n    },\n\n    \"DebugMail\": {\n        \"description\": \"DebugMail (email testing service)\",\n        \"host\": \"debugmail.io\",\n        \"port\": 25\n    },\n\n    \"Disroot\": {\n        \"description\": \"Disroot (privacy-focused provider)\",\n        \"domains\": [\"disroot.org\"],\n        \"host\": \"disroot.org\",\n        \"port\": 587,\n        \"secure\": false,\n        \"authMethod\": \"LOGIN\"\n    },\n\n    \"DynectEmail\": {\n        \"description\": \"Dyn Email Delivery\",\n        \"aliases\": [\"Dynect\"],\n        \"host\": \"smtp.dynect.net\",\n        \"port\": 25\n    },\n\n    \"ElasticEmail\": {\n        \"description\": \"Elastic Email\",\n        \"aliases\": [\"Elastic Email\"],\n        \"host\": \"smtp.elasticemail.com\",\n        \"port\": 465,\n        \"secure\": true\n    },\n\n    \"Ethereal\": {\n        \"description\": \"Ethereal Email (email testing service)\",\n        \"aliases\": [\"ethereal.email\"],\n        \"host\": \"smtp.ethereal.email\",\n        \"port\": 587\n    },\n\n    \"FastMail\": {\n        \"description\": \"FastMail\",\n        \"domains\": [\"fastmail.fm\"],\n        \"host\": \"smtp.fastmail.com\",\n        \"port\": 465,\n        \"secure\": true\n    },\n\n    \"Feishu Mail\": {\n        \"description\": \"Feishu Mail (Lark)\",\n        \"aliases\": [\"Feishu\", \"FeishuMail\"],\n        \"domains\": [\"www.feishu.cn\"],\n        \"host\": \"smtp.feishu.cn\",\n        \"port\": 465,\n        \"secure\": true\n    },\n\n    \"Forward Email\": {\n        \"description\": \"Forward Email (email forwarding service)\",\n        \"aliases\": [\"FE\", \"ForwardEmail\"],\n        \"domains\": [\"forwardemail.net\"],\n        \"host\": \"smtp.forwardemail.net\",\n        \"port\": 465,\n        \"secure\": true\n    },\n\n    \"GandiMail\": {\n        \"description\": \"Gandi Mail\",\n        \"aliases\": [\"Gandi\", \"Gandi Mail\"],\n        \"host\": \"mail.gandi.net\",\n        \"port\": 587\n    },\n\n    \"Gmail\": {\n        \"description\": \"Gmail\",\n        \"aliases\": [\"Google Mail\"],\n        \"domains\": [\"gmail.com\", \"googlemail.com\"],\n        \"host\": \"smtp.gmail.com\",\n        \"port\": 465,\n        \"secure\": true\n    },\n\n    \"GMX\": {\n        \"description\": \"GMX Mail\",\n        \"domains\": [\"gmx.com\", \"gmx.net\", \"gmx.de\"],\n        \"host\": \"mail.gmx.com\",\n        \"port\": 587\n    },\n\n    \"Godaddy\": {\n        \"description\": \"GoDaddy Email (US)\",\n        \"host\": \"smtpout.secureserver.net\",\n        \"port\": 25\n    },\n\n    \"GodaddyAsia\": {\n        \"description\": \"GoDaddy Email (Asia)\",\n        \"host\": \"smtp.asia.secureserver.net\",\n        \"port\": 25\n    },\n\n    \"GodaddyEurope\": {\n        \"description\": \"GoDaddy Email (Europe)\",\n        \"host\": \"smtp.europe.secureserver.net\",\n        \"port\": 25\n    },\n\n    \"hot.ee\": {\n        \"description\": \"Hot.ee (Estonian email provider)\",\n        \"host\": \"mail.hot.ee\"\n    },\n\n    \"Hotmail\": {\n        \"description\": \"Outlook.com / Hotmail\",\n        \"aliases\": [\"Outlook\", \"Outlook.com\", \"Hotmail.com\"],\n        \"domains\": [\"hotmail.com\", \"outlook.com\"],\n        \"host\": \"smtp-mail.outlook.com\",\n        \"port\": 587\n    },\n\n    \"iCloud\": {\n        \"description\": \"iCloud Mail\",\n        \"aliases\": [\"Me\", \"Mac\"],\n        \"domains\": [\"me.com\", \"mac.com\"],\n        \"host\": \"smtp.mail.me.com\",\n        \"port\": 587\n    },\n\n    \"Infomaniak\": {\n        \"description\": \"Infomaniak Mail (Swiss hosting provider)\",\n        \"host\": \"mail.infomaniak.com\",\n        \"domains\": [\"ik.me\", \"ikmail.com\", \"etik.com\"],\n        \"port\": 587\n    },\n\n    \"KolabNow\": {\n        \"description\": \"KolabNow (secure email service)\",\n        \"domains\": [\"kolabnow.com\"],\n        \"aliases\": [\"Kolab\"],\n        \"host\": \"smtp.kolabnow.com\",\n        \"port\": 465,\n        \"secure\": true,\n        \"authMethod\": \"LOGIN\"\n    },\n\n    \"Loopia\": {\n        \"description\": \"Loopia (Swedish hosting provider)\",\n        \"host\": \"mailcluster.loopia.se\",\n        \"port\": 465\n    },\n\n    \"Loops\": {\n        \"description\": \"Loops\",\n        \"host\": \"smtp.loops.so\",\n        \"port\": 587\n    },\n\n    \"mail.ee\": {\n        \"description\": \"Mail.ee (Estonian email provider)\",\n        \"host\": \"smtp.mail.ee\"\n    },\n\n    \"Mail.ru\": {\n        \"description\": \"Mail.ru\",\n        \"host\": \"smtp.mail.ru\",\n        \"port\": 465,\n        \"secure\": true\n    },\n\n    \"Mailcatch.app\": {\n        \"description\": \"Mailcatch (email testing service)\",\n        \"host\": \"sandbox-smtp.mailcatch.app\",\n        \"port\": 2525\n    },\n\n    \"Maildev\": {\n        \"description\": \"MailDev (local email testing)\",\n        \"port\": 1025,\n        \"ignoreTLS\": true\n    },\n\n    \"MailerSend\": {\n        \"description\": \"MailerSend\",\n        \"host\": \"smtp.mailersend.net\",\n        \"port\": 587\n    },\n\n    \"Mailgun\": {\n        \"description\": \"Mailgun\",\n        \"host\": \"smtp.mailgun.org\",\n        \"port\": 465,\n        \"secure\": true\n    },\n\n    \"Mailjet\": {\n        \"description\": \"Mailjet\",\n        \"host\": \"in.mailjet.com\",\n        \"port\": 587\n    },\n\n    \"Mailosaur\": {\n        \"description\": \"Mailosaur (email testing service)\",\n        \"host\": \"mailosaur.io\",\n        \"port\": 25\n    },\n\n    \"Mailtrap\": {\n        \"description\": \"Mailtrap\",\n        \"host\": \"live.smtp.mailtrap.io\",\n        \"port\": 587\n    },\n\n    \"Mandrill\": {\n        \"description\": \"Mandrill (by Mailchimp)\",\n        \"host\": \"smtp.mandrillapp.com\",\n        \"port\": 587\n    },\n\n    \"Naver\": {\n        \"description\": \"Naver Mail (Korean email provider)\",\n        \"host\": \"smtp.naver.com\",\n        \"port\": 587\n    },\n\n    \"OhMySMTP\": {\n        \"description\": \"OhMySMTP (email delivery service)\",\n        \"host\": \"smtp.ohmysmtp.com\",\n        \"port\": 587,\n        \"secure\": false\n    },\n\n    \"One\": {\n        \"description\": \"One.com Email\",\n        \"host\": \"send.one.com\",\n        \"port\": 465,\n        \"secure\": true\n    },\n\n    \"OpenMailBox\": {\n        \"description\": \"OpenMailBox\",\n        \"aliases\": [\"OMB\", \"openmailbox.org\"],\n        \"host\": \"smtp.openmailbox.org\",\n        \"port\": 465,\n        \"secure\": true\n    },\n\n    \"Outlook365\": {\n        \"description\": \"Microsoft 365 / Office 365\",\n        \"host\": \"smtp.office365.com\",\n        \"port\": 587,\n        \"secure\": false\n    },\n\n    \"Postmark\": {\n        \"description\": \"Postmark\",\n        \"aliases\": [\"PostmarkApp\"],\n        \"host\": \"smtp.postmarkapp.com\",\n        \"port\": 2525\n    },\n\n    \"Proton\": {\n        \"description\": \"Proton Mail\",\n        \"aliases\": [\"ProtonMail\", \"Proton.me\", \"Protonmail.com\", \"Protonmail.ch\"],\n        \"domains\": [\"proton.me\", \"protonmail.com\", \"pm.me\", \"protonmail.ch\"],\n        \"host\": \"smtp.protonmail.ch\",\n        \"port\": 587,\n        \"requireTLS\": true\n    },\n\n    \"qiye.aliyun\": {\n        \"description\": \"Alibaba Mail Enterprise Edition\",\n        \"host\": \"smtp.mxhichina.com\",\n        \"port\": \"465\",\n        \"secure\": true\n    },\n\n    \"QQ\": {\n        \"description\": \"QQ Mail\",\n        \"domains\": [\"qq.com\"],\n        \"host\": \"smtp.qq.com\",\n        \"port\": 465,\n        \"secure\": true\n    },\n\n    \"QQex\": {\n        \"description\": \"QQ Enterprise Mail\",\n        \"aliases\": [\"QQ Enterprise\"],\n        \"domains\": [\"exmail.qq.com\"],\n        \"host\": \"smtp.exmail.qq.com\",\n        \"port\": 465,\n        \"secure\": true\n    },\n\n    \"Resend\": {\n        \"description\": \"Resend\",\n        \"host\": \"smtp.resend.com\",\n        \"port\": 465,\n        \"secure\": true\n    },\n\n    \"Runbox\": {\n        \"description\": \"Runbox (Norwegian email provider)\",\n        \"domains\": [\"runbox.com\"],\n        \"host\": \"smtp.runbox.com\",\n        \"port\": 465,\n        \"secure\": true\n    },\n\n    \"SendCloud\": {\n        \"description\": \"SendCloud (Chinese email delivery)\",\n        \"host\": \"smtp.sendcloud.net\",\n        \"port\": 2525\n    },\n\n    \"SendGrid\": {\n        \"description\": \"SendGrid\",\n        \"host\": \"smtp.sendgrid.net\",\n        \"port\": 587\n    },\n\n    \"SendinBlue\": {\n        \"description\": \"Brevo (formerly Sendinblue)\",\n        \"aliases\": [\"Brevo\"],\n        \"host\": \"smtp-relay.brevo.com\",\n        \"port\": 587\n    },\n\n    \"SendPulse\": {\n        \"description\": \"SendPulse\",\n        \"host\": \"smtp-pulse.com\",\n        \"port\": 465,\n        \"secure\": true\n    },\n\n    \"SES\": {\n        \"description\": \"AWS SES US East (N. Virginia)\",\n        \"host\": \"email-smtp.us-east-1.amazonaws.com\",\n        \"port\": 465,\n        \"secure\": true\n    },\n\n    \"SES-AP-NORTHEAST-1\": {\n        \"description\": \"AWS SES Asia Pacific (Tokyo)\",\n        \"host\": \"email-smtp.ap-northeast-1.amazonaws.com\",\n        \"port\": 465,\n        \"secure\": true\n    },\n\n    \"SES-AP-NORTHEAST-2\": {\n        \"description\": \"AWS SES Asia Pacific (Seoul)\",\n        \"host\": \"email-smtp.ap-northeast-2.amazonaws.com\",\n        \"port\": 465,\n        \"secure\": true\n    },\n\n    \"SES-AP-NORTHEAST-3\": {\n        \"description\": \"AWS SES Asia Pacific (Osaka)\",\n        \"host\": \"email-smtp.ap-northeast-3.amazonaws.com\",\n        \"port\": 465,\n        \"secure\": true\n    },\n\n    \"SES-AP-SOUTH-1\": {\n        \"description\": \"AWS SES Asia Pacific (Mumbai)\",\n        \"host\": \"email-smtp.ap-south-1.amazonaws.com\",\n        \"port\": 465,\n        \"secure\": true\n    },\n\n    \"SES-AP-SOUTHEAST-1\": {\n        \"description\": \"AWS SES Asia Pacific (Singapore)\",\n        \"host\": \"email-smtp.ap-southeast-1.amazonaws.com\",\n        \"port\": 465,\n        \"secure\": true\n    },\n\n    \"SES-AP-SOUTHEAST-2\": {\n        \"description\": \"AWS SES Asia Pacific (Sydney)\",\n        \"host\": \"email-smtp.ap-southeast-2.amazonaws.com\",\n        \"port\": 465,\n        \"secure\": true\n    },\n\n    \"SES-CA-CENTRAL-1\": {\n        \"description\": \"AWS SES Canada (Central)\",\n        \"host\": \"email-smtp.ca-central-1.amazonaws.com\",\n        \"port\": 465,\n        \"secure\": true\n    },\n\n    \"SES-EU-CENTRAL-1\": {\n        \"description\": \"AWS SES Europe (Frankfurt)\",\n        \"host\": \"email-smtp.eu-central-1.amazonaws.com\",\n        \"port\": 465,\n        \"secure\": true\n    },\n\n    \"SES-EU-NORTH-1\": {\n        \"description\": \"AWS SES Europe (Stockholm)\",\n        \"host\": \"email-smtp.eu-north-1.amazonaws.com\",\n        \"port\": 465,\n        \"secure\": true\n    },\n\n    \"SES-EU-WEST-1\": {\n        \"description\": \"AWS SES Europe (Ireland)\",\n        \"host\": \"email-smtp.eu-west-1.amazonaws.com\",\n        \"port\": 465,\n        \"secure\": true\n    },\n\n    \"SES-EU-WEST-2\": {\n        \"description\": \"AWS SES Europe (London)\",\n        \"host\": \"email-smtp.eu-west-2.amazonaws.com\",\n        \"port\": 465,\n        \"secure\": true\n    },\n\n    \"SES-EU-WEST-3\": {\n        \"description\": \"AWS SES Europe (Paris)\",\n        \"host\": \"email-smtp.eu-west-3.amazonaws.com\",\n        \"port\": 465,\n        \"secure\": true\n    },\n\n    \"SES-SA-EAST-1\": {\n        \"description\": \"AWS SES South America (S\u00E3o Paulo)\",\n        \"host\": \"email-smtp.sa-east-1.amazonaws.com\",\n        \"port\": 465,\n        \"secure\": true\n    },\n\n    \"SES-US-EAST-1\": {\n        \"description\": \"AWS SES US East (N. Virginia)\",\n        \"host\": \"email-smtp.us-east-1.amazonaws.com\",\n        \"port\": 465,\n        \"secure\": true\n    },\n\n    \"SES-US-EAST-2\": {\n        \"description\": \"AWS SES US East (Ohio)\",\n        \"host\": \"email-smtp.us-east-2.amazonaws.com\",\n        \"port\": 465,\n        \"secure\": true\n    },\n\n    \"SES-US-GOV-EAST-1\": {\n        \"description\": \"AWS SES GovCloud (US-East)\",\n        \"host\": \"email-smtp.us-gov-east-1.amazonaws.com\",\n        \"port\": 465,\n        \"secure\": true\n    },\n\n    \"SES-US-GOV-WEST-1\": {\n        \"description\": \"AWS SES GovCloud (US-West)\",\n        \"host\": \"email-smtp.us-gov-west-1.amazonaws.com\",\n        \"port\": 465,\n        \"secure\": true\n    },\n\n    \"SES-US-WEST-1\": {\n        \"description\": \"AWS SES US West (N. California)\",\n        \"host\": \"email-smtp.us-west-1.amazonaws.com\",\n        \"port\": 465,\n        \"secure\": true\n    },\n\n    \"SES-US-WEST-2\": {\n        \"description\": \"AWS SES US West (Oregon)\",\n        \"host\": \"email-smtp.us-west-2.amazonaws.com\",\n        \"port\": 465,\n        \"secure\": true\n    },\n\n    \"Seznam\": {\n        \"description\": \"Seznam Email (Czech email provider)\",\n        \"aliases\": [\"Seznam Email\"],\n        \"domains\": [\"seznam.cz\", \"email.cz\", \"post.cz\", \"spoluzaci.cz\"],\n        \"host\": \"smtp.seznam.cz\",\n        \"port\": 465,\n        \"secure\": true\n    },\n\n    \"SMTP2GO\": {\n        \"description\": \"SMTP2GO\",\n        \"host\": \"mail.smtp2go.com\",\n        \"port\": 2525\n    },\n\n    \"Sparkpost\": {\n        \"description\": \"SparkPost\",\n        \"aliases\": [\"SparkPost\", \"SparkPost Mail\"],\n        \"domains\": [\"sparkpost.com\"],\n        \"host\": \"smtp.sparkpostmail.com\",\n        \"port\": 587,\n        \"secure\": false\n    },\n\n    \"Tipimail\": {\n        \"description\": \"Tipimail (email delivery service)\",\n        \"host\": \"smtp.tipimail.com\",\n        \"port\": 587\n    },\n\n    \"Tutanota\": {\n        \"description\": \"Tutanota (Tuta Mail)\",\n        \"domains\": [\"tutanota.com\", \"tuta.com\", \"tutanota.de\", \"tuta.io\"],\n        \"host\": \"smtp.tutanota.com\",\n        \"port\": 465,\n        \"secure\": true\n    },\n\n    \"Yahoo\": {\n        \"description\": \"Yahoo Mail\",\n        \"domains\": [\"yahoo.com\"],\n        \"host\": \"smtp.mail.yahoo.com\",\n        \"port\": 465,\n        \"secure\": true\n    },\n\n    \"Yandex\": {\n        \"description\": \"Yandex Mail\",\n        \"domains\": [\"yandex.ru\"],\n        \"host\": \"smtp.yandex.ru\",\n        \"port\": 465,\n        \"secure\": true\n    },\n\n    \"Zimbra\": {\n        \"description\": \"Zimbra Mail Server\",\n        \"aliases\": [\"Zimbra Collaboration\"],\n        \"host\": \"smtp.zimbra.com\",\n        \"port\": 587,\n        \"requireTLS\": true\n    },\n\n    \"Zoho\": {\n        \"description\": \"Zoho Mail\",\n        \"host\": \"smtp.zoho.com\",\n        \"port\": 465,\n        \"secure\": true,\n        \"authMethod\": \"LOGIN\"\n    }\n}\n", "'use strict';\n\nconst services = require('./services.json');\nconst normalized = {};\n\nObject.keys(services).forEach(key => {\n    let service = services[key];\n\n    normalized[normalizeKey(key)] = normalizeService(service);\n\n    [].concat(service.aliases || []).forEach(alias => {\n        normalized[normalizeKey(alias)] = normalizeService(service);\n    });\n\n    [].concat(service.domains || []).forEach(domain => {\n        normalized[normalizeKey(domain)] = normalizeService(service);\n    });\n});\n\nfunction normalizeKey(key) {\n    return key.replace(/[^a-zA-Z0-9.-]/g, '').toLowerCase();\n}\n\nfunction normalizeService(service) {\n    let filter = ['domains', 'aliases'];\n    let response = {};\n\n    Object.keys(service).forEach(key => {\n        if (filter.indexOf(key) < 0) {\n            response[key] = service[key];\n        }\n    });\n\n    return response;\n}\n\n/**\n * Resolves SMTP config for given key. Key can be a name (like 'Gmail'), alias (like 'Google Mail') or\n * an email address (like 'test@googlemail.com').\n *\n * @param {String} key [description]\n * @returns {Object} SMTP config or false if not found\n */\nmodule.exports = function (key) {\n    key = normalizeKey(key.split('@').pop());\n    return normalized[key] || false;\n};\n", "'use strict';\n\nconst EventEmitter = require('events');\nconst PoolResource = require('./pool-resource');\nconst SMTPConnection = require('../smtp-connection');\nconst wellKnown = require('../well-known');\nconst shared = require('../shared');\nconst packageData = require('../../package.json');\n\n/**\n * Creates a SMTP pool transport object for Nodemailer\n *\n * @constructor\n * @param {Object} options SMTP Connection options\n */\nclass SMTPPool extends EventEmitter {\n    constructor(options) {\n        super();\n\n        options = options || {};\n        if (typeof options === 'string') {\n            options = {\n                url: options\n            };\n        }\n\n        let urlData;\n        let service = options.service;\n\n        if (typeof options.getSocket === 'function') {\n            this.getSocket = options.getSocket;\n        }\n\n        if (options.url) {\n            urlData = shared.parseConnectionUrl(options.url);\n            service = service || urlData.service;\n        }\n\n        this.options = shared.assign(\n            false, // create new object\n            options, // regular options\n            urlData, // url options\n            service && wellKnown(service) // wellknown options\n        );\n\n        this.options.maxConnections = this.options.maxConnections || 5;\n        this.options.maxMessages = this.options.maxMessages || 100;\n\n        this.logger = shared.getLogger(this.options, {\n            component: this.options.component || 'smtp-pool'\n        });\n\n        // temporary object\n        let connection = new SMTPConnection(this.options);\n\n        this.name = 'SMTP (pool)';\n        this.version = packageData.version + '[client:' + connection.version + ']';\n\n        this._rateLimit = {\n            counter: 0,\n            timeout: null,\n            waiting: [],\n            checkpoint: false,\n            delta: Number(this.options.rateDelta) || 1000,\n            limit: Number(this.options.rateLimit) || 0\n        };\n        this._closed = false;\n        this._queue = [];\n        this._connections = [];\n        this._connectionCounter = 0;\n\n        this.idling = true;\n\n        setImmediate(() => {\n            if (this.idling) {\n                this.emit('idle');\n            }\n        });\n    }\n\n    /**\n     * Placeholder function for creating proxy sockets. This method immediatelly returns\n     * without a socket\n     *\n     * @param {Object} options Connection options\n     * @param {Function} callback Callback function to run with the socket keys\n     */\n    getSocket(options, callback) {\n        // return immediatelly\n        return setImmediate(() => callback(null, false));\n    }\n\n    /**\n     * Queues an e-mail to be sent using the selected settings\n     *\n     * @param {Object} mail Mail object\n     * @param {Function} callback Callback function\n     */\n    send(mail, callback) {\n        if (this._closed) {\n            return false;\n        }\n\n        this._queue.push({\n            mail,\n            requeueAttempts: 0,\n            callback\n        });\n\n        if (this.idling && this._queue.length >= this.options.maxConnections) {\n            this.idling = false;\n        }\n\n        setImmediate(() => this._processMessages());\n\n        return true;\n    }\n\n    /**\n     * Closes all connections in the pool. If there is a message being sent, the connection\n     * is closed later\n     */\n    close() {\n        let connection;\n        let len = this._connections.length;\n        this._closed = true;\n\n        // clear rate limit timer if it exists\n        clearTimeout(this._rateLimit.timeout);\n\n        if (!len && !this._queue.length) {\n            return;\n        }\n\n        // remove all available connections\n        for (let i = len - 1; i >= 0; i--) {\n            if (this._connections[i] && this._connections[i].available) {\n                connection = this._connections[i];\n                connection.close();\n                this.logger.info(\n                    {\n                        tnx: 'connection',\n                        cid: connection.id,\n                        action: 'removed'\n                    },\n                    'Connection #%s removed',\n                    connection.id\n                );\n            }\n        }\n\n        if (len && !this._connections.length) {\n            this.logger.debug(\n                {\n                    tnx: 'connection'\n                },\n                'All connections removed'\n            );\n        }\n\n        if (!this._queue.length) {\n            return;\n        }\n\n        // make sure that entire queue would be cleaned\n        let invokeCallbacks = () => {\n            if (!this._queue.length) {\n                this.logger.debug(\n                    {\n                        tnx: 'connection'\n                    },\n                    'Pending queue entries cleared'\n                );\n                return;\n            }\n            let entry = this._queue.shift();\n            if (entry && typeof entry.callback === 'function') {\n                try {\n                    entry.callback(new Error('Connection pool was closed'));\n                } catch (E) {\n                    this.logger.error(\n                        {\n                            err: E,\n                            tnx: 'callback',\n                            cid: connection.id\n                        },\n                        'Callback error for #%s: %s',\n                        connection.id,\n                        E.message\n                    );\n                }\n            }\n            setImmediate(invokeCallbacks);\n        };\n        setImmediate(invokeCallbacks);\n    }\n\n    /**\n     * Check the queue and available connections. If there is a message to be sent and there is\n     * an available connection, then use this connection to send the mail\n     */\n    _processMessages() {\n        let connection;\n        let i, len;\n\n        // do nothing if already closed\n        if (this._closed) {\n            return;\n        }\n\n        // do nothing if queue is empty\n        if (!this._queue.length) {\n            if (!this.idling) {\n                // no pending jobs\n                this.idling = true;\n                this.emit('idle');\n            }\n            return;\n        }\n\n        // find first available connection\n        for (i = 0, len = this._connections.length; i < len; i++) {\n            if (this._connections[i].available) {\n                connection = this._connections[i];\n                break;\n            }\n        }\n\n        if (!connection && this._connections.length < this.options.maxConnections) {\n            connection = this._createConnection();\n        }\n\n        if (!connection) {\n            // no more free connection slots available\n            this.idling = false;\n            return;\n        }\n\n        // check if there is free space in the processing queue\n        if (!this.idling && this._queue.length < this.options.maxConnections) {\n            this.idling = true;\n            this.emit('idle');\n        }\n\n        let entry = (connection.queueEntry = this._queue.shift());\n        entry.messageId = (connection.queueEntry.mail.message.getHeader('message-id') || '').replace(/[<>\\s]/g, '');\n\n        connection.available = false;\n\n        this.logger.debug(\n            {\n                tnx: 'pool',\n                cid: connection.id,\n                messageId: entry.messageId,\n                action: 'assign'\n            },\n            'Assigned message <%s> to #%s (%s)',\n            entry.messageId,\n            connection.id,\n            connection.messages + 1\n        );\n\n        if (this._rateLimit.limit) {\n            this._rateLimit.counter++;\n            if (!this._rateLimit.checkpoint) {\n                this._rateLimit.checkpoint = Date.now();\n            }\n        }\n\n        connection.send(entry.mail, (err, info) => {\n            // only process callback if current handler is not changed\n            if (entry === connection.queueEntry) {\n                try {\n                    entry.callback(err, info);\n                } catch (E) {\n                    this.logger.error(\n                        {\n                            err: E,\n                            tnx: 'callback',\n                            cid: connection.id\n                        },\n                        'Callback error for #%s: %s',\n                        connection.id,\n                        E.message\n                    );\n                }\n                connection.queueEntry = false;\n            }\n        });\n    }\n\n    /**\n     * Creates a new pool resource\n     */\n    _createConnection() {\n        let connection = new PoolResource(this);\n\n        connection.id = ++this._connectionCounter;\n\n        this.logger.info(\n            {\n                tnx: 'pool',\n                cid: connection.id,\n                action: 'conection'\n            },\n            'Created new pool resource #%s',\n            connection.id\n        );\n\n        // resource comes available\n        connection.on('available', () => {\n            this.logger.debug(\n                {\n                    tnx: 'connection',\n                    cid: connection.id,\n                    action: 'available'\n                },\n                'Connection #%s became available',\n                connection.id\n            );\n\n            if (this._closed) {\n                // if already closed run close() that will remove this connections from connections list\n                this.close();\n            } else {\n                // check if there's anything else to send\n                this._processMessages();\n            }\n        });\n\n        // resource is terminated with an error\n        connection.once('error', err => {\n            if (err.code !== 'EMAXLIMIT') {\n                this.logger.error(\n                    {\n                        err,\n                        tnx: 'pool',\n                        cid: connection.id\n                    },\n                    'Pool Error for #%s: %s',\n                    connection.id,\n                    err.message\n                );\n            } else {\n                this.logger.debug(\n                    {\n                        tnx: 'pool',\n                        cid: connection.id,\n                        action: 'maxlimit'\n                    },\n                    'Max messages limit exchausted for #%s',\n                    connection.id\n                );\n            }\n\n            if (connection.queueEntry) {\n                try {\n                    connection.queueEntry.callback(err);\n                } catch (E) {\n                    this.logger.error(\n                        {\n                            err: E,\n                            tnx: 'callback',\n                            cid: connection.id\n                        },\n                        'Callback error for #%s: %s',\n                        connection.id,\n                        E.message\n                    );\n                }\n                connection.queueEntry = false;\n            }\n\n            // remove the erroneus connection from connections list\n            this._removeConnection(connection);\n\n            this._continueProcessing();\n        });\n\n        connection.once('close', () => {\n            this.logger.info(\n                {\n                    tnx: 'connection',\n                    cid: connection.id,\n                    action: 'closed'\n                },\n                'Connection #%s was closed',\n                connection.id\n            );\n\n            this._removeConnection(connection);\n\n            if (connection.queueEntry) {\n                // If the connection closed when sending, add the message to the queue again\n                // if max number of requeues is not reached yet\n                // Note that we must wait a bit.. because the callback of the 'error' handler might be called\n                // in the next event loop\n                setTimeout(() => {\n                    if (connection.queueEntry) {\n                        if (this._shouldRequeuOnConnectionClose(connection.queueEntry)) {\n                            this._requeueEntryOnConnectionClose(connection);\n                        } else {\n                            this._failDeliveryOnConnectionClose(connection);\n                        }\n                    }\n                    this._continueProcessing();\n                }, 50);\n            } else {\n                if (!this._closed && this.idling && !this._connections.length) {\n                    this.emit('clear');\n                }\n\n                this._continueProcessing();\n            }\n        });\n\n        this._connections.push(connection);\n\n        return connection;\n    }\n\n    _shouldRequeuOnConnectionClose(queueEntry) {\n        if (this.options.maxRequeues === undefined || this.options.maxRequeues < 0) {\n            return true;\n        }\n\n        return queueEntry.requeueAttempts < this.options.maxRequeues;\n    }\n\n    _failDeliveryOnConnectionClose(connection) {\n        if (connection.queueEntry && connection.queueEntry.callback) {\n            try {\n                connection.queueEntry.callback(new Error('Reached maximum number of retries after connection was closed'));\n            } catch (E) {\n                this.logger.error(\n                    {\n                        err: E,\n                        tnx: 'callback',\n                        messageId: connection.queueEntry.messageId,\n                        cid: connection.id\n                    },\n                    'Callback error for #%s: %s',\n                    connection.id,\n                    E.message\n                );\n            }\n            connection.queueEntry = false;\n        }\n    }\n\n    _requeueEntryOnConnectionClose(connection) {\n        connection.queueEntry.requeueAttempts = connection.queueEntry.requeueAttempts + 1;\n        this.logger.debug(\n            {\n                tnx: 'pool',\n                cid: connection.id,\n                messageId: connection.queueEntry.messageId,\n                action: 'requeue'\n            },\n            'Re-queued message <%s> for #%s. Attempt: #%s',\n            connection.queueEntry.messageId,\n            connection.id,\n            connection.queueEntry.requeueAttempts\n        );\n        this._queue.unshift(connection.queueEntry);\n        connection.queueEntry = false;\n    }\n\n    /**\n     * Continue to process message if the pool hasn't closed\n     */\n    _continueProcessing() {\n        if (this._closed) {\n            this.close();\n        } else {\n            setTimeout(() => this._processMessages(), 100);\n        }\n    }\n\n    /**\n     * Remove resource from pool\n     *\n     * @param {Object} connection The PoolResource to remove\n     */\n    _removeConnection(connection) {\n        let index = this._connections.indexOf(connection);\n\n        if (index !== -1) {\n            this._connections.splice(index, 1);\n        }\n    }\n\n    /**\n     * Checks if connections have hit current rate limit and if so, queues the availability callback\n     *\n     * @param {Function} callback Callback function to run once rate limiter has been cleared\n     */\n    _checkRateLimit(callback) {\n        if (!this._rateLimit.limit) {\n            return callback();\n        }\n\n        let now = Date.now();\n\n        if (this._rateLimit.counter < this._rateLimit.limit) {\n            return callback();\n        }\n\n        this._rateLimit.waiting.push(callback);\n\n        if (this._rateLimit.checkpoint <= now - this._rateLimit.delta) {\n            return this._clearRateLimit();\n        } else if (!this._rateLimit.timeout) {\n            this._rateLimit.timeout = setTimeout(() => this._clearRateLimit(), this._rateLimit.delta - (now - this._rateLimit.checkpoint));\n            this._rateLimit.checkpoint = now;\n        }\n    }\n\n    /**\n     * Clears current rate limit limitation and runs paused callback\n     */\n    _clearRateLimit() {\n        clearTimeout(this._rateLimit.timeout);\n        this._rateLimit.timeout = null;\n        this._rateLimit.counter = 0;\n        this._rateLimit.checkpoint = false;\n\n        // resume all paused connections\n        while (this._rateLimit.waiting.length) {\n            let cb = this._rateLimit.waiting.shift();\n            setImmediate(cb);\n        }\n    }\n\n    /**\n     * Returns true if there are free slots in the queue\n     */\n    isIdle() {\n        return this.idling;\n    }\n\n    /**\n     * Verifies SMTP configuration\n     *\n     * @param {Function} callback Callback function\n     */\n    verify(callback) {\n        let promise;\n\n        if (!callback) {\n            promise = new Promise((resolve, reject) => {\n                callback = shared.callbackPromise(resolve, reject);\n            });\n        }\n\n        let auth = new PoolResource(this).auth;\n\n        this.getSocket(this.options, (err, socketOptions) => {\n            if (err) {\n                return callback(err);\n            }\n\n            let options = this.options;\n            if (socketOptions && socketOptions.connection) {\n                this.logger.info(\n                    {\n                        tnx: 'proxy',\n                        remoteAddress: socketOptions.connection.remoteAddress,\n                        remotePort: socketOptions.connection.remotePort,\n                        destHost: options.host || '',\n                        destPort: options.port || '',\n                        action: 'connected'\n                    },\n                    'Using proxied socket from %s:%s to %s:%s',\n                    socketOptions.connection.remoteAddress,\n                    socketOptions.connection.remotePort,\n                    options.host || '',\n                    options.port || ''\n                );\n                options = shared.assign(false, options);\n                Object.keys(socketOptions).forEach(key => {\n                    options[key] = socketOptions[key];\n                });\n            }\n\n            let connection = new SMTPConnection(options);\n            let returned = false;\n\n            connection.once('error', err => {\n                if (returned) {\n                    return;\n                }\n                returned = true;\n                connection.close();\n                return callback(err);\n            });\n\n            connection.once('end', () => {\n                if (returned) {\n                    return;\n                }\n                returned = true;\n                return callback(new Error('Connection closed'));\n            });\n\n            let finalize = () => {\n                if (returned) {\n                    return;\n                }\n                returned = true;\n                connection.quit();\n                return callback(null, true);\n            };\n\n            connection.connect(() => {\n                if (returned) {\n                    return;\n                }\n\n                if (auth && (connection.allowsAuth || options.forceAuth)) {\n                    connection.login(auth, err => {\n                        if (returned) {\n                            return;\n                        }\n\n                        if (err) {\n                            returned = true;\n                            connection.close();\n                            return callback(err);\n                        }\n\n                        finalize();\n                    });\n                } else if (!auth && connection.allowsAuth && options.forceAuth) {\n                    let err = new Error('Authentication info was not provided');\n                    err.code = 'NoAuth';\n\n                    returned = true;\n                    connection.close();\n                    return callback(err);\n                } else {\n                    finalize();\n                }\n            });\n        });\n\n        return promise;\n    }\n}\n\n// expose to the world\nmodule.exports = SMTPPool;\n", "'use strict';\n\nconst EventEmitter = require('events');\nconst SMTPConnection = require('../smtp-connection');\nconst wellKnown = require('../well-known');\nconst shared = require('../shared');\nconst XOAuth2 = require('../xoauth2');\nconst packageData = require('../../package.json');\n\n/**\n * Creates a SMTP transport object for Nodemailer\n *\n * @constructor\n * @param {Object} options Connection options\n */\nclass SMTPTransport extends EventEmitter {\n    constructor(options) {\n        super();\n\n        options = options || {};\n\n        if (typeof options === 'string') {\n            options = {\n                url: options\n            };\n        }\n\n        let urlData;\n        let service = options.service;\n\n        if (typeof options.getSocket === 'function') {\n            this.getSocket = options.getSocket;\n        }\n\n        if (options.url) {\n            urlData = shared.parseConnectionUrl(options.url);\n            service = service || urlData.service;\n        }\n\n        this.options = shared.assign(\n            false, // create new object\n            options, // regular options\n            urlData, // url options\n            service && wellKnown(service) // wellknown options\n        );\n\n        this.logger = shared.getLogger(this.options, {\n            component: this.options.component || 'smtp-transport'\n        });\n\n        // temporary object\n        let connection = new SMTPConnection(this.options);\n\n        this.name = 'SMTP';\n        this.version = packageData.version + '[client:' + connection.version + ']';\n\n        if (this.options.auth) {\n            this.auth = this.getAuth({});\n        }\n    }\n\n    /**\n     * Placeholder function for creating proxy sockets. This method immediatelly returns\n     * without a socket\n     *\n     * @param {Object} options Connection options\n     * @param {Function} callback Callback function to run with the socket keys\n     */\n    getSocket(options, callback) {\n        // return immediatelly\n        return setImmediate(() => callback(null, false));\n    }\n\n    getAuth(authOpts) {\n        if (!authOpts) {\n            return this.auth;\n        }\n\n        let hasAuth = false;\n        let authData = {};\n\n        if (this.options.auth && typeof this.options.auth === 'object') {\n            Object.keys(this.options.auth).forEach(key => {\n                hasAuth = true;\n                authData[key] = this.options.auth[key];\n            });\n        }\n\n        if (authOpts && typeof authOpts === 'object') {\n            Object.keys(authOpts).forEach(key => {\n                hasAuth = true;\n                authData[key] = authOpts[key];\n            });\n        }\n\n        if (!hasAuth) {\n            return false;\n        }\n\n        switch ((authData.type || '').toString().toUpperCase()) {\n            case 'OAUTH2': {\n                if (!authData.service && !authData.user) {\n                    return false;\n                }\n                let oauth2 = new XOAuth2(authData, this.logger);\n                oauth2.provisionCallback = (this.mailer && this.mailer.get('oauth2_provision_cb')) || oauth2.provisionCallback;\n                oauth2.on('token', token => this.mailer.emit('token', token));\n                oauth2.on('error', err => this.emit('error', err));\n                return {\n                    type: 'OAUTH2',\n                    user: authData.user,\n                    oauth2,\n                    method: 'XOAUTH2'\n                };\n            }\n            default:\n                return {\n                    type: (authData.type || '').toString().toUpperCase() || 'LOGIN',\n                    user: authData.user,\n                    credentials: {\n                        user: authData.user || '',\n                        pass: authData.pass,\n                        options: authData.options\n                    },\n                    method: (authData.method || '').trim().toUpperCase() || this.options.authMethod || false\n                };\n        }\n    }\n\n    /**\n     * Sends an e-mail using the selected settings\n     *\n     * @param {Object} mail Mail object\n     * @param {Function} callback Callback function\n     */\n    send(mail, callback) {\n        this.getSocket(this.options, (err, socketOptions) => {\n            if (err) {\n                return callback(err);\n            }\n\n            let returned = false;\n            let options = this.options;\n            if (socketOptions && socketOptions.connection) {\n                this.logger.info(\n                    {\n                        tnx: 'proxy',\n                        remoteAddress: socketOptions.connection.remoteAddress,\n                        remotePort: socketOptions.connection.remotePort,\n                        destHost: options.host || '',\n                        destPort: options.port || '',\n                        action: 'connected'\n                    },\n                    'Using proxied socket from %s:%s to %s:%s',\n                    socketOptions.connection.remoteAddress,\n                    socketOptions.connection.remotePort,\n                    options.host || '',\n                    options.port || ''\n                );\n\n                // only copy options if we need to modify it\n                options = shared.assign(false, options);\n                Object.keys(socketOptions).forEach(key => {\n                    options[key] = socketOptions[key];\n                });\n            }\n\n            let connection = new SMTPConnection(options);\n\n            connection.once('error', err => {\n                if (returned) {\n                    return;\n                }\n                returned = true;\n                connection.close();\n                return callback(err);\n            });\n\n            connection.once('end', () => {\n                if (returned) {\n                    return;\n                }\n\n                let timer = setTimeout(() => {\n                    if (returned) {\n                        return;\n                    }\n                    returned = true;\n                    // still have not returned, this means we have an unexpected connection close\n                    let err = new Error('Unexpected socket close');\n                    if (connection && connection._socket && connection._socket.upgrading) {\n                        // starttls connection errors\n                        err.code = 'ETLS';\n                    }\n                    callback(err);\n                }, 1000);\n\n                try {\n                    timer.unref();\n                } catch (_E) {\n                    // Ignore. Happens on envs with non-node timer implementation\n                }\n            });\n\n            let sendMessage = () => {\n                let envelope = mail.message.getEnvelope();\n                let messageId = mail.message.messageId();\n\n                let recipients = [].concat(envelope.to || []);\n                if (recipients.length > 3) {\n                    recipients.push('...and ' + recipients.splice(2).length + ' more');\n                }\n\n                if (mail.data.dsn) {\n                    envelope.dsn = mail.data.dsn;\n                }\n\n                this.logger.info(\n                    {\n                        tnx: 'send',\n                        messageId\n                    },\n                    'Sending message %s to <%s>',\n                    messageId,\n                    recipients.join(', ')\n                );\n\n                connection.send(envelope, mail.message.createReadStream(), (err, info) => {\n                    returned = true;\n                    connection.close();\n                    if (err) {\n                        this.logger.error(\n                            {\n                                err,\n                                tnx: 'send'\n                            },\n                            'Send error for %s: %s',\n                            messageId,\n                            err.message\n                        );\n                        return callback(err);\n                    }\n                    info.envelope = {\n                        from: envelope.from,\n                        to: envelope.to\n                    };\n                    info.messageId = messageId;\n                    try {\n                        return callback(null, info);\n                    } catch (E) {\n                        this.logger.error(\n                            {\n                                err: E,\n                                tnx: 'callback'\n                            },\n                            'Callback error for %s: %s',\n                            messageId,\n                            E.message\n                        );\n                    }\n                });\n            };\n\n            connection.connect(() => {\n                if (returned) {\n                    return;\n                }\n\n                let auth = this.getAuth(mail.data.auth);\n\n                if (auth && (connection.allowsAuth || options.forceAuth)) {\n                    connection.login(auth, err => {\n                        if (auth && auth !== this.auth && auth.oauth2) {\n                            auth.oauth2.removeAllListeners();\n                        }\n                        if (returned) {\n                            return;\n                        }\n\n                        if (err) {\n                            returned = true;\n                            connection.close();\n                            return callback(err);\n                        }\n\n                        sendMessage();\n                    });\n                } else {\n                    sendMessage();\n                }\n            });\n        });\n    }\n\n    /**\n     * Verifies SMTP configuration\n     *\n     * @param {Function} callback Callback function\n     */\n    verify(callback) {\n        let promise;\n\n        if (!callback) {\n            promise = new Promise((resolve, reject) => {\n                callback = shared.callbackPromise(resolve, reject);\n            });\n        }\n\n        this.getSocket(this.options, (err, socketOptions) => {\n            if (err) {\n                return callback(err);\n            }\n\n            let options = this.options;\n            if (socketOptions && socketOptions.connection) {\n                this.logger.info(\n                    {\n                        tnx: 'proxy',\n                        remoteAddress: socketOptions.connection.remoteAddress,\n                        remotePort: socketOptions.connection.remotePort,\n                        destHost: options.host || '',\n                        destPort: options.port || '',\n                        action: 'connected'\n                    },\n                    'Using proxied socket from %s:%s to %s:%s',\n                    socketOptions.connection.remoteAddress,\n                    socketOptions.connection.remotePort,\n                    options.host || '',\n                    options.port || ''\n                );\n\n                options = shared.assign(false, options);\n                Object.keys(socketOptions).forEach(key => {\n                    options[key] = socketOptions[key];\n                });\n            }\n\n            let connection = new SMTPConnection(options);\n            let returned = false;\n\n            connection.once('error', err => {\n                if (returned) {\n                    return;\n                }\n                returned = true;\n                connection.close();\n                return callback(err);\n            });\n\n            connection.once('end', () => {\n                if (returned) {\n                    return;\n                }\n                returned = true;\n                return callback(new Error('Connection closed'));\n            });\n\n            let finalize = () => {\n                if (returned) {\n                    return;\n                }\n                returned = true;\n                connection.quit();\n                return callback(null, true);\n            };\n\n            connection.connect(() => {\n                if (returned) {\n                    return;\n                }\n\n                let authData = this.getAuth({});\n\n                if (authData && (connection.allowsAuth || options.forceAuth)) {\n                    connection.login(authData, err => {\n                        if (returned) {\n                            return;\n                        }\n\n                        if (err) {\n                            returned = true;\n                            connection.close();\n                            return callback(err);\n                        }\n\n                        finalize();\n                    });\n                } else if (!authData && connection.allowsAuth && options.forceAuth) {\n                    let err = new Error('Authentication info was not provided');\n                    err.code = 'NoAuth';\n\n                    returned = true;\n                    connection.close();\n                    return callback(err);\n                } else {\n                    finalize();\n                }\n            });\n        });\n\n        return promise;\n    }\n\n    /**\n     * Releases resources\n     */\n    close() {\n        if (this.auth && this.auth.oauth2) {\n            this.auth.oauth2.removeAllListeners();\n        }\n        this.emit('close');\n    }\n}\n\n// expose to the world\nmodule.exports = SMTPTransport;\n", "import { notImplemented, notImplementedClass } from \"../_internal/utils.mjs\";\nexport const ChildProcess = /* @__PURE__ */ notImplementedClass(\"child_process.ChildProcess\");\nexport const _forkChild = /* @__PURE__ */ notImplemented(\"child_process.ChildProcess\");\nexport const exec = /* @__PURE__ */ notImplemented(\"child_process.exec\");\nexport const execFile = /* @__PURE__ */ notImplemented(\"child_process.execFile\");\nexport const execFileSync = /* @__PURE__ */ notImplemented(\"child_process.execFileSync\");\nexport const execSync = /* @__PURE__ */ notImplemented(\"child_process.execSyn\");\nexport const fork = /* @__PURE__ */ notImplemented(\"child_process.fork\");\nexport const spawn = /* @__PURE__ */ notImplemented(\"child_process.spawn\");\nexport const spawnSync = /* @__PURE__ */ notImplemented(\"child_process.spawnSync\");\nexport default {\n\tChildProcess,\n\t_forkChild,\n\texec,\n\texecFile,\n\texecFileSync,\n\texecSync,\n\tfork,\n\tspawn,\n\tspawnSync\n};\n", "import libDefault from 'child_process';\nmodule.exports = libDefault;", "'use strict';\n\nconst spawn = require('child_process').spawn;\nconst packageData = require('../../package.json');\nconst shared = require('../shared');\n\n/**\n * Generates a Transport object for Sendmail\n *\n * Possible options can be the following:\n *\n *  * **path** optional path to sendmail binary\n *  * **newline** either 'windows' or 'unix'\n *  * **args** an array of arguments for the sendmail binary\n *\n * @constructor\n * @param {Object} optional config parameter for Sendmail\n */\nclass SendmailTransport {\n    constructor(options) {\n        options = options || {};\n\n        // use a reference to spawn for mocking purposes\n        this._spawn = spawn;\n\n        this.options = options || {};\n\n        this.name = 'Sendmail';\n        this.version = packageData.version;\n\n        this.path = 'sendmail';\n        this.args = false;\n        this.winbreak = false;\n\n        this.logger = shared.getLogger(this.options, {\n            component: this.options.component || 'sendmail'\n        });\n\n        if (options) {\n            if (typeof options === 'string') {\n                this.path = options;\n            } else if (typeof options === 'object') {\n                if (options.path) {\n                    this.path = options.path;\n                }\n                if (Array.isArray(options.args)) {\n                    this.args = options.args;\n                }\n                this.winbreak = ['win', 'windows', 'dos', '\\r\\n'].includes((options.newline || '').toString().toLowerCase());\n            }\n        }\n    }\n\n    /**\n     * <p>Compiles a mailcomposer message and forwards it to handler that sends it.</p>\n     *\n     * @param {Object} emailMessage MailComposer object\n     * @param {Function} callback Callback function to run when the sending is completed\n     */\n    send(mail, done) {\n        // Sendmail strips this header line by itself\n        mail.message.keepBcc = true;\n\n        let envelope = mail.data.envelope || mail.message.getEnvelope();\n        let messageId = mail.message.messageId();\n        let args;\n        let sendmail;\n        let returned;\n\n        const hasInvalidAddresses = []\n            .concat(envelope.from || [])\n            .concat(envelope.to || [])\n            .some(addr => /^-/.test(addr));\n        if (hasInvalidAddresses) {\n            return done(new Error('Can not send mail. Invalid envelope addresses.'));\n        }\n\n        if (this.args) {\n            // force -i to keep single dots\n            args = ['-i'].concat(this.args).concat(envelope.to);\n        } else {\n            args = ['-i'].concat(envelope.from ? ['-f', envelope.from] : []).concat(envelope.to);\n        }\n\n        let callback = err => {\n            if (returned) {\n                // ignore any additional responses, already done\n                return;\n            }\n            returned = true;\n            if (typeof done === 'function') {\n                if (err) {\n                    return done(err);\n                } else {\n                    return done(null, {\n                        envelope: mail.data.envelope || mail.message.getEnvelope(),\n                        messageId,\n                        response: 'Messages queued for delivery'\n                    });\n                }\n            }\n        };\n\n        try {\n            sendmail = this._spawn(this.path, args);\n        } catch (E) {\n            this.logger.error(\n                {\n                    err: E,\n                    tnx: 'spawn',\n                    messageId\n                },\n                'Error occurred while spawning sendmail. %s',\n                E.message\n            );\n            return callback(E);\n        }\n\n        if (sendmail) {\n            sendmail.on('error', err => {\n                this.logger.error(\n                    {\n                        err,\n                        tnx: 'spawn',\n                        messageId\n                    },\n                    'Error occurred when sending message %s. %s',\n                    messageId,\n                    err.message\n                );\n                callback(err);\n            });\n\n            sendmail.once('exit', code => {\n                if (!code) {\n                    return callback();\n                }\n                let err;\n                if (code === 127) {\n                    err = new Error('Sendmail command not found, process exited with code ' + code);\n                } else {\n                    err = new Error('Sendmail exited with code ' + code);\n                }\n\n                this.logger.error(\n                    {\n                        err,\n                        tnx: 'stdin',\n                        messageId\n                    },\n                    'Error sending message %s to sendmail. %s',\n                    messageId,\n                    err.message\n                );\n                callback(err);\n            });\n            sendmail.once('close', callback);\n\n            sendmail.stdin.on('error', err => {\n                this.logger.error(\n                    {\n                        err,\n                        tnx: 'stdin',\n                        messageId\n                    },\n                    'Error occurred when piping message %s to sendmail. %s',\n                    messageId,\n                    err.message\n                );\n                callback(err);\n            });\n\n            let recipients = [].concat(envelope.to || []);\n            if (recipients.length > 3) {\n                recipients.push('...and ' + recipients.splice(2).length + ' more');\n            }\n            this.logger.info(\n                {\n                    tnx: 'send',\n                    messageId\n                },\n                'Sending message %s to <%s>',\n                messageId,\n                recipients.join(', ')\n            );\n\n            let sourceStream = mail.message.createReadStream();\n            sourceStream.once('error', err => {\n                this.logger.error(\n                    {\n                        err,\n                        tnx: 'stdin',\n                        messageId\n                    },\n                    'Error occurred when generating message %s. %s',\n                    messageId,\n                    err.message\n                );\n                sendmail.kill('SIGINT'); // do not deliver the message\n                callback(err);\n            });\n\n            sourceStream.pipe(sendmail.stdin);\n        } else {\n            return callback(new Error('sendmail was not found'));\n        }\n    }\n}\n\nmodule.exports = SendmailTransport;\n", "'use strict';\n\nconst packageData = require('../../package.json');\nconst shared = require('../shared');\n\n/**\n * Generates a Transport object for streaming\n *\n * Possible options can be the following:\n *\n *  * **buffer** if true, then returns the message as a Buffer object instead of a stream\n *  * **newline** either 'windows' or 'unix'\n *\n * @constructor\n * @param {Object} optional config parameter\n */\nclass StreamTransport {\n    constructor(options) {\n        options = options || {};\n\n        this.options = options || {};\n\n        this.name = 'StreamTransport';\n        this.version = packageData.version;\n\n        this.logger = shared.getLogger(this.options, {\n            component: this.options.component || 'stream-transport'\n        });\n\n        this.winbreak = ['win', 'windows', 'dos', '\\r\\n'].includes((options.newline || '').toString().toLowerCase());\n    }\n\n    /**\n     * Compiles a mailcomposer message and forwards it to handler that sends it\n     *\n     * @param {Object} emailMessage MailComposer object\n     * @param {Function} callback Callback function to run when the sending is completed\n     */\n    send(mail, done) {\n        // We probably need this in the output\n        mail.message.keepBcc = true;\n\n        let envelope = mail.data.envelope || mail.message.getEnvelope();\n        let messageId = mail.message.messageId();\n\n        let recipients = [].concat(envelope.to || []);\n        if (recipients.length > 3) {\n            recipients.push('...and ' + recipients.splice(2).length + ' more');\n        }\n        this.logger.info(\n            {\n                tnx: 'send',\n                messageId\n            },\n            'Sending message %s to <%s> using %s line breaks',\n            messageId,\n            recipients.join(', '),\n            this.winbreak ? '<CR><LF>' : '<LF>'\n        );\n\n        setImmediate(() => {\n            let stream;\n\n            try {\n                stream = mail.message.createReadStream();\n            } catch (E) {\n                this.logger.error(\n                    {\n                        err: E,\n                        tnx: 'send',\n                        messageId\n                    },\n                    'Creating send stream failed for %s. %s',\n                    messageId,\n                    E.message\n                );\n                return done(E);\n            }\n\n            if (!this.options.buffer) {\n                stream.once('error', err => {\n                    this.logger.error(\n                        {\n                            err,\n                            tnx: 'send',\n                            messageId\n                        },\n                        'Failed creating message for %s. %s',\n                        messageId,\n                        err.message\n                    );\n                });\n                return done(null, {\n                    envelope: mail.data.envelope || mail.message.getEnvelope(),\n                    messageId,\n                    message: stream\n                });\n            }\n\n            let chunks = [];\n            let chunklen = 0;\n            stream.on('readable', () => {\n                let chunk;\n                while ((chunk = stream.read()) !== null) {\n                    chunks.push(chunk);\n                    chunklen += chunk.length;\n                }\n            });\n\n            stream.once('error', err => {\n                this.logger.error(\n                    {\n                        err,\n                        tnx: 'send',\n                        messageId\n                    },\n                    'Failed creating message for %s. %s',\n                    messageId,\n                    err.message\n                );\n                return done(err);\n            });\n\n            stream.on('end', () =>\n                done(null, {\n                    envelope: mail.data.envelope || mail.message.getEnvelope(),\n                    messageId,\n                    message: Buffer.concat(chunks, chunklen)\n                })\n            );\n        });\n    }\n}\n\nmodule.exports = StreamTransport;\n", "'use strict';\n\nconst packageData = require('../../package.json');\nconst shared = require('../shared');\n\n/**\n * Generates a Transport object to generate JSON output\n *\n * @constructor\n * @param {Object} optional config parameter\n */\nclass JSONTransport {\n    constructor(options) {\n        options = options || {};\n\n        this.options = options || {};\n\n        this.name = 'JSONTransport';\n        this.version = packageData.version;\n\n        this.logger = shared.getLogger(this.options, {\n            component: this.options.component || 'json-transport'\n        });\n    }\n\n    /**\n     * <p>Compiles a mailcomposer message and forwards it to handler that sends it.</p>\n     *\n     * @param {Object} emailMessage MailComposer object\n     * @param {Function} callback Callback function to run when the sending is completed\n     */\n    send(mail, done) {\n        // Sendmail strips this header line by itself\n        mail.message.keepBcc = true;\n\n        let envelope = mail.data.envelope || mail.message.getEnvelope();\n        let messageId = mail.message.messageId();\n\n        let recipients = [].concat(envelope.to || []);\n        if (recipients.length > 3) {\n            recipients.push('...and ' + recipients.splice(2).length + ' more');\n        }\n        this.logger.info(\n            {\n                tnx: 'send',\n                messageId\n            },\n            'Composing JSON structure of %s to <%s>',\n            messageId,\n            recipients.join(', ')\n        );\n\n        setImmediate(() => {\n            mail.normalize((err, data) => {\n                if (err) {\n                    this.logger.error(\n                        {\n                            err,\n                            tnx: 'send',\n                            messageId\n                        },\n                        'Failed building JSON structure for %s. %s',\n                        messageId,\n                        err.message\n                    );\n                    return done(err);\n                }\n\n                delete data.envelope;\n                delete data.normalizedHeaders;\n\n                return done(null, {\n                    envelope,\n                    messageId,\n                    message: this.options.skipEncoding ? data : JSON.stringify(data)\n                });\n            });\n        });\n    }\n}\n\nmodule.exports = JSONTransport;\n", "'use strict';\n\nconst EventEmitter = require('events');\nconst packageData = require('../../package.json');\nconst shared = require('../shared');\nconst LeWindows = require('../mime-node/le-windows');\nconst MimeNode = require('../mime-node');\n\n/**\n * Generates a Transport object for AWS SES\n *\n * @constructor\n * @param {Object} optional config parameter\n */\nclass SESTransport extends EventEmitter {\n    constructor(options) {\n        super();\n        options = options || {};\n\n        this.options = options || {};\n        this.ses = this.options.SES;\n\n        this.name = 'SESTransport';\n        this.version = packageData.version;\n\n        this.logger = shared.getLogger(this.options, {\n            component: this.options.component || 'ses-transport'\n        });\n    }\n\n    getRegion(cb) {\n        if (this.ses.sesClient.config && typeof this.ses.sesClient.config.region === 'function') {\n            // promise\n            return this.ses.sesClient.config\n                .region()\n                .then(region => cb(null, region))\n                .catch(err => cb(err));\n        }\n        return cb(null, false);\n    }\n\n    /**\n     * Compiles a mailcomposer message and forwards it to SES\n     *\n     * @param {Object} emailMessage MailComposer object\n     * @param {Function} callback Callback function to run when the sending is completed\n     */\n    send(mail, callback) {\n        let statObject = {\n            ts: Date.now(),\n            pending: true\n        };\n\n        let fromHeader = mail.message._headers.find(header => /^from$/i.test(header.key));\n        if (fromHeader) {\n            let mimeNode = new MimeNode('text/plain');\n            fromHeader = mimeNode._convertAddresses(mimeNode._parseAddresses(fromHeader.value));\n        }\n\n        let envelope = mail.data.envelope || mail.message.getEnvelope();\n        let messageId = mail.message.messageId();\n\n        let recipients = [].concat(envelope.to || []);\n        if (recipients.length > 3) {\n            recipients.push('...and ' + recipients.splice(2).length + ' more');\n        }\n        this.logger.info(\n            {\n                tnx: 'send',\n                messageId\n            },\n            'Sending message %s to <%s>',\n            messageId,\n            recipients.join(', ')\n        );\n\n        let getRawMessage = next => {\n            // do not use Message-ID and Date in DKIM signature\n            if (!mail.data._dkim) {\n                mail.data._dkim = {};\n            }\n            if (mail.data._dkim.skipFields && typeof mail.data._dkim.skipFields === 'string') {\n                mail.data._dkim.skipFields += ':date:message-id';\n            } else {\n                mail.data._dkim.skipFields = 'date:message-id';\n            }\n\n            let sourceStream = mail.message.createReadStream();\n            let stream = sourceStream.pipe(new LeWindows());\n            let chunks = [];\n            let chunklen = 0;\n\n            stream.on('readable', () => {\n                let chunk;\n                while ((chunk = stream.read()) !== null) {\n                    chunks.push(chunk);\n                    chunklen += chunk.length;\n                }\n            });\n\n            sourceStream.once('error', err => stream.emit('error', err));\n\n            stream.once('error', err => {\n                next(err);\n            });\n\n            stream.once('end', () => next(null, Buffer.concat(chunks, chunklen)));\n        };\n\n        setImmediate(() =>\n            getRawMessage((err, raw) => {\n                if (err) {\n                    this.logger.error(\n                        {\n                            err,\n                            tnx: 'send',\n                            messageId\n                        },\n                        'Failed creating message for %s. %s',\n                        messageId,\n                        err.message\n                    );\n                    statObject.pending = false;\n                    return callback(err);\n                }\n\n                let sesMessage = {\n                    Content: {\n                        Raw: {\n                            // required\n                            Data: raw // required\n                        }\n                    },\n                    FromEmailAddress: fromHeader ? fromHeader : envelope.from,\n                    Destination: {\n                        ToAddresses: envelope.to\n                    }\n                };\n\n                Object.keys(mail.data.ses || {}).forEach(key => {\n                    sesMessage[key] = mail.data.ses[key];\n                });\n\n                this.getRegion((err, region) => {\n                    if (err || !region) {\n                        region = 'us-east-1';\n                    }\n\n                    const command = new this.ses.SendEmailCommand(sesMessage);\n                    const sendPromise = this.ses.sesClient.send(command);\n\n                    sendPromise\n                        .then(data => {\n                            if (region === 'us-east-1') {\n                                region = 'email';\n                            }\n\n                            statObject.pending = true;\n                            callback(null, {\n                                envelope: {\n                                    from: envelope.from,\n                                    to: envelope.to\n                                },\n                                messageId: '<' + data.MessageId + (!/@/.test(data.MessageId) ? '@' + region + '.amazonses.com' : '') + '>',\n                                response: data.MessageId,\n                                raw\n                            });\n                        })\n                        .catch(err => {\n                            this.logger.error(\n                                {\n                                    err,\n                                    tnx: 'send'\n                                },\n                                'Send error for %s: %s',\n                                messageId,\n                                err.message\n                            );\n                            statObject.pending = false;\n                            callback(err);\n                        });\n                });\n            })\n        );\n    }\n\n    /**\n     * Verifies SES configuration\n     *\n     * @param {Function} callback Callback function\n     */\n    verify(callback) {\n        let promise;\n        if (!callback) {\n            promise = new Promise((resolve, reject) => {\n                callback = shared.callbackPromise(resolve, reject);\n            });\n        }\n\n        const cb = err => {\n            if (err && !['InvalidParameterValue', 'MessageRejected'].includes(err.code || err.Code || err.name)) {\n                return callback(err);\n            }\n            return callback(null, true);\n        };\n\n        const sesMessage = {\n            Content: {\n                Raw: {\n                    Data: Buffer.from('From: <invalid@invalid>\\r\\nTo: <invalid@invalid>\\r\\n Subject: Invalid\\r\\n\\r\\nInvalid')\n                }\n            },\n            FromEmailAddress: 'invalid@invalid',\n            Destination: {\n                ToAddresses: ['invalid@invalid']\n            }\n        };\n\n        this.getRegion((err, region) => {\n            if (err || !region) {\n                region = 'us-east-1';\n            }\n\n            const command = new this.ses.SendEmailCommand(sesMessage);\n            const sendPromise = this.ses.sesClient.send(command);\n\n            sendPromise.then(data => cb(null, data)).catch(err => cb(err));\n        });\n\n        return promise;\n    }\n}\n\nmodule.exports = SESTransport;\n", "'use strict';\n\nconst Mailer = require('./mailer');\nconst shared = require('./shared');\nconst SMTPPool = require('./smtp-pool');\nconst SMTPTransport = require('./smtp-transport');\nconst SendmailTransport = require('./sendmail-transport');\nconst StreamTransport = require('./stream-transport');\nconst JSONTransport = require('./json-transport');\nconst SESTransport = require('./ses-transport');\nconst nmfetch = require('./fetch');\nconst packageData = require('../package.json');\n\nconst ETHEREAL_API = (process.env.ETHEREAL_API || 'https://api.nodemailer.com').replace(/\\/+$/, '');\nconst ETHEREAL_WEB = (process.env.ETHEREAL_WEB || 'https://ethereal.email').replace(/\\/+$/, '');\nconst ETHEREAL_API_KEY = (process.env.ETHEREAL_API_KEY || '').replace(/\\s*/g, '') || null;\nconst ETHEREAL_CACHE = ['true', 'yes', 'y', '1'].includes((process.env.ETHEREAL_CACHE || 'yes').toString().trim().toLowerCase());\n\nlet testAccount = false;\n\nmodule.exports.createTransport = function (transporter, defaults) {\n    let urlConfig;\n    let options;\n    let mailer;\n\n    if (\n        // provided transporter is a configuration object, not transporter plugin\n        (typeof transporter === 'object' && typeof transporter.send !== 'function') ||\n        // provided transporter looks like a connection url\n        (typeof transporter === 'string' && /^(smtps?|direct):/i.test(transporter))\n    ) {\n        if ((urlConfig = typeof transporter === 'string' ? transporter : transporter.url)) {\n            // parse a configuration URL into configuration options\n            options = shared.parseConnectionUrl(urlConfig);\n        } else {\n            options = transporter;\n        }\n\n        if (options.pool) {\n            transporter = new SMTPPool(options);\n        } else if (options.sendmail) {\n            transporter = new SendmailTransport(options);\n        } else if (options.streamTransport) {\n            transporter = new StreamTransport(options);\n        } else if (options.jsonTransport) {\n            transporter = new JSONTransport(options);\n        } else if (options.SES) {\n            if (options.SES.ses && options.SES.aws) {\n                let error = new Error(\n                    'Using legacy SES configuration, expecting @aws-sdk/client-sesv2, see https://nodemailer.com/transports/ses/'\n                );\n                error.code = 'LegacyConfig';\n                throw error;\n            }\n            transporter = new SESTransport(options);\n        } else {\n            transporter = new SMTPTransport(options);\n        }\n    }\n\n    mailer = new Mailer(transporter, options, defaults);\n\n    return mailer;\n};\n\nmodule.exports.createTestAccount = function (apiUrl, callback) {\n    let promise;\n\n    if (!callback && typeof apiUrl === 'function') {\n        callback = apiUrl;\n        apiUrl = false;\n    }\n\n    if (!callback) {\n        promise = new Promise((resolve, reject) => {\n            callback = shared.callbackPromise(resolve, reject);\n        });\n    }\n\n    if (ETHEREAL_CACHE && testAccount) {\n        setImmediate(() => callback(null, testAccount));\n        return promise;\n    }\n\n    apiUrl = apiUrl || ETHEREAL_API;\n\n    let chunks = [];\n    let chunklen = 0;\n\n    let requestHeaders = {};\n    let requestBody = {\n        requestor: packageData.name,\n        version: packageData.version\n    };\n\n    if (ETHEREAL_API_KEY) {\n        requestHeaders.Authorization = 'Bearer ' + ETHEREAL_API_KEY;\n    }\n\n    let req = nmfetch(apiUrl + '/user', {\n        contentType: 'application/json',\n        method: 'POST',\n        headers: requestHeaders,\n        body: Buffer.from(JSON.stringify(requestBody))\n    });\n\n    req.on('readable', () => {\n        let chunk;\n        while ((chunk = req.read()) !== null) {\n            chunks.push(chunk);\n            chunklen += chunk.length;\n        }\n    });\n\n    req.once('error', err => callback(err));\n\n    req.once('end', () => {\n        let res = Buffer.concat(chunks, chunklen);\n        let data;\n        let err;\n        try {\n            data = JSON.parse(res.toString());\n        } catch (E) {\n            err = E;\n        }\n        if (err) {\n            return callback(err);\n        }\n        if (data.status !== 'success' || data.error) {\n            return callback(new Error(data.error || 'Request failed'));\n        }\n        delete data.status;\n        testAccount = data;\n        callback(null, testAccount);\n    });\n\n    return promise;\n};\n\nmodule.exports.getTestMessageUrl = function (info) {\n    if (!info || !info.response) {\n        return false;\n    }\n\n    let infoProps = new Map();\n    info.response.replace(/\\[([^\\]]+)\\]$/, (m, props) => {\n        props.replace(/\\b([A-Z0-9]+)=([^\\s]+)/g, (m, key, value) => {\n            infoProps.set(key, value);\n        });\n    });\n\n    if (infoProps.has('STATUS') && infoProps.has('MSGID')) {\n        return (testAccount.web || ETHEREAL_WEB) + '/message/' + infoProps.get('MSGID');\n    }\n\n    return false;\n};\n", "exports.remove = removeDiacritics;\n\nvar replacementList = [\n  {\n    base: ' ',\n    chars: \"\\u00A0\",\n  }, {\n    base: '0',\n    chars: \"\\u07C0\",\n  }, {\n    base: 'A',\n    chars: \"\\u24B6\\uFF21\\u00C0\\u00C1\\u00C2\\u1EA6\\u1EA4\\u1EAA\\u1EA8\\u00C3\\u0100\\u0102\\u1EB0\\u1EAE\\u1EB4\\u1EB2\\u0226\\u01E0\\u00C4\\u01DE\\u1EA2\\u00C5\\u01FA\\u01CD\\u0200\\u0202\\u1EA0\\u1EAC\\u1EB6\\u1E00\\u0104\\u023A\\u2C6F\",\n  }, {\n    base: 'AA',\n    chars: \"\\uA732\",\n  }, {\n    base: 'AE',\n    chars: \"\\u00C6\\u01FC\\u01E2\",\n  }, {\n    base: 'AO',\n    chars: \"\\uA734\",\n  }, {\n    base: 'AU',\n    chars: \"\\uA736\",\n  }, {\n    base: 'AV',\n    chars: \"\\uA738\\uA73A\",\n  }, {\n    base: 'AY',\n    chars: \"\\uA73C\",\n  }, {\n    base: 'B',\n    chars: \"\\u24B7\\uFF22\\u1E02\\u1E04\\u1E06\\u0243\\u0181\",\n  }, {\n    base: 'C',\n    chars: \"\\u24b8\\uff23\\uA73E\\u1E08\\u0106\\u0043\\u0108\\u010A\\u010C\\u00C7\\u0187\\u023B\",\n  }, {\n    base: 'D',\n    chars: \"\\u24B9\\uFF24\\u1E0A\\u010E\\u1E0C\\u1E10\\u1E12\\u1E0E\\u0110\\u018A\\u0189\\u1D05\\uA779\",\n  }, {\n    base: 'Dh',\n    chars: \"\\u00D0\",\n  }, {\n    base: 'DZ',\n    chars: \"\\u01F1\\u01C4\",\n  }, {\n    base: 'Dz',\n    chars: \"\\u01F2\\u01C5\",\n  }, {\n    base: 'E',\n    chars: \"\\u025B\\u24BA\\uFF25\\u00C8\\u00C9\\u00CA\\u1EC0\\u1EBE\\u1EC4\\u1EC2\\u1EBC\\u0112\\u1E14\\u1E16\\u0114\\u0116\\u00CB\\u1EBA\\u011A\\u0204\\u0206\\u1EB8\\u1EC6\\u0228\\u1E1C\\u0118\\u1E18\\u1E1A\\u0190\\u018E\\u1D07\",\n  }, {\n    base: 'F',\n    chars: \"\\uA77C\\u24BB\\uFF26\\u1E1E\\u0191\\uA77B\",\n  }, {\n    base: 'G',\n    chars: \"\\u24BC\\uFF27\\u01F4\\u011C\\u1E20\\u011E\\u0120\\u01E6\\u0122\\u01E4\\u0193\\uA7A0\\uA77D\\uA77E\\u0262\",\n  }, {\n    base: 'H',\n    chars: \"\\u24BD\\uFF28\\u0124\\u1E22\\u1E26\\u021E\\u1E24\\u1E28\\u1E2A\\u0126\\u2C67\\u2C75\\uA78D\",\n  }, {\n    base: 'I',\n    chars: \"\\u24BE\\uFF29\\xCC\\xCD\\xCE\\u0128\\u012A\\u012C\\u0130\\xCF\\u1E2E\\u1EC8\\u01CF\\u0208\\u020A\\u1ECA\\u012E\\u1E2C\\u0197\",\n  }, {\n    base: 'J',\n    chars: \"\\u24BF\\uFF2A\\u0134\\u0248\\u0237\",\n  }, {\n    base: 'K',\n    chars: \"\\u24C0\\uFF2B\\u1E30\\u01E8\\u1E32\\u0136\\u1E34\\u0198\\u2C69\\uA740\\uA742\\uA744\\uA7A2\",\n  }, {\n    base: 'L',\n    chars: \"\\u24C1\\uFF2C\\u013F\\u0139\\u013D\\u1E36\\u1E38\\u013B\\u1E3C\\u1E3A\\u0141\\u023D\\u2C62\\u2C60\\uA748\\uA746\\uA780\",\n  }, {\n    base: 'LJ',\n    chars: \"\\u01C7\",\n  }, {\n    base: 'Lj',\n    chars: \"\\u01C8\",\n  }, {\n    base: 'M',\n    chars: \"\\u24C2\\uFF2D\\u1E3E\\u1E40\\u1E42\\u2C6E\\u019C\\u03FB\",\n  }, {\n    base: 'N',\n    chars: \"\\uA7A4\\u0220\\u24C3\\uFF2E\\u01F8\\u0143\\xD1\\u1E44\\u0147\\u1E46\\u0145\\u1E4A\\u1E48\\u019D\\uA790\\u1D0E\",\n  }, {\n    base: 'NJ',\n    chars: \"\\u01CA\",\n  }, {\n    base: 'Nj',\n    chars: \"\\u01CB\",\n  }, {\n    base: 'O',\n    chars: \"\\u24C4\\uFF2F\\xD2\\xD3\\xD4\\u1ED2\\u1ED0\\u1ED6\\u1ED4\\xD5\\u1E4C\\u022C\\u1E4E\\u014C\\u1E50\\u1E52\\u014E\\u022E\\u0230\\xD6\\u022A\\u1ECE\\u0150\\u01D1\\u020C\\u020E\\u01A0\\u1EDC\\u1EDA\\u1EE0\\u1EDE\\u1EE2\\u1ECC\\u1ED8\\u01EA\\u01EC\\xD8\\u01FE\\u0186\\u019F\\uA74A\\uA74C\",\n  }, {\n    base: 'OE',\n    chars: \"\\u0152\",\n  }, {\n    base: 'OI',\n    chars: \"\\u01A2\",\n  }, {\n    base: 'OO',\n    chars: \"\\uA74E\",\n  }, {\n    base: 'OU',\n    chars: \"\\u0222\",\n  }, {\n    base: 'P',\n    chars: \"\\u24C5\\uFF30\\u1E54\\u1E56\\u01A4\\u2C63\\uA750\\uA752\\uA754\",\n  }, {\n    base: 'Q',\n    chars: \"\\u24C6\\uFF31\\uA756\\uA758\\u024A\",\n  }, {\n    base: 'R',\n    chars: \"\\u24C7\\uFF32\\u0154\\u1E58\\u0158\\u0210\\u0212\\u1E5A\\u1E5C\\u0156\\u1E5E\\u024C\\u2C64\\uA75A\\uA7A6\\uA782\",\n  }, {\n    base: 'S',\n    chars: \"\\u24C8\\uFF33\\u1E9E\\u015A\\u1E64\\u015C\\u1E60\\u0160\\u1E66\\u1E62\\u1E68\\u0218\\u015E\\u2C7E\\uA7A8\\uA784\",\n  }, {\n    base: 'T',\n    chars: \"\\u24C9\\uFF34\\u1E6A\\u0164\\u1E6C\\u021A\\u0162\\u1E70\\u1E6E\\u0166\\u01AC\\u01AE\\u023E\\uA786\",\n  }, {\n    base: 'Th',\n    chars: \"\\u00DE\",\n  }, {\n    base: 'TZ',\n    chars: \"\\uA728\",\n  }, {\n    base: 'U',\n    chars: \"\\u24CA\\uFF35\\xD9\\xDA\\xDB\\u0168\\u1E78\\u016A\\u1E7A\\u016C\\xDC\\u01DB\\u01D7\\u01D5\\u01D9\\u1EE6\\u016E\\u0170\\u01D3\\u0214\\u0216\\u01AF\\u1EEA\\u1EE8\\u1EEE\\u1EEC\\u1EF0\\u1EE4\\u1E72\\u0172\\u1E76\\u1E74\\u0244\",\n  }, {\n    base: 'V',\n    chars: \"\\u24CB\\uFF36\\u1E7C\\u1E7E\\u01B2\\uA75E\\u0245\",\n  }, {\n    base: 'VY',\n    chars: \"\\uA760\",\n  }, {\n    base: 'W',\n    chars: \"\\u24CC\\uFF37\\u1E80\\u1E82\\u0174\\u1E86\\u1E84\\u1E88\\u2C72\",\n  }, {\n    base: 'X',\n    chars: \"\\u24CD\\uFF38\\u1E8A\\u1E8C\",\n  }, {\n    base: 'Y',\n    chars: \"\\u24CE\\uFF39\\u1EF2\\xDD\\u0176\\u1EF8\\u0232\\u1E8E\\u0178\\u1EF6\\u1EF4\\u01B3\\u024E\\u1EFE\",\n  }, {\n    base: 'Z',\n    chars: \"\\u24CF\\uFF3A\\u0179\\u1E90\\u017B\\u017D\\u1E92\\u1E94\\u01B5\\u0224\\u2C7F\\u2C6B\\uA762\",\n  }, {\n    base: 'a',\n    chars: \"\\u24D0\\uFF41\\u1E9A\\u00E0\\u00E1\\u00E2\\u1EA7\\u1EA5\\u1EAB\\u1EA9\\u00E3\\u0101\\u0103\\u1EB1\\u1EAF\\u1EB5\\u1EB3\\u0227\\u01E1\\u00E4\\u01DF\\u1EA3\\u00E5\\u01FB\\u01CE\\u0201\\u0203\\u1EA1\\u1EAD\\u1EB7\\u1E01\\u0105\\u2C65\\u0250\\u0251\",\n  }, {\n    base: 'aa',\n    chars: \"\\uA733\",\n  }, {\n    base: 'ae',\n    chars: \"\\u00E6\\u01FD\\u01E3\",\n  }, {\n    base: 'ao',\n    chars: \"\\uA735\",\n  }, {\n    base: 'au',\n    chars: \"\\uA737\",\n  }, {\n    base: 'av',\n    chars: \"\\uA739\\uA73B\",\n  }, {\n    base: 'ay',\n    chars: \"\\uA73D\",\n  }, {\n    base: 'b',\n    chars: \"\\u24D1\\uFF42\\u1E03\\u1E05\\u1E07\\u0180\\u0183\\u0253\\u0182\",\n  }, {\n    base: 'c',\n    chars: \"\\uFF43\\u24D2\\u0107\\u0109\\u010B\\u010D\\u00E7\\u1E09\\u0188\\u023C\\uA73F\\u2184\",\n  }, {\n    base: 'd',\n    chars: \"\\u24D3\\uFF44\\u1E0B\\u010F\\u1E0D\\u1E11\\u1E13\\u1E0F\\u0111\\u018C\\u0256\\u0257\\u018B\\u13E7\\u0501\\uA7AA\",\n  }, {\n    base: 'dh',\n    chars: \"\\u00F0\",\n  }, {\n    base: 'dz',\n    chars: \"\\u01F3\\u01C6\",\n  }, {\n    base: 'e',\n    chars: \"\\u24D4\\uFF45\\u00E8\\u00E9\\u00EA\\u1EC1\\u1EBF\\u1EC5\\u1EC3\\u1EBD\\u0113\\u1E15\\u1E17\\u0115\\u0117\\u00EB\\u1EBB\\u011B\\u0205\\u0207\\u1EB9\\u1EC7\\u0229\\u1E1D\\u0119\\u1E19\\u1E1B\\u0247\\u01DD\",\n  }, {\n    base: 'f',\n    chars: \"\\u24D5\\uFF46\\u1E1F\\u0192\",\n  }, {\n    base: 'ff',\n    chars: \"\\uFB00\",\n  }, {\n    base: 'fi',\n    chars: \"\\uFB01\",\n  }, {\n    base: 'fl',\n    chars: \"\\uFB02\",\n  }, {\n    base: 'ffi',\n    chars: \"\\uFB03\",\n  }, {\n    base: 'ffl',\n    chars: \"\\uFB04\",\n  }, {\n    base: 'g',\n    chars: \"\\u24D6\\uFF47\\u01F5\\u011D\\u1E21\\u011F\\u0121\\u01E7\\u0123\\u01E5\\u0260\\uA7A1\\uA77F\\u1D79\",\n  }, {\n    base: 'h',\n    chars: \"\\u24D7\\uFF48\\u0125\\u1E23\\u1E27\\u021F\\u1E25\\u1E29\\u1E2B\\u1E96\\u0127\\u2C68\\u2C76\\u0265\",\n  }, {\n    base: 'hv',\n    chars: \"\\u0195\",\n  }, {\n    base: 'i',\n    chars: \"\\u24D8\\uFF49\\xEC\\xED\\xEE\\u0129\\u012B\\u012D\\xEF\\u1E2F\\u1EC9\\u01D0\\u0209\\u020B\\u1ECB\\u012F\\u1E2D\\u0268\\u0131\",\n  }, {\n    base: 'j',\n    chars: \"\\u24D9\\uFF4A\\u0135\\u01F0\\u0249\",\n  }, {\n    base: 'k',\n    chars: \"\\u24DA\\uFF4B\\u1E31\\u01E9\\u1E33\\u0137\\u1E35\\u0199\\u2C6A\\uA741\\uA743\\uA745\\uA7A3\",\n  }, {\n    base: 'l',\n    chars: \"\\u24DB\\uFF4C\\u0140\\u013A\\u013E\\u1E37\\u1E39\\u013C\\u1E3D\\u1E3B\\u017F\\u0142\\u019A\\u026B\\u2C61\\uA749\\uA781\\uA747\\u026D\",\n  }, {\n    base: 'lj',\n    chars: \"\\u01C9\",\n  }, {\n    base: 'm',\n    chars: \"\\u24DC\\uFF4D\\u1E3F\\u1E41\\u1E43\\u0271\\u026F\",\n  }, {\n    base: 'n',\n    chars: \"\\u24DD\\uFF4E\\u01F9\\u0144\\xF1\\u1E45\\u0148\\u1E47\\u0146\\u1E4B\\u1E49\\u019E\\u0272\\u0149\\uA791\\uA7A5\\u043B\\u0509\",\n  }, {\n    base: 'nj',\n    chars: \"\\u01CC\",\n  }, {\n    base: 'o',\n    chars: \"\\u24DE\\uFF4F\\xF2\\xF3\\xF4\\u1ED3\\u1ED1\\u1ED7\\u1ED5\\xF5\\u1E4D\\u022D\\u1E4F\\u014D\\u1E51\\u1E53\\u014F\\u022F\\u0231\\xF6\\u022B\\u1ECF\\u0151\\u01D2\\u020D\\u020F\\u01A1\\u1EDD\\u1EDB\\u1EE1\\u1EDF\\u1EE3\\u1ECD\\u1ED9\\u01EB\\u01ED\\xF8\\u01FF\\uA74B\\uA74D\\u0275\\u0254\\u1D11\",\n  }, {\n    base: 'oe',\n    chars: \"\\u0153\",\n  }, {\n    base: 'oi',\n    chars: \"\\u01A3\",\n  }, {\n    base: 'oo',\n    chars: \"\\uA74F\",\n  }, {\n    base: 'ou',\n    chars: \"\\u0223\",\n  }, {\n    base: 'p',\n    chars: \"\\u24DF\\uFF50\\u1E55\\u1E57\\u01A5\\u1D7D\\uA751\\uA753\\uA755\\u03C1\",\n  }, {\n    base: 'q',\n    chars: \"\\u24E0\\uFF51\\u024B\\uA757\\uA759\",\n  }, {\n    base: 'r',\n    chars: \"\\u24E1\\uFF52\\u0155\\u1E59\\u0159\\u0211\\u0213\\u1E5B\\u1E5D\\u0157\\u1E5F\\u024D\\u027D\\uA75B\\uA7A7\\uA783\",\n  }, {\n    base: 's',\n    chars: \"\\u24E2\\uFF53\\u015B\\u1E65\\u015D\\u1E61\\u0161\\u1E67\\u1E63\\u1E69\\u0219\\u015F\\u023F\\uA7A9\\uA785\\u1E9B\\u0282\",\n  }, {\n    base: 'ss',\n    chars: \"\\xDF\",\n  }, {\n    base: 't',\n    chars: \"\\u24E3\\uFF54\\u1E6B\\u1E97\\u0165\\u1E6D\\u021B\\u0163\\u1E71\\u1E6F\\u0167\\u01AD\\u0288\\u2C66\\uA787\",\n  }, {\n    base: 'th',\n    chars: \"\\u00FE\",\n  }, {\n    base: 'tz',\n    chars: \"\\uA729\",\n  }, {\n    base: 'u',\n    chars: \"\\u24E4\\uFF55\\xF9\\xFA\\xFB\\u0169\\u1E79\\u016B\\u1E7B\\u016D\\xFC\\u01DC\\u01D8\\u01D6\\u01DA\\u1EE7\\u016F\\u0171\\u01D4\\u0215\\u0217\\u01B0\\u1EEB\\u1EE9\\u1EEF\\u1EED\\u1EF1\\u1EE5\\u1E73\\u0173\\u1E77\\u1E75\\u0289\",\n  }, {\n    base: 'v',\n    chars: \"\\u24E5\\uFF56\\u1E7D\\u1E7F\\u028B\\uA75F\\u028C\",\n  }, {\n    base: 'vy',\n    chars: \"\\uA761\",\n  }, {\n    base: 'w',\n    chars: \"\\u24E6\\uFF57\\u1E81\\u1E83\\u0175\\u1E87\\u1E85\\u1E98\\u1E89\\u2C73\",\n  }, {\n    base: 'x',\n    chars: \"\\u24E7\\uFF58\\u1E8B\\u1E8D\",\n  }, {\n    base: 'y',\n    chars: \"\\u24E8\\uFF59\\u1EF3\\xFD\\u0177\\u1EF9\\u0233\\u1E8F\\xFF\\u1EF7\\u1E99\\u1EF5\\u01B4\\u024F\\u1EFF\",\n  }, {\n    base: 'z',\n    chars: \"\\u24E9\\uFF5A\\u017A\\u1E91\\u017C\\u017E\\u1E93\\u1E95\\u01B6\\u0225\\u0240\\u2C6C\\uA763\",\n  }\n];\n\nvar diacriticsMap = {};\nfor (var i = 0; i < replacementList.length; i += 1) {\n  var chars = replacementList[i].chars;\n  for (var j = 0; j < chars.length; j += 1) {\n    diacriticsMap[chars[j]] = replacementList[i].base;\n  }\n}\n\nfunction removeDiacritics(str) {\n  return str.replace(/[^\\u0000-\\u007e]/g, function(c) {\n    return diacriticsMap[c] || c;\n  });\n}\n\nexports.replacementList = replacementList;\nexports.diacriticsMap = diacriticsMap;\n", "{\n  \"name\": \"dotenv\",\n  \"version\": \"16.6.1\",\n  \"description\": \"Loads environment variables from .env file\",\n  \"main\": \"lib/main.js\",\n  \"types\": \"lib/main.d.ts\",\n  \"exports\": {\n    \".\": {\n      \"types\": \"./lib/main.d.ts\",\n      \"require\": \"./lib/main.js\",\n      \"default\": \"./lib/main.js\"\n    },\n    \"./config\": \"./config.js\",\n    \"./config.js\": \"./config.js\",\n    \"./lib/env-options\": \"./lib/env-options.js\",\n    \"./lib/env-options.js\": \"./lib/env-options.js\",\n    \"./lib/cli-options\": \"./lib/cli-options.js\",\n    \"./lib/cli-options.js\": \"./lib/cli-options.js\",\n    \"./package.json\": \"./package.json\"\n  },\n  \"scripts\": {\n    \"dts-check\": \"tsc --project tests/types/tsconfig.json\",\n    \"lint\": \"standard\",\n    \"pretest\": \"npm run lint && npm run dts-check\",\n    \"test\": \"tap run --allow-empty-coverage --disable-coverage --timeout=60000\",\n    \"test:coverage\": \"tap run --show-full-coverage --timeout=60000 --coverage-report=text --coverage-report=lcov\",\n    \"prerelease\": \"npm test\",\n    \"release\": \"standard-version\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git://github.com/motdotla/dotenv.git\"\n  },\n  \"homepage\": \"https://github.com/motdotla/dotenv#readme\",\n  \"funding\": \"https://dotenvx.com\",\n  \"keywords\": [\n    \"dotenv\",\n    \"env\",\n    \".env\",\n    \"environment\",\n    \"variables\",\n    \"config\",\n    \"settings\"\n  ],\n  \"readmeFilename\": \"README.md\",\n  \"license\": \"BSD-2-Clause\",\n  \"devDependencies\": {\n    \"@types/node\": \"^18.11.3\",\n    \"decache\": \"^4.6.2\",\n    \"sinon\": \"^14.0.1\",\n    \"standard\": \"^17.0.0\",\n    \"standard-version\": \"^9.5.0\",\n    \"tap\": \"^19.2.0\",\n    \"typescript\": \"^4.8.4\"\n  },\n  \"engines\": {\n    \"node\": \">=12\"\n  },\n  \"browser\": {\n    \"fs\": false\n  }\n}\n", "const fs = require('fs')\nconst path = require('path')\nconst os = require('os')\nconst crypto = require('crypto')\nconst packageJson = require('../package.json')\n\nconst version = packageJson.version\n\nconst LINE = /(?:^|^)\\s*(?:export\\s+)?([\\w.-]+)(?:\\s*=\\s*?|:\\s+?)(\\s*'(?:\\\\'|[^'])*'|\\s*\"(?:\\\\\"|[^\"])*\"|\\s*`(?:\\\\`|[^`])*`|[^#\\r\\n]+)?\\s*(?:#.*)?(?:$|$)/mg\n\n// Parse src into an Object\nfunction parse (src) {\n  const obj = {}\n\n  // Convert buffer to string\n  let lines = src.toString()\n\n  // Convert line breaks to same format\n  lines = lines.replace(/\\r\\n?/mg, '\\n')\n\n  let match\n  while ((match = LINE.exec(lines)) != null) {\n    const key = match[1]\n\n    // Default undefined or null to empty string\n    let value = (match[2] || '')\n\n    // Remove whitespace\n    value = value.trim()\n\n    // Check if double quoted\n    const maybeQuote = value[0]\n\n    // Remove surrounding quotes\n    value = value.replace(/^(['\"`])([\\s\\S]*)\\1$/mg, '$2')\n\n    // Expand newlines if double quoted\n    if (maybeQuote === '\"') {\n      value = value.replace(/\\\\n/g, '\\n')\n      value = value.replace(/\\\\r/g, '\\r')\n    }\n\n    // Add to object\n    obj[key] = value\n  }\n\n  return obj\n}\n\nfunction _parseVault (options) {\n  options = options || {}\n\n  const vaultPath = _vaultPath(options)\n  options.path = vaultPath // parse .env.vault\n  const result = DotenvModule.configDotenv(options)\n  if (!result.parsed) {\n    const err = new Error(`MISSING_DATA: Cannot parse ${vaultPath} for an unknown reason`)\n    err.code = 'MISSING_DATA'\n    throw err\n  }\n\n  // handle scenario for comma separated keys - for use with key rotation\n  // example: DOTENV_KEY=\"dotenv://:key_1234@dotenvx.com/vault/.env.vault?environment=prod,dotenv://:key_7890@dotenvx.com/vault/.env.vault?environment=prod\"\n  const keys = _dotenvKey(options).split(',')\n  const length = keys.length\n\n  let decrypted\n  for (let i = 0; i < length; i++) {\n    try {\n      // Get full key\n      const key = keys[i].trim()\n\n      // Get instructions for decrypt\n      const attrs = _instructions(result, key)\n\n      // Decrypt\n      decrypted = DotenvModule.decrypt(attrs.ciphertext, attrs.key)\n\n      break\n    } catch (error) {\n      // last key\n      if (i + 1 >= length) {\n        throw error\n      }\n      // try next key\n    }\n  }\n\n  // Parse decrypted .env string\n  return DotenvModule.parse(decrypted)\n}\n\nfunction _warn (message) {\n  console.log(`[dotenv@${version}][WARN] ${message}`)\n}\n\nfunction _debug (message) {\n  console.log(`[dotenv@${version}][DEBUG] ${message}`)\n}\n\nfunction _log (message) {\n  console.log(`[dotenv@${version}] ${message}`)\n}\n\nfunction _dotenvKey (options) {\n  // prioritize developer directly setting options.DOTENV_KEY\n  if (options && options.DOTENV_KEY && options.DOTENV_KEY.length > 0) {\n    return options.DOTENV_KEY\n  }\n\n  // secondary infra already contains a DOTENV_KEY environment variable\n  if (process.env.DOTENV_KEY && process.env.DOTENV_KEY.length > 0) {\n    return process.env.DOTENV_KEY\n  }\n\n  // fallback to empty string\n  return ''\n}\n\nfunction _instructions (result, dotenvKey) {\n  // Parse DOTENV_KEY. Format is a URI\n  let uri\n  try {\n    uri = new URL(dotenvKey)\n  } catch (error) {\n    if (error.code === 'ERR_INVALID_URL') {\n      const err = new Error('INVALID_DOTENV_KEY: Wrong format. Must be in valid uri format like dotenv://:key_1234@dotenvx.com/vault/.env.vault?environment=development')\n      err.code = 'INVALID_DOTENV_KEY'\n      throw err\n    }\n\n    throw error\n  }\n\n  // Get decrypt key\n  const key = uri.password\n  if (!key) {\n    const err = new Error('INVALID_DOTENV_KEY: Missing key part')\n    err.code = 'INVALID_DOTENV_KEY'\n    throw err\n  }\n\n  // Get environment\n  const environment = uri.searchParams.get('environment')\n  if (!environment) {\n    const err = new Error('INVALID_DOTENV_KEY: Missing environment part')\n    err.code = 'INVALID_DOTENV_KEY'\n    throw err\n  }\n\n  // Get ciphertext payload\n  const environmentKey = `DOTENV_VAULT_${environment.toUpperCase()}`\n  const ciphertext = result.parsed[environmentKey] // DOTENV_VAULT_PRODUCTION\n  if (!ciphertext) {\n    const err = new Error(`NOT_FOUND_DOTENV_ENVIRONMENT: Cannot locate environment ${environmentKey} in your .env.vault file.`)\n    err.code = 'NOT_FOUND_DOTENV_ENVIRONMENT'\n    throw err\n  }\n\n  return { ciphertext, key }\n}\n\nfunction _vaultPath (options) {\n  let possibleVaultPath = null\n\n  if (options && options.path && options.path.length > 0) {\n    if (Array.isArray(options.path)) {\n      for (const filepath of options.path) {\n        if (fs.existsSync(filepath)) {\n          possibleVaultPath = filepath.endsWith('.vault') ? filepath : `${filepath}.vault`\n        }\n      }\n    } else {\n      possibleVaultPath = options.path.endsWith('.vault') ? options.path : `${options.path}.vault`\n    }\n  } else {\n    possibleVaultPath = path.resolve(process.cwd(), '.env.vault')\n  }\n\n  if (fs.existsSync(possibleVaultPath)) {\n    return possibleVaultPath\n  }\n\n  return null\n}\n\nfunction _resolveHome (envPath) {\n  return envPath[0] === '~' ? path.join(os.homedir(), envPath.slice(1)) : envPath\n}\n\nfunction _configVault (options) {\n  const debug = Boolean(options && options.debug)\n  const quiet = options && 'quiet' in options ? options.quiet : true\n\n  if (debug || !quiet) {\n    _log('Loading env from encrypted .env.vault')\n  }\n\n  const parsed = DotenvModule._parseVault(options)\n\n  let processEnv = process.env\n  if (options && options.processEnv != null) {\n    processEnv = options.processEnv\n  }\n\n  DotenvModule.populate(processEnv, parsed, options)\n\n  return { parsed }\n}\n\nfunction configDotenv (options) {\n  const dotenvPath = path.resolve(process.cwd(), '.env')\n  let encoding = 'utf8'\n  const debug = Boolean(options && options.debug)\n  const quiet = options && 'quiet' in options ? options.quiet : true\n\n  if (options && options.encoding) {\n    encoding = options.encoding\n  } else {\n    if (debug) {\n      _debug('No encoding is specified. UTF-8 is used by default')\n    }\n  }\n\n  let optionPaths = [dotenvPath] // default, look for .env\n  if (options && options.path) {\n    if (!Array.isArray(options.path)) {\n      optionPaths = [_resolveHome(options.path)]\n    } else {\n      optionPaths = [] // reset default\n      for (const filepath of options.path) {\n        optionPaths.push(_resolveHome(filepath))\n      }\n    }\n  }\n\n  // Build the parsed data in a temporary object (because we need to return it).  Once we have the final\n  // parsed data, we will combine it with process.env (or options.processEnv if provided).\n  let lastError\n  const parsedAll = {}\n  for (const path of optionPaths) {\n    try {\n      // Specifying an encoding returns a string instead of a buffer\n      const parsed = DotenvModule.parse(fs.readFileSync(path, { encoding }))\n\n      DotenvModule.populate(parsedAll, parsed, options)\n    } catch (e) {\n      if (debug) {\n        _debug(`Failed to load ${path} ${e.message}`)\n      }\n      lastError = e\n    }\n  }\n\n  let processEnv = process.env\n  if (options && options.processEnv != null) {\n    processEnv = options.processEnv\n  }\n\n  DotenvModule.populate(processEnv, parsedAll, options)\n\n  if (debug || !quiet) {\n    const keysCount = Object.keys(parsedAll).length\n    const shortPaths = []\n    for (const filePath of optionPaths) {\n      try {\n        const relative = path.relative(process.cwd(), filePath)\n        shortPaths.push(relative)\n      } catch (e) {\n        if (debug) {\n          _debug(`Failed to load ${filePath} ${e.message}`)\n        }\n        lastError = e\n      }\n    }\n\n    _log(`injecting env (${keysCount}) from ${shortPaths.join(',')}`)\n  }\n\n  if (lastError) {\n    return { parsed: parsedAll, error: lastError }\n  } else {\n    return { parsed: parsedAll }\n  }\n}\n\n// Populates process.env from .env file\nfunction config (options) {\n  // fallback to original dotenv if DOTENV_KEY is not set\n  if (_dotenvKey(options).length === 0) {\n    return DotenvModule.configDotenv(options)\n  }\n\n  const vaultPath = _vaultPath(options)\n\n  // dotenvKey exists but .env.vault file does not exist\n  if (!vaultPath) {\n    _warn(`You set DOTENV_KEY but you are missing a .env.vault file at ${vaultPath}. Did you forget to build it?`)\n\n    return DotenvModule.configDotenv(options)\n  }\n\n  return DotenvModule._configVault(options)\n}\n\nfunction decrypt (encrypted, keyStr) {\n  const key = Buffer.from(keyStr.slice(-64), 'hex')\n  let ciphertext = Buffer.from(encrypted, 'base64')\n\n  const nonce = ciphertext.subarray(0, 12)\n  const authTag = ciphertext.subarray(-16)\n  ciphertext = ciphertext.subarray(12, -16)\n\n  try {\n    const aesgcm = crypto.createDecipheriv('aes-256-gcm', key, nonce)\n    aesgcm.setAuthTag(authTag)\n    return `${aesgcm.update(ciphertext)}${aesgcm.final()}`\n  } catch (error) {\n    const isRange = error instanceof RangeError\n    const invalidKeyLength = error.message === 'Invalid key length'\n    const decryptionFailed = error.message === 'Unsupported state or unable to authenticate data'\n\n    if (isRange || invalidKeyLength) {\n      const err = new Error('INVALID_DOTENV_KEY: It must be 64 characters long (or more)')\n      err.code = 'INVALID_DOTENV_KEY'\n      throw err\n    } else if (decryptionFailed) {\n      const err = new Error('DECRYPTION_FAILED: Please check your DOTENV_KEY')\n      err.code = 'DECRYPTION_FAILED'\n      throw err\n    } else {\n      throw error\n    }\n  }\n}\n\n// Populate process.env with parsed values\nfunction populate (processEnv, parsed, options = {}) {\n  const debug = Boolean(options && options.debug)\n  const override = Boolean(options && options.override)\n\n  if (typeof parsed !== 'object') {\n    const err = new Error('OBJECT_REQUIRED: Please check the processEnv argument being passed to populate')\n    err.code = 'OBJECT_REQUIRED'\n    throw err\n  }\n\n  // Set process.env\n  for (const key of Object.keys(parsed)) {\n    if (Object.prototype.hasOwnProperty.call(processEnv, key)) {\n      if (override === true) {\n        processEnv[key] = parsed[key]\n      }\n\n      if (debug) {\n        if (override === true) {\n          _debug(`\"${key}\" is already defined and WAS overwritten`)\n        } else {\n          _debug(`\"${key}\" is already defined and was NOT overwritten`)\n        }\n      }\n    } else {\n      processEnv[key] = parsed[key]\n    }\n  }\n}\n\nconst DotenvModule = {\n  configDotenv,\n  _configVault,\n  _parseVault,\n  config,\n  decrypt,\n  parse,\n  populate\n}\n\nmodule.exports.configDotenv = DotenvModule.configDotenv\nmodule.exports._configVault = DotenvModule._configVault\nmodule.exports._parseVault = DotenvModule._parseVault\nmodule.exports.config = DotenvModule.config\nmodule.exports.decrypt = DotenvModule.decrypt\nmodule.exports.parse = DotenvModule.parse\nmodule.exports.populate = DotenvModule.populate\n\nmodule.exports = DotenvModule\n", "import libDefault from 'buffer';\nmodule.exports = libDefault;", "/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype)\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n", "/*global module, process*/\nvar Buffer = require('safe-buffer').Buffer;\nvar Stream = require('stream');\nvar util = require('util');\n\nfunction DataStream(data) {\n  this.buffer = null;\n  this.writable = true;\n  this.readable = true;\n\n  // No input\n  if (!data) {\n    this.buffer = Buffer.alloc(0);\n    return this;\n  }\n\n  // Stream\n  if (typeof data.pipe === 'function') {\n    this.buffer = Buffer.alloc(0);\n    data.pipe(this);\n    return this;\n  }\n\n  // Buffer or String\n  // or Object (assumedly a passworded key)\n  if (data.length || typeof data === 'object') {\n    this.buffer = data;\n    this.writable = false;\n    process.nextTick(function () {\n      this.emit('end', data);\n      this.readable = false;\n      this.emit('close');\n    }.bind(this));\n    return this;\n  }\n\n  throw new TypeError('Unexpected data type ('+ typeof data + ')');\n}\nutil.inherits(DataStream, Stream);\n\nDataStream.prototype.write = function write(data) {\n  this.buffer = Buffer.concat([this.buffer, Buffer.from(data)]);\n  this.emit('data', data);\n};\n\nDataStream.prototype.end = function end(data) {\n  if (data)\n    this.write(data);\n  this.emit('end', data);\n  this.emit('close');\n  this.writable = false;\n  this.readable = false;\n};\n\nmodule.exports = DataStream;\n", "'use strict';\n\nfunction getParamSize(keySize) {\n\tvar result = ((keySize / 8) | 0) + (keySize % 8 === 0 ? 0 : 1);\n\treturn result;\n}\n\nvar paramBytesForAlg = {\n\tES256: getParamSize(256),\n\tES384: getParamSize(384),\n\tES512: getParamSize(521)\n};\n\nfunction getParamBytesForAlg(alg) {\n\tvar paramBytes = paramBytesForAlg[alg];\n\tif (paramBytes) {\n\t\treturn paramBytes;\n\t}\n\n\tthrow new Error('Unknown algorithm \"' + alg + '\"');\n}\n\nmodule.exports = getParamBytesForAlg;\n", "'use strict';\n\nvar Buffer = require('safe-buffer').Buffer;\n\nvar getParamBytesForAlg = require('./param-bytes-for-alg');\n\nvar MAX_OCTET = 0x80,\n\tCLASS_UNIVERSAL = 0,\n\tPRIMITIVE_BIT = 0x20,\n\tTAG_SEQ = 0x10,\n\tTAG_INT = 0x02,\n\tENCODED_TAG_SEQ = (TAG_SEQ | PRIMITIVE_BIT) | (CLASS_UNIVERSAL << 6),\n\tENCODED_TAG_INT = TAG_INT | (CLASS_UNIVERSAL << 6);\n\nfunction base64Url(base64) {\n\treturn base64\n\t\t.replace(/=/g, '')\n\t\t.replace(/\\+/g, '-')\n\t\t.replace(/\\//g, '_');\n}\n\nfunction signatureAsBuffer(signature) {\n\tif (Buffer.isBuffer(signature)) {\n\t\treturn signature;\n\t} else if ('string' === typeof signature) {\n\t\treturn Buffer.from(signature, 'base64');\n\t}\n\n\tthrow new TypeError('ECDSA signature must be a Base64 string or a Buffer');\n}\n\nfunction derToJose(signature, alg) {\n\tsignature = signatureAsBuffer(signature);\n\tvar paramBytes = getParamBytesForAlg(alg);\n\n\t// the DER encoded param should at most be the param size, plus a padding\n\t// zero, since due to being a signed integer\n\tvar maxEncodedParamLength = paramBytes + 1;\n\n\tvar inputLength = signature.length;\n\n\tvar offset = 0;\n\tif (signature[offset++] !== ENCODED_TAG_SEQ) {\n\t\tthrow new Error('Could not find expected \"seq\"');\n\t}\n\n\tvar seqLength = signature[offset++];\n\tif (seqLength === (MAX_OCTET | 1)) {\n\t\tseqLength = signature[offset++];\n\t}\n\n\tif (inputLength - offset < seqLength) {\n\t\tthrow new Error('\"seq\" specified length of \"' + seqLength + '\", only \"' + (inputLength - offset) + '\" remaining');\n\t}\n\n\tif (signature[offset++] !== ENCODED_TAG_INT) {\n\t\tthrow new Error('Could not find expected \"int\" for \"r\"');\n\t}\n\n\tvar rLength = signature[offset++];\n\n\tif (inputLength - offset - 2 < rLength) {\n\t\tthrow new Error('\"r\" specified length of \"' + rLength + '\", only \"' + (inputLength - offset - 2) + '\" available');\n\t}\n\n\tif (maxEncodedParamLength < rLength) {\n\t\tthrow new Error('\"r\" specified length of \"' + rLength + '\", max of \"' + maxEncodedParamLength + '\" is acceptable');\n\t}\n\n\tvar rOffset = offset;\n\toffset += rLength;\n\n\tif (signature[offset++] !== ENCODED_TAG_INT) {\n\t\tthrow new Error('Could not find expected \"int\" for \"s\"');\n\t}\n\n\tvar sLength = signature[offset++];\n\n\tif (inputLength - offset !== sLength) {\n\t\tthrow new Error('\"s\" specified length of \"' + sLength + '\", expected \"' + (inputLength - offset) + '\"');\n\t}\n\n\tif (maxEncodedParamLength < sLength) {\n\t\tthrow new Error('\"s\" specified length of \"' + sLength + '\", max of \"' + maxEncodedParamLength + '\" is acceptable');\n\t}\n\n\tvar sOffset = offset;\n\toffset += sLength;\n\n\tif (offset !== inputLength) {\n\t\tthrow new Error('Expected to consume entire buffer, but \"' + (inputLength - offset) + '\" bytes remain');\n\t}\n\n\tvar rPadding = paramBytes - rLength,\n\t\tsPadding = paramBytes - sLength;\n\n\tvar dst = Buffer.allocUnsafe(rPadding + rLength + sPadding + sLength);\n\n\tfor (offset = 0; offset < rPadding; ++offset) {\n\t\tdst[offset] = 0;\n\t}\n\tsignature.copy(dst, offset, rOffset + Math.max(-rPadding, 0), rOffset + rLength);\n\n\toffset = paramBytes;\n\n\tfor (var o = offset; offset < o + sPadding; ++offset) {\n\t\tdst[offset] = 0;\n\t}\n\tsignature.copy(dst, offset, sOffset + Math.max(-sPadding, 0), sOffset + sLength);\n\n\tdst = dst.toString('base64');\n\tdst = base64Url(dst);\n\n\treturn dst;\n}\n\nfunction countPadding(buf, start, stop) {\n\tvar padding = 0;\n\twhile (start + padding < stop && buf[start + padding] === 0) {\n\t\t++padding;\n\t}\n\n\tvar needsSign = buf[start + padding] >= MAX_OCTET;\n\tif (needsSign) {\n\t\t--padding;\n\t}\n\n\treturn padding;\n}\n\nfunction joseToDer(signature, alg) {\n\tsignature = signatureAsBuffer(signature);\n\tvar paramBytes = getParamBytesForAlg(alg);\n\n\tvar signatureBytes = signature.length;\n\tif (signatureBytes !== paramBytes * 2) {\n\t\tthrow new TypeError('\"' + alg + '\" signatures must be \"' + paramBytes * 2 + '\" bytes, saw \"' + signatureBytes + '\"');\n\t}\n\n\tvar rPadding = countPadding(signature, 0, paramBytes);\n\tvar sPadding = countPadding(signature, paramBytes, signature.length);\n\tvar rLength = paramBytes - rPadding;\n\tvar sLength = paramBytes - sPadding;\n\n\tvar rsBytes = 1 + 1 + rLength + 1 + 1 + sLength;\n\n\tvar shortLength = rsBytes < MAX_OCTET;\n\n\tvar dst = Buffer.allocUnsafe((shortLength ? 2 : 3) + rsBytes);\n\n\tvar offset = 0;\n\tdst[offset++] = ENCODED_TAG_SEQ;\n\tif (shortLength) {\n\t\t// Bit 8 has value \"0\"\n\t\t// bits 7-1 give the length.\n\t\tdst[offset++] = rsBytes;\n\t} else {\n\t\t// Bit 8 of first octet has value \"1\"\n\t\t// bits 7-1 give the number of additional length octets.\n\t\tdst[offset++] = MAX_OCTET\t| 1;\n\t\t// length, base 256\n\t\tdst[offset++] = rsBytes & 0xff;\n\t}\n\tdst[offset++] = ENCODED_TAG_INT;\n\tdst[offset++] = rLength;\n\tif (rPadding < 0) {\n\t\tdst[offset++] = 0;\n\t\toffset += signature.copy(dst, offset, 0, paramBytes);\n\t} else {\n\t\toffset += signature.copy(dst, offset, rPadding, paramBytes);\n\t}\n\tdst[offset++] = ENCODED_TAG_INT;\n\tdst[offset++] = sLength;\n\tif (sPadding < 0) {\n\t\tdst[offset++] = 0;\n\t\tsignature.copy(dst, offset, paramBytes);\n\t} else {\n\t\tsignature.copy(dst, offset, paramBytes + sPadding);\n\t}\n\n\treturn dst;\n}\n\nmodule.exports = {\n\tderToJose: derToJose,\n\tjoseToDer: joseToDer\n};\n", "/*jshint node:true */\n'use strict';\nvar Buffer = require('buffer').Buffer; // browserify\nvar SlowBuffer = require('buffer').SlowBuffer;\n\nmodule.exports = bufferEq;\n\nfunction bufferEq(a, b) {\n\n  // shortcutting on type is necessary for correctness\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    return false;\n  }\n\n  // buffer sizes should be well-known information, so despite this\n  // shortcutting, it doesn't leak any information about the *contents* of the\n  // buffers.\n  if (a.length !== b.length) {\n    return false;\n  }\n\n  var c = 0;\n  for (var i = 0; i < a.length; i++) {\n    /*jshint bitwise:false */\n    c |= a[i] ^ b[i]; // XOR\n  }\n  return c === 0;\n}\n\nbufferEq.install = function() {\n  Buffer.prototype.equal = SlowBuffer.prototype.equal = function equal(that) {\n    return bufferEq(this, that);\n  };\n};\n\nvar origBufEqual = Buffer.prototype.equal;\nvar origSlowBufEqual = SlowBuffer.prototype.equal;\nbufferEq.restore = function() {\n  Buffer.prototype.equal = origBufEqual;\n  SlowBuffer.prototype.equal = origSlowBufEqual;\n};\n", "var Buffer = require('safe-buffer').Buffer;\nvar crypto = require('crypto');\nvar formatEcdsa = require('ecdsa-sig-formatter');\nvar util = require('util');\n\nvar MSG_INVALID_ALGORITHM = '\"%s\" is not a valid algorithm.\\n  Supported algorithms are:\\n  \"HS256\", \"HS384\", \"HS512\", \"RS256\", \"RS384\", \"RS512\", \"PS256\", \"PS384\", \"PS512\", \"ES256\", \"ES384\", \"ES512\" and \"none\".'\nvar MSG_INVALID_SECRET = 'secret must be a string or buffer';\nvar MSG_INVALID_VERIFIER_KEY = 'key must be a string or a buffer';\nvar MSG_INVALID_SIGNER_KEY = 'key must be a string, a buffer or an object';\n\nvar supportsKeyObjects = typeof crypto.createPublicKey === 'function';\nif (supportsKeyObjects) {\n  MSG_INVALID_VERIFIER_KEY += ' or a KeyObject';\n  MSG_INVALID_SECRET += 'or a KeyObject';\n}\n\nfunction checkIsPublicKey(key) {\n  if (Buffer.isBuffer(key)) {\n    return;\n  }\n\n  if (typeof key === 'string') {\n    return;\n  }\n\n  if (!supportsKeyObjects) {\n    throw typeError(MSG_INVALID_VERIFIER_KEY);\n  }\n\n  if (typeof key !== 'object') {\n    throw typeError(MSG_INVALID_VERIFIER_KEY);\n  }\n\n  if (typeof key.type !== 'string') {\n    throw typeError(MSG_INVALID_VERIFIER_KEY);\n  }\n\n  if (typeof key.asymmetricKeyType !== 'string') {\n    throw typeError(MSG_INVALID_VERIFIER_KEY);\n  }\n\n  if (typeof key.export !== 'function') {\n    throw typeError(MSG_INVALID_VERIFIER_KEY);\n  }\n};\n\nfunction checkIsPrivateKey(key) {\n  if (Buffer.isBuffer(key)) {\n    return;\n  }\n\n  if (typeof key === 'string') {\n    return;\n  }\n\n  if (typeof key === 'object') {\n    return;\n  }\n\n  throw typeError(MSG_INVALID_SIGNER_KEY);\n};\n\nfunction checkIsSecretKey(key) {\n  if (Buffer.isBuffer(key)) {\n    return;\n  }\n\n  if (typeof key === 'string') {\n    return key;\n  }\n\n  if (!supportsKeyObjects) {\n    throw typeError(MSG_INVALID_SECRET);\n  }\n\n  if (typeof key !== 'object') {\n    throw typeError(MSG_INVALID_SECRET);\n  }\n\n  if (key.type !== 'secret') {\n    throw typeError(MSG_INVALID_SECRET);\n  }\n\n  if (typeof key.export !== 'function') {\n    throw typeError(MSG_INVALID_SECRET);\n  }\n}\n\nfunction fromBase64(base64) {\n  return base64\n    .replace(/=/g, '')\n    .replace(/\\+/g, '-')\n    .replace(/\\//g, '_');\n}\n\nfunction toBase64(base64url) {\n  base64url = base64url.toString();\n\n  var padding = 4 - base64url.length % 4;\n  if (padding !== 4) {\n    for (var i = 0; i < padding; ++i) {\n      base64url += '=';\n    }\n  }\n\n  return base64url\n    .replace(/\\-/g, '+')\n    .replace(/_/g, '/');\n}\n\nfunction typeError(template) {\n  var args = [].slice.call(arguments, 1);\n  var errMsg = util.format.bind(util, template).apply(null, args);\n  return new TypeError(errMsg);\n}\n\nfunction bufferOrString(obj) {\n  return Buffer.isBuffer(obj) || typeof obj === 'string';\n}\n\nfunction normalizeInput(thing) {\n  if (!bufferOrString(thing))\n    thing = JSON.stringify(thing);\n  return thing;\n}\n\nfunction createHmacSigner(bits) {\n  return function sign(thing, secret) {\n    checkIsSecretKey(secret);\n    thing = normalizeInput(thing);\n    var hmac = crypto.createHmac('sha' + bits, secret);\n    var sig = (hmac.update(thing), hmac.digest('base64'))\n    return fromBase64(sig);\n  }\n}\n\nvar bufferEqual;\nvar timingSafeEqual = 'timingSafeEqual' in crypto ? function timingSafeEqual(a, b) {\n  if (a.byteLength !== b.byteLength) {\n    return false;\n  }\n\n  return crypto.timingSafeEqual(a, b)\n} : function timingSafeEqual(a, b) {\n  if (!bufferEqual) {\n    bufferEqual = require('buffer-equal-constant-time');\n  }\n\n  return bufferEqual(a, b)\n}\n\nfunction createHmacVerifier(bits) {\n  return function verify(thing, signature, secret) {\n    var computedSig = createHmacSigner(bits)(thing, secret);\n    return timingSafeEqual(Buffer.from(signature), Buffer.from(computedSig));\n  }\n}\n\nfunction createKeySigner(bits) {\n return function sign(thing, privateKey) {\n    checkIsPrivateKey(privateKey);\n    thing = normalizeInput(thing);\n    // Even though we are specifying \"RSA\" here, this works with ECDSA\n    // keys as well.\n    var signer = crypto.createSign('RSA-SHA' + bits);\n    var sig = (signer.update(thing), signer.sign(privateKey, 'base64'));\n    return fromBase64(sig);\n  }\n}\n\nfunction createKeyVerifier(bits) {\n  return function verify(thing, signature, publicKey) {\n    checkIsPublicKey(publicKey);\n    thing = normalizeInput(thing);\n    signature = toBase64(signature);\n    var verifier = crypto.createVerify('RSA-SHA' + bits);\n    verifier.update(thing);\n    return verifier.verify(publicKey, signature, 'base64');\n  }\n}\n\nfunction createPSSKeySigner(bits) {\n  return function sign(thing, privateKey) {\n    checkIsPrivateKey(privateKey);\n    thing = normalizeInput(thing);\n    var signer = crypto.createSign('RSA-SHA' + bits);\n    var sig = (signer.update(thing), signer.sign({\n      key: privateKey,\n      padding: crypto.constants.RSA_PKCS1_PSS_PADDING,\n      saltLength: crypto.constants.RSA_PSS_SALTLEN_DIGEST\n    }, 'base64'));\n    return fromBase64(sig);\n  }\n}\n\nfunction createPSSKeyVerifier(bits) {\n  return function verify(thing, signature, publicKey) {\n    checkIsPublicKey(publicKey);\n    thing = normalizeInput(thing);\n    signature = toBase64(signature);\n    var verifier = crypto.createVerify('RSA-SHA' + bits);\n    verifier.update(thing);\n    return verifier.verify({\n      key: publicKey,\n      padding: crypto.constants.RSA_PKCS1_PSS_PADDING,\n      saltLength: crypto.constants.RSA_PSS_SALTLEN_DIGEST\n    }, signature, 'base64');\n  }\n}\n\nfunction createECDSASigner(bits) {\n  var inner = createKeySigner(bits);\n  return function sign() {\n    var signature = inner.apply(null, arguments);\n    signature = formatEcdsa.derToJose(signature, 'ES' + bits);\n    return signature;\n  };\n}\n\nfunction createECDSAVerifer(bits) {\n  var inner = createKeyVerifier(bits);\n  return function verify(thing, signature, publicKey) {\n    signature = formatEcdsa.joseToDer(signature, 'ES' + bits).toString('base64');\n    var result = inner(thing, signature, publicKey);\n    return result;\n  };\n}\n\nfunction createNoneSigner() {\n  return function sign() {\n    return '';\n  }\n}\n\nfunction createNoneVerifier() {\n  return function verify(thing, signature) {\n    return signature === '';\n  }\n}\n\nmodule.exports = function jwa(algorithm) {\n  var signerFactories = {\n    hs: createHmacSigner,\n    rs: createKeySigner,\n    ps: createPSSKeySigner,\n    es: createECDSASigner,\n    none: createNoneSigner,\n  }\n  var verifierFactories = {\n    hs: createHmacVerifier,\n    rs: createKeyVerifier,\n    ps: createPSSKeyVerifier,\n    es: createECDSAVerifer,\n    none: createNoneVerifier,\n  }\n  var match = algorithm.match(/^(RS|PS|ES|HS)(256|384|512)$|^(none)$/i);\n  if (!match)\n    throw typeError(MSG_INVALID_ALGORITHM, algorithm);\n  var algo = (match[1] || match[3]).toLowerCase();\n  var bits = match[2];\n\n  return {\n    sign: signerFactories[algo](bits),\n    verify: verifierFactories[algo](bits),\n  }\n};\n", "/*global module*/\nvar Buffer = require('buffer').Buffer;\n\nmodule.exports = function toString(obj) {\n  if (typeof obj === 'string')\n    return obj;\n  if (typeof obj === 'number' || Buffer.isBuffer(obj))\n    return obj.toString();\n  return JSON.stringify(obj);\n};\n", "/*global module*/\nvar Buffer = require('safe-buffer').Buffer;\nvar DataStream = require('./data-stream');\nvar jwa = require('jwa');\nvar Stream = require('stream');\nvar toString = require('./tostring');\nvar util = require('util');\n\nfunction base64url(string, encoding) {\n  return Buffer\n    .from(string, encoding)\n    .toString('base64')\n    .replace(/=/g, '')\n    .replace(/\\+/g, '-')\n    .replace(/\\//g, '_');\n}\n\nfunction jwsSecuredInput(header, payload, encoding) {\n  encoding = encoding || 'utf8';\n  var encodedHeader = base64url(toString(header), 'binary');\n  var encodedPayload = base64url(toString(payload), encoding);\n  return util.format('%s.%s', encodedHeader, encodedPayload);\n}\n\nfunction jwsSign(opts) {\n  var header = opts.header;\n  var payload = opts.payload;\n  var secretOrKey = opts.secret || opts.privateKey;\n  var encoding = opts.encoding;\n  var algo = jwa(header.alg);\n  var securedInput = jwsSecuredInput(header, payload, encoding);\n  var signature = algo.sign(securedInput, secretOrKey);\n  return util.format('%s.%s', securedInput, signature);\n}\n\nfunction SignStream(opts) {\n  var secret = opts.secret||opts.privateKey||opts.key;\n  var secretStream = new DataStream(secret);\n  this.readable = true;\n  this.header = opts.header;\n  this.encoding = opts.encoding;\n  this.secret = this.privateKey = this.key = secretStream;\n  this.payload = new DataStream(opts.payload);\n  this.secret.once('close', function () {\n    if (!this.payload.writable && this.readable)\n      this.sign();\n  }.bind(this));\n\n  this.payload.once('close', function () {\n    if (!this.secret.writable && this.readable)\n      this.sign();\n  }.bind(this));\n}\nutil.inherits(SignStream, Stream);\n\nSignStream.prototype.sign = function sign() {\n  try {\n    var signature = jwsSign({\n      header: this.header,\n      payload: this.payload.buffer,\n      secret: this.secret.buffer,\n      encoding: this.encoding\n    });\n    this.emit('done', signature);\n    this.emit('data', signature);\n    this.emit('end');\n    this.readable = false;\n    return signature;\n  } catch (e) {\n    this.readable = false;\n    this.emit('error', e);\n    this.emit('close');\n  }\n};\n\nSignStream.sign = jwsSign;\n\nmodule.exports = SignStream;\n", "/*global module*/\nvar Buffer = require('safe-buffer').Buffer;\nvar DataStream = require('./data-stream');\nvar jwa = require('jwa');\nvar Stream = require('stream');\nvar toString = require('./tostring');\nvar util = require('util');\nvar JWS_REGEX = /^[a-zA-Z0-9\\-_]+?\\.[a-zA-Z0-9\\-_]+?\\.([a-zA-Z0-9\\-_]+)?$/;\n\nfunction isObject(thing) {\n  return Object.prototype.toString.call(thing) === '[object Object]';\n}\n\nfunction safeJsonParse(thing) {\n  if (isObject(thing))\n    return thing;\n  try { return JSON.parse(thing); }\n  catch (e) { return undefined; }\n}\n\nfunction headerFromJWS(jwsSig) {\n  var encodedHeader = jwsSig.split('.', 1)[0];\n  return safeJsonParse(Buffer.from(encodedHeader, 'base64').toString('binary'));\n}\n\nfunction securedInputFromJWS(jwsSig) {\n  return jwsSig.split('.', 2).join('.');\n}\n\nfunction signatureFromJWS(jwsSig) {\n  return jwsSig.split('.')[2];\n}\n\nfunction payloadFromJWS(jwsSig, encoding) {\n  encoding = encoding || 'utf8';\n  var payload = jwsSig.split('.')[1];\n  return Buffer.from(payload, 'base64').toString(encoding);\n}\n\nfunction isValidJws(string) {\n  return JWS_REGEX.test(string) && !!headerFromJWS(string);\n}\n\nfunction jwsVerify(jwsSig, algorithm, secretOrKey) {\n  if (!algorithm) {\n    var err = new Error(\"Missing algorithm parameter for jws.verify\");\n    err.code = \"MISSING_ALGORITHM\";\n    throw err;\n  }\n  jwsSig = toString(jwsSig);\n  var signature = signatureFromJWS(jwsSig);\n  var securedInput = securedInputFromJWS(jwsSig);\n  var algo = jwa(algorithm);\n  return algo.verify(securedInput, signature, secretOrKey);\n}\n\nfunction jwsDecode(jwsSig, opts) {\n  opts = opts || {};\n  jwsSig = toString(jwsSig);\n\n  if (!isValidJws(jwsSig))\n    return null;\n\n  var header = headerFromJWS(jwsSig);\n\n  if (!header)\n    return null;\n\n  var payload = payloadFromJWS(jwsSig);\n  if (header.typ === 'JWT' || opts.json)\n    payload = JSON.parse(payload, opts.encoding);\n\n  return {\n    header: header,\n    payload: payload,\n    signature: signatureFromJWS(jwsSig)\n  };\n}\n\nfunction VerifyStream(opts) {\n  opts = opts || {};\n  var secretOrKey = opts.secret||opts.publicKey||opts.key;\n  var secretStream = new DataStream(secretOrKey);\n  this.readable = true;\n  this.algorithm = opts.algorithm;\n  this.encoding = opts.encoding;\n  this.secret = this.publicKey = this.key = secretStream;\n  this.signature = new DataStream(opts.signature);\n  this.secret.once('close', function () {\n    if (!this.signature.writable && this.readable)\n      this.verify();\n  }.bind(this));\n\n  this.signature.once('close', function () {\n    if (!this.secret.writable && this.readable)\n      this.verify();\n  }.bind(this));\n}\nutil.inherits(VerifyStream, Stream);\nVerifyStream.prototype.verify = function verify() {\n  try {\n    var valid = jwsVerify(this.signature.buffer, this.algorithm, this.key.buffer);\n    var obj = jwsDecode(this.signature.buffer, this.encoding);\n    this.emit('done', valid, obj);\n    this.emit('data', valid);\n    this.emit('end');\n    this.readable = false;\n    return valid;\n  } catch (e) {\n    this.readable = false;\n    this.emit('error', e);\n    this.emit('close');\n  }\n};\n\nVerifyStream.decode = jwsDecode;\nVerifyStream.isValid = isValidJws;\nVerifyStream.verify = jwsVerify;\n\nmodule.exports = VerifyStream;\n", "/*global exports*/\nvar SignStream = require('./lib/sign-stream');\nvar VerifyStream = require('./lib/verify-stream');\n\nvar ALGORITHMS = [\n  'HS256', 'HS384', 'HS512',\n  'RS256', 'RS384', 'RS512',\n  'PS256', 'PS384', 'PS512',\n  'ES256', 'ES384', 'ES512'\n];\n\nexports.ALGORITHMS = ALGORITHMS;\nexports.sign = SignStream.sign;\nexports.verify = VerifyStream.verify;\nexports.decode = VerifyStream.decode;\nexports.isValid = VerifyStream.isValid;\nexports.createSign = function createSign(opts) {\n  return new SignStream(opts);\n};\nexports.createVerify = function createVerify(opts) {\n  return new VerifyStream(opts);\n};\n", "var jws = require('jws');\n\nmodule.exports = function (jwt, options) {\n  options = options || {};\n  var decoded = jws.decode(jwt, options);\n  if (!decoded) { return null; }\n  var payload = decoded.payload;\n\n  //try parse the payload\n  if(typeof payload === 'string') {\n    try {\n      var obj = JSON.parse(payload);\n      if(obj !== null && typeof obj === 'object') {\n        payload = obj;\n      }\n    } catch (e) { }\n  }\n\n  //return header if `complete` option is enabled.  header includes claims\n  //such as `kid` and `alg` used to select the key within a JWKS needed to\n  //verify the signature\n  if (options.complete === true) {\n    return {\n      header: decoded.header,\n      payload: payload,\n      signature: decoded.signature\n    };\n  }\n  return payload;\n};\n", "var JsonWebTokenError = function (message, error) {\n  Error.call(this, message);\n  if(Error.captureStackTrace) {\n    Error.captureStackTrace(this, this.constructor);\n  }\n  this.name = 'JsonWebTokenError';\n  this.message = message;\n  if (error) this.inner = error;\n};\n\nJsonWebTokenError.prototype = Object.create(Error.prototype);\nJsonWebTokenError.prototype.constructor = JsonWebTokenError;\n\nmodule.exports = JsonWebTokenError;\n", "var JsonWebTokenError = require('./JsonWebTokenError');\n\nvar NotBeforeError = function (message, date) {\n  JsonWebTokenError.call(this, message);\n  this.name = 'NotBeforeError';\n  this.date = date;\n};\n\nNotBeforeError.prototype = Object.create(JsonWebTokenError.prototype);\n\nNotBeforeError.prototype.constructor = NotBeforeError;\n\nmodule.exports = NotBeforeError;", "var JsonWebTokenError = require('./JsonWebTokenError');\n\nvar TokenExpiredError = function (message, expiredAt) {\n  JsonWebTokenError.call(this, message);\n  this.name = 'TokenExpiredError';\n  this.expiredAt = expiredAt;\n};\n\nTokenExpiredError.prototype = Object.create(JsonWebTokenError.prototype);\n\nTokenExpiredError.prototype.constructor = TokenExpiredError;\n\nmodule.exports = TokenExpiredError;", "/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function (val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n", "var ms = require('ms');\n\nmodule.exports = function (time, iat) {\n  var timestamp = iat || Math.floor(Date.now() / 1000);\n\n  if (typeof time === 'string') {\n    var milliseconds = ms(time);\n    if (typeof milliseconds === 'undefined') {\n      return;\n    }\n    return Math.floor(timestamp + milliseconds / 1000);\n  } else if (typeof time === 'number') {\n    return timestamp + time;\n  } else {\n    return;\n  }\n\n};", "'use strict'\n\n// Note: this is the semver.org version of the spec that it implements\n// Not necessarily the package version of this code.\nconst SEMVER_SPEC_VERSION = '2.0.0'\n\nconst MAX_LENGTH = 256\nconst MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER ||\n/* istanbul ignore next */ 9007199254740991\n\n// Max safe segment length for coercion.\nconst MAX_SAFE_COMPONENT_LENGTH = 16\n\n// Max safe length for a build identifier. The max length minus 6 characters for\n// the shortest version with a build 0.0.0+BUILD.\nconst MAX_SAFE_BUILD_LENGTH = MAX_LENGTH - 6\n\nconst RELEASE_TYPES = [\n  'major',\n  'premajor',\n  'minor',\n  'preminor',\n  'patch',\n  'prepatch',\n  'prerelease',\n]\n\nmodule.exports = {\n  MAX_LENGTH,\n  MAX_SAFE_COMPONENT_LENGTH,\n  MAX_SAFE_BUILD_LENGTH,\n  MAX_SAFE_INTEGER,\n  RELEASE_TYPES,\n  SEMVER_SPEC_VERSION,\n  FLAG_INCLUDE_PRERELEASE: 0b001,\n  FLAG_LOOSE: 0b010,\n}\n", "'use strict'\n\nconst debug = (\n  typeof process === 'object' &&\n  process.env &&\n  process.env.NODE_DEBUG &&\n  /\\bsemver\\b/i.test(process.env.NODE_DEBUG)\n) ? (...args) => console.error('SEMVER', ...args)\n  : () => {}\n\nmodule.exports = debug\n", "'use strict'\n\nconst {\n  MAX_SAFE_COMPONENT_LENGTH,\n  MAX_SAFE_BUILD_LENGTH,\n  MAX_LENGTH,\n} = require('./constants')\nconst debug = require('./debug')\nexports = module.exports = {}\n\n// The actual regexps go on exports.re\nconst re = exports.re = []\nconst safeRe = exports.safeRe = []\nconst src = exports.src = []\nconst safeSrc = exports.safeSrc = []\nconst t = exports.t = {}\nlet R = 0\n\nconst LETTERDASHNUMBER = '[a-zA-Z0-9-]'\n\n// Replace some greedy regex tokens to prevent regex dos issues. These regex are\n// used internally via the safeRe object since all inputs in this library get\n// normalized first to trim and collapse all extra whitespace. The original\n// regexes are exported for userland consumption and lower level usage. A\n// future breaking change could export the safer regex only with a note that\n// all input should have extra whitespace removed.\nconst safeRegexReplacements = [\n  ['\\\\s', 1],\n  ['\\\\d', MAX_LENGTH],\n  [LETTERDASHNUMBER, MAX_SAFE_BUILD_LENGTH],\n]\n\nconst makeSafeRegex = (value) => {\n  for (const [token, max] of safeRegexReplacements) {\n    value = value\n      .split(`${token}*`).join(`${token}{0,${max}}`)\n      .split(`${token}+`).join(`${token}{1,${max}}`)\n  }\n  return value\n}\n\nconst createToken = (name, value, isGlobal) => {\n  const safe = makeSafeRegex(value)\n  const index = R++\n  debug(name, index, value)\n  t[name] = index\n  src[index] = value\n  safeSrc[index] = safe\n  re[index] = new RegExp(value, isGlobal ? 'g' : undefined)\n  safeRe[index] = new RegExp(safe, isGlobal ? 'g' : undefined)\n}\n\n// The following Regular Expressions can be used for tokenizing,\n// validating, and parsing SemVer version strings.\n\n// ## Numeric Identifier\n// A single `0`, or a non-zero digit followed by zero or more digits.\n\ncreateToken('NUMERICIDENTIFIER', '0|[1-9]\\\\d*')\ncreateToken('NUMERICIDENTIFIERLOOSE', '\\\\d+')\n\n// ## Non-numeric Identifier\n// Zero or more digits, followed by a letter or hyphen, and then zero or\n// more letters, digits, or hyphens.\n\ncreateToken('NONNUMERICIDENTIFIER', `\\\\d*[a-zA-Z-]${LETTERDASHNUMBER}*`)\n\n// ## Main Version\n// Three dot-separated numeric identifiers.\n\ncreateToken('MAINVERSION', `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})`)\n\ncreateToken('MAINVERSIONLOOSE', `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})`)\n\n// ## Pre-release Version Identifier\n// A numeric identifier, or a non-numeric identifier.\n// Non-numberic identifiers include numberic identifiers but can be longer.\n// Therefore non-numberic identifiers must go first.\n\ncreateToken('PRERELEASEIDENTIFIER', `(?:${src[t.NONNUMERICIDENTIFIER]\n}|${src[t.NUMERICIDENTIFIER]})`)\n\ncreateToken('PRERELEASEIDENTIFIERLOOSE', `(?:${src[t.NONNUMERICIDENTIFIER]\n}|${src[t.NUMERICIDENTIFIERLOOSE]})`)\n\n// ## Pre-release Version\n// Hyphen, followed by one or more dot-separated pre-release version\n// identifiers.\n\ncreateToken('PRERELEASE', `(?:-(${src[t.PRERELEASEIDENTIFIER]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIER]})*))`)\n\ncreateToken('PRERELEASELOOSE', `(?:-?(${src[t.PRERELEASEIDENTIFIERLOOSE]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIERLOOSE]})*))`)\n\n// ## Build Metadata Identifier\n// Any combination of digits, letters, or hyphens.\n\ncreateToken('BUILDIDENTIFIER', `${LETTERDASHNUMBER}+`)\n\n// ## Build Metadata\n// Plus sign, followed by one or more period-separated build metadata\n// identifiers.\n\ncreateToken('BUILD', `(?:\\\\+(${src[t.BUILDIDENTIFIER]\n}(?:\\\\.${src[t.BUILDIDENTIFIER]})*))`)\n\n// ## Full Version String\n// A main version, followed optionally by a pre-release version and\n// build metadata.\n\n// Note that the only major, minor, patch, and pre-release sections of\n// the version string are capturing groups.  The build metadata is not a\n// capturing group, because it should not ever be used in version\n// comparison.\n\ncreateToken('FULLPLAIN', `v?${src[t.MAINVERSION]\n}${src[t.PRERELEASE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('FULL', `^${src[t.FULLPLAIN]}$`)\n\n// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\n// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n// common in the npm registry.\ncreateToken('LOOSEPLAIN', `[v=\\\\s]*${src[t.MAINVERSIONLOOSE]\n}${src[t.PRERELEASELOOSE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('LOOSE', `^${src[t.LOOSEPLAIN]}$`)\n\ncreateToken('GTLT', '((?:<|>)?=?)')\n\n// Something like \"2.*\" or \"1.2.x\".\n// Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\n// Only the first item is strictly required.\ncreateToken('XRANGEIDENTIFIERLOOSE', `${src[t.NUMERICIDENTIFIERLOOSE]}|x|X|\\\\*`)\ncreateToken('XRANGEIDENTIFIER', `${src[t.NUMERICIDENTIFIER]}|x|X|\\\\*`)\n\ncreateToken('XRANGEPLAIN', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:${src[t.PRERELEASE]})?${\n                     src[t.BUILD]}?` +\n                   `)?)?`)\n\ncreateToken('XRANGEPLAINLOOSE', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:${src[t.PRERELEASELOOSE]})?${\n                          src[t.BUILD]}?` +\n                        `)?)?`)\n\ncreateToken('XRANGE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAIN]}$`)\ncreateToken('XRANGELOOSE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Coercion.\n// Extract anything that could conceivably be a part of a valid semver\ncreateToken('COERCEPLAIN', `${'(^|[^\\\\d])' +\n              '(\\\\d{1,'}${MAX_SAFE_COMPONENT_LENGTH}})` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?`)\ncreateToken('COERCE', `${src[t.COERCEPLAIN]}(?:$|[^\\\\d])`)\ncreateToken('COERCEFULL', src[t.COERCEPLAIN] +\n              `(?:${src[t.PRERELEASE]})?` +\n              `(?:${src[t.BUILD]})?` +\n              `(?:$|[^\\\\d])`)\ncreateToken('COERCERTL', src[t.COERCE], true)\ncreateToken('COERCERTLFULL', src[t.COERCEFULL], true)\n\n// Tilde ranges.\n// Meaning is \"reasonably at or greater than\"\ncreateToken('LONETILDE', '(?:~>?)')\n\ncreateToken('TILDETRIM', `(\\\\s*)${src[t.LONETILDE]}\\\\s+`, true)\nexports.tildeTrimReplace = '$1~'\n\ncreateToken('TILDE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('TILDELOOSE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Caret ranges.\n// Meaning is \"at least and backwards compatible with\"\ncreateToken('LONECARET', '(?:\\\\^)')\n\ncreateToken('CARETTRIM', `(\\\\s*)${src[t.LONECARET]}\\\\s+`, true)\nexports.caretTrimReplace = '$1^'\n\ncreateToken('CARET', `^${src[t.LONECARET]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('CARETLOOSE', `^${src[t.LONECARET]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\ncreateToken('COMPARATORLOOSE', `^${src[t.GTLT]}\\\\s*(${src[t.LOOSEPLAIN]})$|^$`)\ncreateToken('COMPARATOR', `^${src[t.GTLT]}\\\\s*(${src[t.FULLPLAIN]})$|^$`)\n\n// An expression to strip any whitespace between the gtlt and the thing\n// it modifies, so that `> 1.2.3` ==> `>1.2.3`\ncreateToken('COMPARATORTRIM', `(\\\\s*)${src[t.GTLT]\n}\\\\s*(${src[t.LOOSEPLAIN]}|${src[t.XRANGEPLAIN]})`, true)\nexports.comparatorTrimReplace = '$1$2$3'\n\n// Something like `1.2.3 - 1.2.4`\n// Note that these all use the loose form, because they'll be\n// checked against either the strict or loose comparator form\n// later.\ncreateToken('HYPHENRANGE', `^\\\\s*(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s+-\\\\s+` +\n                   `(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s*$`)\n\ncreateToken('HYPHENRANGELOOSE', `^\\\\s*(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s+-\\\\s+` +\n                        `(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s*$`)\n\n// Star ranges basically just allow anything at all.\ncreateToken('STAR', '(<|>)?=?\\\\s*\\\\*')\n// >=0.0.0 is like a star\ncreateToken('GTE0', '^\\\\s*>=\\\\s*0\\\\.0\\\\.0\\\\s*$')\ncreateToken('GTE0PRE', '^\\\\s*>=\\\\s*0\\\\.0\\\\.0-0\\\\s*$')\n", "'use strict'\n\n// parse out just the options we care about\nconst looseOption = Object.freeze({ loose: true })\nconst emptyOpts = Object.freeze({ })\nconst parseOptions = options => {\n  if (!options) {\n    return emptyOpts\n  }\n\n  if (typeof options !== 'object') {\n    return looseOption\n  }\n\n  return options\n}\nmodule.exports = parseOptions\n", "'use strict'\n\nconst numeric = /^[0-9]+$/\nconst compareIdentifiers = (a, b) => {\n  const anum = numeric.test(a)\n  const bnum = numeric.test(b)\n\n  if (anum && bnum) {\n    a = +a\n    b = +b\n  }\n\n  return a === b ? 0\n    : (anum && !bnum) ? -1\n    : (bnum && !anum) ? 1\n    : a < b ? -1\n    : 1\n}\n\nconst rcompareIdentifiers = (a, b) => compareIdentifiers(b, a)\n\nmodule.exports = {\n  compareIdentifiers,\n  rcompareIdentifiers,\n}\n", "'use strict'\n\nconst debug = require('../internal/debug')\nconst { MAX_LENGTH, MAX_SAFE_INTEGER } = require('../internal/constants')\nconst { safeRe: re, t } = require('../internal/re')\n\nconst parseOptions = require('../internal/parse-options')\nconst { compareIdentifiers } = require('../internal/identifiers')\nclass SemVer {\n  constructor (version, options) {\n    options = parseOptions(options)\n\n    if (version instanceof SemVer) {\n      if (version.loose === !!options.loose &&\n        version.includePrerelease === !!options.includePrerelease) {\n        return version\n      } else {\n        version = version.version\n      }\n    } else if (typeof version !== 'string') {\n      throw new TypeError(`Invalid version. Must be a string. Got type \"${typeof version}\".`)\n    }\n\n    if (version.length > MAX_LENGTH) {\n      throw new TypeError(\n        `version is longer than ${MAX_LENGTH} characters`\n      )\n    }\n\n    debug('SemVer', version, options)\n    this.options = options\n    this.loose = !!options.loose\n    // this isn't actually relevant for versions, but keep it so that we\n    // don't run into trouble passing this.options around.\n    this.includePrerelease = !!options.includePrerelease\n\n    const m = version.trim().match(options.loose ? re[t.LOOSE] : re[t.FULL])\n\n    if (!m) {\n      throw new TypeError(`Invalid Version: ${version}`)\n    }\n\n    this.raw = version\n\n    // these are actually numbers\n    this.major = +m[1]\n    this.minor = +m[2]\n    this.patch = +m[3]\n\n    if (this.major > MAX_SAFE_INTEGER || this.major < 0) {\n      throw new TypeError('Invalid major version')\n    }\n\n    if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) {\n      throw new TypeError('Invalid minor version')\n    }\n\n    if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) {\n      throw new TypeError('Invalid patch version')\n    }\n\n    // numberify any prerelease numeric ids\n    if (!m[4]) {\n      this.prerelease = []\n    } else {\n      this.prerelease = m[4].split('.').map((id) => {\n        if (/^[0-9]+$/.test(id)) {\n          const num = +id\n          if (num >= 0 && num < MAX_SAFE_INTEGER) {\n            return num\n          }\n        }\n        return id\n      })\n    }\n\n    this.build = m[5] ? m[5].split('.') : []\n    this.format()\n  }\n\n  format () {\n    this.version = `${this.major}.${this.minor}.${this.patch}`\n    if (this.prerelease.length) {\n      this.version += `-${this.prerelease.join('.')}`\n    }\n    return this.version\n  }\n\n  toString () {\n    return this.version\n  }\n\n  compare (other) {\n    debug('SemVer.compare', this.version, this.options, other)\n    if (!(other instanceof SemVer)) {\n      if (typeof other === 'string' && other === this.version) {\n        return 0\n      }\n      other = new SemVer(other, this.options)\n    }\n\n    if (other.version === this.version) {\n      return 0\n    }\n\n    return this.compareMain(other) || this.comparePre(other)\n  }\n\n  compareMain (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    return (\n      compareIdentifiers(this.major, other.major) ||\n      compareIdentifiers(this.minor, other.minor) ||\n      compareIdentifiers(this.patch, other.patch)\n    )\n  }\n\n  comparePre (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    // NOT having a prerelease is > having one\n    if (this.prerelease.length && !other.prerelease.length) {\n      return -1\n    } else if (!this.prerelease.length && other.prerelease.length) {\n      return 1\n    } else if (!this.prerelease.length && !other.prerelease.length) {\n      return 0\n    }\n\n    let i = 0\n    do {\n      const a = this.prerelease[i]\n      const b = other.prerelease[i]\n      debug('prerelease compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  compareBuild (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    let i = 0\n    do {\n      const a = this.build[i]\n      const b = other.build[i]\n      debug('build compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  // preminor will bump the version up to the next minor release, and immediately\n  // down to pre-release. premajor and prepatch work the same way.\n  inc (release, identifier, identifierBase) {\n    if (release.startsWith('pre')) {\n      if (!identifier && identifierBase === false) {\n        throw new Error('invalid increment argument: identifier is empty')\n      }\n      // Avoid an invalid semver results\n      if (identifier) {\n        const match = `-${identifier}`.match(this.options.loose ? re[t.PRERELEASELOOSE] : re[t.PRERELEASE])\n        if (!match || match[1] !== identifier) {\n          throw new Error(`invalid identifier: ${identifier}`)\n        }\n      }\n    }\n\n    switch (release) {\n      case 'premajor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor = 0\n        this.major++\n        this.inc('pre', identifier, identifierBase)\n        break\n      case 'preminor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor++\n        this.inc('pre', identifier, identifierBase)\n        break\n      case 'prepatch':\n        // If this is already a prerelease, it will bump to the next version\n        // drop any prereleases that might already exist, since they are not\n        // relevant at this point.\n        this.prerelease.length = 0\n        this.inc('patch', identifier, identifierBase)\n        this.inc('pre', identifier, identifierBase)\n        break\n      // If the input is a non-prerelease version, this acts the same as\n      // prepatch.\n      case 'prerelease':\n        if (this.prerelease.length === 0) {\n          this.inc('patch', identifier, identifierBase)\n        }\n        this.inc('pre', identifier, identifierBase)\n        break\n      case 'release':\n        if (this.prerelease.length === 0) {\n          throw new Error(`version ${this.raw} is not a prerelease`)\n        }\n        this.prerelease.length = 0\n        break\n\n      case 'major':\n        // If this is a pre-major version, bump up to the same major version.\n        // Otherwise increment major.\n        // 1.0.0-5 bumps to 1.0.0\n        // 1.1.0 bumps to 2.0.0\n        if (\n          this.minor !== 0 ||\n          this.patch !== 0 ||\n          this.prerelease.length === 0\n        ) {\n          this.major++\n        }\n        this.minor = 0\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'minor':\n        // If this is a pre-minor version, bump up to the same minor version.\n        // Otherwise increment minor.\n        // 1.2.0-5 bumps to 1.2.0\n        // 1.2.1 bumps to 1.3.0\n        if (this.patch !== 0 || this.prerelease.length === 0) {\n          this.minor++\n        }\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'patch':\n        // If this is not a pre-release version, it will increment the patch.\n        // If it is a pre-release it will bump up to the same patch version.\n        // 1.2.0-5 patches to 1.2.0\n        // 1.2.0 patches to 1.2.1\n        if (this.prerelease.length === 0) {\n          this.patch++\n        }\n        this.prerelease = []\n        break\n      // This probably shouldn't be used publicly.\n      // 1.0.0 'pre' would become 1.0.0-0 which is the wrong direction.\n      case 'pre': {\n        const base = Number(identifierBase) ? 1 : 0\n\n        if (this.prerelease.length === 0) {\n          this.prerelease = [base]\n        } else {\n          let i = this.prerelease.length\n          while (--i >= 0) {\n            if (typeof this.prerelease[i] === 'number') {\n              this.prerelease[i]++\n              i = -2\n            }\n          }\n          if (i === -1) {\n            // didn't increment anything\n            if (identifier === this.prerelease.join('.') && identifierBase === false) {\n              throw new Error('invalid increment argument: identifier already exists')\n            }\n            this.prerelease.push(base)\n          }\n        }\n        if (identifier) {\n          // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\n          // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\n          let prerelease = [identifier, base]\n          if (identifierBase === false) {\n            prerelease = [identifier]\n          }\n          if (compareIdentifiers(this.prerelease[0], identifier) === 0) {\n            if (isNaN(this.prerelease[1])) {\n              this.prerelease = prerelease\n            }\n          } else {\n            this.prerelease = prerelease\n          }\n        }\n        break\n      }\n      default:\n        throw new Error(`invalid increment argument: ${release}`)\n    }\n    this.raw = this.format()\n    if (this.build.length) {\n      this.raw += `+${this.build.join('.')}`\n    }\n    return this\n  }\n}\n\nmodule.exports = SemVer\n", "'use strict'\n\nconst SemVer = require('../classes/semver')\nconst parse = (version, options, throwErrors = false) => {\n  if (version instanceof SemVer) {\n    return version\n  }\n  try {\n    return new SemVer(version, options)\n  } catch (er) {\n    if (!throwErrors) {\n      return null\n    }\n    throw er\n  }\n}\n\nmodule.exports = parse\n", "'use strict'\n\nconst parse = require('./parse')\nconst valid = (version, options) => {\n  const v = parse(version, options)\n  return v ? v.version : null\n}\nmodule.exports = valid\n", "'use strict'\n\nconst parse = require('./parse')\nconst clean = (version, options) => {\n  const s = parse(version.trim().replace(/^[=v]+/, ''), options)\n  return s ? s.version : null\n}\nmodule.exports = clean\n", "'use strict'\n\nconst SemVer = require('../classes/semver')\n\nconst inc = (version, release, options, identifier, identifierBase) => {\n  if (typeof (options) === 'string') {\n    identifierBase = identifier\n    identifier = options\n    options = undefined\n  }\n\n  try {\n    return new SemVer(\n      version instanceof SemVer ? version.version : version,\n      options\n    ).inc(release, identifier, identifierBase).version\n  } catch (er) {\n    return null\n  }\n}\nmodule.exports = inc\n", "'use strict'\n\nconst parse = require('./parse.js')\n\nconst diff = (version1, version2) => {\n  const v1 = parse(version1, null, true)\n  const v2 = parse(version2, null, true)\n  const comparison = v1.compare(v2)\n\n  if (comparison === 0) {\n    return null\n  }\n\n  const v1Higher = comparison > 0\n  const highVersion = v1Higher ? v1 : v2\n  const lowVersion = v1Higher ? v2 : v1\n  const highHasPre = !!highVersion.prerelease.length\n  const lowHasPre = !!lowVersion.prerelease.length\n\n  if (lowHasPre && !highHasPre) {\n    // Going from prerelease -> no prerelease requires some special casing\n\n    // If the low version has only a major, then it will always be a major\n    // Some examples:\n    // 1.0.0-1 -> 1.0.0\n    // 1.0.0-1 -> 1.1.1\n    // 1.0.0-1 -> 2.0.0\n    if (!lowVersion.patch && !lowVersion.minor) {\n      return 'major'\n    }\n\n    // If the main part has no difference\n    if (lowVersion.compareMain(highVersion) === 0) {\n      if (lowVersion.minor && !lowVersion.patch) {\n        return 'minor'\n      }\n      return 'patch'\n    }\n  }\n\n  // add the `pre` prefix if we are going to a prerelease version\n  const prefix = highHasPre ? 'pre' : ''\n\n  if (v1.major !== v2.major) {\n    return prefix + 'major'\n  }\n\n  if (v1.minor !== v2.minor) {\n    return prefix + 'minor'\n  }\n\n  if (v1.patch !== v2.patch) {\n    return prefix + 'patch'\n  }\n\n  // high and low are preleases\n  return 'prerelease'\n}\n\nmodule.exports = diff\n", "'use strict'\n\nconst SemVer = require('../classes/semver')\nconst major = (a, loose) => new SemVer(a, loose).major\nmodule.exports = major\n", "'use strict'\n\nconst SemVer = require('../classes/semver')\nconst minor = (a, loose) => new SemVer(a, loose).minor\nmodule.exports = minor\n", "'use strict'\n\nconst SemVer = require('../classes/semver')\nconst patch = (a, loose) => new SemVer(a, loose).patch\nmodule.exports = patch\n", "'use strict'\n\nconst parse = require('./parse')\nconst prerelease = (version, options) => {\n  const parsed = parse(version, options)\n  return (parsed && parsed.prerelease.length) ? parsed.prerelease : null\n}\nmodule.exports = prerelease\n", "'use strict'\n\nconst SemVer = require('../classes/semver')\nconst compare = (a, b, loose) =>\n  new SemVer(a, loose).compare(new SemVer(b, loose))\n\nmodule.exports = compare\n", "'use strict'\n\nconst compare = require('./compare')\nconst rcompare = (a, b, loose) => compare(b, a, loose)\nmodule.exports = rcompare\n", "'use strict'\n\nconst compare = require('./compare')\nconst compareLoose = (a, b) => compare(a, b, true)\nmodule.exports = compareLoose\n", "'use strict'\n\nconst SemVer = require('../classes/semver')\nconst compareBuild = (a, b, loose) => {\n  const versionA = new SemVer(a, loose)\n  const versionB = new SemVer(b, loose)\n  return versionA.compare(versionB) || versionA.compareBuild(versionB)\n}\nmodule.exports = compareBuild\n", "'use strict'\n\nconst compareBuild = require('./compare-build')\nconst sort = (list, loose) => list.sort((a, b) => compareBuild(a, b, loose))\nmodule.exports = sort\n", "'use strict'\n\nconst compareBuild = require('./compare-build')\nconst rsort = (list, loose) => list.sort((a, b) => compareBuild(b, a, loose))\nmodule.exports = rsort\n", "'use strict'\n\nconst compare = require('./compare')\nconst gt = (a, b, loose) => compare(a, b, loose) > 0\nmodule.exports = gt\n", "'use strict'\n\nconst compare = require('./compare')\nconst lt = (a, b, loose) => compare(a, b, loose) < 0\nmodule.exports = lt\n", "'use strict'\n\nconst compare = require('./compare')\nconst eq = (a, b, loose) => compare(a, b, loose) === 0\nmodule.exports = eq\n", "'use strict'\n\nconst compare = require('./compare')\nconst neq = (a, b, loose) => compare(a, b, loose) !== 0\nmodule.exports = neq\n", "'use strict'\n\nconst compare = require('./compare')\nconst gte = (a, b, loose) => compare(a, b, loose) >= 0\nmodule.exports = gte\n", "'use strict'\n\nconst compare = require('./compare')\nconst lte = (a, b, loose) => compare(a, b, loose) <= 0\nmodule.exports = lte\n", "'use strict'\n\nconst eq = require('./eq')\nconst neq = require('./neq')\nconst gt = require('./gt')\nconst gte = require('./gte')\nconst lt = require('./lt')\nconst lte = require('./lte')\n\nconst cmp = (a, op, b, loose) => {\n  switch (op) {\n    case '===':\n      if (typeof a === 'object') {\n        a = a.version\n      }\n      if (typeof b === 'object') {\n        b = b.version\n      }\n      return a === b\n\n    case '!==':\n      if (typeof a === 'object') {\n        a = a.version\n      }\n      if (typeof b === 'object') {\n        b = b.version\n      }\n      return a !== b\n\n    case '':\n    case '=':\n    case '==':\n      return eq(a, b, loose)\n\n    case '!=':\n      return neq(a, b, loose)\n\n    case '>':\n      return gt(a, b, loose)\n\n    case '>=':\n      return gte(a, b, loose)\n\n    case '<':\n      return lt(a, b, loose)\n\n    case '<=':\n      return lte(a, b, loose)\n\n    default:\n      throw new TypeError(`Invalid operator: ${op}`)\n  }\n}\nmodule.exports = cmp\n", "'use strict'\n\nconst SemVer = require('../classes/semver')\nconst parse = require('./parse')\nconst { safeRe: re, t } = require('../internal/re')\n\nconst coerce = (version, options) => {\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version === 'number') {\n    version = String(version)\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  options = options || {}\n\n  let match = null\n  if (!options.rtl) {\n    match = version.match(options.includePrerelease ? re[t.COERCEFULL] : re[t.COERCE])\n  } else {\n    // Find the right-most coercible string that does not share\n    // a terminus with a more left-ward coercible string.\n    // Eg, '1.2.3.4' wants to coerce '2.3.4', not '3.4' or '4'\n    // With includePrerelease option set, '1.2.3.4-rc' wants to coerce '2.3.4-rc', not '2.3.4'\n    //\n    // Walk through the string checking with a /g regexp\n    // Manually set the index so as to pick up overlapping matches.\n    // Stop when we get a match that ends at the string end, since no\n    // coercible string can be more right-ward without the same terminus.\n    const coerceRtlRegex = options.includePrerelease ? re[t.COERCERTLFULL] : re[t.COERCERTL]\n    let next\n    while ((next = coerceRtlRegex.exec(version)) &&\n        (!match || match.index + match[0].length !== version.length)\n    ) {\n      if (!match ||\n            next.index + next[0].length !== match.index + match[0].length) {\n        match = next\n      }\n      coerceRtlRegex.lastIndex = next.index + next[1].length + next[2].length\n    }\n    // leave it in a clean state\n    coerceRtlRegex.lastIndex = -1\n  }\n\n  if (match === null) {\n    return null\n  }\n\n  const major = match[2]\n  const minor = match[3] || '0'\n  const patch = match[4] || '0'\n  const prerelease = options.includePrerelease && match[5] ? `-${match[5]}` : ''\n  const build = options.includePrerelease && match[6] ? `+${match[6]}` : ''\n\n  return parse(`${major}.${minor}.${patch}${prerelease}${build}`, options)\n}\nmodule.exports = coerce\n", "'use strict'\n\nclass LRUCache {\n  constructor () {\n    this.max = 1000\n    this.map = new Map()\n  }\n\n  get (key) {\n    const value = this.map.get(key)\n    if (value === undefined) {\n      return undefined\n    } else {\n      // Remove the key from the map and add it to the end\n      this.map.delete(key)\n      this.map.set(key, value)\n      return value\n    }\n  }\n\n  delete (key) {\n    return this.map.delete(key)\n  }\n\n  set (key, value) {\n    const deleted = this.delete(key)\n\n    if (!deleted && value !== undefined) {\n      // If cache is full, delete the least recently used item\n      if (this.map.size >= this.max) {\n        const firstKey = this.map.keys().next().value\n        this.delete(firstKey)\n      }\n\n      this.map.set(key, value)\n    }\n\n    return this\n  }\n}\n\nmodule.exports = LRUCache\n", "'use strict'\n\nconst SPACE_CHARACTERS = /\\s+/g\n\n// hoisted class for cyclic dependency\nclass Range {\n  constructor (range, options) {\n    options = parseOptions(options)\n\n    if (range instanceof Range) {\n      if (\n        range.loose === !!options.loose &&\n        range.includePrerelease === !!options.includePrerelease\n      ) {\n        return range\n      } else {\n        return new Range(range.raw, options)\n      }\n    }\n\n    if (range instanceof Comparator) {\n      // just put it in the set and return\n      this.raw = range.value\n      this.set = [[range]]\n      this.formatted = undefined\n      return this\n    }\n\n    this.options = options\n    this.loose = !!options.loose\n    this.includePrerelease = !!options.includePrerelease\n\n    // First reduce all whitespace as much as possible so we do not have to rely\n    // on potentially slow regexes like \\s*. This is then stored and used for\n    // future error messages as well.\n    this.raw = range.trim().replace(SPACE_CHARACTERS, ' ')\n\n    // First, split on ||\n    this.set = this.raw\n      .split('||')\n      // map the range to a 2d array of comparators\n      .map(r => this.parseRange(r.trim()))\n      // throw out any comparator lists that are empty\n      // this generally means that it was not a valid range, which is allowed\n      // in loose mode, but will still throw if the WHOLE range is invalid.\n      .filter(c => c.length)\n\n    if (!this.set.length) {\n      throw new TypeError(`Invalid SemVer Range: ${this.raw}`)\n    }\n\n    // if we have any that are not the null set, throw out null sets.\n    if (this.set.length > 1) {\n      // keep the first one, in case they're all null sets\n      const first = this.set[0]\n      this.set = this.set.filter(c => !isNullSet(c[0]))\n      if (this.set.length === 0) {\n        this.set = [first]\n      } else if (this.set.length > 1) {\n        // if we have any that are *, then the range is just *\n        for (const c of this.set) {\n          if (c.length === 1 && isAny(c[0])) {\n            this.set = [c]\n            break\n          }\n        }\n      }\n    }\n\n    this.formatted = undefined\n  }\n\n  get range () {\n    if (this.formatted === undefined) {\n      this.formatted = ''\n      for (let i = 0; i < this.set.length; i++) {\n        if (i > 0) {\n          this.formatted += '||'\n        }\n        const comps = this.set[i]\n        for (let k = 0; k < comps.length; k++) {\n          if (k > 0) {\n            this.formatted += ' '\n          }\n          this.formatted += comps[k].toString().trim()\n        }\n      }\n    }\n    return this.formatted\n  }\n\n  format () {\n    return this.range\n  }\n\n  toString () {\n    return this.range\n  }\n\n  parseRange (range) {\n    // memoize range parsing for performance.\n    // this is a very hot path, and fully deterministic.\n    const memoOpts =\n      (this.options.includePrerelease && FLAG_INCLUDE_PRERELEASE) |\n      (this.options.loose && FLAG_LOOSE)\n    const memoKey = memoOpts + ':' + range\n    const cached = cache.get(memoKey)\n    if (cached) {\n      return cached\n    }\n\n    const loose = this.options.loose\n    // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`\n    const hr = loose ? re[t.HYPHENRANGELOOSE] : re[t.HYPHENRANGE]\n    range = range.replace(hr, hyphenReplace(this.options.includePrerelease))\n    debug('hyphen replace', range)\n\n    // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`\n    range = range.replace(re[t.COMPARATORTRIM], comparatorTrimReplace)\n    debug('comparator trim', range)\n\n    // `~ 1.2.3` => `~1.2.3`\n    range = range.replace(re[t.TILDETRIM], tildeTrimReplace)\n    debug('tilde trim', range)\n\n    // `^ 1.2.3` => `^1.2.3`\n    range = range.replace(re[t.CARETTRIM], caretTrimReplace)\n    debug('caret trim', range)\n\n    // At this point, the range is completely trimmed and\n    // ready to be split into comparators.\n\n    let rangeList = range\n      .split(' ')\n      .map(comp => parseComparator(comp, this.options))\n      .join(' ')\n      .split(/\\s+/)\n      // >=0.0.0 is equivalent to *\n      .map(comp => replaceGTE0(comp, this.options))\n\n    if (loose) {\n      // in loose mode, throw out any that are not valid comparators\n      rangeList = rangeList.filter(comp => {\n        debug('loose invalid filter', comp, this.options)\n        return !!comp.match(re[t.COMPARATORLOOSE])\n      })\n    }\n    debug('range list', rangeList)\n\n    // if any comparators are the null set, then replace with JUST null set\n    // if more than one comparator, remove any * comparators\n    // also, don't include the same comparator more than once\n    const rangeMap = new Map()\n    const comparators = rangeList.map(comp => new Comparator(comp, this.options))\n    for (const comp of comparators) {\n      if (isNullSet(comp)) {\n        return [comp]\n      }\n      rangeMap.set(comp.value, comp)\n    }\n    if (rangeMap.size > 1 && rangeMap.has('')) {\n      rangeMap.delete('')\n    }\n\n    const result = [...rangeMap.values()]\n    cache.set(memoKey, result)\n    return result\n  }\n\n  intersects (range, options) {\n    if (!(range instanceof Range)) {\n      throw new TypeError('a Range is required')\n    }\n\n    return this.set.some((thisComparators) => {\n      return (\n        isSatisfiable(thisComparators, options) &&\n        range.set.some((rangeComparators) => {\n          return (\n            isSatisfiable(rangeComparators, options) &&\n            thisComparators.every((thisComparator) => {\n              return rangeComparators.every((rangeComparator) => {\n                return thisComparator.intersects(rangeComparator, options)\n              })\n            })\n          )\n        })\n      )\n    })\n  }\n\n  // if ANY of the sets match ALL of its comparators, then pass\n  test (version) {\n    if (!version) {\n      return false\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    for (let i = 0; i < this.set.length; i++) {\n      if (testSet(this.set[i], version, this.options)) {\n        return true\n      }\n    }\n    return false\n  }\n}\n\nmodule.exports = Range\n\nconst LRU = require('../internal/lrucache')\nconst cache = new LRU()\n\nconst parseOptions = require('../internal/parse-options')\nconst Comparator = require('./comparator')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst {\n  safeRe: re,\n  t,\n  comparatorTrimReplace,\n  tildeTrimReplace,\n  caretTrimReplace,\n} = require('../internal/re')\nconst { FLAG_INCLUDE_PRERELEASE, FLAG_LOOSE } = require('../internal/constants')\n\nconst isNullSet = c => c.value === '<0.0.0-0'\nconst isAny = c => c.value === ''\n\n// take a set of comparators and determine whether there\n// exists a version which can satisfy it\nconst isSatisfiable = (comparators, options) => {\n  let result = true\n  const remainingComparators = comparators.slice()\n  let testComparator = remainingComparators.pop()\n\n  while (result && remainingComparators.length) {\n    result = remainingComparators.every((otherComparator) => {\n      return testComparator.intersects(otherComparator, options)\n    })\n\n    testComparator = remainingComparators.pop()\n  }\n\n  return result\n}\n\n// comprised of xranges, tildes, stars, and gtlt's at this point.\n// already replaced the hyphen ranges\n// turn into a set of JUST comparators.\nconst parseComparator = (comp, options) => {\n  debug('comp', comp, options)\n  comp = replaceCarets(comp, options)\n  debug('caret', comp)\n  comp = replaceTildes(comp, options)\n  debug('tildes', comp)\n  comp = replaceXRanges(comp, options)\n  debug('xrange', comp)\n  comp = replaceStars(comp, options)\n  debug('stars', comp)\n  return comp\n}\n\nconst isX = id => !id || id.toLowerCase() === 'x' || id === '*'\n\n// ~, ~> --> * (any, kinda silly)\n// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0-0\n// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0-0\n// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0-0\n// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0-0\n// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0-0\n// ~0.0.1 --> >=0.0.1 <0.1.0-0\nconst replaceTildes = (comp, options) => {\n  return comp\n    .trim()\n    .split(/\\s+/)\n    .map((c) => replaceTilde(c, options))\n    .join(' ')\n}\n\nconst replaceTilde = (comp, options) => {\n  const r = options.loose ? re[t.TILDELOOSE] : re[t.TILDE]\n  return comp.replace(r, (_, M, m, p, pr) => {\n    debug('tilde', comp, _, M, m, p, pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0 <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      // ~1.2 == >=1.2.0 <1.3.0-0\n      ret = `>=${M}.${m}.0 <${M}.${+m + 1}.0-0`\n    } else if (pr) {\n      debug('replaceTilde pr', pr)\n      ret = `>=${M}.${m}.${p}-${pr\n      } <${M}.${+m + 1}.0-0`\n    } else {\n      // ~1.2.3 == >=1.2.3 <1.3.0-0\n      ret = `>=${M}.${m}.${p\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('tilde return', ret)\n    return ret\n  })\n}\n\n// ^ --> * (any, kinda silly)\n// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0-0\n// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0-0\n// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0-0\n// ^1.2.3 --> >=1.2.3 <2.0.0-0\n// ^1.2.0 --> >=1.2.0 <2.0.0-0\n// ^0.0.1 --> >=0.0.1 <0.0.2-0\n// ^0.1.0 --> >=0.1.0 <0.2.0-0\nconst replaceCarets = (comp, options) => {\n  return comp\n    .trim()\n    .split(/\\s+/)\n    .map((c) => replaceCaret(c, options))\n    .join(' ')\n}\n\nconst replaceCaret = (comp, options) => {\n  debug('caret', comp, options)\n  const r = options.loose ? re[t.CARETLOOSE] : re[t.CARET]\n  const z = options.includePrerelease ? '-0' : ''\n  return comp.replace(r, (_, M, m, p, pr) => {\n    debug('caret', comp, _, M, m, p, pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0${z} <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      if (M === '0') {\n        ret = `>=${M}.${m}.0${z} <${M}.${+m + 1}.0-0`\n      } else {\n        ret = `>=${M}.${m}.0${z} <${+M + 1}.0.0-0`\n      }\n    } else if (pr) {\n      debug('replaceCaret pr', pr)\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p}-${pr\n        } <${+M + 1}.0.0-0`\n      }\n    } else {\n      debug('no pr')\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p\n        } <${+M + 1}.0.0-0`\n      }\n    }\n\n    debug('caret return', ret)\n    return ret\n  })\n}\n\nconst replaceXRanges = (comp, options) => {\n  debug('replaceXRanges', comp, options)\n  return comp\n    .split(/\\s+/)\n    .map((c) => replaceXRange(c, options))\n    .join(' ')\n}\n\nconst replaceXRange = (comp, options) => {\n  comp = comp.trim()\n  const r = options.loose ? re[t.XRANGELOOSE] : re[t.XRANGE]\n  return comp.replace(r, (ret, gtlt, M, m, p, pr) => {\n    debug('xRange', comp, ret, gtlt, M, m, p, pr)\n    const xM = isX(M)\n    const xm = xM || isX(m)\n    const xp = xm || isX(p)\n    const anyX = xp\n\n    if (gtlt === '=' && anyX) {\n      gtlt = ''\n    }\n\n    // if we're including prereleases in the match, then we need\n    // to fix this to -0, the lowest possible prerelease value\n    pr = options.includePrerelease ? '-0' : ''\n\n    if (xM) {\n      if (gtlt === '>' || gtlt === '<') {\n        // nothing is allowed\n        ret = '<0.0.0-0'\n      } else {\n        // nothing is forbidden\n        ret = '*'\n      }\n    } else if (gtlt && anyX) {\n      // we know patch is an x, because we have any x at all.\n      // replace X with 0\n      if (xm) {\n        m = 0\n      }\n      p = 0\n\n      if (gtlt === '>') {\n        // >1 => >=2.0.0\n        // >1.2 => >=1.3.0\n        gtlt = '>='\n        if (xm) {\n          M = +M + 1\n          m = 0\n          p = 0\n        } else {\n          m = +m + 1\n          p = 0\n        }\n      } else if (gtlt === '<=') {\n        // <=0.7.x is actually <0.8.0, since any 0.7.x should\n        // pass.  Similarly, <=7.x is actually <8.0.0, etc.\n        gtlt = '<'\n        if (xm) {\n          M = +M + 1\n        } else {\n          m = +m + 1\n        }\n      }\n\n      if (gtlt === '<') {\n        pr = '-0'\n      }\n\n      ret = `${gtlt + M}.${m}.${p}${pr}`\n    } else if (xm) {\n      ret = `>=${M}.0.0${pr} <${+M + 1}.0.0-0`\n    } else if (xp) {\n      ret = `>=${M}.${m}.0${pr\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('xRange return', ret)\n\n    return ret\n  })\n}\n\n// Because * is AND-ed with everything else in the comparator,\n// and '' means \"any version\", just remove the *s entirely.\nconst replaceStars = (comp, options) => {\n  debug('replaceStars', comp, options)\n  // Looseness is ignored here.  star is always as loose as it gets!\n  return comp\n    .trim()\n    .replace(re[t.STAR], '')\n}\n\nconst replaceGTE0 = (comp, options) => {\n  debug('replaceGTE0', comp, options)\n  return comp\n    .trim()\n    .replace(re[options.includePrerelease ? t.GTE0PRE : t.GTE0], '')\n}\n\n// This function is passed to string.replace(re[t.HYPHENRANGE])\n// M, m, patch, prerelease, build\n// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\n// 1.2.3 - 3.4 => >=1.2.0 <3.5.0-0 Any 3.4.x will do\n// 1.2 - 3.4 => >=1.2.0 <3.5.0-0\n// TODO build?\nconst hyphenReplace = incPr => ($0,\n  from, fM, fm, fp, fpr, fb,\n  to, tM, tm, tp, tpr) => {\n  if (isX(fM)) {\n    from = ''\n  } else if (isX(fm)) {\n    from = `>=${fM}.0.0${incPr ? '-0' : ''}`\n  } else if (isX(fp)) {\n    from = `>=${fM}.${fm}.0${incPr ? '-0' : ''}`\n  } else if (fpr) {\n    from = `>=${from}`\n  } else {\n    from = `>=${from}${incPr ? '-0' : ''}`\n  }\n\n  if (isX(tM)) {\n    to = ''\n  } else if (isX(tm)) {\n    to = `<${+tM + 1}.0.0-0`\n  } else if (isX(tp)) {\n    to = `<${tM}.${+tm + 1}.0-0`\n  } else if (tpr) {\n    to = `<=${tM}.${tm}.${tp}-${tpr}`\n  } else if (incPr) {\n    to = `<${tM}.${tm}.${+tp + 1}-0`\n  } else {\n    to = `<=${to}`\n  }\n\n  return `${from} ${to}`.trim()\n}\n\nconst testSet = (set, version, options) => {\n  for (let i = 0; i < set.length; i++) {\n    if (!set[i].test(version)) {\n      return false\n    }\n  }\n\n  if (version.prerelease.length && !options.includePrerelease) {\n    // Find the set of versions that are allowed to have prereleases\n    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0\n    // That should allow `1.2.3-pr.2` to pass.\n    // However, `1.2.4-alpha.notready` should NOT be allowed,\n    // even though it's within the range set by the comparators.\n    for (let i = 0; i < set.length; i++) {\n      debug(set[i].semver)\n      if (set[i].semver === Comparator.ANY) {\n        continue\n      }\n\n      if (set[i].semver.prerelease.length > 0) {\n        const allowed = set[i].semver\n        if (allowed.major === version.major &&\n            allowed.minor === version.minor &&\n            allowed.patch === version.patch) {\n          return true\n        }\n      }\n    }\n\n    // Version has a -pre, but it's not one of the ones we like.\n    return false\n  }\n\n  return true\n}\n", "'use strict'\n\nconst ANY = Symbol('SemVer ANY')\n// hoisted class for cyclic dependency\nclass Comparator {\n  static get ANY () {\n    return ANY\n  }\n\n  constructor (comp, options) {\n    options = parseOptions(options)\n\n    if (comp instanceof Comparator) {\n      if (comp.loose === !!options.loose) {\n        return comp\n      } else {\n        comp = comp.value\n      }\n    }\n\n    comp = comp.trim().split(/\\s+/).join(' ')\n    debug('comparator', comp, options)\n    this.options = options\n    this.loose = !!options.loose\n    this.parse(comp)\n\n    if (this.semver === ANY) {\n      this.value = ''\n    } else {\n      this.value = this.operator + this.semver.version\n    }\n\n    debug('comp', this)\n  }\n\n  parse (comp) {\n    const r = this.options.loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR]\n    const m = comp.match(r)\n\n    if (!m) {\n      throw new TypeError(`Invalid comparator: ${comp}`)\n    }\n\n    this.operator = m[1] !== undefined ? m[1] : ''\n    if (this.operator === '=') {\n      this.operator = ''\n    }\n\n    // if it literally is just '>' or '' then allow anything.\n    if (!m[2]) {\n      this.semver = ANY\n    } else {\n      this.semver = new SemVer(m[2], this.options.loose)\n    }\n  }\n\n  toString () {\n    return this.value\n  }\n\n  test (version) {\n    debug('Comparator.test', version, this.options.loose)\n\n    if (this.semver === ANY || version === ANY) {\n      return true\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    return cmp(version, this.operator, this.semver, this.options)\n  }\n\n  intersects (comp, options) {\n    if (!(comp instanceof Comparator)) {\n      throw new TypeError('a Comparator is required')\n    }\n\n    if (this.operator === '') {\n      if (this.value === '') {\n        return true\n      }\n      return new Range(comp.value, options).test(this.value)\n    } else if (comp.operator === '') {\n      if (comp.value === '') {\n        return true\n      }\n      return new Range(this.value, options).test(comp.semver)\n    }\n\n    options = parseOptions(options)\n\n    // Special cases where nothing can possibly be lower\n    if (options.includePrerelease &&\n      (this.value === '<0.0.0-0' || comp.value === '<0.0.0-0')) {\n      return false\n    }\n    if (!options.includePrerelease &&\n      (this.value.startsWith('<0.0.0') || comp.value.startsWith('<0.0.0'))) {\n      return false\n    }\n\n    // Same direction increasing (> or >=)\n    if (this.operator.startsWith('>') && comp.operator.startsWith('>')) {\n      return true\n    }\n    // Same direction decreasing (< or <=)\n    if (this.operator.startsWith('<') && comp.operator.startsWith('<')) {\n      return true\n    }\n    // same SemVer and both sides are inclusive (<= or >=)\n    if (\n      (this.semver.version === comp.semver.version) &&\n      this.operator.includes('=') && comp.operator.includes('=')) {\n      return true\n    }\n    // opposite directions less than\n    if (cmp(this.semver, '<', comp.semver, options) &&\n      this.operator.startsWith('>') && comp.operator.startsWith('<')) {\n      return true\n    }\n    // opposite directions greater than\n    if (cmp(this.semver, '>', comp.semver, options) &&\n      this.operator.startsWith('<') && comp.operator.startsWith('>')) {\n      return true\n    }\n    return false\n  }\n}\n\nmodule.exports = Comparator\n\nconst parseOptions = require('../internal/parse-options')\nconst { safeRe: re, t } = require('../internal/re')\nconst cmp = require('../functions/cmp')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst Range = require('./range')\n", "'use strict'\n\nconst Range = require('../classes/range')\nconst satisfies = (version, range, options) => {\n  try {\n    range = new Range(range, options)\n  } catch (er) {\n    return false\n  }\n  return range.test(version)\n}\nmodule.exports = satisfies\n", "'use strict'\n\nconst Range = require('../classes/range')\n\n// Mostly just for testing and legacy API reasons\nconst toComparators = (range, options) =>\n  new Range(range, options).set\n    .map(comp => comp.map(c => c.value).join(' ').trim().split(' '))\n\nmodule.exports = toComparators\n", "'use strict'\n\nconst SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\n\nconst maxSatisfying = (versions, range, options) => {\n  let max = null\n  let maxSV = null\n  let rangeObj = null\n  try {\n    rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach((v) => {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!max || maxSV.compare(v) === -1) {\n        // compare(max, v, true)\n        max = v\n        maxSV = new SemVer(max, options)\n      }\n    }\n  })\n  return max\n}\nmodule.exports = maxSatisfying\n", "'use strict'\n\nconst SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\nconst minSatisfying = (versions, range, options) => {\n  let min = null\n  let minSV = null\n  let rangeObj = null\n  try {\n    rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach((v) => {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!min || minSV.compare(v) === 1) {\n        // compare(min, v, true)\n        min = v\n        minSV = new SemVer(min, options)\n      }\n    }\n  })\n  return min\n}\nmodule.exports = minSatisfying\n", "'use strict'\n\nconst SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\nconst gt = require('../functions/gt')\n\nconst minVersion = (range, loose) => {\n  range = new Range(range, loose)\n\n  let minver = new SemVer('0.0.0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = new SemVer('0.0.0-0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = null\n  for (let i = 0; i < range.set.length; ++i) {\n    const comparators = range.set[i]\n\n    let setMin = null\n    comparators.forEach((comparator) => {\n      // Clone to avoid manipulating the comparator's semver object.\n      const compver = new SemVer(comparator.semver.version)\n      switch (comparator.operator) {\n        case '>':\n          if (compver.prerelease.length === 0) {\n            compver.patch++\n          } else {\n            compver.prerelease.push(0)\n          }\n          compver.raw = compver.format()\n          /* fallthrough */\n        case '':\n        case '>=':\n          if (!setMin || gt(compver, setMin)) {\n            setMin = compver\n          }\n          break\n        case '<':\n        case '<=':\n          /* Ignore maximum versions */\n          break\n        /* istanbul ignore next */\n        default:\n          throw new Error(`Unexpected operation: ${comparator.operator}`)\n      }\n    })\n    if (setMin && (!minver || gt(minver, setMin))) {\n      minver = setMin\n    }\n  }\n\n  if (minver && range.test(minver)) {\n    return minver\n  }\n\n  return null\n}\nmodule.exports = minVersion\n", "'use strict'\n\nconst Range = require('../classes/range')\nconst validRange = (range, options) => {\n  try {\n    // Return '*' instead of '' so that truthiness works.\n    // This will throw if it's invalid anyway\n    return new Range(range, options).range || '*'\n  } catch (er) {\n    return null\n  }\n}\nmodule.exports = validRange\n", "'use strict'\n\nconst SemVer = require('../classes/semver')\nconst Comparator = require('../classes/comparator')\nconst { ANY } = Comparator\nconst Range = require('../classes/range')\nconst satisfies = require('../functions/satisfies')\nconst gt = require('../functions/gt')\nconst lt = require('../functions/lt')\nconst lte = require('../functions/lte')\nconst gte = require('../functions/gte')\n\nconst outside = (version, range, hilo, options) => {\n  version = new SemVer(version, options)\n  range = new Range(range, options)\n\n  let gtfn, ltefn, ltfn, comp, ecomp\n  switch (hilo) {\n    case '>':\n      gtfn = gt\n      ltefn = lte\n      ltfn = lt\n      comp = '>'\n      ecomp = '>='\n      break\n    case '<':\n      gtfn = lt\n      ltefn = gte\n      ltfn = gt\n      comp = '<'\n      ecomp = '<='\n      break\n    default:\n      throw new TypeError('Must provide a hilo val of \"<\" or \">\"')\n  }\n\n  // If it satisfies the range it is not outside\n  if (satisfies(version, range, options)) {\n    return false\n  }\n\n  // From now on, variable terms are as if we're in \"gtr\" mode.\n  // but note that everything is flipped for the \"ltr\" function.\n\n  for (let i = 0; i < range.set.length; ++i) {\n    const comparators = range.set[i]\n\n    let high = null\n    let low = null\n\n    comparators.forEach((comparator) => {\n      if (comparator.semver === ANY) {\n        comparator = new Comparator('>=0.0.0')\n      }\n      high = high || comparator\n      low = low || comparator\n      if (gtfn(comparator.semver, high.semver, options)) {\n        high = comparator\n      } else if (ltfn(comparator.semver, low.semver, options)) {\n        low = comparator\n      }\n    })\n\n    // If the edge version comparator has a operator then our version\n    // isn't outside it\n    if (high.operator === comp || high.operator === ecomp) {\n      return false\n    }\n\n    // If the lowest version comparator has an operator and our version\n    // is less than it then it isn't higher than the range\n    if ((!low.operator || low.operator === comp) &&\n        ltefn(version, low.semver)) {\n      return false\n    } else if (low.operator === ecomp && ltfn(version, low.semver)) {\n      return false\n    }\n  }\n  return true\n}\n\nmodule.exports = outside\n", "'use strict'\n\n// Determine if version is greater than all the versions possible in the range.\nconst outside = require('./outside')\nconst gtr = (version, range, options) => outside(version, range, '>', options)\nmodule.exports = gtr\n", "'use strict'\n\nconst outside = require('./outside')\n// Determine if version is less than all the versions possible in the range\nconst ltr = (version, range, options) => outside(version, range, '<', options)\nmodule.exports = ltr\n", "'use strict'\n\nconst Range = require('../classes/range')\nconst intersects = (r1, r2, options) => {\n  r1 = new Range(r1, options)\n  r2 = new Range(r2, options)\n  return r1.intersects(r2, options)\n}\nmodule.exports = intersects\n", "'use strict'\n\n// given a set of versions and a range, create a \"simplified\" range\n// that includes the same versions that the original range does\n// If the original range is shorter than the simplified one, return that.\nconst satisfies = require('../functions/satisfies.js')\nconst compare = require('../functions/compare.js')\nmodule.exports = (versions, range, options) => {\n  const set = []\n  let first = null\n  let prev = null\n  const v = versions.sort((a, b) => compare(a, b, options))\n  for (const version of v) {\n    const included = satisfies(version, range, options)\n    if (included) {\n      prev = version\n      if (!first) {\n        first = version\n      }\n    } else {\n      if (prev) {\n        set.push([first, prev])\n      }\n      prev = null\n      first = null\n    }\n  }\n  if (first) {\n    set.push([first, null])\n  }\n\n  const ranges = []\n  for (const [min, max] of set) {\n    if (min === max) {\n      ranges.push(min)\n    } else if (!max && min === v[0]) {\n      ranges.push('*')\n    } else if (!max) {\n      ranges.push(`>=${min}`)\n    } else if (min === v[0]) {\n      ranges.push(`<=${max}`)\n    } else {\n      ranges.push(`${min} - ${max}`)\n    }\n  }\n  const simplified = ranges.join(' || ')\n  const original = typeof range.raw === 'string' ? range.raw : String(range)\n  return simplified.length < original.length ? simplified : range\n}\n", "'use strict'\n\nconst Range = require('../classes/range.js')\nconst Comparator = require('../classes/comparator.js')\nconst { ANY } = Comparator\nconst satisfies = require('../functions/satisfies.js')\nconst compare = require('../functions/compare.js')\n\n// Complex range `r1 || r2 || ...` is a subset of `R1 || R2 || ...` iff:\n// - Every simple range `r1, r2, ...` is a null set, OR\n// - Every simple range `r1, r2, ...` which is not a null set is a subset of\n//   some `R1, R2, ...`\n//\n// Simple range `c1 c2 ...` is a subset of simple range `C1 C2 ...` iff:\n// - If c is only the ANY comparator\n//   - If C is only the ANY comparator, return true\n//   - Else if in prerelease mode, return false\n//   - else replace c with `[>=0.0.0]`\n// - If C is only the ANY comparator\n//   - if in prerelease mode, return true\n//   - else replace C with `[>=0.0.0]`\n// - Let EQ be the set of = comparators in c\n// - If EQ is more than one, return true (null set)\n// - Let GT be the highest > or >= comparator in c\n// - Let LT be the lowest < or <= comparator in c\n// - If GT and LT, and GT.semver > LT.semver, return true (null set)\n// - If any C is a = range, and GT or LT are set, return false\n// - If EQ\n//   - If GT, and EQ does not satisfy GT, return true (null set)\n//   - If LT, and EQ does not satisfy LT, return true (null set)\n//   - If EQ satisfies every C, return true\n//   - Else return false\n// - If GT\n//   - If GT.semver is lower than any > or >= comp in C, return false\n//   - If GT is >=, and GT.semver does not satisfy every C, return false\n//   - If GT.semver has a prerelease, and not in prerelease mode\n//     - If no C has a prerelease and the GT.semver tuple, return false\n// - If LT\n//   - If LT.semver is greater than any < or <= comp in C, return false\n//   - If LT is <=, and LT.semver does not satisfy every C, return false\n//   - If GT.semver has a prerelease, and not in prerelease mode\n//     - If no C has a prerelease and the LT.semver tuple, return false\n// - Else return true\n\nconst subset = (sub, dom, options = {}) => {\n  if (sub === dom) {\n    return true\n  }\n\n  sub = new Range(sub, options)\n  dom = new Range(dom, options)\n  let sawNonNull = false\n\n  OUTER: for (const simpleSub of sub.set) {\n    for (const simpleDom of dom.set) {\n      const isSub = simpleSubset(simpleSub, simpleDom, options)\n      sawNonNull = sawNonNull || isSub !== null\n      if (isSub) {\n        continue OUTER\n      }\n    }\n    // the null set is a subset of everything, but null simple ranges in\n    // a complex range should be ignored.  so if we saw a non-null range,\n    // then we know this isn't a subset, but if EVERY simple range was null,\n    // then it is a subset.\n    if (sawNonNull) {\n      return false\n    }\n  }\n  return true\n}\n\nconst minimumVersionWithPreRelease = [new Comparator('>=0.0.0-0')]\nconst minimumVersion = [new Comparator('>=0.0.0')]\n\nconst simpleSubset = (sub, dom, options) => {\n  if (sub === dom) {\n    return true\n  }\n\n  if (sub.length === 1 && sub[0].semver === ANY) {\n    if (dom.length === 1 && dom[0].semver === ANY) {\n      return true\n    } else if (options.includePrerelease) {\n      sub = minimumVersionWithPreRelease\n    } else {\n      sub = minimumVersion\n    }\n  }\n\n  if (dom.length === 1 && dom[0].semver === ANY) {\n    if (options.includePrerelease) {\n      return true\n    } else {\n      dom = minimumVersion\n    }\n  }\n\n  const eqSet = new Set()\n  let gt, lt\n  for (const c of sub) {\n    if (c.operator === '>' || c.operator === '>=') {\n      gt = higherGT(gt, c, options)\n    } else if (c.operator === '<' || c.operator === '<=') {\n      lt = lowerLT(lt, c, options)\n    } else {\n      eqSet.add(c.semver)\n    }\n  }\n\n  if (eqSet.size > 1) {\n    return null\n  }\n\n  let gtltComp\n  if (gt && lt) {\n    gtltComp = compare(gt.semver, lt.semver, options)\n    if (gtltComp > 0) {\n      return null\n    } else if (gtltComp === 0 && (gt.operator !== '>=' || lt.operator !== '<=')) {\n      return null\n    }\n  }\n\n  // will iterate one or zero times\n  for (const eq of eqSet) {\n    if (gt && !satisfies(eq, String(gt), options)) {\n      return null\n    }\n\n    if (lt && !satisfies(eq, String(lt), options)) {\n      return null\n    }\n\n    for (const c of dom) {\n      if (!satisfies(eq, String(c), options)) {\n        return false\n      }\n    }\n\n    return true\n  }\n\n  let higher, lower\n  let hasDomLT, hasDomGT\n  // if the subset has a prerelease, we need a comparator in the superset\n  // with the same tuple and a prerelease, or it's not a subset\n  let needDomLTPre = lt &&\n    !options.includePrerelease &&\n    lt.semver.prerelease.length ? lt.semver : false\n  let needDomGTPre = gt &&\n    !options.includePrerelease &&\n    gt.semver.prerelease.length ? gt.semver : false\n  // exception: <1.2.3-0 is the same as <1.2.3\n  if (needDomLTPre && needDomLTPre.prerelease.length === 1 &&\n      lt.operator === '<' && needDomLTPre.prerelease[0] === 0) {\n    needDomLTPre = false\n  }\n\n  for (const c of dom) {\n    hasDomGT = hasDomGT || c.operator === '>' || c.operator === '>='\n    hasDomLT = hasDomLT || c.operator === '<' || c.operator === '<='\n    if (gt) {\n      if (needDomGTPre) {\n        if (c.semver.prerelease && c.semver.prerelease.length &&\n            c.semver.major === needDomGTPre.major &&\n            c.semver.minor === needDomGTPre.minor &&\n            c.semver.patch === needDomGTPre.patch) {\n          needDomGTPre = false\n        }\n      }\n      if (c.operator === '>' || c.operator === '>=') {\n        higher = higherGT(gt, c, options)\n        if (higher === c && higher !== gt) {\n          return false\n        }\n      } else if (gt.operator === '>=' && !satisfies(gt.semver, String(c), options)) {\n        return false\n      }\n    }\n    if (lt) {\n      if (needDomLTPre) {\n        if (c.semver.prerelease && c.semver.prerelease.length &&\n            c.semver.major === needDomLTPre.major &&\n            c.semver.minor === needDomLTPre.minor &&\n            c.semver.patch === needDomLTPre.patch) {\n          needDomLTPre = false\n        }\n      }\n      if (c.operator === '<' || c.operator === '<=') {\n        lower = lowerLT(lt, c, options)\n        if (lower === c && lower !== lt) {\n          return false\n        }\n      } else if (lt.operator === '<=' && !satisfies(lt.semver, String(c), options)) {\n        return false\n      }\n    }\n    if (!c.operator && (lt || gt) && gtltComp !== 0) {\n      return false\n    }\n  }\n\n  // if there was a < or >, and nothing in the dom, then must be false\n  // UNLESS it was limited by another range in the other direction.\n  // Eg, >1.0.0 <1.0.1 is still a subset of <2.0.0\n  if (gt && hasDomLT && !lt && gtltComp !== 0) {\n    return false\n  }\n\n  if (lt && hasDomGT && !gt && gtltComp !== 0) {\n    return false\n  }\n\n  // we needed a prerelease range in a specific tuple, but didn't get one\n  // then this isn't a subset.  eg >=1.2.3-pre is not a subset of >=1.0.0,\n  // because it includes prereleases in the 1.2.3 tuple\n  if (needDomGTPre || needDomLTPre) {\n    return false\n  }\n\n  return true\n}\n\n// >=1.2.3 is lower than >1.2.3\nconst higherGT = (a, b, options) => {\n  if (!a) {\n    return b\n  }\n  const comp = compare(a.semver, b.semver, options)\n  return comp > 0 ? a\n    : comp < 0 ? b\n    : b.operator === '>' && a.operator === '>=' ? b\n    : a\n}\n\n// <=1.2.3 is higher than <1.2.3\nconst lowerLT = (a, b, options) => {\n  if (!a) {\n    return b\n  }\n  const comp = compare(a.semver, b.semver, options)\n  return comp < 0 ? a\n    : comp > 0 ? b\n    : b.operator === '<' && a.operator === '<=' ? b\n    : a\n}\n\nmodule.exports = subset\n", "'use strict'\n\n// just pre-load all the stuff that index.js lazily exports\nconst internalRe = require('./internal/re')\nconst constants = require('./internal/constants')\nconst SemVer = require('./classes/semver')\nconst identifiers = require('./internal/identifiers')\nconst parse = require('./functions/parse')\nconst valid = require('./functions/valid')\nconst clean = require('./functions/clean')\nconst inc = require('./functions/inc')\nconst diff = require('./functions/diff')\nconst major = require('./functions/major')\nconst minor = require('./functions/minor')\nconst patch = require('./functions/patch')\nconst prerelease = require('./functions/prerelease')\nconst compare = require('./functions/compare')\nconst rcompare = require('./functions/rcompare')\nconst compareLoose = require('./functions/compare-loose')\nconst compareBuild = require('./functions/compare-build')\nconst sort = require('./functions/sort')\nconst rsort = require('./functions/rsort')\nconst gt = require('./functions/gt')\nconst lt = require('./functions/lt')\nconst eq = require('./functions/eq')\nconst neq = require('./functions/neq')\nconst gte = require('./functions/gte')\nconst lte = require('./functions/lte')\nconst cmp = require('./functions/cmp')\nconst coerce = require('./functions/coerce')\nconst Comparator = require('./classes/comparator')\nconst Range = require('./classes/range')\nconst satisfies = require('./functions/satisfies')\nconst toComparators = require('./ranges/to-comparators')\nconst maxSatisfying = require('./ranges/max-satisfying')\nconst minSatisfying = require('./ranges/min-satisfying')\nconst minVersion = require('./ranges/min-version')\nconst validRange = require('./ranges/valid')\nconst outside = require('./ranges/outside')\nconst gtr = require('./ranges/gtr')\nconst ltr = require('./ranges/ltr')\nconst intersects = require('./ranges/intersects')\nconst simplifyRange = require('./ranges/simplify')\nconst subset = require('./ranges/subset')\nmodule.exports = {\n  parse,\n  valid,\n  clean,\n  inc,\n  diff,\n  major,\n  minor,\n  patch,\n  prerelease,\n  compare,\n  rcompare,\n  compareLoose,\n  compareBuild,\n  sort,\n  rsort,\n  gt,\n  lt,\n  eq,\n  neq,\n  gte,\n  lte,\n  cmp,\n  coerce,\n  Comparator,\n  Range,\n  satisfies,\n  toComparators,\n  maxSatisfying,\n  minSatisfying,\n  minVersion,\n  validRange,\n  outside,\n  gtr,\n  ltr,\n  intersects,\n  simplifyRange,\n  subset,\n  SemVer,\n  re: internalRe.re,\n  src: internalRe.src,\n  tokens: internalRe.t,\n  SEMVER_SPEC_VERSION: constants.SEMVER_SPEC_VERSION,\n  RELEASE_TYPES: constants.RELEASE_TYPES,\n  compareIdentifiers: identifiers.compareIdentifiers,\n  rcompareIdentifiers: identifiers.rcompareIdentifiers,\n}\n", "const semver = require('semver');\n\nmodule.exports = semver.satisfies(process.version, '>=15.7.0');\n", "const semver = require('semver');\n\nmodule.exports = semver.satisfies(process.version, '>=16.9.0');\n", "const ASYMMETRIC_KEY_DETAILS_SUPPORTED = require('./asymmetricKeyDetailsSupported');\nconst RSA_PSS_KEY_DETAILS_SUPPORTED = require('./rsaPssKeyDetailsSupported');\n\nconst allowedAlgorithmsForKeys = {\n  'ec': ['ES256', 'ES384', 'ES512'],\n  'rsa': ['RS256', 'PS256', 'RS384', 'PS384', 'RS512', 'PS512'],\n  'rsa-pss': ['PS256', 'PS384', 'PS512']\n};\n\nconst allowedCurves = {\n  ES256: 'prime256v1',\n  ES384: 'secp384r1',\n  ES512: 'secp521r1',\n};\n\nmodule.exports = function(algorithm, key) {\n  if (!algorithm || !key) return;\n\n  const keyType = key.asymmetricKeyType;\n  if (!keyType) return;\n\n  const allowedAlgorithms = allowedAlgorithmsForKeys[keyType];\n\n  if (!allowedAlgorithms) {\n    throw new Error(`Unknown key type \"${keyType}\".`);\n  }\n\n  if (!allowedAlgorithms.includes(algorithm)) {\n    throw new Error(`\"alg\" parameter for \"${keyType}\" key type must be one of: ${allowedAlgorithms.join(', ')}.`)\n  }\n\n  /*\n   * Ignore the next block from test coverage because it gets executed\n   * conditionally depending on the Node version. Not ignoring it would\n   * prevent us from reaching the target % of coverage for versions of\n   * Node under 15.7.0.\n   */\n  /* istanbul ignore next */\n  if (ASYMMETRIC_KEY_DETAILS_SUPPORTED) {\n    switch (keyType) {\n    case 'ec':\n      const keyCurve = key.asymmetricKeyDetails.namedCurve;\n      const allowedCurve = allowedCurves[algorithm];\n\n      if (keyCurve !== allowedCurve) {\n        throw new Error(`\"alg\" parameter \"${algorithm}\" requires curve \"${allowedCurve}\".`);\n      }\n      break;\n\n    case 'rsa-pss':\n      if (RSA_PSS_KEY_DETAILS_SUPPORTED) {\n        const length = parseInt(algorithm.slice(-3), 10);\n        const { hashAlgorithm, mgf1HashAlgorithm, saltLength } = key.asymmetricKeyDetails;\n\n        if (hashAlgorithm !== `sha${length}` || mgf1HashAlgorithm !== hashAlgorithm) {\n          throw new Error(`Invalid key for this operation, its RSA-PSS parameters do not meet the requirements of \"alg\" ${algorithm}.`);\n        }\n\n        if (saltLength !== undefined && saltLength > length >> 3) {\n          throw new Error(`Invalid key for this operation, its RSA-PSS parameter saltLength does not meet the requirements of \"alg\" ${algorithm}.`)\n        }\n      }\n      break;\n    }\n  }\n}\n", "var semver = require('semver');\n\nmodule.exports = semver.satisfies(process.version, '^6.12.0 || >=8.0.0');\n", "const JsonWebTokenError = require('./lib/JsonWebTokenError');\nconst NotBeforeError = require('./lib/NotBeforeError');\nconst TokenExpiredError = require('./lib/TokenExpiredError');\nconst decode = require('./decode');\nconst timespan = require('./lib/timespan');\nconst validateAsymmetricKey = require('./lib/validateAsymmetricKey');\nconst PS_SUPPORTED = require('./lib/psSupported');\nconst jws = require('jws');\nconst {KeyObject, createSecretKey, createPublicKey} = require(\"crypto\");\n\nconst PUB_KEY_ALGS = ['RS256', 'RS384', 'RS512'];\nconst EC_KEY_ALGS = ['ES256', 'ES384', 'ES512'];\nconst RSA_KEY_ALGS = ['RS256', 'RS384', 'RS512'];\nconst HS_ALGS = ['HS256', 'HS384', 'HS512'];\n\nif (PS_SUPPORTED) {\n  PUB_KEY_ALGS.splice(PUB_KEY_ALGS.length, 0, 'PS256', 'PS384', 'PS512');\n  RSA_KEY_ALGS.splice(RSA_KEY_ALGS.length, 0, 'PS256', 'PS384', 'PS512');\n}\n\nmodule.exports = function (jwtString, secretOrPublicKey, options, callback) {\n  if ((typeof options === 'function') && !callback) {\n    callback = options;\n    options = {};\n  }\n\n  if (!options) {\n    options = {};\n  }\n\n  //clone this object since we are going to mutate it.\n  options = Object.assign({}, options);\n\n  let done;\n\n  if (callback) {\n    done = callback;\n  } else {\n    done = function(err, data) {\n      if (err) throw err;\n      return data;\n    };\n  }\n\n  if (options.clockTimestamp && typeof options.clockTimestamp !== 'number') {\n    return done(new JsonWebTokenError('clockTimestamp must be a number'));\n  }\n\n  if (options.nonce !== undefined && (typeof options.nonce !== 'string' || options.nonce.trim() === '')) {\n    return done(new JsonWebTokenError('nonce must be a non-empty string'));\n  }\n\n  if (options.allowInvalidAsymmetricKeyTypes !== undefined && typeof options.allowInvalidAsymmetricKeyTypes !== 'boolean') {\n    return done(new JsonWebTokenError('allowInvalidAsymmetricKeyTypes must be a boolean'));\n  }\n\n  const clockTimestamp = options.clockTimestamp || Math.floor(Date.now() / 1000);\n\n  if (!jwtString){\n    return done(new JsonWebTokenError('jwt must be provided'));\n  }\n\n  if (typeof jwtString !== 'string') {\n    return done(new JsonWebTokenError('jwt must be a string'));\n  }\n\n  const parts = jwtString.split('.');\n\n  if (parts.length !== 3){\n    return done(new JsonWebTokenError('jwt malformed'));\n  }\n\n  let decodedToken;\n\n  try {\n    decodedToken = decode(jwtString, { complete: true });\n  } catch(err) {\n    return done(err);\n  }\n\n  if (!decodedToken) {\n    return done(new JsonWebTokenError('invalid token'));\n  }\n\n  const header = decodedToken.header;\n  let getSecret;\n\n  if(typeof secretOrPublicKey === 'function') {\n    if(!callback) {\n      return done(new JsonWebTokenError('verify must be called asynchronous if secret or public key is provided as a callback'));\n    }\n\n    getSecret = secretOrPublicKey;\n  }\n  else {\n    getSecret = function(header, secretCallback) {\n      return secretCallback(null, secretOrPublicKey);\n    };\n  }\n\n  return getSecret(header, function(err, secretOrPublicKey) {\n    if(err) {\n      return done(new JsonWebTokenError('error in secret or public key callback: ' + err.message));\n    }\n\n    const hasSignature = parts[2].trim() !== '';\n\n    if (!hasSignature && secretOrPublicKey){\n      return done(new JsonWebTokenError('jwt signature is required'));\n    }\n\n    if (hasSignature && !secretOrPublicKey) {\n      return done(new JsonWebTokenError('secret or public key must be provided'));\n    }\n\n    if (!hasSignature && !options.algorithms) {\n      return done(new JsonWebTokenError('please specify \"none\" in \"algorithms\" to verify unsigned tokens'));\n    }\n\n    if (secretOrPublicKey != null && !(secretOrPublicKey instanceof KeyObject)) {\n      try {\n        secretOrPublicKey = createPublicKey(secretOrPublicKey);\n      } catch (_) {\n        try {\n          secretOrPublicKey = createSecretKey(typeof secretOrPublicKey === 'string' ? Buffer.from(secretOrPublicKey) : secretOrPublicKey);\n        } catch (_) {\n          return done(new JsonWebTokenError('secretOrPublicKey is not valid key material'))\n        }\n      }\n    }\n\n    if (!options.algorithms) {\n      if (secretOrPublicKey.type === 'secret') {\n        options.algorithms = HS_ALGS;\n      } else if (['rsa', 'rsa-pss'].includes(secretOrPublicKey.asymmetricKeyType)) {\n        options.algorithms = RSA_KEY_ALGS\n      } else if (secretOrPublicKey.asymmetricKeyType === 'ec') {\n        options.algorithms = EC_KEY_ALGS\n      } else {\n        options.algorithms = PUB_KEY_ALGS\n      }\n    }\n\n    if (options.algorithms.indexOf(decodedToken.header.alg) === -1) {\n      return done(new JsonWebTokenError('invalid algorithm'));\n    }\n\n    if (header.alg.startsWith('HS') && secretOrPublicKey.type !== 'secret') {\n      return done(new JsonWebTokenError((`secretOrPublicKey must be a symmetric key when using ${header.alg}`)))\n    } else if (/^(?:RS|PS|ES)/.test(header.alg) && secretOrPublicKey.type !== 'public') {\n      return done(new JsonWebTokenError((`secretOrPublicKey must be an asymmetric key when using ${header.alg}`)))\n    }\n\n    if (!options.allowInvalidAsymmetricKeyTypes) {\n      try {\n        validateAsymmetricKey(header.alg, secretOrPublicKey);\n      } catch (e) {\n        return done(e);\n      }\n    }\n\n    let valid;\n\n    try {\n      valid = jws.verify(jwtString, decodedToken.header.alg, secretOrPublicKey);\n    } catch (e) {\n      return done(e);\n    }\n\n    if (!valid) {\n      return done(new JsonWebTokenError('invalid signature'));\n    }\n\n    const payload = decodedToken.payload;\n\n    if (typeof payload.nbf !== 'undefined' && !options.ignoreNotBefore) {\n      if (typeof payload.nbf !== 'number') {\n        return done(new JsonWebTokenError('invalid nbf value'));\n      }\n      if (payload.nbf > clockTimestamp + (options.clockTolerance || 0)) {\n        return done(new NotBeforeError('jwt not active', new Date(payload.nbf * 1000)));\n      }\n    }\n\n    if (typeof payload.exp !== 'undefined' && !options.ignoreExpiration) {\n      if (typeof payload.exp !== 'number') {\n        return done(new JsonWebTokenError('invalid exp value'));\n      }\n      if (clockTimestamp >= payload.exp + (options.clockTolerance || 0)) {\n        return done(new TokenExpiredError('jwt expired', new Date(payload.exp * 1000)));\n      }\n    }\n\n    if (options.audience) {\n      const audiences = Array.isArray(options.audience) ? options.audience : [options.audience];\n      const target = Array.isArray(payload.aud) ? payload.aud : [payload.aud];\n\n      const match = target.some(function (targetAudience) {\n        return audiences.some(function (audience) {\n          return audience instanceof RegExp ? audience.test(targetAudience) : audience === targetAudience;\n        });\n      });\n\n      if (!match) {\n        return done(new JsonWebTokenError('jwt audience invalid. expected: ' + audiences.join(' or ')));\n      }\n    }\n\n    if (options.issuer) {\n      const invalid_issuer =\n              (typeof options.issuer === 'string' && payload.iss !== options.issuer) ||\n              (Array.isArray(options.issuer) && options.issuer.indexOf(payload.iss) === -1);\n\n      if (invalid_issuer) {\n        return done(new JsonWebTokenError('jwt issuer invalid. expected: ' + options.issuer));\n      }\n    }\n\n    if (options.subject) {\n      if (payload.sub !== options.subject) {\n        return done(new JsonWebTokenError('jwt subject invalid. expected: ' + options.subject));\n      }\n    }\n\n    if (options.jwtid) {\n      if (payload.jti !== options.jwtid) {\n        return done(new JsonWebTokenError('jwt jwtid invalid. expected: ' + options.jwtid));\n      }\n    }\n\n    if (options.nonce) {\n      if (payload.nonce !== options.nonce) {\n        return done(new JsonWebTokenError('jwt nonce invalid. expected: ' + options.nonce));\n      }\n    }\n\n    if (options.maxAge) {\n      if (typeof payload.iat !== 'number') {\n        return done(new JsonWebTokenError('iat required when maxAge is specified'));\n      }\n\n      const maxAgeTimestamp = timespan(options.maxAge, payload.iat);\n      if (typeof maxAgeTimestamp === 'undefined') {\n        return done(new JsonWebTokenError('\"maxAge\" should be a number of seconds or string representing a timespan eg: \"1d\", \"20h\", 60'));\n      }\n      if (clockTimestamp >= maxAgeTimestamp + (options.clockTolerance || 0)) {\n        return done(new TokenExpiredError('maxAge exceeded', new Date(maxAgeTimestamp * 1000)));\n      }\n    }\n\n    if (options.complete === true) {\n      const signature = decodedToken.signature;\n\n      return done(null, {\n        header: header,\n        payload: payload,\n        signature: signature\n      });\n    }\n\n    return done(null, payload);\n  });\n};\n", "/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_SAFE_INTEGER = 9007199254740991,\n    MAX_INTEGER = 1.7976931348623157e+308,\n    NAN = 0 / 0;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array ? array.length : 0,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.findIndex` and `_.findLastIndex` without\n * support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} predicate The function invoked per iteration.\n * @param {number} fromIndex The index to search from.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseFindIndex(array, predicate, fromIndex, fromRight) {\n  var length = array.length,\n      index = fromIndex + (fromRight ? 1 : -1);\n\n  while ((fromRight ? index-- : ++index < length)) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseIndexOf(array, value, fromIndex) {\n  if (value !== value) {\n    return baseFindIndex(array, baseIsNaN, fromIndex);\n  }\n  var index = fromIndex - 1,\n      length = array.length;\n\n  while (++index < length) {\n    if (array[index] === value) {\n      return index;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `_.isNaN` without support for number objects.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n */\nfunction baseIsNaN(value) {\n  return value !== value;\n}\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.values` and `_.valuesIn` which creates an\n * array of `object` property values corresponding to the property names\n * of `props`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} props The property names to get values for.\n * @returns {Object} Returns the array of property values.\n */\nfunction baseValues(object, props) {\n  return arrayMap(props, function(key) {\n    return object[key];\n  });\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object),\n    nativeMax = Math.max;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  // Safari 9 makes `arguments.length` enumerable in strict mode.\n  var result = (isArray(value) || isArguments(value))\n    ? baseTimes(value.length, String)\n    : [];\n\n  var length = result.length,\n      skipIndexes = !!length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (key == 'length' || isIndex(key, length)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length &&\n    (typeof value == 'number' || reIsUint.test(value)) &&\n    (value > -1 && value % 1 == 0 && value < length);\n}\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\n/**\n * Checks if `value` is in `collection`. If `collection` is a string, it's\n * checked for a substring of `value`, otherwise\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * is used for equality comparisons. If `fromIndex` is negative, it's used as\n * the offset from the end of `collection`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object|string} collection The collection to inspect.\n * @param {*} value The value to search for.\n * @param {number} [fromIndex=0] The index to search from.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n * @returns {boolean} Returns `true` if `value` is found, else `false`.\n * @example\n *\n * _.includes([1, 2, 3], 1);\n * // => true\n *\n * _.includes([1, 2, 3], 1, 2);\n * // => false\n *\n * _.includes({ 'a': 1, 'b': 2 }, 1);\n * // => true\n *\n * _.includes('abcd', 'bc');\n * // => true\n */\nfunction includes(collection, value, fromIndex, guard) {\n  collection = isArrayLike(collection) ? collection : values(collection);\n  fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\n  var length = collection.length;\n  if (fromIndex < 0) {\n    fromIndex = nativeMax(length + fromIndex, 0);\n  }\n  return isString(collection)\n    ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n    : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n}\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nfunction isArguments(value) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&\n    (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);\n}\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8-9 which returns 'object' for typed array and other constructors.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `String` primitive or object.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n * @example\n *\n * _.isString('abc');\n * // => true\n *\n * _.isString(1);\n * // => false\n */\nfunction isString(value) {\n  return typeof value == 'string' ||\n    (!isArray(value) && isObjectLike(value) && objectToString.call(value) == stringTag);\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n\n  return result === result ? (remainder ? result - remainder : result) : 0;\n}\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\n/**\n * Creates an array of the own enumerable string keyed property values of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property values.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.values(new Foo);\n * // => [1, 2] (iteration order is not guaranteed)\n *\n * _.values('hi');\n * // => ['h', 'i']\n */\nfunction values(object) {\n  return object ? baseValues(object, keys(object)) : [];\n}\n\nmodule.exports = includes;\n", "/**\n * lodash 3.0.3 (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright 2012-2016 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2016 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/**\n * Checks if `value` is classified as a boolean primitive or object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isBoolean(false);\n * // => true\n *\n * _.isBoolean(null);\n * // => false\n */\nfunction isBoolean(value) {\n  return value === true || value === false ||\n    (isObjectLike(value) && objectToString.call(value) == boolTag);\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\nmodule.exports = isBoolean;\n", "/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308,\n    NAN = 0 / 0;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/**\n * Checks if `value` is an integer.\n *\n * **Note:** This method is based on\n * [`Number.isInteger`](https://mdn.io/Number/isInteger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an integer, else `false`.\n * @example\n *\n * _.isInteger(3);\n * // => true\n *\n * _.isInteger(Number.MIN_VALUE);\n * // => false\n *\n * _.isInteger(Infinity);\n * // => false\n *\n * _.isInteger('3');\n * // => false\n */\nfunction isInteger(value) {\n  return typeof value == 'number' && value == toInteger(value);\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n\n  return result === result ? (remainder ? result - remainder : result) : 0;\n}\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = isInteger;\n", "/**\n * lodash 3.0.3 (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright 2012-2016 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2016 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/** `Object#toString` result references. */\nvar numberTag = '[object Number]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Number` primitive or object.\n *\n * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are classified\n * as numbers, use the `_.isFinite` method.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isNumber(3);\n * // => true\n *\n * _.isNumber(Number.MIN_VALUE);\n * // => true\n *\n * _.isNumber(Infinity);\n * // => true\n *\n * _.isNumber('3');\n * // => false\n */\nfunction isNumber(value) {\n  return typeof value == 'number' ||\n    (isObjectLike(value) && objectToString.call(value) == numberTag);\n}\n\nmodule.exports = isNumber;\n", "/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** `Object#toString` result references. */\nvar objectTag = '[object Object]';\n\n/**\n * Checks if `value` is a host object in IE < 9.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n */\nfunction isHostObject(value) {\n  // Many host objects are `Object` objects that can coerce to strings\n  // despite having improperly defined `toString` methods.\n  var result = false;\n  if (value != null && typeof value.toString != 'function') {\n    try {\n      result = !!(value + '');\n    } catch (e) {}\n  }\n  return result;\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to infer the `Object` constructor. */\nvar objectCtorString = funcToString.call(Object);\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar getPrototype = overArg(Object.getPrototypeOf, Object);\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nfunction isPlainObject(value) {\n  if (!isObjectLike(value) ||\n      objectToString.call(value) != objectTag || isHostObject(value)) {\n    return false;\n  }\n  var proto = getPrototype(value);\n  if (proto === null) {\n    return true;\n  }\n  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return (typeof Ctor == 'function' &&\n    Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString);\n}\n\nmodule.exports = isPlainObject;\n", "/**\n * lodash 4.0.1 (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright 2012-2016 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2016 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/** `Object#toString` result references. */\nvar stringTag = '[object String]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @type Function\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `String` primitive or object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isString('abc');\n * // => true\n *\n * _.isString(1);\n * // => false\n */\nfunction isString(value) {\n  return typeof value == 'string' ||\n    (!isArray(value) && isObjectLike(value) && objectToString.call(value) == stringTag);\n}\n\nmodule.exports = isString;\n", "/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308,\n    NAN = 0 / 0;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/**\n * Creates a function that invokes `func`, with the `this` binding and arguments\n * of the created function, while it's called less than `n` times. Subsequent\n * calls to the created function return the result of the last `func` invocation.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Function\n * @param {number} n The number of calls at which `func` is no longer invoked.\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new restricted function.\n * @example\n *\n * jQuery(element).on('click', _.before(5, addContactToList));\n * // => Allows adding up to 4 contacts to the list.\n */\nfunction before(n, func) {\n  var result;\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  n = toInteger(n);\n  return function() {\n    if (--n > 0) {\n      result = func.apply(this, arguments);\n    }\n    if (n <= 1) {\n      func = undefined;\n    }\n    return result;\n  };\n}\n\n/**\n * Creates a function that is restricted to invoking `func` once. Repeat calls\n * to the function return the value of the first invocation. The `func` is\n * invoked with the `this` binding and arguments of the created function.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new restricted function.\n * @example\n *\n * var initialize = _.once(createApplication);\n * initialize();\n * initialize();\n * // => `createApplication` is invoked once\n */\nfunction once(func) {\n  return before(2, func);\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n\n  return result === result ? (remainder ? result - remainder : result) : 0;\n}\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = once;\n", "const timespan = require('./lib/timespan');\nconst PS_SUPPORTED = require('./lib/psSupported');\nconst validateAsymmetricKey = require('./lib/validateAsymmetricKey');\nconst jws = require('jws');\nconst includes = require('lodash.includes');\nconst isBoolean = require('lodash.isboolean');\nconst isInteger = require('lodash.isinteger');\nconst isNumber = require('lodash.isnumber');\nconst isPlainObject = require('lodash.isplainobject');\nconst isString = require('lodash.isstring');\nconst once = require('lodash.once');\nconst { KeyObject, createSecretKey, createPrivateKey } = require('crypto')\n\nconst SUPPORTED_ALGS = ['RS256', 'RS384', 'RS512', 'ES256', 'ES384', 'ES512', 'HS256', 'HS384', 'HS512', 'none'];\nif (PS_SUPPORTED) {\n  SUPPORTED_ALGS.splice(3, 0, 'PS256', 'PS384', 'PS512');\n}\n\nconst sign_options_schema = {\n  expiresIn: { isValid: function(value) { return isInteger(value) || (isString(value) && value); }, message: '\"expiresIn\" should be a number of seconds or string representing a timespan' },\n  notBefore: { isValid: function(value) { return isInteger(value) || (isString(value) && value); }, message: '\"notBefore\" should be a number of seconds or string representing a timespan' },\n  audience: { isValid: function(value) { return isString(value) || Array.isArray(value); }, message: '\"audience\" must be a string or array' },\n  algorithm: { isValid: includes.bind(null, SUPPORTED_ALGS), message: '\"algorithm\" must be a valid string enum value' },\n  header: { isValid: isPlainObject, message: '\"header\" must be an object' },\n  encoding: { isValid: isString, message: '\"encoding\" must be a string' },\n  issuer: { isValid: isString, message: '\"issuer\" must be a string' },\n  subject: { isValid: isString, message: '\"subject\" must be a string' },\n  jwtid: { isValid: isString, message: '\"jwtid\" must be a string' },\n  noTimestamp: { isValid: isBoolean, message: '\"noTimestamp\" must be a boolean' },\n  keyid: { isValid: isString, message: '\"keyid\" must be a string' },\n  mutatePayload: { isValid: isBoolean, message: '\"mutatePayload\" must be a boolean' },\n  allowInsecureKeySizes: { isValid: isBoolean, message: '\"allowInsecureKeySizes\" must be a boolean'},\n  allowInvalidAsymmetricKeyTypes: { isValid: isBoolean, message: '\"allowInvalidAsymmetricKeyTypes\" must be a boolean'}\n};\n\nconst registered_claims_schema = {\n  iat: { isValid: isNumber, message: '\"iat\" should be a number of seconds' },\n  exp: { isValid: isNumber, message: '\"exp\" should be a number of seconds' },\n  nbf: { isValid: isNumber, message: '\"nbf\" should be a number of seconds' }\n};\n\nfunction validate(schema, allowUnknown, object, parameterName) {\n  if (!isPlainObject(object)) {\n    throw new Error('Expected \"' + parameterName + '\" to be a plain object.');\n  }\n  Object.keys(object)\n    .forEach(function(key) {\n      const validator = schema[key];\n      if (!validator) {\n        if (!allowUnknown) {\n          throw new Error('\"' + key + '\" is not allowed in \"' + parameterName + '\"');\n        }\n        return;\n      }\n      if (!validator.isValid(object[key])) {\n        throw new Error(validator.message);\n      }\n    });\n}\n\nfunction validateOptions(options) {\n  return validate(sign_options_schema, false, options, 'options');\n}\n\nfunction validatePayload(payload) {\n  return validate(registered_claims_schema, true, payload, 'payload');\n}\n\nconst options_to_payload = {\n  'audience': 'aud',\n  'issuer': 'iss',\n  'subject': 'sub',\n  'jwtid': 'jti'\n};\n\nconst options_for_objects = [\n  'expiresIn',\n  'notBefore',\n  'noTimestamp',\n  'audience',\n  'issuer',\n  'subject',\n  'jwtid',\n];\n\nmodule.exports = function (payload, secretOrPrivateKey, options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  } else {\n    options = options || {};\n  }\n\n  const isObjectPayload = typeof payload === 'object' &&\n                        !Buffer.isBuffer(payload);\n\n  const header = Object.assign({\n    alg: options.algorithm || 'HS256',\n    typ: isObjectPayload ? 'JWT' : undefined,\n    kid: options.keyid\n  }, options.header);\n\n  function failure(err) {\n    if (callback) {\n      return callback(err);\n    }\n    throw err;\n  }\n\n  if (!secretOrPrivateKey && options.algorithm !== 'none') {\n    return failure(new Error('secretOrPrivateKey must have a value'));\n  }\n\n  if (secretOrPrivateKey != null && !(secretOrPrivateKey instanceof KeyObject)) {\n    try {\n      secretOrPrivateKey = createPrivateKey(secretOrPrivateKey)\n    } catch (_) {\n      try {\n        secretOrPrivateKey = createSecretKey(typeof secretOrPrivateKey === 'string' ? Buffer.from(secretOrPrivateKey) : secretOrPrivateKey)\n      } catch (_) {\n        return failure(new Error('secretOrPrivateKey is not valid key material'));\n      }\n    }\n  }\n\n  if (header.alg.startsWith('HS') && secretOrPrivateKey.type !== 'secret') {\n    return failure(new Error((`secretOrPrivateKey must be a symmetric key when using ${header.alg}`)))\n  } else if (/^(?:RS|PS|ES)/.test(header.alg)) {\n    if (secretOrPrivateKey.type !== 'private') {\n      return failure(new Error((`secretOrPrivateKey must be an asymmetric key when using ${header.alg}`)))\n    }\n    if (!options.allowInsecureKeySizes &&\n      !header.alg.startsWith('ES') &&\n      secretOrPrivateKey.asymmetricKeyDetails !== undefined && //KeyObject.asymmetricKeyDetails is supported in Node 15+\n      secretOrPrivateKey.asymmetricKeyDetails.modulusLength < 2048) {\n      return failure(new Error(`secretOrPrivateKey has a minimum key size of 2048 bits for ${header.alg}`));\n    }\n  }\n\n  if (typeof payload === 'undefined') {\n    return failure(new Error('payload is required'));\n  } else if (isObjectPayload) {\n    try {\n      validatePayload(payload);\n    }\n    catch (error) {\n      return failure(error);\n    }\n    if (!options.mutatePayload) {\n      payload = Object.assign({},payload);\n    }\n  } else {\n    const invalid_options = options_for_objects.filter(function (opt) {\n      return typeof options[opt] !== 'undefined';\n    });\n\n    if (invalid_options.length > 0) {\n      return failure(new Error('invalid ' + invalid_options.join(',') + ' option for ' + (typeof payload ) + ' payload'));\n    }\n  }\n\n  if (typeof payload.exp !== 'undefined' && typeof options.expiresIn !== 'undefined') {\n    return failure(new Error('Bad \"options.expiresIn\" option the payload already has an \"exp\" property.'));\n  }\n\n  if (typeof payload.nbf !== 'undefined' && typeof options.notBefore !== 'undefined') {\n    return failure(new Error('Bad \"options.notBefore\" option the payload already has an \"nbf\" property.'));\n  }\n\n  try {\n    validateOptions(options);\n  }\n  catch (error) {\n    return failure(error);\n  }\n\n  if (!options.allowInvalidAsymmetricKeyTypes) {\n    try {\n      validateAsymmetricKey(header.alg, secretOrPrivateKey);\n    } catch (error) {\n      return failure(error);\n    }\n  }\n\n  const timestamp = payload.iat || Math.floor(Date.now() / 1000);\n\n  if (options.noTimestamp) {\n    delete payload.iat;\n  } else if (isObjectPayload) {\n    payload.iat = timestamp;\n  }\n\n  if (typeof options.notBefore !== 'undefined') {\n    try {\n      payload.nbf = timespan(options.notBefore, timestamp);\n    }\n    catch (err) {\n      return failure(err);\n    }\n    if (typeof payload.nbf === 'undefined') {\n      return failure(new Error('\"notBefore\" should be a number of seconds or string representing a timespan eg: \"1d\", \"20h\", 60'));\n    }\n  }\n\n  if (typeof options.expiresIn !== 'undefined' && typeof payload === 'object') {\n    try {\n      payload.exp = timespan(options.expiresIn, timestamp);\n    }\n    catch (err) {\n      return failure(err);\n    }\n    if (typeof payload.exp === 'undefined') {\n      return failure(new Error('\"expiresIn\" should be a number of seconds or string representing a timespan eg: \"1d\", \"20h\", 60'));\n    }\n  }\n\n  Object.keys(options_to_payload).forEach(function (key) {\n    const claim = options_to_payload[key];\n    if (typeof options[key] !== 'undefined') {\n      if (typeof payload[claim] !== 'undefined') {\n        return failure(new Error('Bad \"options.' + key + '\" option. The payload already has an \"' + claim + '\" property.'));\n      }\n      payload[claim] = options[key];\n    }\n  });\n\n  const encoding = options.encoding || 'utf8';\n\n  if (typeof callback === 'function') {\n    callback = callback && once(callback);\n\n    jws.createSign({\n      header: header,\n      privateKey: secretOrPrivateKey,\n      payload: payload,\n      encoding: encoding\n    }).once('error', callback)\n      .once('done', function (signature) {\n        // TODO: Remove in favor of the modulus length check before signing once node 15+ is the minimum supported version\n        if(!options.allowInsecureKeySizes && /^(?:RS|PS)/.test(header.alg) && signature.length < 256) {\n          return callback(new Error(`secretOrPrivateKey has a minimum key size of 2048 bits for ${header.alg}`))\n        }\n        callback(null, signature);\n      });\n  } else {\n    let signature = jws.sign({header: header, payload: payload, secret: secretOrPrivateKey, encoding: encoding});\n    // TODO: Remove in favor of the modulus length check before signing once node 15+ is the minimum supported version\n    if(!options.allowInsecureKeySizes && /^(?:RS|PS)/.test(header.alg) && signature.length < 256) {\n      throw new Error(`secretOrPrivateKey has a minimum key size of 2048 bits for ${header.alg}`)\n    }\n    return signature\n  }\n};\n", "module.exports = {\n  decode: require('./decode'),\n  verify: require('./verify'),\n  sign: require('./sign'),\n  JsonWebTokenError: require('./lib/JsonWebTokenError'),\n  NotBeforeError: require('./lib/NotBeforeError'),\n  TokenExpiredError: require('./lib/TokenExpiredError'),\n};\n", "// can-promise has a crash in some versions of react native that dont have\n// standard global objects\n// https://github.com/soldair/node-qrcode/issues/157\n\nmodule.exports = function () {\n  return typeof Promise === 'function' && Promise.prototype && Promise.prototype.then\n}\n", "let toSJISFunction\nconst CODEWORDS_COUNT = [\n  0, // Not used\n  26, 44, 70, 100, 134, 172, 196, 242, 292, 346,\n  404, 466, 532, 581, 655, 733, 815, 901, 991, 1085,\n  1156, 1258, 1364, 1474, 1588, 1706, 1828, 1921, 2051, 2185,\n  2323, 2465, 2611, 2761, 2876, 3034, 3196, 3362, 3532, 3706\n]\n\n/**\n * Returns the QR Code size for the specified version\n *\n * @param  {Number} version QR Code version\n * @return {Number}         size of QR code\n */\nexports.getSymbolSize = function getSymbolSize (version) {\n  if (!version) throw new Error('\"version\" cannot be null or undefined')\n  if (version < 1 || version > 40) throw new Error('\"version\" should be in range from 1 to 40')\n  return version * 4 + 17\n}\n\n/**\n * Returns the total number of codewords used to store data and EC information.\n *\n * @param  {Number} version QR Code version\n * @return {Number}         Data length in bits\n */\nexports.getSymbolTotalCodewords = function getSymbolTotalCodewords (version) {\n  return CODEWORDS_COUNT[version]\n}\n\n/**\n * Encode data with Bose-Chaudhuri-Hocquenghem\n *\n * @param  {Number} data Value to encode\n * @return {Number}      Encoded value\n */\nexports.getBCHDigit = function (data) {\n  let digit = 0\n\n  while (data !== 0) {\n    digit++\n    data >>>= 1\n  }\n\n  return digit\n}\n\nexports.setToSJISFunction = function setToSJISFunction (f) {\n  if (typeof f !== 'function') {\n    throw new Error('\"toSJISFunc\" is not a valid function.')\n  }\n\n  toSJISFunction = f\n}\n\nexports.isKanjiModeEnabled = function () {\n  return typeof toSJISFunction !== 'undefined'\n}\n\nexports.toSJIS = function toSJIS (kanji) {\n  return toSJISFunction(kanji)\n}\n", "exports.L = { bit: 1 }\nexports.M = { bit: 0 }\nexports.Q = { bit: 3 }\nexports.H = { bit: 2 }\n\nfunction fromString (string) {\n  if (typeof string !== 'string') {\n    throw new Error('Param is not a string')\n  }\n\n  const lcStr = string.toLowerCase()\n\n  switch (lcStr) {\n    case 'l':\n    case 'low':\n      return exports.L\n\n    case 'm':\n    case 'medium':\n      return exports.M\n\n    case 'q':\n    case 'quartile':\n      return exports.Q\n\n    case 'h':\n    case 'high':\n      return exports.H\n\n    default:\n      throw new Error('Unknown EC Level: ' + string)\n  }\n}\n\nexports.isValid = function isValid (level) {\n  return level && typeof level.bit !== 'undefined' &&\n    level.bit >= 0 && level.bit < 4\n}\n\nexports.from = function from (value, defaultValue) {\n  if (exports.isValid(value)) {\n    return value\n  }\n\n  try {\n    return fromString(value)\n  } catch (e) {\n    return defaultValue\n  }\n}\n", "function BitBuffer () {\n  this.buffer = []\n  this.length = 0\n}\n\nBitBuffer.prototype = {\n\n  get: function (index) {\n    const bufIndex = Math.floor(index / 8)\n    return ((this.buffer[bufIndex] >>> (7 - index % 8)) & 1) === 1\n  },\n\n  put: function (num, length) {\n    for (let i = 0; i < length; i++) {\n      this.putBit(((num >>> (length - i - 1)) & 1) === 1)\n    }\n  },\n\n  getLengthInBits: function () {\n    return this.length\n  },\n\n  putBit: function (bit) {\n    const bufIndex = Math.floor(this.length / 8)\n    if (this.buffer.length <= bufIndex) {\n      this.buffer.push(0)\n    }\n\n    if (bit) {\n      this.buffer[bufIndex] |= (0x80 >>> (this.length % 8))\n    }\n\n    this.length++\n  }\n}\n\nmodule.exports = BitBuffer\n", "/**\n * Helper class to handle QR Code symbol modules\n *\n * @param {Number} size Symbol size\n */\nfunction BitMatrix (size) {\n  if (!size || size < 1) {\n    throw new Error('BitMatrix size must be defined and greater than 0')\n  }\n\n  this.size = size\n  this.data = new Uint8Array(size * size)\n  this.reservedBit = new Uint8Array(size * size)\n}\n\n/**\n * Set bit value at specified location\n * If reserved flag is set, this bit will be ignored during masking process\n *\n * @param {Number}  row\n * @param {Number}  col\n * @param {Boolean} value\n * @param {Boolean} reserved\n */\nBitMatrix.prototype.set = function (row, col, value, reserved) {\n  const index = row * this.size + col\n  this.data[index] = value\n  if (reserved) this.reservedBit[index] = true\n}\n\n/**\n * Returns bit value at specified location\n *\n * @param  {Number}  row\n * @param  {Number}  col\n * @return {Boolean}\n */\nBitMatrix.prototype.get = function (row, col) {\n  return this.data[row * this.size + col]\n}\n\n/**\n * Applies xor operator at specified location\n * (used during masking process)\n *\n * @param {Number}  row\n * @param {Number}  col\n * @param {Boolean} value\n */\nBitMatrix.prototype.xor = function (row, col, value) {\n  this.data[row * this.size + col] ^= value\n}\n\n/**\n * Check if bit at specified location is reserved\n *\n * @param {Number}   row\n * @param {Number}   col\n * @return {Boolean}\n */\nBitMatrix.prototype.isReserved = function (row, col) {\n  return this.reservedBit[row * this.size + col]\n}\n\nmodule.exports = BitMatrix\n", "/**\n * Alignment pattern are fixed reference pattern in defined positions\n * in a matrix symbology, which enables the decode software to re-synchronise\n * the coordinate mapping of the image modules in the event of moderate amounts\n * of distortion of the image.\n *\n * Alignment patterns are present only in QR Code symbols of version 2 or larger\n * and their number depends on the symbol version.\n */\n\nconst getSymbolSize = require('./utils').getSymbolSize\n\n/**\n * Calculate the row/column coordinates of the center module of each alignment pattern\n * for the specified QR Code version.\n *\n * The alignment patterns are positioned symmetrically on either side of the diagonal\n * running from the top left corner of the symbol to the bottom right corner.\n *\n * Since positions are simmetrical only half of the coordinates are returned.\n * Each item of the array will represent in turn the x and y coordinate.\n * @see {@link getPositions}\n *\n * @param  {Number} version QR Code version\n * @return {Array}          Array of coordinate\n */\nexports.getRowColCoords = function getRowColCoords (version) {\n  if (version === 1) return []\n\n  const posCount = Math.floor(version / 7) + 2\n  const size = getSymbolSize(version)\n  const intervals = size === 145 ? 26 : Math.ceil((size - 13) / (2 * posCount - 2)) * 2\n  const positions = [size - 7] // Last coord is always (size - 7)\n\n  for (let i = 1; i < posCount - 1; i++) {\n    positions[i] = positions[i - 1] - intervals\n  }\n\n  positions.push(6) // First coord is always 6\n\n  return positions.reverse()\n}\n\n/**\n * Returns an array containing the positions of each alignment pattern.\n * Each array's element represent the center point of the pattern as (x, y) coordinates\n *\n * Coordinates are calculated expanding the row/column coordinates returned by {@link getRowColCoords}\n * and filtering out the items that overlaps with finder pattern\n *\n * @example\n * For a Version 7 symbol {@link getRowColCoords} returns values 6, 22 and 38.\n * The alignment patterns, therefore, are to be centered on (row, column)\n * positions (6,22), (22,6), (22,22), (22,38), (38,22), (38,38).\n * Note that the coordinates (6,6), (6,38), (38,6) are occupied by finder patterns\n * and are not therefore used for alignment patterns.\n *\n * let pos = getPositions(7)\n * // [[6,22], [22,6], [22,22], [22,38], [38,22], [38,38]]\n *\n * @param  {Number} version QR Code version\n * @return {Array}          Array of coordinates\n */\nexports.getPositions = function getPositions (version) {\n  const coords = []\n  const pos = exports.getRowColCoords(version)\n  const posLength = pos.length\n\n  for (let i = 0; i < posLength; i++) {\n    for (let j = 0; j < posLength; j++) {\n      // Skip if position is occupied by finder patterns\n      if ((i === 0 && j === 0) || // top-left\n          (i === 0 && j === posLength - 1) || // bottom-left\n          (i === posLength - 1 && j === 0)) { // top-right\n        continue\n      }\n\n      coords.push([pos[i], pos[j]])\n    }\n  }\n\n  return coords\n}\n", "const getSymbolSize = require('./utils').getSymbolSize\nconst FINDER_PATTERN_SIZE = 7\n\n/**\n * Returns an array containing the positions of each finder pattern.\n * Each array's element represent the top-left point of the pattern as (x, y) coordinates\n *\n * @param  {Number} version QR Code version\n * @return {Array}          Array of coordinates\n */\nexports.getPositions = function getPositions (version) {\n  const size = getSymbolSize(version)\n\n  return [\n    // top-left\n    [0, 0],\n    // top-right\n    [size - FINDER_PATTERN_SIZE, 0],\n    // bottom-left\n    [0, size - FINDER_PATTERN_SIZE]\n  ]\n}\n", "/**\n * Data mask pattern reference\n * @type {Object}\n */\nexports.Patterns = {\n  PATTERN000: 0,\n  PATTERN001: 1,\n  PATTERN010: 2,\n  PATTERN011: 3,\n  PATTERN100: 4,\n  PATTERN101: 5,\n  PATTERN110: 6,\n  PATTERN111: 7\n}\n\n/**\n * Weighted penalty scores for the undesirable features\n * @type {Object}\n */\nconst PenaltyScores = {\n  N1: 3,\n  N2: 3,\n  N3: 40,\n  N4: 10\n}\n\n/**\n * Check if mask pattern value is valid\n *\n * @param  {Number}  mask    Mask pattern\n * @return {Boolean}         true if valid, false otherwise\n */\nexports.isValid = function isValid (mask) {\n  return mask != null && mask !== '' && !isNaN(mask) && mask >= 0 && mask <= 7\n}\n\n/**\n * Returns mask pattern from a value.\n * If value is not valid, returns undefined\n *\n * @param  {Number|String} value        Mask pattern value\n * @return {Number}                     Valid mask pattern or undefined\n */\nexports.from = function from (value) {\n  return exports.isValid(value) ? parseInt(value, 10) : undefined\n}\n\n/**\n* Find adjacent modules in row/column with the same color\n* and assign a penalty value.\n*\n* Points: N1 + i\n* i is the amount by which the number of adjacent modules of the same color exceeds 5\n*/\nexports.getPenaltyN1 = function getPenaltyN1 (data) {\n  const size = data.size\n  let points = 0\n  let sameCountCol = 0\n  let sameCountRow = 0\n  let lastCol = null\n  let lastRow = null\n\n  for (let row = 0; row < size; row++) {\n    sameCountCol = sameCountRow = 0\n    lastCol = lastRow = null\n\n    for (let col = 0; col < size; col++) {\n      let module = data.get(row, col)\n      if (module === lastCol) {\n        sameCountCol++\n      } else {\n        if (sameCountCol >= 5) points += PenaltyScores.N1 + (sameCountCol - 5)\n        lastCol = module\n        sameCountCol = 1\n      }\n\n      module = data.get(col, row)\n      if (module === lastRow) {\n        sameCountRow++\n      } else {\n        if (sameCountRow >= 5) points += PenaltyScores.N1 + (sameCountRow - 5)\n        lastRow = module\n        sameCountRow = 1\n      }\n    }\n\n    if (sameCountCol >= 5) points += PenaltyScores.N1 + (sameCountCol - 5)\n    if (sameCountRow >= 5) points += PenaltyScores.N1 + (sameCountRow - 5)\n  }\n\n  return points\n}\n\n/**\n * Find 2x2 blocks with the same color and assign a penalty value\n *\n * Points: N2 * (m - 1) * (n - 1)\n */\nexports.getPenaltyN2 = function getPenaltyN2 (data) {\n  const size = data.size\n  let points = 0\n\n  for (let row = 0; row < size - 1; row++) {\n    for (let col = 0; col < size - 1; col++) {\n      const last = data.get(row, col) +\n        data.get(row, col + 1) +\n        data.get(row + 1, col) +\n        data.get(row + 1, col + 1)\n\n      if (last === 4 || last === 0) points++\n    }\n  }\n\n  return points * PenaltyScores.N2\n}\n\n/**\n * Find 1:1:3:1:1 ratio (dark:light:dark:light:dark) pattern in row/column,\n * preceded or followed by light area 4 modules wide\n *\n * Points: N3 * number of pattern found\n */\nexports.getPenaltyN3 = function getPenaltyN3 (data) {\n  const size = data.size\n  let points = 0\n  let bitsCol = 0\n  let bitsRow = 0\n\n  for (let row = 0; row < size; row++) {\n    bitsCol = bitsRow = 0\n    for (let col = 0; col < size; col++) {\n      bitsCol = ((bitsCol << 1) & 0x7FF) | data.get(row, col)\n      if (col >= 10 && (bitsCol === 0x5D0 || bitsCol === 0x05D)) points++\n\n      bitsRow = ((bitsRow << 1) & 0x7FF) | data.get(col, row)\n      if (col >= 10 && (bitsRow === 0x5D0 || bitsRow === 0x05D)) points++\n    }\n  }\n\n  return points * PenaltyScores.N3\n}\n\n/**\n * Calculate proportion of dark modules in entire symbol\n *\n * Points: N4 * k\n *\n * k is the rating of the deviation of the proportion of dark modules\n * in the symbol from 50% in steps of 5%\n */\nexports.getPenaltyN4 = function getPenaltyN4 (data) {\n  let darkCount = 0\n  const modulesCount = data.data.length\n\n  for (let i = 0; i < modulesCount; i++) darkCount += data.data[i]\n\n  const k = Math.abs(Math.ceil((darkCount * 100 / modulesCount) / 5) - 10)\n\n  return k * PenaltyScores.N4\n}\n\n/**\n * Return mask value at given position\n *\n * @param  {Number} maskPattern Pattern reference value\n * @param  {Number} i           Row\n * @param  {Number} j           Column\n * @return {Boolean}            Mask value\n */\nfunction getMaskAt (maskPattern, i, j) {\n  switch (maskPattern) {\n    case exports.Patterns.PATTERN000: return (i + j) % 2 === 0\n    case exports.Patterns.PATTERN001: return i % 2 === 0\n    case exports.Patterns.PATTERN010: return j % 3 === 0\n    case exports.Patterns.PATTERN011: return (i + j) % 3 === 0\n    case exports.Patterns.PATTERN100: return (Math.floor(i / 2) + Math.floor(j / 3)) % 2 === 0\n    case exports.Patterns.PATTERN101: return (i * j) % 2 + (i * j) % 3 === 0\n    case exports.Patterns.PATTERN110: return ((i * j) % 2 + (i * j) % 3) % 2 === 0\n    case exports.Patterns.PATTERN111: return ((i * j) % 3 + (i + j) % 2) % 2 === 0\n\n    default: throw new Error('bad maskPattern:' + maskPattern)\n  }\n}\n\n/**\n * Apply a mask pattern to a BitMatrix\n *\n * @param  {Number}    pattern Pattern reference number\n * @param  {BitMatrix} data    BitMatrix data\n */\nexports.applyMask = function applyMask (pattern, data) {\n  const size = data.size\n\n  for (let col = 0; col < size; col++) {\n    for (let row = 0; row < size; row++) {\n      if (data.isReserved(row, col)) continue\n      data.xor(row, col, getMaskAt(pattern, row, col))\n    }\n  }\n}\n\n/**\n * Returns the best mask pattern for data\n *\n * @param  {BitMatrix} data\n * @return {Number} Mask pattern reference number\n */\nexports.getBestMask = function getBestMask (data, setupFormatFunc) {\n  const numPatterns = Object.keys(exports.Patterns).length\n  let bestPattern = 0\n  let lowerPenalty = Infinity\n\n  for (let p = 0; p < numPatterns; p++) {\n    setupFormatFunc(p)\n    exports.applyMask(p, data)\n\n    // Calculate penalty\n    const penalty =\n      exports.getPenaltyN1(data) +\n      exports.getPenaltyN2(data) +\n      exports.getPenaltyN3(data) +\n      exports.getPenaltyN4(data)\n\n    // Undo previously applied mask\n    exports.applyMask(p, data)\n\n    if (penalty < lowerPenalty) {\n      lowerPenalty = penalty\n      bestPattern = p\n    }\n  }\n\n  return bestPattern\n}\n", "const ECLevel = require('./error-correction-level')\r\n\r\nconst EC_BLOCKS_TABLE = [\r\n// L  M  Q  H\r\n  1, 1, 1, 1,\r\n  1, 1, 1, 1,\r\n  1, 1, 2, 2,\r\n  1, 2, 2, 4,\r\n  1, 2, 4, 4,\r\n  2, 4, 4, 4,\r\n  2, 4, 6, 5,\r\n  2, 4, 6, 6,\r\n  2, 5, 8, 8,\r\n  4, 5, 8, 8,\r\n  4, 5, 8, 11,\r\n  4, 8, 10, 11,\r\n  4, 9, 12, 16,\r\n  4, 9, 16, 16,\r\n  6, 10, 12, 18,\r\n  6, 10, 17, 16,\r\n  6, 11, 16, 19,\r\n  6, 13, 18, 21,\r\n  7, 14, 21, 25,\r\n  8, 16, 20, 25,\r\n  8, 17, 23, 25,\r\n  9, 17, 23, 34,\r\n  9, 18, 25, 30,\r\n  10, 20, 27, 32,\r\n  12, 21, 29, 35,\r\n  12, 23, 34, 37,\r\n  12, 25, 34, 40,\r\n  13, 26, 35, 42,\r\n  14, 28, 38, 45,\r\n  15, 29, 40, 48,\r\n  16, 31, 43, 51,\r\n  17, 33, 45, 54,\r\n  18, 35, 48, 57,\r\n  19, 37, 51, 60,\r\n  19, 38, 53, 63,\r\n  20, 40, 56, 66,\r\n  21, 43, 59, 70,\r\n  22, 45, 62, 74,\r\n  24, 47, 65, 77,\r\n  25, 49, 68, 81\r\n]\r\n\r\nconst EC_CODEWORDS_TABLE = [\r\n// L  M  Q  H\r\n  7, 10, 13, 17,\r\n  10, 16, 22, 28,\r\n  15, 26, 36, 44,\r\n  20, 36, 52, 64,\r\n  26, 48, 72, 88,\r\n  36, 64, 96, 112,\r\n  40, 72, 108, 130,\r\n  48, 88, 132, 156,\r\n  60, 110, 160, 192,\r\n  72, 130, 192, 224,\r\n  80, 150, 224, 264,\r\n  96, 176, 260, 308,\r\n  104, 198, 288, 352,\r\n  120, 216, 320, 384,\r\n  132, 240, 360, 432,\r\n  144, 280, 408, 480,\r\n  168, 308, 448, 532,\r\n  180, 338, 504, 588,\r\n  196, 364, 546, 650,\r\n  224, 416, 600, 700,\r\n  224, 442, 644, 750,\r\n  252, 476, 690, 816,\r\n  270, 504, 750, 900,\r\n  300, 560, 810, 960,\r\n  312, 588, 870, 1050,\r\n  336, 644, 952, 1110,\r\n  360, 700, 1020, 1200,\r\n  390, 728, 1050, 1260,\r\n  420, 784, 1140, 1350,\r\n  450, 812, 1200, 1440,\r\n  480, 868, 1290, 1530,\r\n  510, 924, 1350, 1620,\r\n  540, 980, 1440, 1710,\r\n  570, 1036, 1530, 1800,\r\n  570, 1064, 1590, 1890,\r\n  600, 1120, 1680, 1980,\r\n  630, 1204, 1770, 2100,\r\n  660, 1260, 1860, 2220,\r\n  720, 1316, 1950, 2310,\r\n  750, 1372, 2040, 2430\r\n]\r\n\r\n/**\r\n * Returns the number of error correction block that the QR Code should contain\r\n * for the specified version and error correction level.\r\n *\r\n * @param  {Number} version              QR Code version\r\n * @param  {Number} errorCorrectionLevel Error correction level\r\n * @return {Number}                      Number of error correction blocks\r\n */\r\nexports.getBlocksCount = function getBlocksCount (version, errorCorrectionLevel) {\r\n  switch (errorCorrectionLevel) {\r\n    case ECLevel.L:\r\n      return EC_BLOCKS_TABLE[(version - 1) * 4 + 0]\r\n    case ECLevel.M:\r\n      return EC_BLOCKS_TABLE[(version - 1) * 4 + 1]\r\n    case ECLevel.Q:\r\n      return EC_BLOCKS_TABLE[(version - 1) * 4 + 2]\r\n    case ECLevel.H:\r\n      return EC_BLOCKS_TABLE[(version - 1) * 4 + 3]\r\n    default:\r\n      return undefined\r\n  }\r\n}\r\n\r\n/**\r\n * Returns the number of error correction codewords to use for the specified\r\n * version and error correction level.\r\n *\r\n * @param  {Number} version              QR Code version\r\n * @param  {Number} errorCorrectionLevel Error correction level\r\n * @return {Number}                      Number of error correction codewords\r\n */\r\nexports.getTotalCodewordsCount = function getTotalCodewordsCount (version, errorCorrectionLevel) {\r\n  switch (errorCorrectionLevel) {\r\n    case ECLevel.L:\r\n      return EC_CODEWORDS_TABLE[(version - 1) * 4 + 0]\r\n    case ECLevel.M:\r\n      return EC_CODEWORDS_TABLE[(version - 1) * 4 + 1]\r\n    case ECLevel.Q:\r\n      return EC_CODEWORDS_TABLE[(version - 1) * 4 + 2]\r\n    case ECLevel.H:\r\n      return EC_CODEWORDS_TABLE[(version - 1) * 4 + 3]\r\n    default:\r\n      return undefined\r\n  }\r\n}\r\n", "const EXP_TABLE = new Uint8Array(512)\nconst LOG_TABLE = new Uint8Array(256)\n/**\n * Precompute the log and anti-log tables for faster computation later\n *\n * For each possible value in the galois field 2^8, we will pre-compute\n * the logarithm and anti-logarithm (exponential) of this value\n *\n * ref {@link https://en.wikiversity.org/wiki/Reed%E2%80%93Solomon_codes_for_coders#Introduction_to_mathematical_fields}\n */\n;(function initTables () {\n  let x = 1\n  for (let i = 0; i < 255; i++) {\n    EXP_TABLE[i] = x\n    LOG_TABLE[x] = i\n\n    x <<= 1 // multiply by 2\n\n    // The QR code specification says to use byte-wise modulo 100011101 arithmetic.\n    // This means that when a number is 256 or larger, it should be XORed with 0x11D.\n    if (x & 0x100) { // similar to x >= 256, but a lot faster (because 0x100 == 256)\n      x ^= 0x11D\n    }\n  }\n\n  // Optimization: double the size of the anti-log table so that we don't need to mod 255 to\n  // stay inside the bounds (because we will mainly use this table for the multiplication of\n  // two GF numbers, no more).\n  // @see {@link mul}\n  for (let i = 255; i < 512; i++) {\n    EXP_TABLE[i] = EXP_TABLE[i - 255]\n  }\n}())\n\n/**\n * Returns log value of n inside Galois Field\n *\n * @param  {Number} n\n * @return {Number}\n */\nexports.log = function log (n) {\n  if (n < 1) throw new Error('log(' + n + ')')\n  return LOG_TABLE[n]\n}\n\n/**\n * Returns anti-log value of n inside Galois Field\n *\n * @param  {Number} n\n * @return {Number}\n */\nexports.exp = function exp (n) {\n  return EXP_TABLE[n]\n}\n\n/**\n * Multiplies two number inside Galois Field\n *\n * @param  {Number} x\n * @param  {Number} y\n * @return {Number}\n */\nexports.mul = function mul (x, y) {\n  if (x === 0 || y === 0) return 0\n\n  // should be EXP_TABLE[(LOG_TABLE[x] + LOG_TABLE[y]) % 255] if EXP_TABLE wasn't oversized\n  // @see {@link initTables}\n  return EXP_TABLE[LOG_TABLE[x] + LOG_TABLE[y]]\n}\n", "const GF = require('./galois-field')\n\n/**\n * Multiplies two polynomials inside Galois Field\n *\n * @param  {Uint8Array} p1 Polynomial\n * @param  {Uint8Array} p2 Polynomial\n * @return {Uint8Array}    Product of p1 and p2\n */\nexports.mul = function mul (p1, p2) {\n  const coeff = new Uint8Array(p1.length + p2.length - 1)\n\n  for (let i = 0; i < p1.length; i++) {\n    for (let j = 0; j < p2.length; j++) {\n      coeff[i + j] ^= GF.mul(p1[i], p2[j])\n    }\n  }\n\n  return coeff\n}\n\n/**\n * Calculate the remainder of polynomials division\n *\n * @param  {Uint8Array} divident Polynomial\n * @param  {Uint8Array} divisor  Polynomial\n * @return {Uint8Array}          Remainder\n */\nexports.mod = function mod (divident, divisor) {\n  let result = new Uint8Array(divident)\n\n  while ((result.length - divisor.length) >= 0) {\n    const coeff = result[0]\n\n    for (let i = 0; i < divisor.length; i++) {\n      result[i] ^= GF.mul(divisor[i], coeff)\n    }\n\n    // remove all zeros from buffer head\n    let offset = 0\n    while (offset < result.length && result[offset] === 0) offset++\n    result = result.slice(offset)\n  }\n\n  return result\n}\n\n/**\n * Generate an irreducible generator polynomial of specified degree\n * (used by Reed-Solomon encoder)\n *\n * @param  {Number} degree Degree of the generator polynomial\n * @return {Uint8Array}    Buffer containing polynomial coefficients\n */\nexports.generateECPolynomial = function generateECPolynomial (degree) {\n  let poly = new Uint8Array([1])\n  for (let i = 0; i < degree; i++) {\n    poly = exports.mul(poly, new Uint8Array([1, GF.exp(i)]))\n  }\n\n  return poly\n}\n", "const Polynomial = require('./polynomial')\n\nfunction ReedSolomonEncoder (degree) {\n  this.genPoly = undefined\n  this.degree = degree\n\n  if (this.degree) this.initialize(this.degree)\n}\n\n/**\n * Initialize the encoder.\n * The input param should correspond to the number of error correction codewords.\n *\n * @param  {Number} degree\n */\nReedSolomonEncoder.prototype.initialize = function initialize (degree) {\n  // create an irreducible generator polynomial\n  this.degree = degree\n  this.genPoly = Polynomial.generateECPolynomial(this.degree)\n}\n\n/**\n * Encodes a chunk of data\n *\n * @param  {Uint8Array} data Buffer containing input data\n * @return {Uint8Array}      Buffer containing encoded data\n */\nReedSolomonEncoder.prototype.encode = function encode (data) {\n  if (!this.genPoly) {\n    throw new Error('Encoder not initialized')\n  }\n\n  // Calculate EC for this data block\n  // extends data size to data+genPoly size\n  const paddedData = new Uint8Array(data.length + this.degree)\n  paddedData.set(data)\n\n  // The error correction codewords are the remainder after dividing the data codewords\n  // by a generator polynomial\n  const remainder = Polynomial.mod(paddedData, this.genPoly)\n\n  // return EC data blocks (last n byte, where n is the degree of genPoly)\n  // If coefficients number in remainder are less than genPoly degree,\n  // pad with 0s to the left to reach the needed number of coefficients\n  const start = this.degree - remainder.length\n  if (start > 0) {\n    const buff = new Uint8Array(this.degree)\n    buff.set(remainder, start)\n\n    return buff\n  }\n\n  return remainder\n}\n\nmodule.exports = ReedSolomonEncoder\n", "/**\n * Check if QR Code version is valid\n *\n * @param  {Number}  version QR Code version\n * @return {Boolean}         true if valid version, false otherwise\n */\nexports.isValid = function isValid (version) {\n  return !isNaN(version) && version >= 1 && version <= 40\n}\n", "const numeric = '[0-9]+'\nconst alphanumeric = '[A-Z $%*+\\\\-./:]+'\nlet kanji = '(?:[u3000-u303F]|[u3040-u309F]|[u30A0-u30FF]|' +\n  '[uFF00-uFFEF]|[u4E00-u9FAF]|[u2605-u2606]|[u2190-u2195]|u203B|' +\n  '[u2010u2015u2018u2019u2025u2026u201Cu201Du2225u2260]|' +\n  '[u0391-u0451]|[u00A7u00A8u00B1u00B4u00D7u00F7])+'\nkanji = kanji.replace(/u/g, '\\\\u')\n\nconst byte = '(?:(?![A-Z0-9 $%*+\\\\-./:]|' + kanji + ')(?:.|[\\r\\n]))+'\n\nexports.KANJI = new RegExp(kanji, 'g')\nexports.BYTE_KANJI = new RegExp('[^A-Z0-9 $%*+\\\\-./:]+', 'g')\nexports.BYTE = new RegExp(byte, 'g')\nexports.NUMERIC = new RegExp(numeric, 'g')\nexports.ALPHANUMERIC = new RegExp(alphanumeric, 'g')\n\nconst TEST_KANJI = new RegExp('^' + kanji + '$')\nconst TEST_NUMERIC = new RegExp('^' + numeric + '$')\nconst TEST_ALPHANUMERIC = new RegExp('^[A-Z0-9 $%*+\\\\-./:]+$')\n\nexports.testKanji = function testKanji (str) {\n  return TEST_KANJI.test(str)\n}\n\nexports.testNumeric = function testNumeric (str) {\n  return TEST_NUMERIC.test(str)\n}\n\nexports.testAlphanumeric = function testAlphanumeric (str) {\n  return TEST_ALPHANUMERIC.test(str)\n}\n", "const VersionCheck = require('./version-check')\nconst Regex = require('./regex')\n\n/**\n * Numeric mode encodes data from the decimal digit set (0 - 9)\n * (byte values 30HEX to 39HEX).\n * Normally, 3 data characters are represented by 10 bits.\n *\n * @type {Object}\n */\nexports.NUMERIC = {\n  id: 'Numeric',\n  bit: 1 << 0,\n  ccBits: [10, 12, 14]\n}\n\n/**\n * Alphanumeric mode encodes data from a set of 45 characters,\n * i.e. 10 numeric digits (0 - 9),\n *      26 alphabetic characters (A - Z),\n *   and 9 symbols (SP, $, %, *, +, -, ., /, :).\n * Normally, two input characters are represented by 11 bits.\n *\n * @type {Object}\n */\nexports.ALPHANUMERIC = {\n  id: 'Alphanumeric',\n  bit: 1 << 1,\n  ccBits: [9, 11, 13]\n}\n\n/**\n * In byte mode, data is encoded at 8 bits per character.\n *\n * @type {Object}\n */\nexports.BYTE = {\n  id: 'Byte',\n  bit: 1 << 2,\n  ccBits: [8, 16, 16]\n}\n\n/**\n * The Kanji mode efficiently encodes Kanji characters in accordance with\n * the Shift JIS system based on JIS X 0208.\n * The Shift JIS values are shifted from the JIS X 0208 values.\n * JIS X 0208 gives details of the shift coded representation.\n * Each two-byte character value is compacted to a 13-bit binary codeword.\n *\n * @type {Object}\n */\nexports.KANJI = {\n  id: 'Kanji',\n  bit: 1 << 3,\n  ccBits: [8, 10, 12]\n}\n\n/**\n * Mixed mode will contain a sequences of data in a combination of any of\n * the modes described above\n *\n * @type {Object}\n */\nexports.MIXED = {\n  bit: -1\n}\n\n/**\n * Returns the number of bits needed to store the data length\n * according to QR Code specifications.\n *\n * @param  {Mode}   mode    Data mode\n * @param  {Number} version QR Code version\n * @return {Number}         Number of bits\n */\nexports.getCharCountIndicator = function getCharCountIndicator (mode, version) {\n  if (!mode.ccBits) throw new Error('Invalid mode: ' + mode)\n\n  if (!VersionCheck.isValid(version)) {\n    throw new Error('Invalid version: ' + version)\n  }\n\n  if (version >= 1 && version < 10) return mode.ccBits[0]\n  else if (version < 27) return mode.ccBits[1]\n  return mode.ccBits[2]\n}\n\n/**\n * Returns the most efficient mode to store the specified data\n *\n * @param  {String} dataStr Input data string\n * @return {Mode}           Best mode\n */\nexports.getBestModeForData = function getBestModeForData (dataStr) {\n  if (Regex.testNumeric(dataStr)) return exports.NUMERIC\n  else if (Regex.testAlphanumeric(dataStr)) return exports.ALPHANUMERIC\n  else if (Regex.testKanji(dataStr)) return exports.KANJI\n  else return exports.BYTE\n}\n\n/**\n * Return mode name as string\n *\n * @param {Mode} mode Mode object\n * @returns {String}  Mode name\n */\nexports.toString = function toString (mode) {\n  if (mode && mode.id) return mode.id\n  throw new Error('Invalid mode')\n}\n\n/**\n * Check if input param is a valid mode object\n *\n * @param   {Mode}    mode Mode object\n * @returns {Boolean} True if valid mode, false otherwise\n */\nexports.isValid = function isValid (mode) {\n  return mode && mode.bit && mode.ccBits\n}\n\n/**\n * Get mode object from its name\n *\n * @param   {String} string Mode name\n * @returns {Mode}          Mode object\n */\nfunction fromString (string) {\n  if (typeof string !== 'string') {\n    throw new Error('Param is not a string')\n  }\n\n  const lcStr = string.toLowerCase()\n\n  switch (lcStr) {\n    case 'numeric':\n      return exports.NUMERIC\n    case 'alphanumeric':\n      return exports.ALPHANUMERIC\n    case 'kanji':\n      return exports.KANJI\n    case 'byte':\n      return exports.BYTE\n    default:\n      throw new Error('Unknown mode: ' + string)\n  }\n}\n\n/**\n * Returns mode from a value.\n * If value is not a valid mode, returns defaultValue\n *\n * @param  {Mode|String} value        Encoding mode\n * @param  {Mode}        defaultValue Fallback value\n * @return {Mode}                     Encoding mode\n */\nexports.from = function from (value, defaultValue) {\n  if (exports.isValid(value)) {\n    return value\n  }\n\n  try {\n    return fromString(value)\n  } catch (e) {\n    return defaultValue\n  }\n}\n", "const Utils = require('./utils')\nconst ECCode = require('./error-correction-code')\nconst ECLevel = require('./error-correction-level')\nconst Mode = require('./mode')\nconst VersionCheck = require('./version-check')\n\n// Generator polynomial used to encode version information\nconst G18 = (1 << 12) | (1 << 11) | (1 << 10) | (1 << 9) | (1 << 8) | (1 << 5) | (1 << 2) | (1 << 0)\nconst G18_BCH = Utils.getBCHDigit(G18)\n\nfunction getBestVersionForDataLength (mode, length, errorCorrectionLevel) {\n  for (let currentVersion = 1; currentVersion <= 40; currentVersion++) {\n    if (length <= exports.getCapacity(currentVersion, errorCorrectionLevel, mode)) {\n      return currentVersion\n    }\n  }\n\n  return undefined\n}\n\nfunction getReservedBitsCount (mode, version) {\n  // Character count indicator + mode indicator bits\n  return Mode.getCharCountIndicator(mode, version) + 4\n}\n\nfunction getTotalBitsFromDataArray (segments, version) {\n  let totalBits = 0\n\n  segments.forEach(function (data) {\n    const reservedBits = getReservedBitsCount(data.mode, version)\n    totalBits += reservedBits + data.getBitsLength()\n  })\n\n  return totalBits\n}\n\nfunction getBestVersionForMixedData (segments, errorCorrectionLevel) {\n  for (let currentVersion = 1; currentVersion <= 40; currentVersion++) {\n    const length = getTotalBitsFromDataArray(segments, currentVersion)\n    if (length <= exports.getCapacity(currentVersion, errorCorrectionLevel, Mode.MIXED)) {\n      return currentVersion\n    }\n  }\n\n  return undefined\n}\n\n/**\n * Returns version number from a value.\n * If value is not a valid version, returns defaultValue\n *\n * @param  {Number|String} value        QR Code version\n * @param  {Number}        defaultValue Fallback value\n * @return {Number}                     QR Code version number\n */\nexports.from = function from (value, defaultValue) {\n  if (VersionCheck.isValid(value)) {\n    return parseInt(value, 10)\n  }\n\n  return defaultValue\n}\n\n/**\n * Returns how much data can be stored with the specified QR code version\n * and error correction level\n *\n * @param  {Number} version              QR Code version (1-40)\n * @param  {Number} errorCorrectionLevel Error correction level\n * @param  {Mode}   mode                 Data mode\n * @return {Number}                      Quantity of storable data\n */\nexports.getCapacity = function getCapacity (version, errorCorrectionLevel, mode) {\n  if (!VersionCheck.isValid(version)) {\n    throw new Error('Invalid QR Code version')\n  }\n\n  // Use Byte mode as default\n  if (typeof mode === 'undefined') mode = Mode.BYTE\n\n  // Total codewords for this QR code version (Data + Error correction)\n  const totalCodewords = Utils.getSymbolTotalCodewords(version)\n\n  // Total number of error correction codewords\n  const ecTotalCodewords = ECCode.getTotalCodewordsCount(version, errorCorrectionLevel)\n\n  // Total number of data codewords\n  const dataTotalCodewordsBits = (totalCodewords - ecTotalCodewords) * 8\n\n  if (mode === Mode.MIXED) return dataTotalCodewordsBits\n\n  const usableBits = dataTotalCodewordsBits - getReservedBitsCount(mode, version)\n\n  // Return max number of storable codewords\n  switch (mode) {\n    case Mode.NUMERIC:\n      return Math.floor((usableBits / 10) * 3)\n\n    case Mode.ALPHANUMERIC:\n      return Math.floor((usableBits / 11) * 2)\n\n    case Mode.KANJI:\n      return Math.floor(usableBits / 13)\n\n    case Mode.BYTE:\n    default:\n      return Math.floor(usableBits / 8)\n  }\n}\n\n/**\n * Returns the minimum version needed to contain the amount of data\n *\n * @param  {Segment} data                    Segment of data\n * @param  {Number} [errorCorrectionLevel=H] Error correction level\n * @param  {Mode} mode                       Data mode\n * @return {Number}                          QR Code version\n */\nexports.getBestVersionForData = function getBestVersionForData (data, errorCorrectionLevel) {\n  let seg\n\n  const ecl = ECLevel.from(errorCorrectionLevel, ECLevel.M)\n\n  if (Array.isArray(data)) {\n    if (data.length > 1) {\n      return getBestVersionForMixedData(data, ecl)\n    }\n\n    if (data.length === 0) {\n      return 1\n    }\n\n    seg = data[0]\n  } else {\n    seg = data\n  }\n\n  return getBestVersionForDataLength(seg.mode, seg.getLength(), ecl)\n}\n\n/**\n * Returns version information with relative error correction bits\n *\n * The version information is included in QR Code symbols of version 7 or larger.\n * It consists of an 18-bit sequence containing 6 data bits,\n * with 12 error correction bits calculated using the (18, 6) Golay code.\n *\n * @param  {Number} version QR Code version\n * @return {Number}         Encoded version info bits\n */\nexports.getEncodedBits = function getEncodedBits (version) {\n  if (!VersionCheck.isValid(version) || version < 7) {\n    throw new Error('Invalid QR Code version')\n  }\n\n  let d = version << 12\n\n  while (Utils.getBCHDigit(d) - G18_BCH >= 0) {\n    d ^= (G18 << (Utils.getBCHDigit(d) - G18_BCH))\n  }\n\n  return (version << 12) | d\n}\n", "const Utils = require('./utils')\n\nconst G15 = (1 << 10) | (1 << 8) | (1 << 5) | (1 << 4) | (1 << 2) | (1 << 1) | (1 << 0)\nconst G15_MASK = (1 << 14) | (1 << 12) | (1 << 10) | (1 << 4) | (1 << 1)\nconst G15_BCH = Utils.getBCHDigit(G15)\n\n/**\n * Returns format information with relative error correction bits\n *\n * The format information is a 15-bit sequence containing 5 data bits,\n * with 10 error correction bits calculated using the (15, 5) BCH code.\n *\n * @param  {Number} errorCorrectionLevel Error correction level\n * @param  {Number} mask                 Mask pattern\n * @return {Number}                      Encoded format information bits\n */\nexports.getEncodedBits = function getEncodedBits (errorCorrectionLevel, mask) {\n  const data = ((errorCorrectionLevel.bit << 3) | mask)\n  let d = data << 10\n\n  while (Utils.getBCHDigit(d) - G15_BCH >= 0) {\n    d ^= (G15 << (Utils.getBCHDigit(d) - G15_BCH))\n  }\n\n  // xor final data with mask pattern in order to ensure that\n  // no combination of Error Correction Level and data mask pattern\n  // will result in an all-zero data string\n  return ((data << 10) | d) ^ G15_MASK\n}\n", "const Mode = require('./mode')\n\nfunction NumericData (data) {\n  this.mode = Mode.NUMERIC\n  this.data = data.toString()\n}\n\nNumericData.getBitsLength = function getBitsLength (length) {\n  return 10 * Math.floor(length / 3) + ((length % 3) ? ((length % 3) * 3 + 1) : 0)\n}\n\nNumericData.prototype.getLength = function getLength () {\n  return this.data.length\n}\n\nNumericData.prototype.getBitsLength = function getBitsLength () {\n  return NumericData.getBitsLength(this.data.length)\n}\n\nNumericData.prototype.write = function write (bitBuffer) {\n  let i, group, value\n\n  // The input data string is divided into groups of three digits,\n  // and each group is converted to its 10-bit binary equivalent.\n  for (i = 0; i + 3 <= this.data.length; i += 3) {\n    group = this.data.substr(i, 3)\n    value = parseInt(group, 10)\n\n    bitBuffer.put(value, 10)\n  }\n\n  // If the number of input digits is not an exact multiple of three,\n  // the final one or two digits are converted to 4 or 7 bits respectively.\n  const remainingNum = this.data.length - i\n  if (remainingNum > 0) {\n    group = this.data.substr(i)\n    value = parseInt(group, 10)\n\n    bitBuffer.put(value, remainingNum * 3 + 1)\n  }\n}\n\nmodule.exports = NumericData\n", "const Mode = require('./mode')\n\n/**\n * Array of characters available in alphanumeric mode\n *\n * As per QR Code specification, to each character\n * is assigned a value from 0 to 44 which in this case coincides\n * with the array index\n *\n * @type {Array}\n */\nconst ALPHA_NUM_CHARS = [\n  '0', '1', '2', '3', '4', '5', '6', '7', '8', '9',\n  'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M',\n  'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z',\n  ' ', '$', '%', '*', '+', '-', '.', '/', ':'\n]\n\nfunction AlphanumericData (data) {\n  this.mode = Mode.ALPHANUMERIC\n  this.data = data\n}\n\nAlphanumericData.getBitsLength = function getBitsLength (length) {\n  return 11 * Math.floor(length / 2) + 6 * (length % 2)\n}\n\nAlphanumericData.prototype.getLength = function getLength () {\n  return this.data.length\n}\n\nAlphanumericData.prototype.getBitsLength = function getBitsLength () {\n  return AlphanumericData.getBitsLength(this.data.length)\n}\n\nAlphanumericData.prototype.write = function write (bitBuffer) {\n  let i\n\n  // Input data characters are divided into groups of two characters\n  // and encoded as 11-bit binary codes.\n  for (i = 0; i + 2 <= this.data.length; i += 2) {\n    // The character value of the first character is multiplied by 45\n    let value = ALPHA_NUM_CHARS.indexOf(this.data[i]) * 45\n\n    // The character value of the second digit is added to the product\n    value += ALPHA_NUM_CHARS.indexOf(this.data[i + 1])\n\n    // The sum is then stored as 11-bit binary number\n    bitBuffer.put(value, 11)\n  }\n\n  // If the number of input data characters is not a multiple of two,\n  // the character value of the final character is encoded as a 6-bit binary number.\n  if (this.data.length % 2) {\n    bitBuffer.put(ALPHA_NUM_CHARS.indexOf(this.data[i]), 6)\n  }\n}\n\nmodule.exports = AlphanumericData\n", "const Mode = require('./mode')\n\nfunction ByteData (data) {\n  this.mode = Mode.BYTE\n  if (typeof (data) === 'string') {\n    this.data = new TextEncoder().encode(data)\n  } else {\n    this.data = new Uint8Array(data)\n  }\n}\n\nByteData.getBitsLength = function getBitsLength (length) {\n  return length * 8\n}\n\nByteData.prototype.getLength = function getLength () {\n  return this.data.length\n}\n\nByteData.prototype.getBitsLength = function getBitsLength () {\n  return ByteData.getBitsLength(this.data.length)\n}\n\nByteData.prototype.write = function (bitBuffer) {\n  for (let i = 0, l = this.data.length; i < l; i++) {\n    bitBuffer.put(this.data[i], 8)\n  }\n}\n\nmodule.exports = ByteData\n", "const Mode = require('./mode')\nconst Utils = require('./utils')\n\nfunction KanjiData (data) {\n  this.mode = Mode.KANJI\n  this.data = data\n}\n\nKanjiData.getBitsLength = function getBitsLength (length) {\n  return length * 13\n}\n\nKanjiData.prototype.getLength = function getLength () {\n  return this.data.length\n}\n\nKanjiData.prototype.getBitsLength = function getBitsLength () {\n  return KanjiData.getBitsLength(this.data.length)\n}\n\nKanjiData.prototype.write = function (bitBuffer) {\n  let i\n\n  // In the Shift JIS system, Kanji characters are represented by a two byte combination.\n  // These byte values are shifted from the JIS X 0208 values.\n  // JIS X 0208 gives details of the shift coded representation.\n  for (i = 0; i < this.data.length; i++) {\n    let value = Utils.toSJIS(this.data[i])\n\n    // For characters with Shift JIS values from 0x8140 to 0x9FFC:\n    if (value >= 0x8140 && value <= 0x9FFC) {\n      // Subtract 0x8140 from Shift JIS value\n      value -= 0x8140\n\n    // For characters with Shift JIS values from 0xE040 to 0xEBBF\n    } else if (value >= 0xE040 && value <= 0xEBBF) {\n      // Subtract 0xC140 from Shift JIS value\n      value -= 0xC140\n    } else {\n      throw new Error(\n        'Invalid SJIS character: ' + this.data[i] + '\\n' +\n        'Make sure your charset is UTF-8')\n    }\n\n    // Multiply most significant byte of result by 0xC0\n    // and add least significant byte to product\n    value = (((value >>> 8) & 0xff) * 0xC0) + (value & 0xff)\n\n    // Convert result to a 13-bit binary string\n    bitBuffer.put(value, 13)\n  }\n}\n\nmodule.exports = KanjiData\n", "'use strict';\n\n/******************************************************************************\n * Created 2008-08-19.\n *\n * Dijkstra path-finding functions. Adapted from the Dijkstar Python project.\n *\n * Copyright (C) 2008\n *   Wyatt Baldwin <self@wyattbaldwin.com>\n *   All rights reserved\n *\n * Licensed under the MIT license.\n *\n *   http://www.opensource.org/licenses/mit-license.php\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n *****************************************************************************/\nvar dijkstra = {\n  single_source_shortest_paths: function(graph, s, d) {\n    // Predecessor map for each node that has been encountered.\n    // node ID => predecessor node ID\n    var predecessors = {};\n\n    // Costs of shortest paths from s to all nodes encountered.\n    // node ID => cost\n    var costs = {};\n    costs[s] = 0;\n\n    // Costs of shortest paths from s to all nodes encountered; differs from\n    // `costs` in that it provides easy access to the node that currently has\n    // the known shortest path from s.\n    // XXX: Do we actually need both `costs` and `open`?\n    var open = dijkstra.PriorityQueue.make();\n    open.push(s, 0);\n\n    var closest,\n        u, v,\n        cost_of_s_to_u,\n        adjacent_nodes,\n        cost_of_e,\n        cost_of_s_to_u_plus_cost_of_e,\n        cost_of_s_to_v,\n        first_visit;\n    while (!open.empty()) {\n      // In the nodes remaining in graph that have a known cost from s,\n      // find the node, u, that currently has the shortest path from s.\n      closest = open.pop();\n      u = closest.value;\n      cost_of_s_to_u = closest.cost;\n\n      // Get nodes adjacent to u...\n      adjacent_nodes = graph[u] || {};\n\n      // ...and explore the edges that connect u to those nodes, updating\n      // the cost of the shortest paths to any or all of those nodes as\n      // necessary. v is the node across the current edge from u.\n      for (v in adjacent_nodes) {\n        if (adjacent_nodes.hasOwnProperty(v)) {\n          // Get the cost of the edge running from u to v.\n          cost_of_e = adjacent_nodes[v];\n\n          // Cost of s to u plus the cost of u to v across e--this is *a*\n          // cost from s to v that may or may not be less than the current\n          // known cost to v.\n          cost_of_s_to_u_plus_cost_of_e = cost_of_s_to_u + cost_of_e;\n\n          // If we haven't visited v yet OR if the current known cost from s to\n          // v is greater than the new cost we just found (cost of s to u plus\n          // cost of u to v across e), update v's cost in the cost list and\n          // update v's predecessor in the predecessor list (it's now u).\n          cost_of_s_to_v = costs[v];\n          first_visit = (typeof costs[v] === 'undefined');\n          if (first_visit || cost_of_s_to_v > cost_of_s_to_u_plus_cost_of_e) {\n            costs[v] = cost_of_s_to_u_plus_cost_of_e;\n            open.push(v, cost_of_s_to_u_plus_cost_of_e);\n            predecessors[v] = u;\n          }\n        }\n      }\n    }\n\n    if (typeof d !== 'undefined' && typeof costs[d] === 'undefined') {\n      var msg = ['Could not find a path from ', s, ' to ', d, '.'].join('');\n      throw new Error(msg);\n    }\n\n    return predecessors;\n  },\n\n  extract_shortest_path_from_predecessor_list: function(predecessors, d) {\n    var nodes = [];\n    var u = d;\n    var predecessor;\n    while (u) {\n      nodes.push(u);\n      predecessor = predecessors[u];\n      u = predecessors[u];\n    }\n    nodes.reverse();\n    return nodes;\n  },\n\n  find_path: function(graph, s, d) {\n    var predecessors = dijkstra.single_source_shortest_paths(graph, s, d);\n    return dijkstra.extract_shortest_path_from_predecessor_list(\n      predecessors, d);\n  },\n\n  /**\n   * A very naive priority queue implementation.\n   */\n  PriorityQueue: {\n    make: function (opts) {\n      var T = dijkstra.PriorityQueue,\n          t = {},\n          key;\n      opts = opts || {};\n      for (key in T) {\n        if (T.hasOwnProperty(key)) {\n          t[key] = T[key];\n        }\n      }\n      t.queue = [];\n      t.sorter = opts.sorter || T.default_sorter;\n      return t;\n    },\n\n    default_sorter: function (a, b) {\n      return a.cost - b.cost;\n    },\n\n    /**\n     * Add a new item to the queue and ensure the highest priority element\n     * is at the front of the queue.\n     */\n    push: function (value, cost) {\n      var item = {value: value, cost: cost};\n      this.queue.push(item);\n      this.queue.sort(this.sorter);\n    },\n\n    /**\n     * Return the highest priority element in the queue.\n     */\n    pop: function () {\n      return this.queue.shift();\n    },\n\n    empty: function () {\n      return this.queue.length === 0;\n    }\n  }\n};\n\n\n// node.js module exports\nif (typeof module !== 'undefined') {\n  module.exports = dijkstra;\n}\n", "const Mode = require('./mode')\nconst NumericData = require('./numeric-data')\nconst AlphanumericData = require('./alphanumeric-data')\nconst ByteData = require('./byte-data')\nconst KanjiData = require('./kanji-data')\nconst Regex = require('./regex')\nconst Utils = require('./utils')\nconst dijkstra = require('dijkstrajs')\n\n/**\n * Returns UTF8 byte length\n *\n * @param  {String} str Input string\n * @return {Number}     Number of byte\n */\nfunction getStringByteLength (str) {\n  return unescape(encodeURIComponent(str)).length\n}\n\n/**\n * Get a list of segments of the specified mode\n * from a string\n *\n * @param  {Mode}   mode Segment mode\n * @param  {String} str  String to process\n * @return {Array}       Array of object with segments data\n */\nfunction getSegments (regex, mode, str) {\n  const segments = []\n  let result\n\n  while ((result = regex.exec(str)) !== null) {\n    segments.push({\n      data: result[0],\n      index: result.index,\n      mode: mode,\n      length: result[0].length\n    })\n  }\n\n  return segments\n}\n\n/**\n * Extracts a series of segments with the appropriate\n * modes from a string\n *\n * @param  {String} dataStr Input string\n * @return {Array}          Array of object with segments data\n */\nfunction getSegmentsFromString (dataStr) {\n  const numSegs = getSegments(Regex.NUMERIC, Mode.NUMERIC, dataStr)\n  const alphaNumSegs = getSegments(Regex.ALPHANUMERIC, Mode.ALPHANUMERIC, dataStr)\n  let byteSegs\n  let kanjiSegs\n\n  if (Utils.isKanjiModeEnabled()) {\n    byteSegs = getSegments(Regex.BYTE, Mode.BYTE, dataStr)\n    kanjiSegs = getSegments(Regex.KANJI, Mode.KANJI, dataStr)\n  } else {\n    byteSegs = getSegments(Regex.BYTE_KANJI, Mode.BYTE, dataStr)\n    kanjiSegs = []\n  }\n\n  const segs = numSegs.concat(alphaNumSegs, byteSegs, kanjiSegs)\n\n  return segs\n    .sort(function (s1, s2) {\n      return s1.index - s2.index\n    })\n    .map(function (obj) {\n      return {\n        data: obj.data,\n        mode: obj.mode,\n        length: obj.length\n      }\n    })\n}\n\n/**\n * Returns how many bits are needed to encode a string of\n * specified length with the specified mode\n *\n * @param  {Number} length String length\n * @param  {Mode} mode     Segment mode\n * @return {Number}        Bit length\n */\nfunction getSegmentBitsLength (length, mode) {\n  switch (mode) {\n    case Mode.NUMERIC:\n      return NumericData.getBitsLength(length)\n    case Mode.ALPHANUMERIC:\n      return AlphanumericData.getBitsLength(length)\n    case Mode.KANJI:\n      return KanjiData.getBitsLength(length)\n    case Mode.BYTE:\n      return ByteData.getBitsLength(length)\n  }\n}\n\n/**\n * Merges adjacent segments which have the same mode\n *\n * @param  {Array} segs Array of object with segments data\n * @return {Array}      Array of object with segments data\n */\nfunction mergeSegments (segs) {\n  return segs.reduce(function (acc, curr) {\n    const prevSeg = acc.length - 1 >= 0 ? acc[acc.length - 1] : null\n    if (prevSeg && prevSeg.mode === curr.mode) {\n      acc[acc.length - 1].data += curr.data\n      return acc\n    }\n\n    acc.push(curr)\n    return acc\n  }, [])\n}\n\n/**\n * Generates a list of all possible nodes combination which\n * will be used to build a segments graph.\n *\n * Nodes are divided by groups. Each group will contain a list of all the modes\n * in which is possible to encode the given text.\n *\n * For example the text '12345' can be encoded as Numeric, Alphanumeric or Byte.\n * The group for '12345' will contain then 3 objects, one for each\n * possible encoding mode.\n *\n * Each node represents a possible segment.\n *\n * @param  {Array} segs Array of object with segments data\n * @return {Array}      Array of object with segments data\n */\nfunction buildNodes (segs) {\n  const nodes = []\n  for (let i = 0; i < segs.length; i++) {\n    const seg = segs[i]\n\n    switch (seg.mode) {\n      case Mode.NUMERIC:\n        nodes.push([seg,\n          { data: seg.data, mode: Mode.ALPHANUMERIC, length: seg.length },\n          { data: seg.data, mode: Mode.BYTE, length: seg.length }\n        ])\n        break\n      case Mode.ALPHANUMERIC:\n        nodes.push([seg,\n          { data: seg.data, mode: Mode.BYTE, length: seg.length }\n        ])\n        break\n      case Mode.KANJI:\n        nodes.push([seg,\n          { data: seg.data, mode: Mode.BYTE, length: getStringByteLength(seg.data) }\n        ])\n        break\n      case Mode.BYTE:\n        nodes.push([\n          { data: seg.data, mode: Mode.BYTE, length: getStringByteLength(seg.data) }\n        ])\n    }\n  }\n\n  return nodes\n}\n\n/**\n * Builds a graph from a list of nodes.\n * All segments in each node group will be connected with all the segments of\n * the next group and so on.\n *\n * At each connection will be assigned a weight depending on the\n * segment's byte length.\n *\n * @param  {Array} nodes    Array of object with segments data\n * @param  {Number} version QR Code version\n * @return {Object}         Graph of all possible segments\n */\nfunction buildGraph (nodes, version) {\n  const table = {}\n  const graph = { start: {} }\n  let prevNodeIds = ['start']\n\n  for (let i = 0; i < nodes.length; i++) {\n    const nodeGroup = nodes[i]\n    const currentNodeIds = []\n\n    for (let j = 0; j < nodeGroup.length; j++) {\n      const node = nodeGroup[j]\n      const key = '' + i + j\n\n      currentNodeIds.push(key)\n      table[key] = { node: node, lastCount: 0 }\n      graph[key] = {}\n\n      for (let n = 0; n < prevNodeIds.length; n++) {\n        const prevNodeId = prevNodeIds[n]\n\n        if (table[prevNodeId] && table[prevNodeId].node.mode === node.mode) {\n          graph[prevNodeId][key] =\n            getSegmentBitsLength(table[prevNodeId].lastCount + node.length, node.mode) -\n            getSegmentBitsLength(table[prevNodeId].lastCount, node.mode)\n\n          table[prevNodeId].lastCount += node.length\n        } else {\n          if (table[prevNodeId]) table[prevNodeId].lastCount = node.length\n\n          graph[prevNodeId][key] = getSegmentBitsLength(node.length, node.mode) +\n            4 + Mode.getCharCountIndicator(node.mode, version) // switch cost\n        }\n      }\n    }\n\n    prevNodeIds = currentNodeIds\n  }\n\n  for (let n = 0; n < prevNodeIds.length; n++) {\n    graph[prevNodeIds[n]].end = 0\n  }\n\n  return { map: graph, table: table }\n}\n\n/**\n * Builds a segment from a specified data and mode.\n * If a mode is not specified, the more suitable will be used.\n *\n * @param  {String} data             Input data\n * @param  {Mode | String} modesHint Data mode\n * @return {Segment}                 Segment\n */\nfunction buildSingleSegment (data, modesHint) {\n  let mode\n  const bestMode = Mode.getBestModeForData(data)\n\n  mode = Mode.from(modesHint, bestMode)\n\n  // Make sure data can be encoded\n  if (mode !== Mode.BYTE && mode.bit < bestMode.bit) {\n    throw new Error('\"' + data + '\"' +\n      ' cannot be encoded with mode ' + Mode.toString(mode) +\n      '.\\n Suggested mode is: ' + Mode.toString(bestMode))\n  }\n\n  // Use Mode.BYTE if Kanji support is disabled\n  if (mode === Mode.KANJI && !Utils.isKanjiModeEnabled()) {\n    mode = Mode.BYTE\n  }\n\n  switch (mode) {\n    case Mode.NUMERIC:\n      return new NumericData(data)\n\n    case Mode.ALPHANUMERIC:\n      return new AlphanumericData(data)\n\n    case Mode.KANJI:\n      return new KanjiData(data)\n\n    case Mode.BYTE:\n      return new ByteData(data)\n  }\n}\n\n/**\n * Builds a list of segments from an array.\n * Array can contain Strings or Objects with segment's info.\n *\n * For each item which is a string, will be generated a segment with the given\n * string and the more appropriate encoding mode.\n *\n * For each item which is an object, will be generated a segment with the given\n * data and mode.\n * Objects must contain at least the property \"data\".\n * If property \"mode\" is not present, the more suitable mode will be used.\n *\n * @param  {Array} array Array of objects with segments data\n * @return {Array}       Array of Segments\n */\nexports.fromArray = function fromArray (array) {\n  return array.reduce(function (acc, seg) {\n    if (typeof seg === 'string') {\n      acc.push(buildSingleSegment(seg, null))\n    } else if (seg.data) {\n      acc.push(buildSingleSegment(seg.data, seg.mode))\n    }\n\n    return acc\n  }, [])\n}\n\n/**\n * Builds an optimized sequence of segments from a string,\n * which will produce the shortest possible bitstream.\n *\n * @param  {String} data    Input string\n * @param  {Number} version QR Code version\n * @return {Array}          Array of segments\n */\nexports.fromString = function fromString (data, version) {\n  const segs = getSegmentsFromString(data, Utils.isKanjiModeEnabled())\n\n  const nodes = buildNodes(segs)\n  const graph = buildGraph(nodes, version)\n  const path = dijkstra.find_path(graph.map, 'start', 'end')\n\n  const optimizedSegs = []\n  for (let i = 1; i < path.length - 1; i++) {\n    optimizedSegs.push(graph.table[path[i]].node)\n  }\n\n  return exports.fromArray(mergeSegments(optimizedSegs))\n}\n\n/**\n * Splits a string in various segments with the modes which\n * best represent their content.\n * The produced segments are far from being optimized.\n * The output of this function is only used to estimate a QR Code version\n * which may contain the data.\n *\n * @param  {string} data Input string\n * @return {Array}       Array of segments\n */\nexports.rawSplit = function rawSplit (data) {\n  return exports.fromArray(\n    getSegmentsFromString(data, Utils.isKanjiModeEnabled())\n  )\n}\n", "const Utils = require('./utils')\nconst ECLevel = require('./error-correction-level')\nconst BitBuffer = require('./bit-buffer')\nconst BitMatrix = require('./bit-matrix')\nconst AlignmentPattern = require('./alignment-pattern')\nconst FinderPattern = require('./finder-pattern')\nconst MaskPattern = require('./mask-pattern')\nconst ECCode = require('./error-correction-code')\nconst ReedSolomonEncoder = require('./reed-solomon-encoder')\nconst Version = require('./version')\nconst FormatInfo = require('./format-info')\nconst Mode = require('./mode')\nconst Segments = require('./segments')\n\n/**\n * QRCode for JavaScript\n *\n * modified by Ryan Day for nodejs support\n * Copyright (c) 2011 Ryan Day\n *\n * Licensed under the MIT license:\n *   http://www.opensource.org/licenses/mit-license.php\n *\n//---------------------------------------------------------------------\n// QRCode for JavaScript\n//\n// Copyright (c) 2009 Kazuhiko Arase\n//\n// URL: http://www.d-project.com/\n//\n// Licensed under the MIT license:\n//   http://www.opensource.org/licenses/mit-license.php\n//\n// The word \"QR Code\" is registered trademark of\n// DENSO WAVE INCORPORATED\n//   http://www.denso-wave.com/qrcode/faqpatent-e.html\n//\n//---------------------------------------------------------------------\n*/\n\n/**\n * Add finder patterns bits to matrix\n *\n * @param  {BitMatrix} matrix  Modules matrix\n * @param  {Number}    version QR Code version\n */\nfunction setupFinderPattern (matrix, version) {\n  const size = matrix.size\n  const pos = FinderPattern.getPositions(version)\n\n  for (let i = 0; i < pos.length; i++) {\n    const row = pos[i][0]\n    const col = pos[i][1]\n\n    for (let r = -1; r <= 7; r++) {\n      if (row + r <= -1 || size <= row + r) continue\n\n      for (let c = -1; c <= 7; c++) {\n        if (col + c <= -1 || size <= col + c) continue\n\n        if ((r >= 0 && r <= 6 && (c === 0 || c === 6)) ||\n          (c >= 0 && c <= 6 && (r === 0 || r === 6)) ||\n          (r >= 2 && r <= 4 && c >= 2 && c <= 4)) {\n          matrix.set(row + r, col + c, true, true)\n        } else {\n          matrix.set(row + r, col + c, false, true)\n        }\n      }\n    }\n  }\n}\n\n/**\n * Add timing pattern bits to matrix\n *\n * Note: this function must be called before {@link setupAlignmentPattern}\n *\n * @param  {BitMatrix} matrix Modules matrix\n */\nfunction setupTimingPattern (matrix) {\n  const size = matrix.size\n\n  for (let r = 8; r < size - 8; r++) {\n    const value = r % 2 === 0\n    matrix.set(r, 6, value, true)\n    matrix.set(6, r, value, true)\n  }\n}\n\n/**\n * Add alignment patterns bits to matrix\n *\n * Note: this function must be called after {@link setupTimingPattern}\n *\n * @param  {BitMatrix} matrix  Modules matrix\n * @param  {Number}    version QR Code version\n */\nfunction setupAlignmentPattern (matrix, version) {\n  const pos = AlignmentPattern.getPositions(version)\n\n  for (let i = 0; i < pos.length; i++) {\n    const row = pos[i][0]\n    const col = pos[i][1]\n\n    for (let r = -2; r <= 2; r++) {\n      for (let c = -2; c <= 2; c++) {\n        if (r === -2 || r === 2 || c === -2 || c === 2 ||\n          (r === 0 && c === 0)) {\n          matrix.set(row + r, col + c, true, true)\n        } else {\n          matrix.set(row + r, col + c, false, true)\n        }\n      }\n    }\n  }\n}\n\n/**\n * Add version info bits to matrix\n *\n * @param  {BitMatrix} matrix  Modules matrix\n * @param  {Number}    version QR Code version\n */\nfunction setupVersionInfo (matrix, version) {\n  const size = matrix.size\n  const bits = Version.getEncodedBits(version)\n  let row, col, mod\n\n  for (let i = 0; i < 18; i++) {\n    row = Math.floor(i / 3)\n    col = i % 3 + size - 8 - 3\n    mod = ((bits >> i) & 1) === 1\n\n    matrix.set(row, col, mod, true)\n    matrix.set(col, row, mod, true)\n  }\n}\n\n/**\n * Add format info bits to matrix\n *\n * @param  {BitMatrix} matrix               Modules matrix\n * @param  {ErrorCorrectionLevel}    errorCorrectionLevel Error correction level\n * @param  {Number}    maskPattern          Mask pattern reference value\n */\nfunction setupFormatInfo (matrix, errorCorrectionLevel, maskPattern) {\n  const size = matrix.size\n  const bits = FormatInfo.getEncodedBits(errorCorrectionLevel, maskPattern)\n  let i, mod\n\n  for (i = 0; i < 15; i++) {\n    mod = ((bits >> i) & 1) === 1\n\n    // vertical\n    if (i < 6) {\n      matrix.set(i, 8, mod, true)\n    } else if (i < 8) {\n      matrix.set(i + 1, 8, mod, true)\n    } else {\n      matrix.set(size - 15 + i, 8, mod, true)\n    }\n\n    // horizontal\n    if (i < 8) {\n      matrix.set(8, size - i - 1, mod, true)\n    } else if (i < 9) {\n      matrix.set(8, 15 - i - 1 + 1, mod, true)\n    } else {\n      matrix.set(8, 15 - i - 1, mod, true)\n    }\n  }\n\n  // fixed module\n  matrix.set(size - 8, 8, 1, true)\n}\n\n/**\n * Add encoded data bits to matrix\n *\n * @param  {BitMatrix}  matrix Modules matrix\n * @param  {Uint8Array} data   Data codewords\n */\nfunction setupData (matrix, data) {\n  const size = matrix.size\n  let inc = -1\n  let row = size - 1\n  let bitIndex = 7\n  let byteIndex = 0\n\n  for (let col = size - 1; col > 0; col -= 2) {\n    if (col === 6) col--\n\n    while (true) {\n      for (let c = 0; c < 2; c++) {\n        if (!matrix.isReserved(row, col - c)) {\n          let dark = false\n\n          if (byteIndex < data.length) {\n            dark = (((data[byteIndex] >>> bitIndex) & 1) === 1)\n          }\n\n          matrix.set(row, col - c, dark)\n          bitIndex--\n\n          if (bitIndex === -1) {\n            byteIndex++\n            bitIndex = 7\n          }\n        }\n      }\n\n      row += inc\n\n      if (row < 0 || size <= row) {\n        row -= inc\n        inc = -inc\n        break\n      }\n    }\n  }\n}\n\n/**\n * Create encoded codewords from data input\n *\n * @param  {Number}   version              QR Code version\n * @param  {ErrorCorrectionLevel}   errorCorrectionLevel Error correction level\n * @param  {ByteData} data                 Data input\n * @return {Uint8Array}                    Buffer containing encoded codewords\n */\nfunction createData (version, errorCorrectionLevel, segments) {\n  // Prepare data buffer\n  const buffer = new BitBuffer()\n\n  segments.forEach(function (data) {\n    // prefix data with mode indicator (4 bits)\n    buffer.put(data.mode.bit, 4)\n\n    // Prefix data with character count indicator.\n    // The character count indicator is a string of bits that represents the\n    // number of characters that are being encoded.\n    // The character count indicator must be placed after the mode indicator\n    // and must be a certain number of bits long, depending on the QR version\n    // and data mode\n    // @see {@link Mode.getCharCountIndicator}.\n    buffer.put(data.getLength(), Mode.getCharCountIndicator(data.mode, version))\n\n    // add binary data sequence to buffer\n    data.write(buffer)\n  })\n\n  // Calculate required number of bits\n  const totalCodewords = Utils.getSymbolTotalCodewords(version)\n  const ecTotalCodewords = ECCode.getTotalCodewordsCount(version, errorCorrectionLevel)\n  const dataTotalCodewordsBits = (totalCodewords - ecTotalCodewords) * 8\n\n  // Add a terminator.\n  // If the bit string is shorter than the total number of required bits,\n  // a terminator of up to four 0s must be added to the right side of the string.\n  // If the bit string is more than four bits shorter than the required number of bits,\n  // add four 0s to the end.\n  if (buffer.getLengthInBits() + 4 <= dataTotalCodewordsBits) {\n    buffer.put(0, 4)\n  }\n\n  // If the bit string is fewer than four bits shorter, add only the number of 0s that\n  // are needed to reach the required number of bits.\n\n  // After adding the terminator, if the number of bits in the string is not a multiple of 8,\n  // pad the string on the right with 0s to make the string's length a multiple of 8.\n  while (buffer.getLengthInBits() % 8 !== 0) {\n    buffer.putBit(0)\n  }\n\n  // Add pad bytes if the string is still shorter than the total number of required bits.\n  // Extend the buffer to fill the data capacity of the symbol corresponding to\n  // the Version and Error Correction Level by adding the Pad Codewords 11101100 (0xEC)\n  // and 00010001 (0x11) alternately.\n  const remainingByte = (dataTotalCodewordsBits - buffer.getLengthInBits()) / 8\n  for (let i = 0; i < remainingByte; i++) {\n    buffer.put(i % 2 ? 0x11 : 0xEC, 8)\n  }\n\n  return createCodewords(buffer, version, errorCorrectionLevel)\n}\n\n/**\n * Encode input data with Reed-Solomon and return codewords with\n * relative error correction bits\n *\n * @param  {BitBuffer} bitBuffer            Data to encode\n * @param  {Number}    version              QR Code version\n * @param  {ErrorCorrectionLevel} errorCorrectionLevel Error correction level\n * @return {Uint8Array}                     Buffer containing encoded codewords\n */\nfunction createCodewords (bitBuffer, version, errorCorrectionLevel) {\n  // Total codewords for this QR code version (Data + Error correction)\n  const totalCodewords = Utils.getSymbolTotalCodewords(version)\n\n  // Total number of error correction codewords\n  const ecTotalCodewords = ECCode.getTotalCodewordsCount(version, errorCorrectionLevel)\n\n  // Total number of data codewords\n  const dataTotalCodewords = totalCodewords - ecTotalCodewords\n\n  // Total number of blocks\n  const ecTotalBlocks = ECCode.getBlocksCount(version, errorCorrectionLevel)\n\n  // Calculate how many blocks each group should contain\n  const blocksInGroup2 = totalCodewords % ecTotalBlocks\n  const blocksInGroup1 = ecTotalBlocks - blocksInGroup2\n\n  const totalCodewordsInGroup1 = Math.floor(totalCodewords / ecTotalBlocks)\n\n  const dataCodewordsInGroup1 = Math.floor(dataTotalCodewords / ecTotalBlocks)\n  const dataCodewordsInGroup2 = dataCodewordsInGroup1 + 1\n\n  // Number of EC codewords is the same for both groups\n  const ecCount = totalCodewordsInGroup1 - dataCodewordsInGroup1\n\n  // Initialize a Reed-Solomon encoder with a generator polynomial of degree ecCount\n  const rs = new ReedSolomonEncoder(ecCount)\n\n  let offset = 0\n  const dcData = new Array(ecTotalBlocks)\n  const ecData = new Array(ecTotalBlocks)\n  let maxDataSize = 0\n  const buffer = new Uint8Array(bitBuffer.buffer)\n\n  // Divide the buffer into the required number of blocks\n  for (let b = 0; b < ecTotalBlocks; b++) {\n    const dataSize = b < blocksInGroup1 ? dataCodewordsInGroup1 : dataCodewordsInGroup2\n\n    // extract a block of data from buffer\n    dcData[b] = buffer.slice(offset, offset + dataSize)\n\n    // Calculate EC codewords for this data block\n    ecData[b] = rs.encode(dcData[b])\n\n    offset += dataSize\n    maxDataSize = Math.max(maxDataSize, dataSize)\n  }\n\n  // Create final data\n  // Interleave the data and error correction codewords from each block\n  const data = new Uint8Array(totalCodewords)\n  let index = 0\n  let i, r\n\n  // Add data codewords\n  for (i = 0; i < maxDataSize; i++) {\n    for (r = 0; r < ecTotalBlocks; r++) {\n      if (i < dcData[r].length) {\n        data[index++] = dcData[r][i]\n      }\n    }\n  }\n\n  // Apped EC codewords\n  for (i = 0; i < ecCount; i++) {\n    for (r = 0; r < ecTotalBlocks; r++) {\n      data[index++] = ecData[r][i]\n    }\n  }\n\n  return data\n}\n\n/**\n * Build QR Code symbol\n *\n * @param  {String} data                 Input string\n * @param  {Number} version              QR Code version\n * @param  {ErrorCorretionLevel} errorCorrectionLevel Error level\n * @param  {MaskPattern} maskPattern     Mask pattern\n * @return {Object}                      Object containing symbol data\n */\nfunction createSymbol (data, version, errorCorrectionLevel, maskPattern) {\n  let segments\n\n  if (Array.isArray(data)) {\n    segments = Segments.fromArray(data)\n  } else if (typeof data === 'string') {\n    let estimatedVersion = version\n\n    if (!estimatedVersion) {\n      const rawSegments = Segments.rawSplit(data)\n\n      // Estimate best version that can contain raw splitted segments\n      estimatedVersion = Version.getBestVersionForData(rawSegments, errorCorrectionLevel)\n    }\n\n    // Build optimized segments\n    // If estimated version is undefined, try with the highest version\n    segments = Segments.fromString(data, estimatedVersion || 40)\n  } else {\n    throw new Error('Invalid data')\n  }\n\n  // Get the min version that can contain data\n  const bestVersion = Version.getBestVersionForData(segments, errorCorrectionLevel)\n\n  // If no version is found, data cannot be stored\n  if (!bestVersion) {\n    throw new Error('The amount of data is too big to be stored in a QR Code')\n  }\n\n  // If not specified, use min version as default\n  if (!version) {\n    version = bestVersion\n\n  // Check if the specified version can contain the data\n  } else if (version < bestVersion) {\n    throw new Error('\\n' +\n      'The chosen QR Code version cannot contain this amount of data.\\n' +\n      'Minimum version required to store current data is: ' + bestVersion + '.\\n'\n    )\n  }\n\n  const dataBits = createData(version, errorCorrectionLevel, segments)\n\n  // Allocate matrix buffer\n  const moduleCount = Utils.getSymbolSize(version)\n  const modules = new BitMatrix(moduleCount)\n\n  // Add function modules\n  setupFinderPattern(modules, version)\n  setupTimingPattern(modules)\n  setupAlignmentPattern(modules, version)\n\n  // Add temporary dummy bits for format info just to set them as reserved.\n  // This is needed to prevent these bits from being masked by {@link MaskPattern.applyMask}\n  // since the masking operation must be performed only on the encoding region.\n  // These blocks will be replaced with correct values later in code.\n  setupFormatInfo(modules, errorCorrectionLevel, 0)\n\n  if (version >= 7) {\n    setupVersionInfo(modules, version)\n  }\n\n  // Add data codewords\n  setupData(modules, dataBits)\n\n  if (isNaN(maskPattern)) {\n    // Find best mask pattern\n    maskPattern = MaskPattern.getBestMask(modules,\n      setupFormatInfo.bind(null, modules, errorCorrectionLevel))\n  }\n\n  // Apply mask pattern\n  MaskPattern.applyMask(maskPattern, modules)\n\n  // Replace format info bits with correct values\n  setupFormatInfo(modules, errorCorrectionLevel, maskPattern)\n\n  return {\n    modules: modules,\n    version: version,\n    errorCorrectionLevel: errorCorrectionLevel,\n    maskPattern: maskPattern,\n    segments: segments\n  }\n}\n\n/**\n * QR Code\n *\n * @param {String | Array} data                 Input data\n * @param {Object} options                      Optional configurations\n * @param {Number} options.version              QR Code version\n * @param {String} options.errorCorrectionLevel Error correction level\n * @param {Function} options.toSJISFunc         Helper func to convert utf8 to sjis\n */\nexports.create = function create (data, options) {\n  if (typeof data === 'undefined' || data === '') {\n    throw new Error('No input text')\n  }\n\n  let errorCorrectionLevel = ECLevel.M\n  let version\n  let mask\n\n  if (typeof options !== 'undefined') {\n    // Use higher error correction level as default\n    errorCorrectionLevel = ECLevel.from(options.errorCorrectionLevel, ECLevel.M)\n    version = Version.from(options.version)\n    mask = MaskPattern.from(options.maskPattern)\n\n    if (options.toSJISFunc) {\n      Utils.setToSJISFunction(options.toSJISFunc)\n    }\n  }\n\n  return createSymbol(data, version, errorCorrectionLevel, mask)\n}\n", "function hex2rgba (hex) {\n  if (typeof hex === 'number') {\n    hex = hex.toString()\n  }\n\n  if (typeof hex !== 'string') {\n    throw new Error('Color should be defined as hex string')\n  }\n\n  let hexCode = hex.slice().replace('#', '').split('')\n  if (hexCode.length < 3 || hexCode.length === 5 || hexCode.length > 8) {\n    throw new Error('Invalid hex color: ' + hex)\n  }\n\n  // Convert from short to long form (fff -> ffffff)\n  if (hexCode.length === 3 || hexCode.length === 4) {\n    hexCode = Array.prototype.concat.apply([], hexCode.map(function (c) {\n      return [c, c]\n    }))\n  }\n\n  // Add default alpha value\n  if (hexCode.length === 6) hexCode.push('F', 'F')\n\n  const hexValue = parseInt(hexCode.join(''), 16)\n\n  return {\n    r: (hexValue >> 24) & 255,\n    g: (hexValue >> 16) & 255,\n    b: (hexValue >> 8) & 255,\n    a: hexValue & 255,\n    hex: '#' + hexCode.slice(0, 6).join('')\n  }\n}\n\nexports.getOptions = function getOptions (options) {\n  if (!options) options = {}\n  if (!options.color) options.color = {}\n\n  const margin = typeof options.margin === 'undefined' ||\n    options.margin === null ||\n    options.margin < 0\n    ? 4\n    : options.margin\n\n  const width = options.width && options.width >= 21 ? options.width : undefined\n  const scale = options.scale || 4\n\n  return {\n    width: width,\n    scale: width ? 4 : scale,\n    margin: margin,\n    color: {\n      dark: hex2rgba(options.color.dark || '#000000ff'),\n      light: hex2rgba(options.color.light || '#ffffffff')\n    },\n    type: options.type,\n    rendererOpts: options.rendererOpts || {}\n  }\n}\n\nexports.getScale = function getScale (qrSize, opts) {\n  return opts.width && opts.width >= qrSize + opts.margin * 2\n    ? opts.width / (qrSize + opts.margin * 2)\n    : opts.scale\n}\n\nexports.getImageWidth = function getImageWidth (qrSize, opts) {\n  const scale = exports.getScale(qrSize, opts)\n  return Math.floor((qrSize + opts.margin * 2) * scale)\n}\n\nexports.qrToImageData = function qrToImageData (imgData, qr, opts) {\n  const size = qr.modules.size\n  const data = qr.modules.data\n  const scale = exports.getScale(size, opts)\n  const symbolSize = Math.floor((size + opts.margin * 2) * scale)\n  const scaledMargin = opts.margin * scale\n  const palette = [opts.color.light, opts.color.dark]\n\n  for (let i = 0; i < symbolSize; i++) {\n    for (let j = 0; j < symbolSize; j++) {\n      let posDst = (i * symbolSize + j) * 4\n      let pxColor = opts.color.light\n\n      if (i >= scaledMargin && j >= scaledMargin &&\n        i < symbolSize - scaledMargin && j < symbolSize - scaledMargin) {\n        const iSrc = Math.floor((i - scaledMargin) / scale)\n        const jSrc = Math.floor((j - scaledMargin) / scale)\n        pxColor = palette[data[iSrc * size + jSrc] ? 1 : 0]\n      }\n\n      imgData[posDst++] = pxColor.r\n      imgData[posDst++] = pxColor.g\n      imgData[posDst++] = pxColor.b\n      imgData[posDst] = pxColor.a\n    }\n  }\n}\n", "const Utils = require('./utils')\n\nfunction clearCanvas (ctx, canvas, size) {\n  ctx.clearRect(0, 0, canvas.width, canvas.height)\n\n  if (!canvas.style) canvas.style = {}\n  canvas.height = size\n  canvas.width = size\n  canvas.style.height = size + 'px'\n  canvas.style.width = size + 'px'\n}\n\nfunction getCanvasElement () {\n  try {\n    return document.createElement('canvas')\n  } catch (e) {\n    throw new Error('You need to specify a canvas element')\n  }\n}\n\nexports.render = function render (qrData, canvas, options) {\n  let opts = options\n  let canvasEl = canvas\n\n  if (typeof opts === 'undefined' && (!canvas || !canvas.getContext)) {\n    opts = canvas\n    canvas = undefined\n  }\n\n  if (!canvas) {\n    canvasEl = getCanvasElement()\n  }\n\n  opts = Utils.getOptions(opts)\n  const size = Utils.getImageWidth(qrData.modules.size, opts)\n\n  const ctx = canvasEl.getContext('2d')\n  const image = ctx.createImageData(size, size)\n  Utils.qrToImageData(image.data, qrData, opts)\n\n  clearCanvas(ctx, canvasEl, size)\n  ctx.putImageData(image, 0, 0)\n\n  return canvasEl\n}\n\nexports.renderToDataURL = function renderToDataURL (qrData, canvas, options) {\n  let opts = options\n\n  if (typeof opts === 'undefined' && (!canvas || !canvas.getContext)) {\n    opts = canvas\n    canvas = undefined\n  }\n\n  if (!opts) opts = {}\n\n  const canvasEl = exports.render(qrData, canvas, opts)\n\n  const type = opts.type || 'image/png'\n  const rendererOpts = opts.rendererOpts || {}\n\n  return canvasEl.toDataURL(type, rendererOpts.quality)\n}\n", "const Utils = require('./utils')\n\nfunction getColorAttrib (color, attrib) {\n  const alpha = color.a / 255\n  const str = attrib + '=\"' + color.hex + '\"'\n\n  return alpha < 1\n    ? str + ' ' + attrib + '-opacity=\"' + alpha.toFixed(2).slice(1) + '\"'\n    : str\n}\n\nfunction svgCmd (cmd, x, y) {\n  let str = cmd + x\n  if (typeof y !== 'undefined') str += ' ' + y\n\n  return str\n}\n\nfunction qrToPath (data, size, margin) {\n  let path = ''\n  let moveBy = 0\n  let newRow = false\n  let lineLength = 0\n\n  for (let i = 0; i < data.length; i++) {\n    const col = Math.floor(i % size)\n    const row = Math.floor(i / size)\n\n    if (!col && !newRow) newRow = true\n\n    if (data[i]) {\n      lineLength++\n\n      if (!(i > 0 && col > 0 && data[i - 1])) {\n        path += newRow\n          ? svgCmd('M', col + margin, 0.5 + row + margin)\n          : svgCmd('m', moveBy, 0)\n\n        moveBy = 0\n        newRow = false\n      }\n\n      if (!(col + 1 < size && data[i + 1])) {\n        path += svgCmd('h', lineLength)\n        lineLength = 0\n      }\n    } else {\n      moveBy++\n    }\n  }\n\n  return path\n}\n\nexports.render = function render (qrData, options, cb) {\n  const opts = Utils.getOptions(options)\n  const size = qrData.modules.size\n  const data = qrData.modules.data\n  const qrcodesize = size + opts.margin * 2\n\n  const bg = !opts.color.light.a\n    ? ''\n    : '<path ' + getColorAttrib(opts.color.light, 'fill') +\n      ' d=\"M0 0h' + qrcodesize + 'v' + qrcodesize + 'H0z\"/>'\n\n  const path =\n    '<path ' + getColorAttrib(opts.color.dark, 'stroke') +\n    ' d=\"' + qrToPath(data, size, opts.margin) + '\"/>'\n\n  const viewBox = 'viewBox=\"' + '0 0 ' + qrcodesize + ' ' + qrcodesize + '\"'\n\n  const width = !opts.width ? '' : 'width=\"' + opts.width + '\" height=\"' + opts.width + '\" '\n\n  const svgTag = '<svg xmlns=\"http://www.w3.org/2000/svg\" ' + width + viewBox + ' shape-rendering=\"crispEdges\">' + bg + path + '</svg>\\n'\n\n  if (typeof cb === 'function') {\n    cb(null, svgTag)\n  }\n\n  return svgTag\n}\n", "\nconst canPromise = require('./can-promise')\n\nconst QRCode = require('./core/qrcode')\nconst CanvasRenderer = require('./renderer/canvas')\nconst SvgRenderer = require('./renderer/svg-tag.js')\n\nfunction renderCanvas (renderFunc, canvas, text, opts, cb) {\n  const args = [].slice.call(arguments, 1)\n  const argsNum = args.length\n  const isLastArgCb = typeof args[argsNum - 1] === 'function'\n\n  if (!isLastArgCb && !canPromise()) {\n    throw new Error('Callback required as last argument')\n  }\n\n  if (isLastArgCb) {\n    if (argsNum < 2) {\n      throw new Error('Too few arguments provided')\n    }\n\n    if (argsNum === 2) {\n      cb = text\n      text = canvas\n      canvas = opts = undefined\n    } else if (argsNum === 3) {\n      if (canvas.getContext && typeof cb === 'undefined') {\n        cb = opts\n        opts = undefined\n      } else {\n        cb = opts\n        opts = text\n        text = canvas\n        canvas = undefined\n      }\n    }\n  } else {\n    if (argsNum < 1) {\n      throw new Error('Too few arguments provided')\n    }\n\n    if (argsNum === 1) {\n      text = canvas\n      canvas = opts = undefined\n    } else if (argsNum === 2 && !canvas.getContext) {\n      opts = text\n      text = canvas\n      canvas = undefined\n    }\n\n    return new Promise(function (resolve, reject) {\n      try {\n        const data = QRCode.create(text, opts)\n        resolve(renderFunc(data, canvas, opts))\n      } catch (e) {\n        reject(e)\n      }\n    })\n  }\n\n  try {\n    const data = QRCode.create(text, opts)\n    cb(null, renderFunc(data, canvas, opts))\n  } catch (e) {\n    cb(e)\n  }\n}\n\nexports.create = QRCode.create\nexports.toCanvas = renderCanvas.bind(null, CanvasRenderer.render)\nexports.toDataURL = renderCanvas.bind(null, CanvasRenderer.renderToDataURL)\n\n// only svg for now.\nexports.toString = renderCanvas.bind(null, function (data, _, opts) {\n  return SvgRenderer.render(data, opts)\n})\n", "/**\n * Based on Kendo UI Core expression code <https://github.com/telerik/kendo-ui-core#license-information>\n */\n'use strict'\n\nfunction Cache(maxSize) {\n  this._maxSize = maxSize\n  this.clear()\n}\nCache.prototype.clear = function () {\n  this._size = 0\n  this._values = Object.create(null)\n}\nCache.prototype.get = function (key) {\n  return this._values[key]\n}\nCache.prototype.set = function (key, value) {\n  this._size >= this._maxSize && this.clear()\n  if (!(key in this._values)) this._size++\n\n  return (this._values[key] = value)\n}\n\nvar SPLIT_REGEX = /[^.^\\]^[]+|(?=\\[\\]|\\.\\.)/g,\n  DIGIT_REGEX = /^\\d+$/,\n  LEAD_DIGIT_REGEX = /^\\d/,\n  SPEC_CHAR_REGEX = /[~`!#$%\\^&*+=\\-\\[\\]\\\\';,/{}|\\\\\":<>\\?]/g,\n  CLEAN_QUOTES_REGEX = /^\\s*(['\"]?)(.*?)(\\1)\\s*$/,\n  MAX_CACHE_SIZE = 512\n\nvar pathCache = new Cache(MAX_CACHE_SIZE),\n  setCache = new Cache(MAX_CACHE_SIZE),\n  getCache = new Cache(MAX_CACHE_SIZE)\n\nvar config\n\nmodule.exports = {\n  Cache: Cache,\n\n  split: split,\n\n  normalizePath: normalizePath,\n\n  setter: function (path) {\n    var parts = normalizePath(path)\n\n    return (\n      setCache.get(path) ||\n      setCache.set(path, function setter(obj, value) {\n        var index = 0\n        var len = parts.length\n        var data = obj\n\n        while (index < len - 1) {\n          var part = parts[index]\n          if (\n            part === '__proto__' ||\n            part === 'constructor' ||\n            part === 'prototype'\n          ) {\n            return obj\n          }\n\n          data = data[parts[index++]]\n        }\n        data[parts[index]] = value\n      })\n    )\n  },\n\n  getter: function (path, safe) {\n    var parts = normalizePath(path)\n    return (\n      getCache.get(path) ||\n      getCache.set(path, function getter(data) {\n        var index = 0,\n          len = parts.length\n        while (index < len) {\n          if (data != null || !safe) data = data[parts[index++]]\n          else return\n        }\n        return data\n      })\n    )\n  },\n\n  join: function (segments) {\n    return segments.reduce(function (path, part) {\n      return (\n        path +\n        (isQuoted(part) || DIGIT_REGEX.test(part)\n          ? '[' + part + ']'\n          : (path ? '.' : '') + part)\n      )\n    }, '')\n  },\n\n  forEach: function (path, cb, thisArg) {\n    forEach(Array.isArray(path) ? path : split(path), cb, thisArg)\n  },\n}\n\nfunction normalizePath(path) {\n  return (\n    pathCache.get(path) ||\n    pathCache.set(\n      path,\n      split(path).map(function (part) {\n        return part.replace(CLEAN_QUOTES_REGEX, '$2')\n      })\n    )\n  )\n}\n\nfunction split(path) {\n  return path.match(SPLIT_REGEX) || ['']\n}\n\nfunction forEach(parts, iter, thisArg) {\n  var len = parts.length,\n    part,\n    idx,\n    isArray,\n    isBracket\n\n  for (idx = 0; idx < len; idx++) {\n    part = parts[idx]\n\n    if (part) {\n      if (shouldBeQuoted(part)) {\n        part = '\"' + part + '\"'\n      }\n\n      isBracket = isQuoted(part)\n      isArray = !isBracket && /^\\d+$/.test(part)\n\n      iter.call(thisArg, part, isBracket, isArray, idx, parts)\n    }\n  }\n}\n\nfunction isQuoted(str) {\n  return (\n    typeof str === 'string' && str && [\"'\", '\"'].indexOf(str.charAt(0)) !== -1\n  )\n}\n\nfunction hasLeadingNumber(part) {\n  return part.match(LEAD_DIGIT_REGEX) && !part.match(DIGIT_REGEX)\n}\n\nfunction hasSpecialChars(part) {\n  return SPEC_CHAR_REGEX.test(part)\n}\n\nfunction shouldBeQuoted(part) {\n  return !isQuoted(part) && (hasLeadingNumber(part) || hasSpecialChars(part))\n}\n", "const reWords = /[A-Z\\xc0-\\xd6\\xd8-\\xde]?[a-z\\xdf-\\xf6\\xf8-\\xff]+(?:['\u2019](?:d|ll|m|re|s|t|ve))?(?=[\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000]|[A-Z\\xc0-\\xd6\\xd8-\\xde]|$)|(?:[A-Z\\xc0-\\xd6\\xd8-\\xde]|[^\\ud800-\\udfff\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\d+\\u2700-\\u27bfa-z\\xdf-\\xf6\\xf8-\\xffA-Z\\xc0-\\xd6\\xd8-\\xde])+(?:['\u2019](?:D|LL|M|RE|S|T|VE))?(?=[\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000]|[A-Z\\xc0-\\xd6\\xd8-\\xde](?:[a-z\\xdf-\\xf6\\xf8-\\xff]|[^\\ud800-\\udfff\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\d+\\u2700-\\u27bfa-z\\xdf-\\xf6\\xf8-\\xffA-Z\\xc0-\\xd6\\xd8-\\xde])|$)|[A-Z\\xc0-\\xd6\\xd8-\\xde]?(?:[a-z\\xdf-\\xf6\\xf8-\\xff]|[^\\ud800-\\udfff\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\d+\\u2700-\\u27bfa-z\\xdf-\\xf6\\xf8-\\xffA-Z\\xc0-\\xd6\\xd8-\\xde])+(?:['\u2019](?:d|ll|m|re|s|t|ve))?|[A-Z\\xc0-\\xd6\\xd8-\\xde]+(?:['\u2019](?:D|LL|M|RE|S|T|VE))?|\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])|\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])|\\d+|(?:[\\u2700-\\u27bf]|(?:\\ud83c[\\udde6-\\uddff]){2}|[\\ud800-\\udbff][\\udc00-\\udfff])[\\ufe0e\\ufe0f]?(?:[\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff]|\\ud83c[\\udffb-\\udfff])?(?:\\u200d(?:[^\\ud800-\\udfff]|(?:\\ud83c[\\udde6-\\uddff]){2}|[\\ud800-\\udbff][\\udc00-\\udfff])[\\ufe0e\\ufe0f]?(?:[\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff]|\\ud83c[\\udffb-\\udfff])?)*/g\n\nconst words = (str) => str.match(reWords) || []\n\nconst upperFirst = (str) => str[0].toUpperCase() + str.slice(1)\n\nconst join = (str, d) => words(str).join(d).toLowerCase()\n\nconst camelCase = (str) =>\n  words(str).reduce(\n    (acc, next) =>\n      `${acc}${\n        !acc\n          ? next.toLowerCase()\n          : next[0].toUpperCase() + next.slice(1).toLowerCase()\n      }`,\n    '',\n  )\n\nconst pascalCase = (str) => upperFirst(camelCase(str))\n\nconst snakeCase = (str) => join(str, '_')\n\nconst kebabCase = (str) => join(str, '-')\n\nconst sentenceCase = (str) => upperFirst(join(str, ' '))\n\nconst titleCase = (str) => words(str).map(upperFirst).join(' ')\n\nmodule.exports = {\n  words,\n  upperFirst,\n  camelCase,\n  pascalCase,\n  snakeCase,\n  kebabCase,\n  sentenceCase,\n  titleCase,\n}\n", "\n/**\n * Topological sorting function\n *\n * @param {Array} edges\n * @returns {Array}\n */\n\nmodule.exports = function(edges) {\n  return toposort(uniqueNodes(edges), edges)\n}\n\nmodule.exports.array = toposort\n\nfunction toposort(nodes, edges) {\n  var cursor = nodes.length\n    , sorted = new Array(cursor)\n    , visited = {}\n    , i = cursor\n    // Better data structures make algorithm much faster.\n    , outgoingEdges = makeOutgoingEdges(edges)\n    , nodesHash = makeNodesHash(nodes)\n\n  // check for unknown nodes\n  edges.forEach(function(edge) {\n    if (!nodesHash.has(edge[0]) || !nodesHash.has(edge[1])) {\n      throw new Error('Unknown node. There is an unknown node in the supplied edges.')\n    }\n  })\n\n  while (i--) {\n    if (!visited[i]) visit(nodes[i], i, new Set())\n  }\n\n  return sorted\n\n  function visit(node, i, predecessors) {\n    if(predecessors.has(node)) {\n      var nodeRep\n      try {\n        nodeRep = \", node was:\" + JSON.stringify(node)\n      } catch(e) {\n        nodeRep = \"\"\n      }\n      throw new Error('Cyclic dependency' + nodeRep)\n    }\n\n    if (!nodesHash.has(node)) {\n      throw new Error('Found unknown node. Make sure to provided all involved nodes. Unknown node: '+JSON.stringify(node))\n    }\n\n    if (visited[i]) return;\n    visited[i] = true\n\n    var outgoing = outgoingEdges.get(node) || new Set()\n    outgoing = Array.from(outgoing)\n\n    if (i = outgoing.length) {\n      predecessors.add(node)\n      do {\n        var child = outgoing[--i]\n        visit(child, nodesHash.get(child), predecessors)\n      } while (i)\n      predecessors.delete(node)\n    }\n\n    sorted[--cursor] = node\n  }\n}\n\nfunction uniqueNodes(arr){\n  var res = new Set()\n  for (var i = 0, len = arr.length; i < len; i++) {\n    var edge = arr[i]\n    res.add(edge[0])\n    res.add(edge[1])\n  }\n  return Array.from(res)\n}\n\nfunction makeOutgoingEdges(arr){\n  var edges = new Map()\n  for (var i = 0, len = arr.length; i < len; i++) {\n    var edge = arr[i]\n    if (!edges.has(edge[0])) edges.set(edge[0], new Set())\n    if (!edges.has(edge[1])) edges.set(edge[1], new Set())\n    edges.get(edge[0]).add(edge[1])\n  }\n  return edges\n}\n\nfunction makeNodesHash(arr){\n  var res = new Map()\n  for (var i = 0, len = arr.length; i < len; i++) {\n    res.set(arr[i], i)\n  }\n  return res\n}\n", "'use strict';\n\n/** @type {import('./type')} */\nmodule.exports = TypeError;\n", "var hasMap = typeof Map === 'function' && Map.prototype;\nvar mapSizeDescriptor = Object.getOwnPropertyDescriptor && hasMap ? Object.getOwnPropertyDescriptor(Map.prototype, 'size') : null;\nvar mapSize = hasMap && mapSizeDescriptor && typeof mapSizeDescriptor.get === 'function' ? mapSizeDescriptor.get : null;\nvar mapForEach = hasMap && Map.prototype.forEach;\nvar hasSet = typeof Set === 'function' && Set.prototype;\nvar setSizeDescriptor = Object.getOwnPropertyDescriptor && hasSet ? Object.getOwnPropertyDescriptor(Set.prototype, 'size') : null;\nvar setSize = hasSet && setSizeDescriptor && typeof setSizeDescriptor.get === 'function' ? setSizeDescriptor.get : null;\nvar setForEach = hasSet && Set.prototype.forEach;\nvar hasWeakMap = typeof WeakMap === 'function' && WeakMap.prototype;\nvar weakMapHas = hasWeakMap ? WeakMap.prototype.has : null;\nvar hasWeakSet = typeof WeakSet === 'function' && WeakSet.prototype;\nvar weakSetHas = hasWeakSet ? WeakSet.prototype.has : null;\nvar hasWeakRef = typeof WeakRef === 'function' && WeakRef.prototype;\nvar weakRefDeref = hasWeakRef ? WeakRef.prototype.deref : null;\nvar booleanValueOf = Boolean.prototype.valueOf;\nvar objectToString = Object.prototype.toString;\nvar functionToString = Function.prototype.toString;\nvar $match = String.prototype.match;\nvar $slice = String.prototype.slice;\nvar $replace = String.prototype.replace;\nvar $toUpperCase = String.prototype.toUpperCase;\nvar $toLowerCase = String.prototype.toLowerCase;\nvar $test = RegExp.prototype.test;\nvar $concat = Array.prototype.concat;\nvar $join = Array.prototype.join;\nvar $arrSlice = Array.prototype.slice;\nvar $floor = Math.floor;\nvar bigIntValueOf = typeof BigInt === 'function' ? BigInt.prototype.valueOf : null;\nvar gOPS = Object.getOwnPropertySymbols;\nvar symToString = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ? Symbol.prototype.toString : null;\nvar hasShammedSymbols = typeof Symbol === 'function' && typeof Symbol.iterator === 'object';\n// ie, `has-tostringtag/shams\nvar toStringTag = typeof Symbol === 'function' && Symbol.toStringTag && (typeof Symbol.toStringTag === hasShammedSymbols ? 'object' : 'symbol')\n    ? Symbol.toStringTag\n    : null;\nvar isEnumerable = Object.prototype.propertyIsEnumerable;\n\nvar gPO = (typeof Reflect === 'function' ? Reflect.getPrototypeOf : Object.getPrototypeOf) || (\n    [].__proto__ === Array.prototype // eslint-disable-line no-proto\n        ? function (O) {\n            return O.__proto__; // eslint-disable-line no-proto\n        }\n        : null\n);\n\nfunction addNumericSeparator(num, str) {\n    if (\n        num === Infinity\n        || num === -Infinity\n        || num !== num\n        || (num && num > -1000 && num < 1000)\n        || $test.call(/e/, str)\n    ) {\n        return str;\n    }\n    var sepRegex = /[0-9](?=(?:[0-9]{3})+(?![0-9]))/g;\n    if (typeof num === 'number') {\n        var int = num < 0 ? -$floor(-num) : $floor(num); // trunc(num)\n        if (int !== num) {\n            var intStr = String(int);\n            var dec = $slice.call(str, intStr.length + 1);\n            return $replace.call(intStr, sepRegex, '$&_') + '.' + $replace.call($replace.call(dec, /([0-9]{3})/g, '$&_'), /_$/, '');\n        }\n    }\n    return $replace.call(str, sepRegex, '$&_');\n}\n\nvar utilInspect = require('./util.inspect');\nvar inspectCustom = utilInspect.custom;\nvar inspectSymbol = isSymbol(inspectCustom) ? inspectCustom : null;\n\nvar quotes = {\n    __proto__: null,\n    'double': '\"',\n    single: \"'\"\n};\nvar quoteREs = {\n    __proto__: null,\n    'double': /([\"\\\\])/g,\n    single: /(['\\\\])/g\n};\n\nmodule.exports = function inspect_(obj, options, depth, seen) {\n    var opts = options || {};\n\n    if (has(opts, 'quoteStyle') && !has(quotes, opts.quoteStyle)) {\n        throw new TypeError('option \"quoteStyle\" must be \"single\" or \"double\"');\n    }\n    if (\n        has(opts, 'maxStringLength') && (typeof opts.maxStringLength === 'number'\n            ? opts.maxStringLength < 0 && opts.maxStringLength !== Infinity\n            : opts.maxStringLength !== null\n        )\n    ) {\n        throw new TypeError('option \"maxStringLength\", if provided, must be a positive integer, Infinity, or `null`');\n    }\n    var customInspect = has(opts, 'customInspect') ? opts.customInspect : true;\n    if (typeof customInspect !== 'boolean' && customInspect !== 'symbol') {\n        throw new TypeError('option \"customInspect\", if provided, must be `true`, `false`, or `\\'symbol\\'`');\n    }\n\n    if (\n        has(opts, 'indent')\n        && opts.indent !== null\n        && opts.indent !== '\\t'\n        && !(parseInt(opts.indent, 10) === opts.indent && opts.indent > 0)\n    ) {\n        throw new TypeError('option \"indent\" must be \"\\\\t\", an integer > 0, or `null`');\n    }\n    if (has(opts, 'numericSeparator') && typeof opts.numericSeparator !== 'boolean') {\n        throw new TypeError('option \"numericSeparator\", if provided, must be `true` or `false`');\n    }\n    var numericSeparator = opts.numericSeparator;\n\n    if (typeof obj === 'undefined') {\n        return 'undefined';\n    }\n    if (obj === null) {\n        return 'null';\n    }\n    if (typeof obj === 'boolean') {\n        return obj ? 'true' : 'false';\n    }\n\n    if (typeof obj === 'string') {\n        return inspectString(obj, opts);\n    }\n    if (typeof obj === 'number') {\n        if (obj === 0) {\n            return Infinity / obj > 0 ? '0' : '-0';\n        }\n        var str = String(obj);\n        return numericSeparator ? addNumericSeparator(obj, str) : str;\n    }\n    if (typeof obj === 'bigint') {\n        var bigIntStr = String(obj) + 'n';\n        return numericSeparator ? addNumericSeparator(obj, bigIntStr) : bigIntStr;\n    }\n\n    var maxDepth = typeof opts.depth === 'undefined' ? 5 : opts.depth;\n    if (typeof depth === 'undefined') { depth = 0; }\n    if (depth >= maxDepth && maxDepth > 0 && typeof obj === 'object') {\n        return isArray(obj) ? '[Array]' : '[Object]';\n    }\n\n    var indent = getIndent(opts, depth);\n\n    if (typeof seen === 'undefined') {\n        seen = [];\n    } else if (indexOf(seen, obj) >= 0) {\n        return '[Circular]';\n    }\n\n    function inspect(value, from, noIndent) {\n        if (from) {\n            seen = $arrSlice.call(seen);\n            seen.push(from);\n        }\n        if (noIndent) {\n            var newOpts = {\n                depth: opts.depth\n            };\n            if (has(opts, 'quoteStyle')) {\n                newOpts.quoteStyle = opts.quoteStyle;\n            }\n            return inspect_(value, newOpts, depth + 1, seen);\n        }\n        return inspect_(value, opts, depth + 1, seen);\n    }\n\n    if (typeof obj === 'function' && !isRegExp(obj)) { // in older engines, regexes are callable\n        var name = nameOf(obj);\n        var keys = arrObjKeys(obj, inspect);\n        return '[Function' + (name ? ': ' + name : ' (anonymous)') + ']' + (keys.length > 0 ? ' { ' + $join.call(keys, ', ') + ' }' : '');\n    }\n    if (isSymbol(obj)) {\n        var symString = hasShammedSymbols ? $replace.call(String(obj), /^(Symbol\\(.*\\))_[^)]*$/, '$1') : symToString.call(obj);\n        return typeof obj === 'object' && !hasShammedSymbols ? markBoxed(symString) : symString;\n    }\n    if (isElement(obj)) {\n        var s = '<' + $toLowerCase.call(String(obj.nodeName));\n        var attrs = obj.attributes || [];\n        for (var i = 0; i < attrs.length; i++) {\n            s += ' ' + attrs[i].name + '=' + wrapQuotes(quote(attrs[i].value), 'double', opts);\n        }\n        s += '>';\n        if (obj.childNodes && obj.childNodes.length) { s += '...'; }\n        s += '</' + $toLowerCase.call(String(obj.nodeName)) + '>';\n        return s;\n    }\n    if (isArray(obj)) {\n        if (obj.length === 0) { return '[]'; }\n        var xs = arrObjKeys(obj, inspect);\n        if (indent && !singleLineValues(xs)) {\n            return '[' + indentedJoin(xs, indent) + ']';\n        }\n        return '[ ' + $join.call(xs, ', ') + ' ]';\n    }\n    if (isError(obj)) {\n        var parts = arrObjKeys(obj, inspect);\n        if (!('cause' in Error.prototype) && 'cause' in obj && !isEnumerable.call(obj, 'cause')) {\n            return '{ [' + String(obj) + '] ' + $join.call($concat.call('[cause]: ' + inspect(obj.cause), parts), ', ') + ' }';\n        }\n        if (parts.length === 0) { return '[' + String(obj) + ']'; }\n        return '{ [' + String(obj) + '] ' + $join.call(parts, ', ') + ' }';\n    }\n    if (typeof obj === 'object' && customInspect) {\n        if (inspectSymbol && typeof obj[inspectSymbol] === 'function' && utilInspect) {\n            return utilInspect(obj, { depth: maxDepth - depth });\n        } else if (customInspect !== 'symbol' && typeof obj.inspect === 'function') {\n            return obj.inspect();\n        }\n    }\n    if (isMap(obj)) {\n        var mapParts = [];\n        if (mapForEach) {\n            mapForEach.call(obj, function (value, key) {\n                mapParts.push(inspect(key, obj, true) + ' => ' + inspect(value, obj));\n            });\n        }\n        return collectionOf('Map', mapSize.call(obj), mapParts, indent);\n    }\n    if (isSet(obj)) {\n        var setParts = [];\n        if (setForEach) {\n            setForEach.call(obj, function (value) {\n                setParts.push(inspect(value, obj));\n            });\n        }\n        return collectionOf('Set', setSize.call(obj), setParts, indent);\n    }\n    if (isWeakMap(obj)) {\n        return weakCollectionOf('WeakMap');\n    }\n    if (isWeakSet(obj)) {\n        return weakCollectionOf('WeakSet');\n    }\n    if (isWeakRef(obj)) {\n        return weakCollectionOf('WeakRef');\n    }\n    if (isNumber(obj)) {\n        return markBoxed(inspect(Number(obj)));\n    }\n    if (isBigInt(obj)) {\n        return markBoxed(inspect(bigIntValueOf.call(obj)));\n    }\n    if (isBoolean(obj)) {\n        return markBoxed(booleanValueOf.call(obj));\n    }\n    if (isString(obj)) {\n        return markBoxed(inspect(String(obj)));\n    }\n    // note: in IE 8, sometimes `global !== window` but both are the prototypes of each other\n    /* eslint-env browser */\n    if (typeof window !== 'undefined' && obj === window) {\n        return '{ [object Window] }';\n    }\n    if (\n        (typeof globalThis !== 'undefined' && obj === globalThis)\n        || (typeof global !== 'undefined' && obj === global)\n    ) {\n        return '{ [object globalThis] }';\n    }\n    if (!isDate(obj) && !isRegExp(obj)) {\n        var ys = arrObjKeys(obj, inspect);\n        var isPlainObject = gPO ? gPO(obj) === Object.prototype : obj instanceof Object || obj.constructor === Object;\n        var protoTag = obj instanceof Object ? '' : 'null prototype';\n        var stringTag = !isPlainObject && toStringTag && Object(obj) === obj && toStringTag in obj ? $slice.call(toStr(obj), 8, -1) : protoTag ? 'Object' : '';\n        var constructorTag = isPlainObject || typeof obj.constructor !== 'function' ? '' : obj.constructor.name ? obj.constructor.name + ' ' : '';\n        var tag = constructorTag + (stringTag || protoTag ? '[' + $join.call($concat.call([], stringTag || [], protoTag || []), ': ') + '] ' : '');\n        if (ys.length === 0) { return tag + '{}'; }\n        if (indent) {\n            return tag + '{' + indentedJoin(ys, indent) + '}';\n        }\n        return tag + '{ ' + $join.call(ys, ', ') + ' }';\n    }\n    return String(obj);\n};\n\nfunction wrapQuotes(s, defaultStyle, opts) {\n    var style = opts.quoteStyle || defaultStyle;\n    var quoteChar = quotes[style];\n    return quoteChar + s + quoteChar;\n}\n\nfunction quote(s) {\n    return $replace.call(String(s), /\"/g, '&quot;');\n}\n\nfunction canTrustToString(obj) {\n    return !toStringTag || !(typeof obj === 'object' && (toStringTag in obj || typeof obj[toStringTag] !== 'undefined'));\n}\nfunction isArray(obj) { return toStr(obj) === '[object Array]' && canTrustToString(obj); }\nfunction isDate(obj) { return toStr(obj) === '[object Date]' && canTrustToString(obj); }\nfunction isRegExp(obj) { return toStr(obj) === '[object RegExp]' && canTrustToString(obj); }\nfunction isError(obj) { return toStr(obj) === '[object Error]' && canTrustToString(obj); }\nfunction isString(obj) { return toStr(obj) === '[object String]' && canTrustToString(obj); }\nfunction isNumber(obj) { return toStr(obj) === '[object Number]' && canTrustToString(obj); }\nfunction isBoolean(obj) { return toStr(obj) === '[object Boolean]' && canTrustToString(obj); }\n\n// Symbol and BigInt do have Symbol.toStringTag by spec, so that can't be used to eliminate false positives\nfunction isSymbol(obj) {\n    if (hasShammedSymbols) {\n        return obj && typeof obj === 'object' && obj instanceof Symbol;\n    }\n    if (typeof obj === 'symbol') {\n        return true;\n    }\n    if (!obj || typeof obj !== 'object' || !symToString) {\n        return false;\n    }\n    try {\n        symToString.call(obj);\n        return true;\n    } catch (e) {}\n    return false;\n}\n\nfunction isBigInt(obj) {\n    if (!obj || typeof obj !== 'object' || !bigIntValueOf) {\n        return false;\n    }\n    try {\n        bigIntValueOf.call(obj);\n        return true;\n    } catch (e) {}\n    return false;\n}\n\nvar hasOwn = Object.prototype.hasOwnProperty || function (key) { return key in this; };\nfunction has(obj, key) {\n    return hasOwn.call(obj, key);\n}\n\nfunction toStr(obj) {\n    return objectToString.call(obj);\n}\n\nfunction nameOf(f) {\n    if (f.name) { return f.name; }\n    var m = $match.call(functionToString.call(f), /^function\\s*([\\w$]+)/);\n    if (m) { return m[1]; }\n    return null;\n}\n\nfunction indexOf(xs, x) {\n    if (xs.indexOf) { return xs.indexOf(x); }\n    for (var i = 0, l = xs.length; i < l; i++) {\n        if (xs[i] === x) { return i; }\n    }\n    return -1;\n}\n\nfunction isMap(x) {\n    if (!mapSize || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        mapSize.call(x);\n        try {\n            setSize.call(x);\n        } catch (s) {\n            return true;\n        }\n        return x instanceof Map; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isWeakMap(x) {\n    if (!weakMapHas || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        weakMapHas.call(x, weakMapHas);\n        try {\n            weakSetHas.call(x, weakSetHas);\n        } catch (s) {\n            return true;\n        }\n        return x instanceof WeakMap; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isWeakRef(x) {\n    if (!weakRefDeref || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        weakRefDeref.call(x);\n        return true;\n    } catch (e) {}\n    return false;\n}\n\nfunction isSet(x) {\n    if (!setSize || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        setSize.call(x);\n        try {\n            mapSize.call(x);\n        } catch (m) {\n            return true;\n        }\n        return x instanceof Set; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isWeakSet(x) {\n    if (!weakSetHas || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        weakSetHas.call(x, weakSetHas);\n        try {\n            weakMapHas.call(x, weakMapHas);\n        } catch (s) {\n            return true;\n        }\n        return x instanceof WeakSet; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isElement(x) {\n    if (!x || typeof x !== 'object') { return false; }\n    if (typeof HTMLElement !== 'undefined' && x instanceof HTMLElement) {\n        return true;\n    }\n    return typeof x.nodeName === 'string' && typeof x.getAttribute === 'function';\n}\n\nfunction inspectString(str, opts) {\n    if (str.length > opts.maxStringLength) {\n        var remaining = str.length - opts.maxStringLength;\n        var trailer = '... ' + remaining + ' more character' + (remaining > 1 ? 's' : '');\n        return inspectString($slice.call(str, 0, opts.maxStringLength), opts) + trailer;\n    }\n    var quoteRE = quoteREs[opts.quoteStyle || 'single'];\n    quoteRE.lastIndex = 0;\n    // eslint-disable-next-line no-control-regex\n    var s = $replace.call($replace.call(str, quoteRE, '\\\\$1'), /[\\x00-\\x1f]/g, lowbyte);\n    return wrapQuotes(s, 'single', opts);\n}\n\nfunction lowbyte(c) {\n    var n = c.charCodeAt(0);\n    var x = {\n        8: 'b',\n        9: 't',\n        10: 'n',\n        12: 'f',\n        13: 'r'\n    }[n];\n    if (x) { return '\\\\' + x; }\n    return '\\\\x' + (n < 0x10 ? '0' : '') + $toUpperCase.call(n.toString(16));\n}\n\nfunction markBoxed(str) {\n    return 'Object(' + str + ')';\n}\n\nfunction weakCollectionOf(type) {\n    return type + ' { ? }';\n}\n\nfunction collectionOf(type, size, entries, indent) {\n    var joinedEntries = indent ? indentedJoin(entries, indent) : $join.call(entries, ', ');\n    return type + ' (' + size + ') {' + joinedEntries + '}';\n}\n\nfunction singleLineValues(xs) {\n    for (var i = 0; i < xs.length; i++) {\n        if (indexOf(xs[i], '\\n') >= 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction getIndent(opts, depth) {\n    var baseIndent;\n    if (opts.indent === '\\t') {\n        baseIndent = '\\t';\n    } else if (typeof opts.indent === 'number' && opts.indent > 0) {\n        baseIndent = $join.call(Array(opts.indent + 1), ' ');\n    } else {\n        return null;\n    }\n    return {\n        base: baseIndent,\n        prev: $join.call(Array(depth + 1), baseIndent)\n    };\n}\n\nfunction indentedJoin(xs, indent) {\n    if (xs.length === 0) { return ''; }\n    var lineJoiner = '\\n' + indent.prev + indent.base;\n    return lineJoiner + $join.call(xs, ',' + lineJoiner) + '\\n' + indent.prev;\n}\n\nfunction arrObjKeys(obj, inspect) {\n    var isArr = isArray(obj);\n    var xs = [];\n    if (isArr) {\n        xs.length = obj.length;\n        for (var i = 0; i < obj.length; i++) {\n            xs[i] = has(obj, i) ? inspect(obj[i], obj) : '';\n        }\n    }\n    var syms = typeof gOPS === 'function' ? gOPS(obj) : [];\n    var symMap;\n    if (hasShammedSymbols) {\n        symMap = {};\n        for (var k = 0; k < syms.length; k++) {\n            symMap['$' + syms[k]] = syms[k];\n        }\n    }\n\n    for (var key in obj) { // eslint-disable-line no-restricted-syntax\n        if (!has(obj, key)) { continue; } // eslint-disable-line no-restricted-syntax, no-continue\n        if (isArr && String(Number(key)) === key && key < obj.length) { continue; } // eslint-disable-line no-restricted-syntax, no-continue\n        if (hasShammedSymbols && symMap['$' + key] instanceof Symbol) {\n            // this is to prevent shammed Symbols, which are stored as strings, from being included in the string key section\n            continue; // eslint-disable-line no-restricted-syntax, no-continue\n        } else if ($test.call(/[^\\w$]/, key)) {\n            xs.push(inspect(key, obj) + ': ' + inspect(obj[key], obj));\n        } else {\n            xs.push(key + ': ' + inspect(obj[key], obj));\n        }\n    }\n    if (typeof gOPS === 'function') {\n        for (var j = 0; j < syms.length; j++) {\n            if (isEnumerable.call(obj, syms[j])) {\n                xs.push('[' + inspect(syms[j]) + ']: ' + inspect(obj[syms[j]], obj));\n            }\n        }\n    }\n    return xs;\n}\n", "'use strict';\n\nvar inspect = require('object-inspect');\n\nvar $TypeError = require('es-errors/type');\n\n/*\n* This function traverses the list returning the node corresponding to the given key.\n*\n* That node is also moved to the head of the list, so that if it's accessed again we don't need to traverse the whole list.\n* By doing so, all the recently used nodes can be accessed relatively quickly.\n*/\n/** @type {import('./list.d.ts').listGetNode} */\n// eslint-disable-next-line consistent-return\nvar listGetNode = function (list, key, isDelete) {\n\t/** @type {typeof list | NonNullable<(typeof list)['next']>} */\n\tvar prev = list;\n\t/** @type {(typeof list)['next']} */\n\tvar curr;\n\t// eslint-disable-next-line eqeqeq\n\tfor (; (curr = prev.next) != null; prev = curr) {\n\t\tif (curr.key === key) {\n\t\t\tprev.next = curr.next;\n\t\t\tif (!isDelete) {\n\t\t\t\t// eslint-disable-next-line no-extra-parens\n\t\t\t\tcurr.next = /** @type {NonNullable<typeof list.next>} */ (list.next);\n\t\t\t\tlist.next = curr; // eslint-disable-line no-param-reassign\n\t\t\t}\n\t\t\treturn curr;\n\t\t}\n\t}\n};\n\n/** @type {import('./list.d.ts').listGet} */\nvar listGet = function (objects, key) {\n\tif (!objects) {\n\t\treturn void undefined;\n\t}\n\tvar node = listGetNode(objects, key);\n\treturn node && node.value;\n};\n/** @type {import('./list.d.ts').listSet} */\nvar listSet = function (objects, key, value) {\n\tvar node = listGetNode(objects, key);\n\tif (node) {\n\t\tnode.value = value;\n\t} else {\n\t\t// Prepend the new node to the beginning of the list\n\t\tobjects.next = /** @type {import('./list.d.ts').ListNode<typeof value, typeof key>} */ ({ // eslint-disable-line no-param-reassign, no-extra-parens\n\t\t\tkey: key,\n\t\t\tnext: objects.next,\n\t\t\tvalue: value\n\t\t});\n\t}\n};\n/** @type {import('./list.d.ts').listHas} */\nvar listHas = function (objects, key) {\n\tif (!objects) {\n\t\treturn false;\n\t}\n\treturn !!listGetNode(objects, key);\n};\n/** @type {import('./list.d.ts').listDelete} */\n// eslint-disable-next-line consistent-return\nvar listDelete = function (objects, key) {\n\tif (objects) {\n\t\treturn listGetNode(objects, key, true);\n\t}\n};\n\n/** @type {import('.')} */\nmodule.exports = function getSideChannelList() {\n\t/** @typedef {ReturnType<typeof getSideChannelList>} Channel */\n\t/** @typedef {Parameters<Channel['get']>[0]} K */\n\t/** @typedef {Parameters<Channel['set']>[1]} V */\n\n\t/** @type {import('./list.d.ts').RootNode<V, K> | undefined} */ var $o;\n\n\t/** @type {Channel} */\n\tvar channel = {\n\t\tassert: function (key) {\n\t\t\tif (!channel.has(key)) {\n\t\t\t\tthrow new $TypeError('Side channel does not contain ' + inspect(key));\n\t\t\t}\n\t\t},\n\t\t'delete': function (key) {\n\t\t\tvar root = $o && $o.next;\n\t\t\tvar deletedNode = listDelete($o, key);\n\t\t\tif (deletedNode && root && root === deletedNode) {\n\t\t\t\t$o = void undefined;\n\t\t\t}\n\t\t\treturn !!deletedNode;\n\t\t},\n\t\tget: function (key) {\n\t\t\treturn listGet($o, key);\n\t\t},\n\t\thas: function (key) {\n\t\t\treturn listHas($o, key);\n\t\t},\n\t\tset: function (key, value) {\n\t\t\tif (!$o) {\n\t\t\t\t// Initialize the linked list as an empty node, so that we don't have to special-case handling of the first node: we can always refer to it as (previous node).next, instead of something like (list).head\n\t\t\t\t$o = {\n\t\t\t\t\tnext: void undefined\n\t\t\t\t};\n\t\t\t}\n\t\t\t// eslint-disable-next-line no-extra-parens\n\t\t\tlistSet(/** @type {NonNullable<typeof $o>} */ ($o), key, value);\n\t\t}\n\t};\n\t// @ts-expect-error TODO: figure out why this is erroring\n\treturn channel;\n};\n", "'use strict';\n\n/** @type {import('.')} */\nmodule.exports = Object;\n", "'use strict';\n\n/** @type {import('.')} */\nmodule.exports = Error;\n", "'use strict';\n\n/** @type {import('./eval')} */\nmodule.exports = EvalError;\n", "'use strict';\n\n/** @type {import('./range')} */\nmodule.exports = RangeError;\n", "'use strict';\n\n/** @type {import('./ref')} */\nmodule.exports = ReferenceError;\n", "'use strict';\n\n/** @type {import('./syntax')} */\nmodule.exports = SyntaxError;\n", "'use strict';\n\n/** @type {import('./uri')} */\nmodule.exports = URIError;\n", "'use strict';\n\n/** @type {import('./abs')} */\nmodule.exports = Math.abs;\n", "'use strict';\n\n/** @type {import('./floor')} */\nmodule.exports = Math.floor;\n", "'use strict';\n\n/** @type {import('./max')} */\nmodule.exports = Math.max;\n", "'use strict';\n\n/** @type {import('./min')} */\nmodule.exports = Math.min;\n", "'use strict';\n\n/** @type {import('./pow')} */\nmodule.exports = Math.pow;\n", "'use strict';\n\n/** @type {import('./round')} */\nmodule.exports = Math.round;\n", "'use strict';\n\n/** @type {import('./isNaN')} */\nmodule.exports = Number.isNaN || function isNaN(a) {\n\treturn a !== a;\n};\n", "'use strict';\n\nvar $isNaN = require('./isNaN');\n\n/** @type {import('./sign')} */\nmodule.exports = function sign(number) {\n\tif ($isNaN(number) || number === 0) {\n\t\treturn number;\n\t}\n\treturn number < 0 ? -1 : +1;\n};\n", "'use strict';\n\n/** @type {import('./gOPD')} */\nmodule.exports = Object.getOwnPropertyDescriptor;\n", "'use strict';\n\n/** @type {import('.')} */\nvar $gOPD = require('./gOPD');\n\nif ($gOPD) {\n\ttry {\n\t\t$gOPD([], 'length');\n\t} catch (e) {\n\t\t// IE 8 has a broken gOPD\n\t\t$gOPD = null;\n\t}\n}\n\nmodule.exports = $gOPD;\n", "'use strict';\n\n/** @type {import('.')} */\nvar $defineProperty = Object.defineProperty || false;\nif ($defineProperty) {\n\ttry {\n\t\t$defineProperty({}, 'a', { value: 1 });\n\t} catch (e) {\n\t\t// IE 8 has a broken defineProperty\n\t\t$defineProperty = false;\n\t}\n}\n\nmodule.exports = $defineProperty;\n", "'use strict';\n\n/** @type {import('./shams')} */\n/* eslint complexity: [2, 18], max-statements: [2, 33] */\nmodule.exports = function hasSymbols() {\n\tif (typeof Symbol !== 'function' || typeof Object.getOwnPropertySymbols !== 'function') { return false; }\n\tif (typeof Symbol.iterator === 'symbol') { return true; }\n\n\t/** @type {{ [k in symbol]?: unknown }} */\n\tvar obj = {};\n\tvar sym = Symbol('test');\n\tvar symObj = Object(sym);\n\tif (typeof sym === 'string') { return false; }\n\n\tif (Object.prototype.toString.call(sym) !== '[object Symbol]') { return false; }\n\tif (Object.prototype.toString.call(symObj) !== '[object Symbol]') { return false; }\n\n\t// temp disabled per https://github.com/ljharb/object.assign/issues/17\n\t// if (sym instanceof Symbol) { return false; }\n\t// temp disabled per https://github.com/WebReflection/get-own-property-symbols/issues/4\n\t// if (!(symObj instanceof Symbol)) { return false; }\n\n\t// if (typeof Symbol.prototype.toString !== 'function') { return false; }\n\t// if (String(sym) !== Symbol.prototype.toString.call(sym)) { return false; }\n\n\tvar symVal = 42;\n\tobj[sym] = symVal;\n\tfor (var _ in obj) { return false; } // eslint-disable-line no-restricted-syntax, no-unreachable-loop\n\tif (typeof Object.keys === 'function' && Object.keys(obj).length !== 0) { return false; }\n\n\tif (typeof Object.getOwnPropertyNames === 'function' && Object.getOwnPropertyNames(obj).length !== 0) { return false; }\n\n\tvar syms = Object.getOwnPropertySymbols(obj);\n\tif (syms.length !== 1 || syms[0] !== sym) { return false; }\n\n\tif (!Object.prototype.propertyIsEnumerable.call(obj, sym)) { return false; }\n\n\tif (typeof Object.getOwnPropertyDescriptor === 'function') {\n\t\t// eslint-disable-next-line no-extra-parens\n\t\tvar descriptor = /** @type {PropertyDescriptor} */ (Object.getOwnPropertyDescriptor(obj, sym));\n\t\tif (descriptor.value !== symVal || descriptor.enumerable !== true) { return false; }\n\t}\n\n\treturn true;\n};\n", "'use strict';\n\nvar origSymbol = typeof Symbol !== 'undefined' && Symbol;\nvar hasSymbolSham = require('./shams');\n\n/** @type {import('.')} */\nmodule.exports = function hasNativeSymbols() {\n\tif (typeof origSymbol !== 'function') { return false; }\n\tif (typeof Symbol !== 'function') { return false; }\n\tif (typeof origSymbol('foo') !== 'symbol') { return false; }\n\tif (typeof Symbol('bar') !== 'symbol') { return false; }\n\n\treturn hasSymbolSham();\n};\n", "'use strict';\n\n/** @type {import('./Reflect.getPrototypeOf')} */\nmodule.exports = (typeof Reflect !== 'undefined' && Reflect.getPrototypeOf) || null;\n", "'use strict';\n\nvar $Object = require('es-object-atoms');\n\n/** @type {import('./Object.getPrototypeOf')} */\nmodule.exports = $Object.getPrototypeOf || null;\n", "'use strict';\n\n/* eslint no-invalid-this: 1 */\n\nvar ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';\nvar toStr = Object.prototype.toString;\nvar max = Math.max;\nvar funcType = '[object Function]';\n\nvar concatty = function concatty(a, b) {\n    var arr = [];\n\n    for (var i = 0; i < a.length; i += 1) {\n        arr[i] = a[i];\n    }\n    for (var j = 0; j < b.length; j += 1) {\n        arr[j + a.length] = b[j];\n    }\n\n    return arr;\n};\n\nvar slicy = function slicy(arrLike, offset) {\n    var arr = [];\n    for (var i = offset || 0, j = 0; i < arrLike.length; i += 1, j += 1) {\n        arr[j] = arrLike[i];\n    }\n    return arr;\n};\n\nvar joiny = function (arr, joiner) {\n    var str = '';\n    for (var i = 0; i < arr.length; i += 1) {\n        str += arr[i];\n        if (i + 1 < arr.length) {\n            str += joiner;\n        }\n    }\n    return str;\n};\n\nmodule.exports = function bind(that) {\n    var target = this;\n    if (typeof target !== 'function' || toStr.apply(target) !== funcType) {\n        throw new TypeError(ERROR_MESSAGE + target);\n    }\n    var args = slicy(arguments, 1);\n\n    var bound;\n    var binder = function () {\n        if (this instanceof bound) {\n            var result = target.apply(\n                this,\n                concatty(args, arguments)\n            );\n            if (Object(result) === result) {\n                return result;\n            }\n            return this;\n        }\n        return target.apply(\n            that,\n            concatty(args, arguments)\n        );\n\n    };\n\n    var boundLength = max(0, target.length - args.length);\n    var boundArgs = [];\n    for (var i = 0; i < boundLength; i++) {\n        boundArgs[i] = '$' + i;\n    }\n\n    bound = Function('binder', 'return function (' + joiny(boundArgs, ',') + '){ return binder.apply(this,arguments); }')(binder);\n\n    if (target.prototype) {\n        var Empty = function Empty() {};\n        Empty.prototype = target.prototype;\n        bound.prototype = new Empty();\n        Empty.prototype = null;\n    }\n\n    return bound;\n};\n", "'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = Function.prototype.bind || implementation;\n", "'use strict';\n\n/** @type {import('./functionCall')} */\nmodule.exports = Function.prototype.call;\n", "'use strict';\n\n/** @type {import('./functionApply')} */\nmodule.exports = Function.prototype.apply;\n", "'use strict';\n\n/** @type {import('./reflectApply')} */\nmodule.exports = typeof Reflect !== 'undefined' && Reflect && Reflect.apply;\n", "'use strict';\n\nvar bind = require('function-bind');\n\nvar $apply = require('./functionApply');\nvar $call = require('./functionCall');\nvar $reflectApply = require('./reflectApply');\n\n/** @type {import('./actualApply')} */\nmodule.exports = $reflectApply || bind.call($call, $apply);\n", "'use strict';\n\nvar bind = require('function-bind');\nvar $TypeError = require('es-errors/type');\n\nvar $call = require('./functionCall');\nvar $actualApply = require('./actualApply');\n\n/** @type {(args: [Function, thisArg?: unknown, ...args: unknown[]]) => Function} TODO FIXME, find a way to use import('.') */\nmodule.exports = function callBindBasic(args) {\n\tif (args.length < 1 || typeof args[0] !== 'function') {\n\t\tthrow new $TypeError('a function is required');\n\t}\n\treturn $actualApply(bind, $call, args);\n};\n", "'use strict';\n\nvar callBind = require('call-bind-apply-helpers');\nvar gOPD = require('gopd');\n\nvar hasProtoAccessor;\ntry {\n\t// eslint-disable-next-line no-extra-parens, no-proto\n\thasProtoAccessor = /** @type {{ __proto__?: typeof Array.prototype }} */ ([]).__proto__ === Array.prototype;\n} catch (e) {\n\tif (!e || typeof e !== 'object' || !('code' in e) || e.code !== 'ERR_PROTO_ACCESS') {\n\t\tthrow e;\n\t}\n}\n\n// eslint-disable-next-line no-extra-parens\nvar desc = !!hasProtoAccessor && gOPD && gOPD(Object.prototype, /** @type {keyof typeof Object.prototype} */ ('__proto__'));\n\nvar $Object = Object;\nvar $getPrototypeOf = $Object.getPrototypeOf;\n\n/** @type {import('./get')} */\nmodule.exports = desc && typeof desc.get === 'function'\n\t? callBind([desc.get])\n\t: typeof $getPrototypeOf === 'function'\n\t\t? /** @type {import('./get')} */ function getDunder(value) {\n\t\t\t// eslint-disable-next-line eqeqeq\n\t\t\treturn $getPrototypeOf(value == null ? value : $Object(value));\n\t\t}\n\t\t: false;\n", "'use strict';\n\nvar reflectGetProto = require('./Reflect.getPrototypeOf');\nvar originalGetProto = require('./Object.getPrototypeOf');\n\nvar getDunderProto = require('dunder-proto/get');\n\n/** @type {import('.')} */\nmodule.exports = reflectGetProto\n\t? function getProto(O) {\n\t\t// @ts-expect-error TS can't narrow inside a closure, for some reason\n\t\treturn reflectGetProto(O);\n\t}\n\t: originalGetProto\n\t\t? function getProto(O) {\n\t\t\tif (!O || (typeof O !== 'object' && typeof O !== 'function')) {\n\t\t\t\tthrow new TypeError('getProto: not an object');\n\t\t\t}\n\t\t\t// @ts-expect-error TS can't narrow inside a closure, for some reason\n\t\t\treturn originalGetProto(O);\n\t\t}\n\t\t: getDunderProto\n\t\t\t? function getProto(O) {\n\t\t\t\t// @ts-expect-error TS can't narrow inside a closure, for some reason\n\t\t\t\treturn getDunderProto(O);\n\t\t\t}\n\t\t\t: null;\n", "'use strict';\n\nvar call = Function.prototype.call;\nvar $hasOwn = Object.prototype.hasOwnProperty;\nvar bind = require('function-bind');\n\n/** @type {import('.')} */\nmodule.exports = bind.call(call, $hasOwn);\n", "'use strict';\n\nvar undefined;\n\nvar $Object = require('es-object-atoms');\n\nvar $Error = require('es-errors');\nvar $EvalError = require('es-errors/eval');\nvar $RangeError = require('es-errors/range');\nvar $ReferenceError = require('es-errors/ref');\nvar $SyntaxError = require('es-errors/syntax');\nvar $TypeError = require('es-errors/type');\nvar $URIError = require('es-errors/uri');\n\nvar abs = require('math-intrinsics/abs');\nvar floor = require('math-intrinsics/floor');\nvar max = require('math-intrinsics/max');\nvar min = require('math-intrinsics/min');\nvar pow = require('math-intrinsics/pow');\nvar round = require('math-intrinsics/round');\nvar sign = require('math-intrinsics/sign');\n\nvar $Function = Function;\n\n// eslint-disable-next-line consistent-return\nvar getEvalledConstructor = function (expressionSyntax) {\n\ttry {\n\t\treturn $Function('\"use strict\"; return (' + expressionSyntax + ').constructor;')();\n\t} catch (e) {}\n};\n\nvar $gOPD = require('gopd');\nvar $defineProperty = require('es-define-property');\n\nvar throwTypeError = function () {\n\tthrow new $TypeError();\n};\nvar ThrowTypeError = $gOPD\n\t? (function () {\n\t\ttry {\n\t\t\t// eslint-disable-next-line no-unused-expressions, no-caller, no-restricted-properties\n\t\t\targuments.callee; // IE 8 does not throw here\n\t\t\treturn throwTypeError;\n\t\t} catch (calleeThrows) {\n\t\t\ttry {\n\t\t\t\t// IE 8 throws on Object.getOwnPropertyDescriptor(arguments, '')\n\t\t\t\treturn $gOPD(arguments, 'callee').get;\n\t\t\t} catch (gOPDthrows) {\n\t\t\t\treturn throwTypeError;\n\t\t\t}\n\t\t}\n\t}())\n\t: throwTypeError;\n\nvar hasSymbols = require('has-symbols')();\n\nvar getProto = require('get-proto');\nvar $ObjectGPO = require('get-proto/Object.getPrototypeOf');\nvar $ReflectGPO = require('get-proto/Reflect.getPrototypeOf');\n\nvar $apply = require('call-bind-apply-helpers/functionApply');\nvar $call = require('call-bind-apply-helpers/functionCall');\n\nvar needsEval = {};\n\nvar TypedArray = typeof Uint8Array === 'undefined' || !getProto ? undefined : getProto(Uint8Array);\n\nvar INTRINSICS = {\n\t__proto__: null,\n\t'%AggregateError%': typeof AggregateError === 'undefined' ? undefined : AggregateError,\n\t'%Array%': Array,\n\t'%ArrayBuffer%': typeof ArrayBuffer === 'undefined' ? undefined : ArrayBuffer,\n\t'%ArrayIteratorPrototype%': hasSymbols && getProto ? getProto([][Symbol.iterator]()) : undefined,\n\t'%AsyncFromSyncIteratorPrototype%': undefined,\n\t'%AsyncFunction%': needsEval,\n\t'%AsyncGenerator%': needsEval,\n\t'%AsyncGeneratorFunction%': needsEval,\n\t'%AsyncIteratorPrototype%': needsEval,\n\t'%Atomics%': typeof Atomics === 'undefined' ? undefined : Atomics,\n\t'%BigInt%': typeof BigInt === 'undefined' ? undefined : BigInt,\n\t'%BigInt64Array%': typeof BigInt64Array === 'undefined' ? undefined : BigInt64Array,\n\t'%BigUint64Array%': typeof BigUint64Array === 'undefined' ? undefined : BigUint64Array,\n\t'%Boolean%': Boolean,\n\t'%DataView%': typeof DataView === 'undefined' ? undefined : DataView,\n\t'%Date%': Date,\n\t'%decodeURI%': decodeURI,\n\t'%decodeURIComponent%': decodeURIComponent,\n\t'%encodeURI%': encodeURI,\n\t'%encodeURIComponent%': encodeURIComponent,\n\t'%Error%': $Error,\n\t'%eval%': eval, // eslint-disable-line no-eval\n\t'%EvalError%': $EvalError,\n\t'%Float16Array%': typeof Float16Array === 'undefined' ? undefined : Float16Array,\n\t'%Float32Array%': typeof Float32Array === 'undefined' ? undefined : Float32Array,\n\t'%Float64Array%': typeof Float64Array === 'undefined' ? undefined : Float64Array,\n\t'%FinalizationRegistry%': typeof FinalizationRegistry === 'undefined' ? undefined : FinalizationRegistry,\n\t'%Function%': $Function,\n\t'%GeneratorFunction%': needsEval,\n\t'%Int8Array%': typeof Int8Array === 'undefined' ? undefined : Int8Array,\n\t'%Int16Array%': typeof Int16Array === 'undefined' ? undefined : Int16Array,\n\t'%Int32Array%': typeof Int32Array === 'undefined' ? undefined : Int32Array,\n\t'%isFinite%': isFinite,\n\t'%isNaN%': isNaN,\n\t'%IteratorPrototype%': hasSymbols && getProto ? getProto(getProto([][Symbol.iterator]())) : undefined,\n\t'%JSON%': typeof JSON === 'object' ? JSON : undefined,\n\t'%Map%': typeof Map === 'undefined' ? undefined : Map,\n\t'%MapIteratorPrototype%': typeof Map === 'undefined' || !hasSymbols || !getProto ? undefined : getProto(new Map()[Symbol.iterator]()),\n\t'%Math%': Math,\n\t'%Number%': Number,\n\t'%Object%': $Object,\n\t'%Object.getOwnPropertyDescriptor%': $gOPD,\n\t'%parseFloat%': parseFloat,\n\t'%parseInt%': parseInt,\n\t'%Promise%': typeof Promise === 'undefined' ? undefined : Promise,\n\t'%Proxy%': typeof Proxy === 'undefined' ? undefined : Proxy,\n\t'%RangeError%': $RangeError,\n\t'%ReferenceError%': $ReferenceError,\n\t'%Reflect%': typeof Reflect === 'undefined' ? undefined : Reflect,\n\t'%RegExp%': RegExp,\n\t'%Set%': typeof Set === 'undefined' ? undefined : Set,\n\t'%SetIteratorPrototype%': typeof Set === 'undefined' || !hasSymbols || !getProto ? undefined : getProto(new Set()[Symbol.iterator]()),\n\t'%SharedArrayBuffer%': typeof SharedArrayBuffer === 'undefined' ? undefined : SharedArrayBuffer,\n\t'%String%': String,\n\t'%StringIteratorPrototype%': hasSymbols && getProto ? getProto(''[Symbol.iterator]()) : undefined,\n\t'%Symbol%': hasSymbols ? Symbol : undefined,\n\t'%SyntaxError%': $SyntaxError,\n\t'%ThrowTypeError%': ThrowTypeError,\n\t'%TypedArray%': TypedArray,\n\t'%TypeError%': $TypeError,\n\t'%Uint8Array%': typeof Uint8Array === 'undefined' ? undefined : Uint8Array,\n\t'%Uint8ClampedArray%': typeof Uint8ClampedArray === 'undefined' ? undefined : Uint8ClampedArray,\n\t'%Uint16Array%': typeof Uint16Array === 'undefined' ? undefined : Uint16Array,\n\t'%Uint32Array%': typeof Uint32Array === 'undefined' ? undefined : Uint32Array,\n\t'%URIError%': $URIError,\n\t'%WeakMap%': typeof WeakMap === 'undefined' ? undefined : WeakMap,\n\t'%WeakRef%': typeof WeakRef === 'undefined' ? undefined : WeakRef,\n\t'%WeakSet%': typeof WeakSet === 'undefined' ? undefined : WeakSet,\n\n\t'%Function.prototype.call%': $call,\n\t'%Function.prototype.apply%': $apply,\n\t'%Object.defineProperty%': $defineProperty,\n\t'%Object.getPrototypeOf%': $ObjectGPO,\n\t'%Math.abs%': abs,\n\t'%Math.floor%': floor,\n\t'%Math.max%': max,\n\t'%Math.min%': min,\n\t'%Math.pow%': pow,\n\t'%Math.round%': round,\n\t'%Math.sign%': sign,\n\t'%Reflect.getPrototypeOf%': $ReflectGPO\n};\n\nif (getProto) {\n\ttry {\n\t\tnull.error; // eslint-disable-line no-unused-expressions\n\t} catch (e) {\n\t\t// https://github.com/tc39/proposal-shadowrealm/pull/384#issuecomment-1364264229\n\t\tvar errorProto = getProto(getProto(e));\n\t\tINTRINSICS['%Error.prototype%'] = errorProto;\n\t}\n}\n\nvar doEval = function doEval(name) {\n\tvar value;\n\tif (name === '%AsyncFunction%') {\n\t\tvalue = getEvalledConstructor('async function () {}');\n\t} else if (name === '%GeneratorFunction%') {\n\t\tvalue = getEvalledConstructor('function* () {}');\n\t} else if (name === '%AsyncGeneratorFunction%') {\n\t\tvalue = getEvalledConstructor('async function* () {}');\n\t} else if (name === '%AsyncGenerator%') {\n\t\tvar fn = doEval('%AsyncGeneratorFunction%');\n\t\tif (fn) {\n\t\t\tvalue = fn.prototype;\n\t\t}\n\t} else if (name === '%AsyncIteratorPrototype%') {\n\t\tvar gen = doEval('%AsyncGenerator%');\n\t\tif (gen && getProto) {\n\t\t\tvalue = getProto(gen.prototype);\n\t\t}\n\t}\n\n\tINTRINSICS[name] = value;\n\n\treturn value;\n};\n\nvar LEGACY_ALIASES = {\n\t__proto__: null,\n\t'%ArrayBufferPrototype%': ['ArrayBuffer', 'prototype'],\n\t'%ArrayPrototype%': ['Array', 'prototype'],\n\t'%ArrayProto_entries%': ['Array', 'prototype', 'entries'],\n\t'%ArrayProto_forEach%': ['Array', 'prototype', 'forEach'],\n\t'%ArrayProto_keys%': ['Array', 'prototype', 'keys'],\n\t'%ArrayProto_values%': ['Array', 'prototype', 'values'],\n\t'%AsyncFunctionPrototype%': ['AsyncFunction', 'prototype'],\n\t'%AsyncGenerator%': ['AsyncGeneratorFunction', 'prototype'],\n\t'%AsyncGeneratorPrototype%': ['AsyncGeneratorFunction', 'prototype', 'prototype'],\n\t'%BooleanPrototype%': ['Boolean', 'prototype'],\n\t'%DataViewPrototype%': ['DataView', 'prototype'],\n\t'%DatePrototype%': ['Date', 'prototype'],\n\t'%ErrorPrototype%': ['Error', 'prototype'],\n\t'%EvalErrorPrototype%': ['EvalError', 'prototype'],\n\t'%Float32ArrayPrototype%': ['Float32Array', 'prototype'],\n\t'%Float64ArrayPrototype%': ['Float64Array', 'prototype'],\n\t'%FunctionPrototype%': ['Function', 'prototype'],\n\t'%Generator%': ['GeneratorFunction', 'prototype'],\n\t'%GeneratorPrototype%': ['GeneratorFunction', 'prototype', 'prototype'],\n\t'%Int8ArrayPrototype%': ['Int8Array', 'prototype'],\n\t'%Int16ArrayPrototype%': ['Int16Array', 'prototype'],\n\t'%Int32ArrayPrototype%': ['Int32Array', 'prototype'],\n\t'%JSONParse%': ['JSON', 'parse'],\n\t'%JSONStringify%': ['JSON', 'stringify'],\n\t'%MapPrototype%': ['Map', 'prototype'],\n\t'%NumberPrototype%': ['Number', 'prototype'],\n\t'%ObjectPrototype%': ['Object', 'prototype'],\n\t'%ObjProto_toString%': ['Object', 'prototype', 'toString'],\n\t'%ObjProto_valueOf%': ['Object', 'prototype', 'valueOf'],\n\t'%PromisePrototype%': ['Promise', 'prototype'],\n\t'%PromiseProto_then%': ['Promise', 'prototype', 'then'],\n\t'%Promise_all%': ['Promise', 'all'],\n\t'%Promise_reject%': ['Promise', 'reject'],\n\t'%Promise_resolve%': ['Promise', 'resolve'],\n\t'%RangeErrorPrototype%': ['RangeError', 'prototype'],\n\t'%ReferenceErrorPrototype%': ['ReferenceError', 'prototype'],\n\t'%RegExpPrototype%': ['RegExp', 'prototype'],\n\t'%SetPrototype%': ['Set', 'prototype'],\n\t'%SharedArrayBufferPrototype%': ['SharedArrayBuffer', 'prototype'],\n\t'%StringPrototype%': ['String', 'prototype'],\n\t'%SymbolPrototype%': ['Symbol', 'prototype'],\n\t'%SyntaxErrorPrototype%': ['SyntaxError', 'prototype'],\n\t'%TypedArrayPrototype%': ['TypedArray', 'prototype'],\n\t'%TypeErrorPrototype%': ['TypeError', 'prototype'],\n\t'%Uint8ArrayPrototype%': ['Uint8Array', 'prototype'],\n\t'%Uint8ClampedArrayPrototype%': ['Uint8ClampedArray', 'prototype'],\n\t'%Uint16ArrayPrototype%': ['Uint16Array', 'prototype'],\n\t'%Uint32ArrayPrototype%': ['Uint32Array', 'prototype'],\n\t'%URIErrorPrototype%': ['URIError', 'prototype'],\n\t'%WeakMapPrototype%': ['WeakMap', 'prototype'],\n\t'%WeakSetPrototype%': ['WeakSet', 'prototype']\n};\n\nvar bind = require('function-bind');\nvar hasOwn = require('hasown');\nvar $concat = bind.call($call, Array.prototype.concat);\nvar $spliceApply = bind.call($apply, Array.prototype.splice);\nvar $replace = bind.call($call, String.prototype.replace);\nvar $strSlice = bind.call($call, String.prototype.slice);\nvar $exec = bind.call($call, RegExp.prototype.exec);\n\n/* adapted from https://github.com/lodash/lodash/blob/4.17.15/dist/lodash.js#L6735-L6744 */\nvar rePropName = /[^%.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|%$))/g;\nvar reEscapeChar = /\\\\(\\\\)?/g; /** Used to match backslashes in property paths. */\nvar stringToPath = function stringToPath(string) {\n\tvar first = $strSlice(string, 0, 1);\n\tvar last = $strSlice(string, -1);\n\tif (first === '%' && last !== '%') {\n\t\tthrow new $SyntaxError('invalid intrinsic syntax, expected closing `%`');\n\t} else if (last === '%' && first !== '%') {\n\t\tthrow new $SyntaxError('invalid intrinsic syntax, expected opening `%`');\n\t}\n\tvar result = [];\n\t$replace(string, rePropName, function (match, number, quote, subString) {\n\t\tresult[result.length] = quote ? $replace(subString, reEscapeChar, '$1') : number || match;\n\t});\n\treturn result;\n};\n/* end adaptation */\n\nvar getBaseIntrinsic = function getBaseIntrinsic(name, allowMissing) {\n\tvar intrinsicName = name;\n\tvar alias;\n\tif (hasOwn(LEGACY_ALIASES, intrinsicName)) {\n\t\talias = LEGACY_ALIASES[intrinsicName];\n\t\tintrinsicName = '%' + alias[0] + '%';\n\t}\n\n\tif (hasOwn(INTRINSICS, intrinsicName)) {\n\t\tvar value = INTRINSICS[intrinsicName];\n\t\tif (value === needsEval) {\n\t\t\tvalue = doEval(intrinsicName);\n\t\t}\n\t\tif (typeof value === 'undefined' && !allowMissing) {\n\t\t\tthrow new $TypeError('intrinsic ' + name + ' exists, but is not available. Please file an issue!');\n\t\t}\n\n\t\treturn {\n\t\t\talias: alias,\n\t\t\tname: intrinsicName,\n\t\t\tvalue: value\n\t\t};\n\t}\n\n\tthrow new $SyntaxError('intrinsic ' + name + ' does not exist!');\n};\n\nmodule.exports = function GetIntrinsic(name, allowMissing) {\n\tif (typeof name !== 'string' || name.length === 0) {\n\t\tthrow new $TypeError('intrinsic name must be a non-empty string');\n\t}\n\tif (arguments.length > 1 && typeof allowMissing !== 'boolean') {\n\t\tthrow new $TypeError('\"allowMissing\" argument must be a boolean');\n\t}\n\n\tif ($exec(/^%?[^%]*%?$/, name) === null) {\n\t\tthrow new $SyntaxError('`%` may not be present anywhere but at the beginning and end of the intrinsic name');\n\t}\n\tvar parts = stringToPath(name);\n\tvar intrinsicBaseName = parts.length > 0 ? parts[0] : '';\n\n\tvar intrinsic = getBaseIntrinsic('%' + intrinsicBaseName + '%', allowMissing);\n\tvar intrinsicRealName = intrinsic.name;\n\tvar value = intrinsic.value;\n\tvar skipFurtherCaching = false;\n\n\tvar alias = intrinsic.alias;\n\tif (alias) {\n\t\tintrinsicBaseName = alias[0];\n\t\t$spliceApply(parts, $concat([0, 1], alias));\n\t}\n\n\tfor (var i = 1, isOwn = true; i < parts.length; i += 1) {\n\t\tvar part = parts[i];\n\t\tvar first = $strSlice(part, 0, 1);\n\t\tvar last = $strSlice(part, -1);\n\t\tif (\n\t\t\t(\n\t\t\t\t(first === '\"' || first === \"'\" || first === '`')\n\t\t\t\t|| (last === '\"' || last === \"'\" || last === '`')\n\t\t\t)\n\t\t\t&& first !== last\n\t\t) {\n\t\t\tthrow new $SyntaxError('property names with quotes must have matching quotes');\n\t\t}\n\t\tif (part === 'constructor' || !isOwn) {\n\t\t\tskipFurtherCaching = true;\n\t\t}\n\n\t\tintrinsicBaseName += '.' + part;\n\t\tintrinsicRealName = '%' + intrinsicBaseName + '%';\n\n\t\tif (hasOwn(INTRINSICS, intrinsicRealName)) {\n\t\t\tvalue = INTRINSICS[intrinsicRealName];\n\t\t} else if (value != null) {\n\t\t\tif (!(part in value)) {\n\t\t\t\tif (!allowMissing) {\n\t\t\t\t\tthrow new $TypeError('base intrinsic for ' + name + ' exists, but the property is not available.');\n\t\t\t\t}\n\t\t\t\treturn void undefined;\n\t\t\t}\n\t\t\tif ($gOPD && (i + 1) >= parts.length) {\n\t\t\t\tvar desc = $gOPD(value, part);\n\t\t\t\tisOwn = !!desc;\n\n\t\t\t\t// By convention, when a data property is converted to an accessor\n\t\t\t\t// property to emulate a data property that does not suffer from\n\t\t\t\t// the override mistake, that accessor's getter is marked with\n\t\t\t\t// an `originalValue` property. Here, when we detect this, we\n\t\t\t\t// uphold the illusion by pretending to see that original data\n\t\t\t\t// property, i.e., returning the value rather than the getter\n\t\t\t\t// itself.\n\t\t\t\tif (isOwn && 'get' in desc && !('originalValue' in desc.get)) {\n\t\t\t\t\tvalue = desc.get;\n\t\t\t\t} else {\n\t\t\t\t\tvalue = value[part];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tisOwn = hasOwn(value, part);\n\t\t\t\tvalue = value[part];\n\t\t\t}\n\n\t\t\tif (isOwn && !skipFurtherCaching) {\n\t\t\t\tINTRINSICS[intrinsicRealName] = value;\n\t\t\t}\n\t\t}\n\t}\n\treturn value;\n};\n", "'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar callBindBasic = require('call-bind-apply-helpers');\n\n/** @type {(thisArg: string, searchString: string, position?: number) => number} */\nvar $indexOf = callBindBasic([GetIntrinsic('%String.prototype.indexOf%')]);\n\n/** @type {import('.')} */\nmodule.exports = function callBoundIntrinsic(name, allowMissing) {\n\t/* eslint no-extra-parens: 0 */\n\n\tvar intrinsic = /** @type {(this: unknown, ...args: unknown[]) => unknown} */ (GetIntrinsic(name, !!allowMissing));\n\tif (typeof intrinsic === 'function' && $indexOf(name, '.prototype.') > -1) {\n\t\treturn callBindBasic(/** @type {const} */ ([intrinsic]));\n\t}\n\treturn intrinsic;\n};\n", "'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\nvar callBound = require('call-bound');\nvar inspect = require('object-inspect');\n\nvar $TypeError = require('es-errors/type');\nvar $Map = GetIntrinsic('%Map%', true);\n\n/** @type {<K, V>(thisArg: Map<K, V>, key: K) => V} */\nvar $mapGet = callBound('Map.prototype.get', true);\n/** @type {<K, V>(thisArg: Map<K, V>, key: K, value: V) => void} */\nvar $mapSet = callBound('Map.prototype.set', true);\n/** @type {<K, V>(thisArg: Map<K, V>, key: K) => boolean} */\nvar $mapHas = callBound('Map.prototype.has', true);\n/** @type {<K, V>(thisArg: Map<K, V>, key: K) => boolean} */\nvar $mapDelete = callBound('Map.prototype.delete', true);\n/** @type {<K, V>(thisArg: Map<K, V>) => number} */\nvar $mapSize = callBound('Map.prototype.size', true);\n\n/** @type {import('.')} */\nmodule.exports = !!$Map && /** @type {Exclude<import('.'), false>} */ function getSideChannelMap() {\n\t/** @typedef {ReturnType<typeof getSideChannelMap>} Channel */\n\t/** @typedef {Parameters<Channel['get']>[0]} K */\n\t/** @typedef {Parameters<Channel['set']>[1]} V */\n\n\t/** @type {Map<K, V> | undefined} */ var $m;\n\n\t/** @type {Channel} */\n\tvar channel = {\n\t\tassert: function (key) {\n\t\t\tif (!channel.has(key)) {\n\t\t\t\tthrow new $TypeError('Side channel does not contain ' + inspect(key));\n\t\t\t}\n\t\t},\n\t\t'delete': function (key) {\n\t\t\tif ($m) {\n\t\t\t\tvar result = $mapDelete($m, key);\n\t\t\t\tif ($mapSize($m) === 0) {\n\t\t\t\t\t$m = void undefined;\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\tget: function (key) { // eslint-disable-line consistent-return\n\t\t\tif ($m) {\n\t\t\t\treturn $mapGet($m, key);\n\t\t\t}\n\t\t},\n\t\thas: function (key) {\n\t\t\tif ($m) {\n\t\t\t\treturn $mapHas($m, key);\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\tset: function (key, value) {\n\t\t\tif (!$m) {\n\t\t\t\t// @ts-expect-error TS can't handle narrowing a variable inside a closure\n\t\t\t\t$m = new $Map();\n\t\t\t}\n\t\t\t$mapSet($m, key, value);\n\t\t}\n\t};\n\n\t// @ts-expect-error TODO: figure out why TS is erroring here\n\treturn channel;\n};\n", "'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\nvar callBound = require('call-bound');\nvar inspect = require('object-inspect');\nvar getSideChannelMap = require('side-channel-map');\n\nvar $TypeError = require('es-errors/type');\nvar $WeakMap = GetIntrinsic('%WeakMap%', true);\n\n/** @type {<K extends object, V>(thisArg: WeakMap<K, V>, key: K) => V} */\nvar $weakMapGet = callBound('WeakMap.prototype.get', true);\n/** @type {<K extends object, V>(thisArg: WeakMap<K, V>, key: K, value: V) => void} */\nvar $weakMapSet = callBound('WeakMap.prototype.set', true);\n/** @type {<K extends object, V>(thisArg: WeakMap<K, V>, key: K) => boolean} */\nvar $weakMapHas = callBound('WeakMap.prototype.has', true);\n/** @type {<K extends object, V>(thisArg: WeakMap<K, V>, key: K) => boolean} */\nvar $weakMapDelete = callBound('WeakMap.prototype.delete', true);\n\n/** @type {import('.')} */\nmodule.exports = $WeakMap\n\t? /** @type {Exclude<import('.'), false>} */ function getSideChannelWeakMap() {\n\t\t/** @typedef {ReturnType<typeof getSideChannelWeakMap>} Channel */\n\t\t/** @typedef {Parameters<Channel['get']>[0]} K */\n\t\t/** @typedef {Parameters<Channel['set']>[1]} V */\n\n\t\t/** @type {WeakMap<K & object, V> | undefined} */ var $wm;\n\t\t/** @type {Channel | undefined} */ var $m;\n\n\t\t/** @type {Channel} */\n\t\tvar channel = {\n\t\t\tassert: function (key) {\n\t\t\t\tif (!channel.has(key)) {\n\t\t\t\t\tthrow new $TypeError('Side channel does not contain ' + inspect(key));\n\t\t\t\t}\n\t\t\t},\n\t\t\t'delete': function (key) {\n\t\t\t\tif ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {\n\t\t\t\t\tif ($wm) {\n\t\t\t\t\t\treturn $weakMapDelete($wm, key);\n\t\t\t\t\t}\n\t\t\t\t} else if (getSideChannelMap) {\n\t\t\t\t\tif ($m) {\n\t\t\t\t\t\treturn $m['delete'](key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\tget: function (key) {\n\t\t\t\tif ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {\n\t\t\t\t\tif ($wm) {\n\t\t\t\t\t\treturn $weakMapGet($wm, key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn $m && $m.get(key);\n\t\t\t},\n\t\t\thas: function (key) {\n\t\t\t\tif ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {\n\t\t\t\t\tif ($wm) {\n\t\t\t\t\t\treturn $weakMapHas($wm, key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn !!$m && $m.has(key);\n\t\t\t},\n\t\t\tset: function (key, value) {\n\t\t\t\tif ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {\n\t\t\t\t\tif (!$wm) {\n\t\t\t\t\t\t$wm = new $WeakMap();\n\t\t\t\t\t}\n\t\t\t\t\t$weakMapSet($wm, key, value);\n\t\t\t\t} else if (getSideChannelMap) {\n\t\t\t\t\tif (!$m) {\n\t\t\t\t\t\t$m = getSideChannelMap();\n\t\t\t\t\t}\n\t\t\t\t\t// eslint-disable-next-line no-extra-parens\n\t\t\t\t\t/** @type {NonNullable<typeof $m>} */ ($m).set(key, value);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t// @ts-expect-error TODO: figure out why this is erroring\n\t\treturn channel;\n\t}\n\t: getSideChannelMap;\n", "'use strict';\n\nvar $TypeError = require('es-errors/type');\nvar inspect = require('object-inspect');\nvar getSideChannelList = require('side-channel-list');\nvar getSideChannelMap = require('side-channel-map');\nvar getSideChannelWeakMap = require('side-channel-weakmap');\n\nvar makeChannel = getSideChannelWeakMap || getSideChannelMap || getSideChannelList;\n\n/** @type {import('.')} */\nmodule.exports = function getSideChannel() {\n\t/** @typedef {ReturnType<typeof getSideChannel>} Channel */\n\n\t/** @type {Channel | undefined} */ var $channelData;\n\n\t/** @type {Channel} */\n\tvar channel = {\n\t\tassert: function (key) {\n\t\t\tif (!channel.has(key)) {\n\t\t\t\tthrow new $TypeError('Side channel does not contain ' + inspect(key));\n\t\t\t}\n\t\t},\n\t\t'delete': function (key) {\n\t\t\treturn !!$channelData && $channelData['delete'](key);\n\t\t},\n\t\tget: function (key) {\n\t\t\treturn $channelData && $channelData.get(key);\n\t\t},\n\t\thas: function (key) {\n\t\t\treturn !!$channelData && $channelData.has(key);\n\t\t},\n\t\tset: function (key, value) {\n\t\t\tif (!$channelData) {\n\t\t\t\t$channelData = makeChannel();\n\t\t\t}\n\n\t\t\t$channelData.set(key, value);\n\t\t}\n\t};\n\t// @ts-expect-error TODO: figure out why this is erroring\n\treturn channel;\n};\n", "'use strict';\n\nvar replace = String.prototype.replace;\nvar percentTwenties = /%20/g;\n\nvar Format = {\n    RFC1738: 'RFC1738',\n    RFC3986: 'RFC3986'\n};\n\nmodule.exports = {\n    'default': Format.RFC3986,\n    formatters: {\n        RFC1738: function (value) {\n            return replace.call(value, percentTwenties, '+');\n        },\n        RFC3986: function (value) {\n            return String(value);\n        }\n    },\n    RFC1738: Format.RFC1738,\n    RFC3986: Format.RFC3986\n};\n", "'use strict';\n\nvar formats = require('./formats');\n\nvar has = Object.prototype.hasOwnProperty;\nvar isArray = Array.isArray;\n\nvar hexTable = (function () {\n    var array = [];\n    for (var i = 0; i < 256; ++i) {\n        array.push('%' + ((i < 16 ? '0' : '') + i.toString(16)).toUpperCase());\n    }\n\n    return array;\n}());\n\nvar compactQueue = function compactQueue(queue) {\n    while (queue.length > 1) {\n        var item = queue.pop();\n        var obj = item.obj[item.prop];\n\n        if (isArray(obj)) {\n            var compacted = [];\n\n            for (var j = 0; j < obj.length; ++j) {\n                if (typeof obj[j] !== 'undefined') {\n                    compacted.push(obj[j]);\n                }\n            }\n\n            item.obj[item.prop] = compacted;\n        }\n    }\n};\n\nvar arrayToObject = function arrayToObject(source, options) {\n    var obj = options && options.plainObjects ? Object.create(null) : {};\n    for (var i = 0; i < source.length; ++i) {\n        if (typeof source[i] !== 'undefined') {\n            obj[i] = source[i];\n        }\n    }\n\n    return obj;\n};\n\nvar merge = function merge(target, source, options) {\n    /* eslint no-param-reassign: 0 */\n    if (!source) {\n        return target;\n    }\n\n    if (typeof source !== 'object') {\n        if (isArray(target)) {\n            target.push(source);\n        } else if (target && typeof target === 'object') {\n            if ((options && (options.plainObjects || options.allowPrototypes)) || !has.call(Object.prototype, source)) {\n                target[source] = true;\n            }\n        } else {\n            return [target, source];\n        }\n\n        return target;\n    }\n\n    if (!target || typeof target !== 'object') {\n        return [target].concat(source);\n    }\n\n    var mergeTarget = target;\n    if (isArray(target) && !isArray(source)) {\n        mergeTarget = arrayToObject(target, options);\n    }\n\n    if (isArray(target) && isArray(source)) {\n        source.forEach(function (item, i) {\n            if (has.call(target, i)) {\n                var targetItem = target[i];\n                if (targetItem && typeof targetItem === 'object' && item && typeof item === 'object') {\n                    target[i] = merge(targetItem, item, options);\n                } else {\n                    target.push(item);\n                }\n            } else {\n                target[i] = item;\n            }\n        });\n        return target;\n    }\n\n    return Object.keys(source).reduce(function (acc, key) {\n        var value = source[key];\n\n        if (has.call(acc, key)) {\n            acc[key] = merge(acc[key], value, options);\n        } else {\n            acc[key] = value;\n        }\n        return acc;\n    }, mergeTarget);\n};\n\nvar assign = function assignSingleSource(target, source) {\n    return Object.keys(source).reduce(function (acc, key) {\n        acc[key] = source[key];\n        return acc;\n    }, target);\n};\n\nvar decode = function (str, decoder, charset) {\n    var strWithoutPlus = str.replace(/\\+/g, ' ');\n    if (charset === 'iso-8859-1') {\n        // unescape never throws, no try...catch needed:\n        return strWithoutPlus.replace(/%[0-9a-f]{2}/gi, unescape);\n    }\n    // utf-8\n    try {\n        return decodeURIComponent(strWithoutPlus);\n    } catch (e) {\n        return strWithoutPlus;\n    }\n};\n\nvar limit = 1024;\n\n/* eslint operator-linebreak: [2, \"before\"] */\n\nvar encode = function encode(str, defaultEncoder, charset, kind, format) {\n    // This code was originally written by Brian White (mscdex) for the io.js core querystring library.\n    // It has been adapted here for stricter adherence to RFC 3986\n    if (str.length === 0) {\n        return str;\n    }\n\n    var string = str;\n    if (typeof str === 'symbol') {\n        string = Symbol.prototype.toString.call(str);\n    } else if (typeof str !== 'string') {\n        string = String(str);\n    }\n\n    if (charset === 'iso-8859-1') {\n        return escape(string).replace(/%u[0-9a-f]{4}/gi, function ($0) {\n            return '%26%23' + parseInt($0.slice(2), 16) + '%3B';\n        });\n    }\n\n    var out = '';\n    for (var j = 0; j < string.length; j += limit) {\n        var segment = string.length >= limit ? string.slice(j, j + limit) : string;\n        var arr = [];\n\n        for (var i = 0; i < segment.length; ++i) {\n            var c = segment.charCodeAt(i);\n            if (\n                c === 0x2D // -\n                || c === 0x2E // .\n                || c === 0x5F // _\n                || c === 0x7E // ~\n                || (c >= 0x30 && c <= 0x39) // 0-9\n                || (c >= 0x41 && c <= 0x5A) // a-z\n                || (c >= 0x61 && c <= 0x7A) // A-Z\n                || (format === formats.RFC1738 && (c === 0x28 || c === 0x29)) // ( )\n            ) {\n                arr[arr.length] = segment.charAt(i);\n                continue;\n            }\n\n            if (c < 0x80) {\n                arr[arr.length] = hexTable[c];\n                continue;\n            }\n\n            if (c < 0x800) {\n                arr[arr.length] = hexTable[0xC0 | (c >> 6)]\n                    + hexTable[0x80 | (c & 0x3F)];\n                continue;\n            }\n\n            if (c < 0xD800 || c >= 0xE000) {\n                arr[arr.length] = hexTable[0xE0 | (c >> 12)]\n                    + hexTable[0x80 | ((c >> 6) & 0x3F)]\n                    + hexTable[0x80 | (c & 0x3F)];\n                continue;\n            }\n\n            i += 1;\n            c = 0x10000 + (((c & 0x3FF) << 10) | (segment.charCodeAt(i) & 0x3FF));\n\n            arr[arr.length] = hexTable[0xF0 | (c >> 18)]\n                + hexTable[0x80 | ((c >> 12) & 0x3F)]\n                + hexTable[0x80 | ((c >> 6) & 0x3F)]\n                + hexTable[0x80 | (c & 0x3F)];\n        }\n\n        out += arr.join('');\n    }\n\n    return out;\n};\n\nvar compact = function compact(value) {\n    var queue = [{ obj: { o: value }, prop: 'o' }];\n    var refs = [];\n\n    for (var i = 0; i < queue.length; ++i) {\n        var item = queue[i];\n        var obj = item.obj[item.prop];\n\n        var keys = Object.keys(obj);\n        for (var j = 0; j < keys.length; ++j) {\n            var key = keys[j];\n            var val = obj[key];\n            if (typeof val === 'object' && val !== null && refs.indexOf(val) === -1) {\n                queue.push({ obj: obj, prop: key });\n                refs.push(val);\n            }\n        }\n    }\n\n    compactQueue(queue);\n\n    return value;\n};\n\nvar isRegExp = function isRegExp(obj) {\n    return Object.prototype.toString.call(obj) === '[object RegExp]';\n};\n\nvar isBuffer = function isBuffer(obj) {\n    if (!obj || typeof obj !== 'object') {\n        return false;\n    }\n\n    return !!(obj.constructor && obj.constructor.isBuffer && obj.constructor.isBuffer(obj));\n};\n\nvar combine = function combine(a, b) {\n    return [].concat(a, b);\n};\n\nvar maybeMap = function maybeMap(val, fn) {\n    if (isArray(val)) {\n        var mapped = [];\n        for (var i = 0; i < val.length; i += 1) {\n            mapped.push(fn(val[i]));\n        }\n        return mapped;\n    }\n    return fn(val);\n};\n\nmodule.exports = {\n    arrayToObject: arrayToObject,\n    assign: assign,\n    combine: combine,\n    compact: compact,\n    decode: decode,\n    encode: encode,\n    isBuffer: isBuffer,\n    isRegExp: isRegExp,\n    maybeMap: maybeMap,\n    merge: merge\n};\n", "'use strict';\n\nvar getSideChannel = require('side-channel');\nvar utils = require('./utils');\nvar formats = require('./formats');\nvar has = Object.prototype.hasOwnProperty;\n\nvar arrayPrefixGenerators = {\n    brackets: function brackets(prefix) {\n        return prefix + '[]';\n    },\n    comma: 'comma',\n    indices: function indices(prefix, key) {\n        return prefix + '[' + key + ']';\n    },\n    repeat: function repeat(prefix) {\n        return prefix;\n    }\n};\n\nvar isArray = Array.isArray;\nvar push = Array.prototype.push;\nvar pushToArray = function (arr, valueOrArray) {\n    push.apply(arr, isArray(valueOrArray) ? valueOrArray : [valueOrArray]);\n};\n\nvar toISO = Date.prototype.toISOString;\n\nvar defaultFormat = formats['default'];\nvar defaults = {\n    addQueryPrefix: false,\n    allowDots: false,\n    allowEmptyArrays: false,\n    arrayFormat: 'indices',\n    charset: 'utf-8',\n    charsetSentinel: false,\n    delimiter: '&',\n    encode: true,\n    encodeDotInKeys: false,\n    encoder: utils.encode,\n    encodeValuesOnly: false,\n    format: defaultFormat,\n    formatter: formats.formatters[defaultFormat],\n    // deprecated\n    indices: false,\n    serializeDate: function serializeDate(date) {\n        return toISO.call(date);\n    },\n    skipNulls: false,\n    strictNullHandling: false\n};\n\nvar isNonNullishPrimitive = function isNonNullishPrimitive(v) {\n    return typeof v === 'string'\n        || typeof v === 'number'\n        || typeof v === 'boolean'\n        || typeof v === 'symbol'\n        || typeof v === 'bigint';\n};\n\nvar sentinel = {};\n\nvar stringify = function stringify(\n    object,\n    prefix,\n    generateArrayPrefix,\n    commaRoundTrip,\n    allowEmptyArrays,\n    strictNullHandling,\n    skipNulls,\n    encodeDotInKeys,\n    encoder,\n    filter,\n    sort,\n    allowDots,\n    serializeDate,\n    format,\n    formatter,\n    encodeValuesOnly,\n    charset,\n    sideChannel\n) {\n    var obj = object;\n\n    var tmpSc = sideChannel;\n    var step = 0;\n    var findFlag = false;\n    while ((tmpSc = tmpSc.get(sentinel)) !== void undefined && !findFlag) {\n        // Where object last appeared in the ref tree\n        var pos = tmpSc.get(object);\n        step += 1;\n        if (typeof pos !== 'undefined') {\n            if (pos === step) {\n                throw new RangeError('Cyclic object value');\n            } else {\n                findFlag = true; // Break while\n            }\n        }\n        if (typeof tmpSc.get(sentinel) === 'undefined') {\n            step = 0;\n        }\n    }\n\n    if (typeof filter === 'function') {\n        obj = filter(prefix, obj);\n    } else if (obj instanceof Date) {\n        obj = serializeDate(obj);\n    } else if (generateArrayPrefix === 'comma' && isArray(obj)) {\n        obj = utils.maybeMap(obj, function (value) {\n            if (value instanceof Date) {\n                return serializeDate(value);\n            }\n            return value;\n        });\n    }\n\n    if (obj === null) {\n        if (strictNullHandling) {\n            return encoder && !encodeValuesOnly ? encoder(prefix, defaults.encoder, charset, 'key', format) : prefix;\n        }\n\n        obj = '';\n    }\n\n    if (isNonNullishPrimitive(obj) || utils.isBuffer(obj)) {\n        if (encoder) {\n            var keyValue = encodeValuesOnly ? prefix : encoder(prefix, defaults.encoder, charset, 'key', format);\n            return [formatter(keyValue) + '=' + formatter(encoder(obj, defaults.encoder, charset, 'value', format))];\n        }\n        return [formatter(prefix) + '=' + formatter(String(obj))];\n    }\n\n    var values = [];\n\n    if (typeof obj === 'undefined') {\n        return values;\n    }\n\n    var objKeys;\n    if (generateArrayPrefix === 'comma' && isArray(obj)) {\n        // we need to join elements in\n        if (encodeValuesOnly && encoder) {\n            obj = utils.maybeMap(obj, encoder);\n        }\n        objKeys = [{ value: obj.length > 0 ? obj.join(',') || null : void undefined }];\n    } else if (isArray(filter)) {\n        objKeys = filter;\n    } else {\n        var keys = Object.keys(obj);\n        objKeys = sort ? keys.sort(sort) : keys;\n    }\n\n    var encodedPrefix = encodeDotInKeys ? prefix.replace(/\\./g, '%2E') : prefix;\n\n    var adjustedPrefix = commaRoundTrip && isArray(obj) && obj.length === 1 ? encodedPrefix + '[]' : encodedPrefix;\n\n    if (allowEmptyArrays && isArray(obj) && obj.length === 0) {\n        return adjustedPrefix + '[]';\n    }\n\n    for (var j = 0; j < objKeys.length; ++j) {\n        var key = objKeys[j];\n        var value = typeof key === 'object' && typeof key.value !== 'undefined' ? key.value : obj[key];\n\n        if (skipNulls && value === null) {\n            continue;\n        }\n\n        var encodedKey = allowDots && encodeDotInKeys ? key.replace(/\\./g, '%2E') : key;\n        var keyPrefix = isArray(obj)\n            ? typeof generateArrayPrefix === 'function' ? generateArrayPrefix(adjustedPrefix, encodedKey) : adjustedPrefix\n            : adjustedPrefix + (allowDots ? '.' + encodedKey : '[' + encodedKey + ']');\n\n        sideChannel.set(object, step);\n        var valueSideChannel = getSideChannel();\n        valueSideChannel.set(sentinel, sideChannel);\n        pushToArray(values, stringify(\n            value,\n            keyPrefix,\n            generateArrayPrefix,\n            commaRoundTrip,\n            allowEmptyArrays,\n            strictNullHandling,\n            skipNulls,\n            encodeDotInKeys,\n            generateArrayPrefix === 'comma' && encodeValuesOnly && isArray(obj) ? null : encoder,\n            filter,\n            sort,\n            allowDots,\n            serializeDate,\n            format,\n            formatter,\n            encodeValuesOnly,\n            charset,\n            valueSideChannel\n        ));\n    }\n\n    return values;\n};\n\nvar normalizeStringifyOptions = function normalizeStringifyOptions(opts) {\n    if (!opts) {\n        return defaults;\n    }\n\n    if (typeof opts.allowEmptyArrays !== 'undefined' && typeof opts.allowEmptyArrays !== 'boolean') {\n        throw new TypeError('`allowEmptyArrays` option can only be `true` or `false`, when provided');\n    }\n\n    if (typeof opts.encodeDotInKeys !== 'undefined' && typeof opts.encodeDotInKeys !== 'boolean') {\n        throw new TypeError('`encodeDotInKeys` option can only be `true` or `false`, when provided');\n    }\n\n    if (opts.encoder !== null && typeof opts.encoder !== 'undefined' && typeof opts.encoder !== 'function') {\n        throw new TypeError('Encoder has to be a function.');\n    }\n\n    var charset = opts.charset || defaults.charset;\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n        throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');\n    }\n\n    var format = formats['default'];\n    if (typeof opts.format !== 'undefined') {\n        if (!has.call(formats.formatters, opts.format)) {\n            throw new TypeError('Unknown format option provided.');\n        }\n        format = opts.format;\n    }\n    var formatter = formats.formatters[format];\n\n    var filter = defaults.filter;\n    if (typeof opts.filter === 'function' || isArray(opts.filter)) {\n        filter = opts.filter;\n    }\n\n    var arrayFormat;\n    if (opts.arrayFormat in arrayPrefixGenerators) {\n        arrayFormat = opts.arrayFormat;\n    } else if ('indices' in opts) {\n        arrayFormat = opts.indices ? 'indices' : 'repeat';\n    } else {\n        arrayFormat = defaults.arrayFormat;\n    }\n\n    if ('commaRoundTrip' in opts && typeof opts.commaRoundTrip !== 'boolean') {\n        throw new TypeError('`commaRoundTrip` must be a boolean, or absent');\n    }\n\n    var allowDots = typeof opts.allowDots === 'undefined' ? opts.encodeDotInKeys === true ? true : defaults.allowDots : !!opts.allowDots;\n\n    return {\n        addQueryPrefix: typeof opts.addQueryPrefix === 'boolean' ? opts.addQueryPrefix : defaults.addQueryPrefix,\n        allowDots: allowDots,\n        allowEmptyArrays: typeof opts.allowEmptyArrays === 'boolean' ? !!opts.allowEmptyArrays : defaults.allowEmptyArrays,\n        arrayFormat: arrayFormat,\n        charset: charset,\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n        commaRoundTrip: opts.commaRoundTrip,\n        delimiter: typeof opts.delimiter === 'undefined' ? defaults.delimiter : opts.delimiter,\n        encode: typeof opts.encode === 'boolean' ? opts.encode : defaults.encode,\n        encodeDotInKeys: typeof opts.encodeDotInKeys === 'boolean' ? opts.encodeDotInKeys : defaults.encodeDotInKeys,\n        encoder: typeof opts.encoder === 'function' ? opts.encoder : defaults.encoder,\n        encodeValuesOnly: typeof opts.encodeValuesOnly === 'boolean' ? opts.encodeValuesOnly : defaults.encodeValuesOnly,\n        filter: filter,\n        format: format,\n        formatter: formatter,\n        serializeDate: typeof opts.serializeDate === 'function' ? opts.serializeDate : defaults.serializeDate,\n        skipNulls: typeof opts.skipNulls === 'boolean' ? opts.skipNulls : defaults.skipNulls,\n        sort: typeof opts.sort === 'function' ? opts.sort : null,\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling\n    };\n};\n\nmodule.exports = function (object, opts) {\n    var obj = object;\n    var options = normalizeStringifyOptions(opts);\n\n    var objKeys;\n    var filter;\n\n    if (typeof options.filter === 'function') {\n        filter = options.filter;\n        obj = filter('', obj);\n    } else if (isArray(options.filter)) {\n        filter = options.filter;\n        objKeys = filter;\n    }\n\n    var keys = [];\n\n    if (typeof obj !== 'object' || obj === null) {\n        return '';\n    }\n\n    var generateArrayPrefix = arrayPrefixGenerators[options.arrayFormat];\n    var commaRoundTrip = generateArrayPrefix === 'comma' && options.commaRoundTrip;\n\n    if (!objKeys) {\n        objKeys = Object.keys(obj);\n    }\n\n    if (options.sort) {\n        objKeys.sort(options.sort);\n    }\n\n    var sideChannel = getSideChannel();\n    for (var i = 0; i < objKeys.length; ++i) {\n        var key = objKeys[i];\n\n        if (options.skipNulls && obj[key] === null) {\n            continue;\n        }\n        pushToArray(keys, stringify(\n            obj[key],\n            key,\n            generateArrayPrefix,\n            commaRoundTrip,\n            options.allowEmptyArrays,\n            options.strictNullHandling,\n            options.skipNulls,\n            options.encodeDotInKeys,\n            options.encode ? options.encoder : null,\n            options.filter,\n            options.sort,\n            options.allowDots,\n            options.serializeDate,\n            options.format,\n            options.formatter,\n            options.encodeValuesOnly,\n            options.charset,\n            sideChannel\n        ));\n    }\n\n    var joined = keys.join(options.delimiter);\n    var prefix = options.addQueryPrefix === true ? '?' : '';\n\n    if (options.charsetSentinel) {\n        if (options.charset === 'iso-8859-1') {\n            // encodeURIComponent('&#10003;'), the \"numeric entity\" representation of a checkmark\n            prefix += 'utf8=%26%2310003%3B&';\n        } else {\n            // encodeURIComponent('\u2713')\n            prefix += 'utf8=%E2%9C%93&';\n        }\n    }\n\n    return joined.length > 0 ? prefix + joined : '';\n};\n", "'use strict';\n\nvar utils = require('./utils');\n\nvar has = Object.prototype.hasOwnProperty;\nvar isArray = Array.isArray;\n\nvar defaults = {\n    allowDots: false,\n    allowEmptyArrays: false,\n    allowPrototypes: false,\n    allowSparse: false,\n    arrayLimit: 20,\n    charset: 'utf-8',\n    charsetSentinel: false,\n    comma: false,\n    decodeDotInKeys: false,\n    decoder: utils.decode,\n    delimiter: '&',\n    depth: 5,\n    duplicates: 'combine',\n    ignoreQueryPrefix: false,\n    interpretNumericEntities: false,\n    parameterLimit: 1000,\n    parseArrays: true,\n    plainObjects: false,\n    strictDepth: false,\n    strictNullHandling: false\n};\n\nvar interpretNumericEntities = function (str) {\n    return str.replace(/&#(\\d+);/g, function ($0, numberStr) {\n        return String.fromCharCode(parseInt(numberStr, 10));\n    });\n};\n\nvar parseArrayValue = function (val, options) {\n    if (val && typeof val === 'string' && options.comma && val.indexOf(',') > -1) {\n        return val.split(',');\n    }\n\n    return val;\n};\n\n// This is what browsers will submit when the \u2713 character occurs in an\n// application/x-www-form-urlencoded body and the encoding of the page containing\n// the form is iso-8859-1, or when the submitted form has an accept-charset\n// attribute of iso-8859-1. Presumably also with other charsets that do not contain\n// the \u2713 character, such as us-ascii.\nvar isoSentinel = 'utf8=%26%2310003%3B'; // encodeURIComponent('&#10003;')\n\n// These are the percent-encoded utf-8 octets representing a checkmark, indicating that the request actually is utf-8 encoded.\nvar charsetSentinel = 'utf8=%E2%9C%93'; // encodeURIComponent('\u2713')\n\nvar parseValues = function parseQueryStringValues(str, options) {\n    var obj = { __proto__: null };\n\n    var cleanStr = options.ignoreQueryPrefix ? str.replace(/^\\?/, '') : str;\n    cleanStr = cleanStr.replace(/%5B/gi, '[').replace(/%5D/gi, ']');\n    var limit = options.parameterLimit === Infinity ? undefined : options.parameterLimit;\n    var parts = cleanStr.split(options.delimiter, limit);\n    var skipIndex = -1; // Keep track of where the utf8 sentinel was found\n    var i;\n\n    var charset = options.charset;\n    if (options.charsetSentinel) {\n        for (i = 0; i < parts.length; ++i) {\n            if (parts[i].indexOf('utf8=') === 0) {\n                if (parts[i] === charsetSentinel) {\n                    charset = 'utf-8';\n                } else if (parts[i] === isoSentinel) {\n                    charset = 'iso-8859-1';\n                }\n                skipIndex = i;\n                i = parts.length; // The eslint settings do not allow break;\n            }\n        }\n    }\n\n    for (i = 0; i < parts.length; ++i) {\n        if (i === skipIndex) {\n            continue;\n        }\n        var part = parts[i];\n\n        var bracketEqualsPos = part.indexOf(']=');\n        var pos = bracketEqualsPos === -1 ? part.indexOf('=') : bracketEqualsPos + 1;\n\n        var key, val;\n        if (pos === -1) {\n            key = options.decoder(part, defaults.decoder, charset, 'key');\n            val = options.strictNullHandling ? null : '';\n        } else {\n            key = options.decoder(part.slice(0, pos), defaults.decoder, charset, 'key');\n            val = utils.maybeMap(\n                parseArrayValue(part.slice(pos + 1), options),\n                function (encodedVal) {\n                    return options.decoder(encodedVal, defaults.decoder, charset, 'value');\n                }\n            );\n        }\n\n        if (val && options.interpretNumericEntities && charset === 'iso-8859-1') {\n            val = interpretNumericEntities(val);\n        }\n\n        if (part.indexOf('[]=') > -1) {\n            val = isArray(val) ? [val] : val;\n        }\n\n        var existing = has.call(obj, key);\n        if (existing && options.duplicates === 'combine') {\n            obj[key] = utils.combine(obj[key], val);\n        } else if (!existing || options.duplicates === 'last') {\n            obj[key] = val;\n        }\n    }\n\n    return obj;\n};\n\nvar parseObject = function (chain, val, options, valuesParsed) {\n    var leaf = valuesParsed ? val : parseArrayValue(val, options);\n\n    for (var i = chain.length - 1; i >= 0; --i) {\n        var obj;\n        var root = chain[i];\n\n        if (root === '[]' && options.parseArrays) {\n            obj = options.allowEmptyArrays && (leaf === '' || (options.strictNullHandling && leaf === null))\n                ? []\n                : [].concat(leaf);\n        } else {\n            obj = options.plainObjects ? Object.create(null) : {};\n            var cleanRoot = root.charAt(0) === '[' && root.charAt(root.length - 1) === ']' ? root.slice(1, -1) : root;\n            var decodedRoot = options.decodeDotInKeys ? cleanRoot.replace(/%2E/g, '.') : cleanRoot;\n            var index = parseInt(decodedRoot, 10);\n            if (!options.parseArrays && decodedRoot === '') {\n                obj = { 0: leaf };\n            } else if (\n                !isNaN(index)\n                && root !== decodedRoot\n                && String(index) === decodedRoot\n                && index >= 0\n                && (options.parseArrays && index <= options.arrayLimit)\n            ) {\n                obj = [];\n                obj[index] = leaf;\n            } else if (decodedRoot !== '__proto__') {\n                obj[decodedRoot] = leaf;\n            }\n        }\n\n        leaf = obj;\n    }\n\n    return leaf;\n};\n\nvar parseKeys = function parseQueryStringKeys(givenKey, val, options, valuesParsed) {\n    if (!givenKey) {\n        return;\n    }\n\n    // Transform dot notation to bracket notation\n    var key = options.allowDots ? givenKey.replace(/\\.([^.[]+)/g, '[$1]') : givenKey;\n\n    // The regex chunks\n\n    var brackets = /(\\[[^[\\]]*])/;\n    var child = /(\\[[^[\\]]*])/g;\n\n    // Get the parent\n\n    var segment = options.depth > 0 && brackets.exec(key);\n    var parent = segment ? key.slice(0, segment.index) : key;\n\n    // Stash the parent if it exists\n\n    var keys = [];\n    if (parent) {\n        // If we aren't using plain objects, optionally prefix keys that would overwrite object prototype properties\n        if (!options.plainObjects && has.call(Object.prototype, parent)) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n\n        keys.push(parent);\n    }\n\n    // Loop through children appending to the array until we hit depth\n\n    var i = 0;\n    while (options.depth > 0 && (segment = child.exec(key)) !== null && i < options.depth) {\n        i += 1;\n        if (!options.plainObjects && has.call(Object.prototype, segment[1].slice(1, -1))) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n        keys.push(segment[1]);\n    }\n\n    // If there's a remainder, check strictDepth option for throw, else just add whatever is left\n\n    if (segment) {\n        if (options.strictDepth === true) {\n            throw new RangeError('Input depth exceeded depth option of ' + options.depth + ' and strictDepth is true');\n        }\n        keys.push('[' + key.slice(segment.index) + ']');\n    }\n\n    return parseObject(keys, val, options, valuesParsed);\n};\n\nvar normalizeParseOptions = function normalizeParseOptions(opts) {\n    if (!opts) {\n        return defaults;\n    }\n\n    if (typeof opts.allowEmptyArrays !== 'undefined' && typeof opts.allowEmptyArrays !== 'boolean') {\n        throw new TypeError('`allowEmptyArrays` option can only be `true` or `false`, when provided');\n    }\n\n    if (typeof opts.decodeDotInKeys !== 'undefined' && typeof opts.decodeDotInKeys !== 'boolean') {\n        throw new TypeError('`decodeDotInKeys` option can only be `true` or `false`, when provided');\n    }\n\n    if (opts.decoder !== null && typeof opts.decoder !== 'undefined' && typeof opts.decoder !== 'function') {\n        throw new TypeError('Decoder has to be a function.');\n    }\n\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n        throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');\n    }\n    var charset = typeof opts.charset === 'undefined' ? defaults.charset : opts.charset;\n\n    var duplicates = typeof opts.duplicates === 'undefined' ? defaults.duplicates : opts.duplicates;\n\n    if (duplicates !== 'combine' && duplicates !== 'first' && duplicates !== 'last') {\n        throw new TypeError('The duplicates option must be either combine, first, or last');\n    }\n\n    var allowDots = typeof opts.allowDots === 'undefined' ? opts.decodeDotInKeys === true ? true : defaults.allowDots : !!opts.allowDots;\n\n    return {\n        allowDots: allowDots,\n        allowEmptyArrays: typeof opts.allowEmptyArrays === 'boolean' ? !!opts.allowEmptyArrays : defaults.allowEmptyArrays,\n        allowPrototypes: typeof opts.allowPrototypes === 'boolean' ? opts.allowPrototypes : defaults.allowPrototypes,\n        allowSparse: typeof opts.allowSparse === 'boolean' ? opts.allowSparse : defaults.allowSparse,\n        arrayLimit: typeof opts.arrayLimit === 'number' ? opts.arrayLimit : defaults.arrayLimit,\n        charset: charset,\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n        comma: typeof opts.comma === 'boolean' ? opts.comma : defaults.comma,\n        decodeDotInKeys: typeof opts.decodeDotInKeys === 'boolean' ? opts.decodeDotInKeys : defaults.decodeDotInKeys,\n        decoder: typeof opts.decoder === 'function' ? opts.decoder : defaults.decoder,\n        delimiter: typeof opts.delimiter === 'string' || utils.isRegExp(opts.delimiter) ? opts.delimiter : defaults.delimiter,\n        // eslint-disable-next-line no-implicit-coercion, no-extra-parens\n        depth: (typeof opts.depth === 'number' || opts.depth === false) ? +opts.depth : defaults.depth,\n        duplicates: duplicates,\n        ignoreQueryPrefix: opts.ignoreQueryPrefix === true,\n        interpretNumericEntities: typeof opts.interpretNumericEntities === 'boolean' ? opts.interpretNumericEntities : defaults.interpretNumericEntities,\n        parameterLimit: typeof opts.parameterLimit === 'number' ? opts.parameterLimit : defaults.parameterLimit,\n        parseArrays: opts.parseArrays !== false,\n        plainObjects: typeof opts.plainObjects === 'boolean' ? opts.plainObjects : defaults.plainObjects,\n        strictDepth: typeof opts.strictDepth === 'boolean' ? !!opts.strictDepth : defaults.strictDepth,\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling\n    };\n};\n\nmodule.exports = function (str, opts) {\n    var options = normalizeParseOptions(opts);\n\n    if (str === '' || str === null || typeof str === 'undefined') {\n        return options.plainObjects ? Object.create(null) : {};\n    }\n\n    var tempObj = typeof str === 'string' ? parseValues(str, options) : str;\n    var obj = options.plainObjects ? Object.create(null) : {};\n\n    // Iterate over the keys and setup the new object\n\n    var keys = Object.keys(tempObj);\n    for (var i = 0; i < keys.length; ++i) {\n        var key = keys[i];\n        var newObj = parseKeys(key, tempObj[key], options, typeof str === 'string');\n        obj = utils.merge(obj, newObj, options);\n    }\n\n    if (options.allowSparse === true) {\n        return obj;\n    }\n\n    return utils.compact(obj);\n};\n", "'use strict';\n\nvar stringify = require('./stringify');\nvar parse = require('./parse');\nvar formats = require('./formats');\n\nmodule.exports = {\n    formats: formats,\n    parse: parse,\n    stringify: stringify\n};\n", "/*!\n * MIT License\n * \n * Copyright (c) 2017-2024 Peculiar Ventures, LLC\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * \n */\n\n'use strict';\n\nconst ARRAY_BUFFER_NAME = \"[object ArrayBuffer]\";\nclass BufferSourceConverter {\n    static isArrayBuffer(data) {\n        return Object.prototype.toString.call(data) === ARRAY_BUFFER_NAME;\n    }\n    static toArrayBuffer(data) {\n        if (this.isArrayBuffer(data)) {\n            return data;\n        }\n        if (data.byteLength === data.buffer.byteLength) {\n            return data.buffer;\n        }\n        if (data.byteOffset === 0 && data.byteLength === data.buffer.byteLength) {\n            return data.buffer;\n        }\n        return this.toUint8Array(data.buffer)\n            .slice(data.byteOffset, data.byteOffset + data.byteLength)\n            .buffer;\n    }\n    static toUint8Array(data) {\n        return this.toView(data, Uint8Array);\n    }\n    static toView(data, type) {\n        if (data.constructor === type) {\n            return data;\n        }\n        if (this.isArrayBuffer(data)) {\n            return new type(data);\n        }\n        if (this.isArrayBufferView(data)) {\n            return new type(data.buffer, data.byteOffset, data.byteLength);\n        }\n        throw new TypeError(\"The provided value is not of type '(ArrayBuffer or ArrayBufferView)'\");\n    }\n    static isBufferSource(data) {\n        return this.isArrayBufferView(data)\n            || this.isArrayBuffer(data);\n    }\n    static isArrayBufferView(data) {\n        return ArrayBuffer.isView(data)\n            || (data && this.isArrayBuffer(data.buffer));\n    }\n    static isEqual(a, b) {\n        const aView = BufferSourceConverter.toUint8Array(a);\n        const bView = BufferSourceConverter.toUint8Array(b);\n        if (aView.length !== bView.byteLength) {\n            return false;\n        }\n        for (let i = 0; i < aView.length; i++) {\n            if (aView[i] !== bView[i]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    static concat(...args) {\n        let buffers;\n        if (Array.isArray(args[0]) && !(args[1] instanceof Function)) {\n            buffers = args[0];\n        }\n        else if (Array.isArray(args[0]) && args[1] instanceof Function) {\n            buffers = args[0];\n        }\n        else {\n            if (args[args.length - 1] instanceof Function) {\n                buffers = args.slice(0, args.length - 1);\n            }\n            else {\n                buffers = args;\n            }\n        }\n        let size = 0;\n        for (const buffer of buffers) {\n            size += buffer.byteLength;\n        }\n        const res = new Uint8Array(size);\n        let offset = 0;\n        for (const buffer of buffers) {\n            const view = this.toUint8Array(buffer);\n            res.set(view, offset);\n            offset += view.length;\n        }\n        if (args[args.length - 1] instanceof Function) {\n            return this.toView(res, args[args.length - 1]);\n        }\n        return res.buffer;\n    }\n}\n\nconst STRING_TYPE = \"string\";\nconst HEX_REGEX = /^[0-9a-f\\s]+$/i;\nconst BASE64_REGEX = /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/;\nconst BASE64URL_REGEX = /^[a-zA-Z0-9-_]+$/;\nclass Utf8Converter {\n    static fromString(text) {\n        const s = unescape(encodeURIComponent(text));\n        const uintArray = new Uint8Array(s.length);\n        for (let i = 0; i < s.length; i++) {\n            uintArray[i] = s.charCodeAt(i);\n        }\n        return uintArray.buffer;\n    }\n    static toString(buffer) {\n        const buf = BufferSourceConverter.toUint8Array(buffer);\n        let encodedString = \"\";\n        for (let i = 0; i < buf.length; i++) {\n            encodedString += String.fromCharCode(buf[i]);\n        }\n        const decodedString = decodeURIComponent(escape(encodedString));\n        return decodedString;\n    }\n}\nclass Utf16Converter {\n    static toString(buffer, littleEndian = false) {\n        const arrayBuffer = BufferSourceConverter.toArrayBuffer(buffer);\n        const dataView = new DataView(arrayBuffer);\n        let res = \"\";\n        for (let i = 0; i < arrayBuffer.byteLength; i += 2) {\n            const code = dataView.getUint16(i, littleEndian);\n            res += String.fromCharCode(code);\n        }\n        return res;\n    }\n    static fromString(text, littleEndian = false) {\n        const res = new ArrayBuffer(text.length * 2);\n        const dataView = new DataView(res);\n        for (let i = 0; i < text.length; i++) {\n            dataView.setUint16(i * 2, text.charCodeAt(i), littleEndian);\n        }\n        return res;\n    }\n}\nclass Convert {\n    static isHex(data) {\n        return typeof data === STRING_TYPE\n            && HEX_REGEX.test(data);\n    }\n    static isBase64(data) {\n        return typeof data === STRING_TYPE\n            && BASE64_REGEX.test(data);\n    }\n    static isBase64Url(data) {\n        return typeof data === STRING_TYPE\n            && BASE64URL_REGEX.test(data);\n    }\n    static ToString(buffer, enc = \"utf8\") {\n        const buf = BufferSourceConverter.toUint8Array(buffer);\n        switch (enc.toLowerCase()) {\n            case \"utf8\":\n                return this.ToUtf8String(buf);\n            case \"binary\":\n                return this.ToBinary(buf);\n            case \"hex\":\n                return this.ToHex(buf);\n            case \"base64\":\n                return this.ToBase64(buf);\n            case \"base64url\":\n                return this.ToBase64Url(buf);\n            case \"utf16le\":\n                return Utf16Converter.toString(buf, true);\n            case \"utf16\":\n            case \"utf16be\":\n                return Utf16Converter.toString(buf);\n            default:\n                throw new Error(`Unknown type of encoding '${enc}'`);\n        }\n    }\n    static FromString(str, enc = \"utf8\") {\n        if (!str) {\n            return new ArrayBuffer(0);\n        }\n        switch (enc.toLowerCase()) {\n            case \"utf8\":\n                return this.FromUtf8String(str);\n            case \"binary\":\n                return this.FromBinary(str);\n            case \"hex\":\n                return this.FromHex(str);\n            case \"base64\":\n                return this.FromBase64(str);\n            case \"base64url\":\n                return this.FromBase64Url(str);\n            case \"utf16le\":\n                return Utf16Converter.fromString(str, true);\n            case \"utf16\":\n            case \"utf16be\":\n                return Utf16Converter.fromString(str);\n            default:\n                throw new Error(`Unknown type of encoding '${enc}'`);\n        }\n    }\n    static ToBase64(buffer) {\n        const buf = BufferSourceConverter.toUint8Array(buffer);\n        if (typeof btoa !== \"undefined\") {\n            const binary = this.ToString(buf, \"binary\");\n            return btoa(binary);\n        }\n        else {\n            return Buffer.from(buf).toString(\"base64\");\n        }\n    }\n    static FromBase64(base64) {\n        const formatted = this.formatString(base64);\n        if (!formatted) {\n            return new ArrayBuffer(0);\n        }\n        if (!Convert.isBase64(formatted)) {\n            throw new TypeError(\"Argument 'base64Text' is not Base64 encoded\");\n        }\n        if (typeof atob !== \"undefined\") {\n            return this.FromBinary(atob(formatted));\n        }\n        else {\n            return new Uint8Array(Buffer.from(formatted, \"base64\")).buffer;\n        }\n    }\n    static FromBase64Url(base64url) {\n        const formatted = this.formatString(base64url);\n        if (!formatted) {\n            return new ArrayBuffer(0);\n        }\n        if (!Convert.isBase64Url(formatted)) {\n            throw new TypeError(\"Argument 'base64url' is not Base64Url encoded\");\n        }\n        return this.FromBase64(this.Base64Padding(formatted.replace(/\\-/g, \"+\").replace(/\\_/g, \"/\")));\n    }\n    static ToBase64Url(data) {\n        return this.ToBase64(data).replace(/\\+/g, \"-\").replace(/\\//g, \"_\").replace(/\\=/g, \"\");\n    }\n    static FromUtf8String(text, encoding = Convert.DEFAULT_UTF8_ENCODING) {\n        switch (encoding) {\n            case \"ascii\":\n                return this.FromBinary(text);\n            case \"utf8\":\n                return Utf8Converter.fromString(text);\n            case \"utf16\":\n            case \"utf16be\":\n                return Utf16Converter.fromString(text);\n            case \"utf16le\":\n            case \"usc2\":\n                return Utf16Converter.fromString(text, true);\n            default:\n                throw new Error(`Unknown type of encoding '${encoding}'`);\n        }\n    }\n    static ToUtf8String(buffer, encoding = Convert.DEFAULT_UTF8_ENCODING) {\n        switch (encoding) {\n            case \"ascii\":\n                return this.ToBinary(buffer);\n            case \"utf8\":\n                return Utf8Converter.toString(buffer);\n            case \"utf16\":\n            case \"utf16be\":\n                return Utf16Converter.toString(buffer);\n            case \"utf16le\":\n            case \"usc2\":\n                return Utf16Converter.toString(buffer, true);\n            default:\n                throw new Error(`Unknown type of encoding '${encoding}'`);\n        }\n    }\n    static FromBinary(text) {\n        const stringLength = text.length;\n        const resultView = new Uint8Array(stringLength);\n        for (let i = 0; i < stringLength; i++) {\n            resultView[i] = text.charCodeAt(i);\n        }\n        return resultView.buffer;\n    }\n    static ToBinary(buffer) {\n        const buf = BufferSourceConverter.toUint8Array(buffer);\n        let res = \"\";\n        for (let i = 0; i < buf.length; i++) {\n            res += String.fromCharCode(buf[i]);\n        }\n        return res;\n    }\n    static ToHex(buffer) {\n        const buf = BufferSourceConverter.toUint8Array(buffer);\n        let result = \"\";\n        const len = buf.length;\n        for (let i = 0; i < len; i++) {\n            const byte = buf[i];\n            if (byte < 16) {\n                result += \"0\";\n            }\n            result += byte.toString(16);\n        }\n        return result;\n    }\n    static FromHex(hexString) {\n        let formatted = this.formatString(hexString);\n        if (!formatted) {\n            return new ArrayBuffer(0);\n        }\n        if (!Convert.isHex(formatted)) {\n            throw new TypeError(\"Argument 'hexString' is not HEX encoded\");\n        }\n        if (formatted.length % 2) {\n            formatted = `0${formatted}`;\n        }\n        const res = new Uint8Array(formatted.length / 2);\n        for (let i = 0; i < formatted.length; i = i + 2) {\n            const c = formatted.slice(i, i + 2);\n            res[i / 2] = parseInt(c, 16);\n        }\n        return res.buffer;\n    }\n    static ToUtf16String(buffer, littleEndian = false) {\n        return Utf16Converter.toString(buffer, littleEndian);\n    }\n    static FromUtf16String(text, littleEndian = false) {\n        return Utf16Converter.fromString(text, littleEndian);\n    }\n    static Base64Padding(base64) {\n        const padCount = 4 - (base64.length % 4);\n        if (padCount < 4) {\n            for (let i = 0; i < padCount; i++) {\n                base64 += \"=\";\n            }\n        }\n        return base64;\n    }\n    static formatString(data) {\n        return (data === null || data === void 0 ? void 0 : data.replace(/[\\n\\r\\t ]/g, \"\")) || \"\";\n    }\n}\nConvert.DEFAULT_UTF8_ENCODING = \"utf8\";\n\nfunction assign(target, ...sources) {\n    const res = arguments[0];\n    for (let i = 1; i < arguments.length; i++) {\n        const obj = arguments[i];\n        for (const prop in obj) {\n            res[prop] = obj[prop];\n        }\n    }\n    return res;\n}\nfunction combine(...buf) {\n    const totalByteLength = buf.map((item) => item.byteLength).reduce((prev, cur) => prev + cur);\n    const res = new Uint8Array(totalByteLength);\n    let currentPos = 0;\n    buf.map((item) => new Uint8Array(item)).forEach((arr) => {\n        for (const item2 of arr) {\n            res[currentPos++] = item2;\n        }\n    });\n    return res.buffer;\n}\nfunction isEqual(bytes1, bytes2) {\n    if (!(bytes1 && bytes2)) {\n        return false;\n    }\n    if (bytes1.byteLength !== bytes2.byteLength) {\n        return false;\n    }\n    const b1 = new Uint8Array(bytes1);\n    const b2 = new Uint8Array(bytes2);\n    for (let i = 0; i < bytes1.byteLength; i++) {\n        if (b1[i] !== b2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n\nexports.BufferSourceConverter = BufferSourceConverter;\nexports.Convert = Convert;\nexports.assign = assign;\nexports.combine = combine;\nexports.isEqual = isEqual;\n", "// This loads all middlewares exposed on the middleware object and then starts\n// the invocation chain. The big idea is that we can add these to the middleware\n// export dynamically through wrangler, or we can potentially let users directly\n// add them as a sort of \"plugin\" system.\n\nimport ENTRY, { __INTERNAL_WRANGLER_MIDDLEWARE__ } from \"D:\\\\Documents\\\\Croissant\\\\API\\\\.wrangler\\\\tmp\\\\bundle-njJEzx\\\\middleware-insertion-facade.js\";\nimport { __facade_invoke__, __facade_register__, Dispatcher } from \"D:\\\\Users\\\\Lucas\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\common.ts\";\nimport type { WorkerEntrypointConstructor } from \"D:\\\\Documents\\\\Croissant\\\\API\\\\.wrangler\\\\tmp\\\\bundle-njJEzx\\\\middleware-insertion-facade.js\";\n\n// Preserve all the exports from the worker\nexport * from \"D:\\\\Documents\\\\Croissant\\\\API\\\\.wrangler\\\\tmp\\\\bundle-njJEzx\\\\middleware-insertion-facade.js\";\n\nclass __Facade_ScheduledController__ implements ScheduledController {\n\treadonly #noRetry: ScheduledController[\"noRetry\"];\n\n\tconstructor(\n\t\treadonly scheduledTime: number,\n\t\treadonly cron: string,\n\t\tnoRetry: ScheduledController[\"noRetry\"]\n\t) {\n\t\tthis.#noRetry = noRetry;\n\t}\n\n\tnoRetry() {\n\t\tif (!(this instanceof __Facade_ScheduledController__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#noRetry();\n\t}\n}\n\nfunction wrapExportedHandler(worker: ExportedHandler): ExportedHandler {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn worker;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\tconst fetchDispatcher: ExportedHandlerFetchHandler = function (\n\t\trequest,\n\t\tenv,\n\t\tctx\n\t) {\n\t\tif (worker.fetch === undefined) {\n\t\t\tthrow new Error(\"Handler does not export a fetch() function.\");\n\t\t}\n\t\treturn worker.fetch(request, env, ctx);\n\t};\n\n\treturn {\n\t\t...worker,\n\t\tfetch(request, env, ctx) {\n\t\t\tconst dispatcher: Dispatcher = function (type, init) {\n\t\t\t\tif (type === \"scheduled\" && worker.scheduled !== undefined) {\n\t\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\t\tDate.now(),\n\t\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t\t() => {}\n\t\t\t\t\t);\n\t\t\t\t\treturn worker.scheduled(controller, env, ctx);\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn __facade_invoke__(request, env, ctx, dispatcher, fetchDispatcher);\n\t\t},\n\t};\n}\n\nfunction wrapWorkerEntrypoint(\n\tklass: WorkerEntrypointConstructor\n): WorkerEntrypointConstructor {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn klass;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\t// `extend`ing `klass` here so other RPC methods remain callable\n\treturn class extends klass {\n\t\t#fetchDispatcher: ExportedHandlerFetchHandler<Record<string, unknown>> = (\n\t\t\trequest,\n\t\t\tenv,\n\t\t\tctx\n\t\t) => {\n\t\t\tthis.env = env;\n\t\t\tthis.ctx = ctx;\n\t\t\tif (super.fetch === undefined) {\n\t\t\t\tthrow new Error(\"Entrypoint class does not define a fetch() function.\");\n\t\t\t}\n\t\t\treturn super.fetch(request);\n\t\t};\n\n\t\t#dispatcher: Dispatcher = (type, init) => {\n\t\t\tif (type === \"scheduled\" && super.scheduled !== undefined) {\n\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\tDate.now(),\n\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t() => {}\n\t\t\t\t);\n\t\t\t\treturn super.scheduled(controller);\n\t\t\t}\n\t\t};\n\n\t\tfetch(request: Request<unknown, IncomingRequestCfProperties>) {\n\t\t\treturn __facade_invoke__(\n\t\t\t\trequest,\n\t\t\t\tthis.env,\n\t\t\t\tthis.ctx,\n\t\t\t\tthis.#dispatcher,\n\t\t\t\tthis.#fetchDispatcher\n\t\t\t);\n\t\t}\n\t};\n}\n\nlet WRAPPED_ENTRY: ExportedHandler | WorkerEntrypointConstructor | undefined;\nif (typeof ENTRY === \"object\") {\n\tWRAPPED_ENTRY = wrapExportedHandler(ENTRY);\n} else if (typeof ENTRY === \"function\") {\n\tWRAPPED_ENTRY = wrapWorkerEntrypoint(ENTRY);\n}\nexport default WRAPPED_ENTRY;\n", "\t\t\t\timport worker, * as OTHER_EXPORTS from \"D:\\\\Documents\\\\Croissant\\\\API\\\\src\\\\worker.ts\";\n\t\t\t\timport * as __MIDDLEWARE_0__ from \"D:\\\\Users\\\\Lucas\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\middleware-ensure-req-body-drained.ts\";\nimport * as __MIDDLEWARE_1__ from \"D:\\\\Users\\\\Lucas\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\middleware-miniflare3-json-error.ts\";\n\n\t\t\t\texport * from \"D:\\\\Documents\\\\Croissant\\\\API\\\\src\\\\worker.ts\";\n\t\t\t\tconst MIDDLEWARE_TEST_INJECT = \"__INJECT_FOR_TESTING_WRANGLER_MIDDLEWARE__\";\n\t\t\t\texport const __INTERNAL_WRANGLER_MIDDLEWARE__ = [\n\t\t\t\t\t\n\t\t\t\t\t__MIDDLEWARE_0__.default,__MIDDLEWARE_1__.default\n\t\t\t\t]\n\t\t\t\texport default worker;", "// Main worker entry point for Cloudflare Workers\r\nimport { app } from './app';\r\n\r\nexport default app;\r\n\r\n", "import 'reflect-metadata';\r\nimport container from './container'; // Use the existing container\r\nimport { AuthenticatorController } from './controllers/AuthenticatorController';\r\nimport { BuyOrderController } from './controllers/BuyOrderController';\r\nimport { DescribeController } from './controllers/DescribeController';\r\nimport { Games } from './controllers/GameController';\r\nimport { GameGifts } from './controllers/GameGiftController';\r\nimport { Inventories } from './controllers/InventoryController';\r\nimport { Items } from './controllers/ItemController';\r\nimport { Lobbies } from './controllers/LobbyController';\r\nimport { LogController } from './controllers/LogController';\r\nimport { MarketListingController } from './controllers/MarketListingController';\r\nimport { OAuth2Controller } from './controllers/OAuth2Controller';\r\nimport { SearchController } from './controllers/SearchController';\r\nimport { StripeController } from './controllers/StripeController';\r\nimport { Studios } from './controllers/StudioController';\r\nimport { Trades } from './controllers/TradeController';\r\nimport { Users } from './controllers/UserController';\r\nimport { WebAuthns } from './controllers/WebAuthnController';\r\nimport { InversifyHonoServer } from './hono-inversify/InversifyHonoServer';\r\n\r\nconsole.log('Setting up container...');\r\n\r\n// Bind controllers to the existing container\r\ncontainer.bind<Users>(Users).toSelf().inTransientScope();\r\ncontainer.bind<Items>(Items).toSelf().inTransientScope();\r\ncontainer.bind<Inventories>(Inventories).toSelf().inTransientScope();\r\ncontainer.bind<GameGifts>(GameGifts).toSelf().inTransientScope();\r\ncontainer.bind<Games>(Games).toSelf().inTransientScope();\r\ncontainer.bind<DescribeController>(DescribeController).toSelf().inTransientScope();\r\ncontainer.bind<BuyOrderController>(BuyOrderController).toSelf().inTransientScope();\r\ncontainer.bind<AuthenticatorController>(AuthenticatorController).toSelf().inTransientScope();\r\ncontainer.bind<WebAuthns>(WebAuthns).toSelf().inTransientScope();\r\ncontainer.bind<Trades>(Trades).toSelf().inTransientScope();\r\ncontainer.bind<Studios>(Studios).toSelf().inTransientScope();\r\ncontainer.bind<StripeController>(StripeController).toSelf().inTransientScope();\r\ncontainer.bind<SearchController>(SearchController).toSelf().inTransientScope();\r\ncontainer.bind<OAuth2Controller>(OAuth2Controller).toSelf().inTransientScope();\r\ncontainer.bind<MarketListingController>(MarketListingController).toSelf().inTransientScope();\r\ncontainer.bind<LogController>(LogController).toSelf().inTransientScope();\r\ncontainer.bind<Lobbies>(Lobbies).toSelf().inTransientScope();\r\n\r\nconsole.log('Container setup complete');\r\n\r\n// Create the Hono-Inversify server\r\nconst server = new InversifyHonoServer(container);\r\n\r\n// Optional configuration (global middlewares, etc.)\r\nserver.setConfig((app) => {\r\n  // CORS middleware\r\n  app.use('*', async (c, next) => {\r\n    c.res.headers.set('Access-Control-Allow-Origin', '*');\r\n    c.res.headers.set('Access-Control-Allow-Methods', 'GET, POST, PUT, DELETE, PATCH, OPTIONS');\r\n    c.res.headers.set('Access-Control-Allow-Headers', 'Content-Type, Authorization');\r\n    \r\n    if (c.req.method === 'OPTIONS') {\r\n      return c.text('', 200);\r\n    }\r\n    \r\n    await next();\r\n  });\r\n});\r\n\r\nconsole.log('Building app...');\r\n\r\n// Build the application\r\nexport const app = server.build();\r\n\r\nconsole.log('App built successfully');\r\n\r\n\r\n", "import { Container } from 'inversify';\n\nimport { BadgeService, IBadgeService } from './services/BadgeService';\nimport { BuyOrderService, IBuyOrderService } from './services/BuyOrderService';\nimport { DatabaseService, IDatabaseService } from './services/DatabaseService';\nimport { GameGiftService, IGameGiftService } from './services/GameGiftService';\nimport { GameService, IGameService } from './services/GameService';\nimport { GameViewService, IGameViewService } from './services/GameViewService';\nimport { IInventoryService, InventoryService } from './services/InventoryService';\nimport { IItemService, ItemService } from './services/ItemService';\nimport { ILobbyService, LobbyService } from './services/LobbyService';\nimport { ILogService, LogService } from './services/LogService';\nimport { IMailService, MailService } from './services/MailService';\nimport { IMarketListingService, MarketListingService } from './services/MarketListingService';\nimport { IOAuth2Service, OAuth2Service } from './services/OAuth2Service';\nimport { ISteamOAuthService, SteamOAuthService } from './services/SteamOAuthService';\nimport { IStudioService, StudioService } from './services/StudioService';\nimport { ITradeService, TradeService } from './services/TradeService';\nimport { IUserService, UserService } from './services/UserService';\n\nimport 'reflect-metadata';\n\nconst container = new Container();\n\ncontainer.bind<IDatabaseService>('DatabaseService').to(DatabaseService).inSingletonScope();\ncontainer.bind<IInventoryService>('InventoryService').to(InventoryService).inSingletonScope();\ncontainer.bind<IItemService>('ItemService').to(ItemService).inSingletonScope();\ncontainer.bind<IUserService>('UserService').to(UserService).inSingletonScope();\ncontainer.bind<ILobbyService>('LobbyService').to(LobbyService).inSingletonScope();\ncontainer.bind<ITradeService>('TradeService').to(TradeService).inSingletonScope();\ncontainer.bind<IGameService>('GameService').to(GameService).inSingletonScope();\ncontainer.bind<IOAuth2Service>('OAuth2Service').to(OAuth2Service).inSingletonScope();\ncontainer.bind<ISteamOAuthService>('SteamOAuthService').to(SteamOAuthService).inSingletonScope();\ncontainer.bind<IMailService>('MailService').to(MailService).inSingletonScope();\ncontainer.bind<IStudioService>('StudioService').to(StudioService).inSingletonScope();\ncontainer.bind<ILogService>('LogService').to(LogService).inSingletonScope();\ncontainer.bind<IGameGiftService>('GameGiftService').to(GameGiftService).inSingletonScope();\ncontainer.bind<IMarketListingService>('MarketListingService').to(MarketListingService).inSingletonScope();\ncontainer.bind<IBuyOrderService>('BuyOrderService').to(BuyOrderService).inSingletonScope();\ncontainer.bind<IBadgeService>('BadgeService').to(BadgeService).inSingletonScope();\ncontainer.bind<IGameViewService>('GameViewService').to(GameViewService).inSingletonScope();\n\nexport default container;\n\n", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "import { inject, injectable } from 'inversify';\nimport { Badge, BadgeType } from '../interfaces/Badge';\nimport { BadgeRepository } from '../repositories/BadgeRepository';\nimport { IDatabaseService } from './DatabaseService';\n\nexport interface IBadgeService {\n  getActiveBadgesForGame(gameId: string): Promise<Badge[]>;\n  addBadgeToGame(gameId: string, badgeName: string): Promise<void>;\n  removeExpiredBadges(): Promise<void>;\n  getBadgeTypes(): Promise<BadgeType[]>;\n}\n\n@injectable()\nexport class BadgeService implements IBadgeService {\n  private badgeRepository: BadgeRepository;\n\n  constructor(@inject('DatabaseService') private databaseService: IDatabaseService) {\n    this.badgeRepository = new BadgeRepository(this.databaseService);\n  }\n\n  async getActiveBadgesForGame(gameId: string): Promise<Badge[]> {\n    return this.badgeRepository.getActiveBadgesForGame(gameId);\n  }\n\n  async addBadgeToGame(gameId: string, badgeName: string): Promise<void> {\n    const badgeType = await this.badgeRepository.getBadgeTypeByName(badgeName);\n    if (!badgeType) {\n      throw new Error(`Badge type '${badgeName}' not found`);\n    }\n\n    await this.badgeRepository.addBadgeToGame(gameId, badgeType.id, badgeType.duration_days);\n  }\n\n  async removeExpiredBadges(): Promise<void> {\n    await this.badgeRepository.removeExpiredBadges();\n  }\n\n  async getBadgeTypes(): Promise<BadgeType[]> {\n    return this.badgeRepository.getBadgeTypes();\n  }\n}\n", "import { Badge, BadgeType } from '../interfaces/Badge';\nimport { IDatabaseService } from '../services/DatabaseService';\n\nexport class BadgeRepository {\n  constructor(private databaseService: IDatabaseService) {}\n\n  async getBadgeTypes(): Promise<BadgeType[]> {\n    const result = await this.databaseService.read<BadgeType>('SELECT * FROM badge_types ORDER BY id');\n    return result;\n  }\n\n  async getActiveBadgesForGame(gameId: string): Promise<Badge[]> {\n    const result = await this.databaseService.read<Badge>(\n      `SELECT \n        b.id, b.name, b.display_name, b.color, b.icon, gb.expires_at\n      FROM game_badges gb\n      JOIN badge_types b ON gb.badge_id = b.id\n      WHERE gb.game_id = ? AND gb.expires_at > datetime('now')\n      ORDER BY gb.created_at DESC`,\n      [gameId]\n    );\n    return result;\n  }\n\n  async addBadgeToGame(gameId: string, badgeId: number, durationDays: number): Promise<void> {\n    const expiresAt = new Date();\n    expiresAt.setDate(expiresAt.getDate() + durationDays);\n\n    await this.databaseService.request(\n      `INSERT INTO game_badges (game_id, badge_id, created_at, expires_at)\n       VALUES (?, ?, datetime('now'), ?)\n       ON CONFLICT (game_id, badge_id) DO UPDATE SET \n       created_at = datetime('now'), expires_at = ?`,\n      [gameId, badgeId, expiresAt, expiresAt]\n    );\n  }\n\n  async removeExpiredBadges(): Promise<void> {\n    await this.databaseService.request('DELETE FROM game_badges WHERE expires_at < datetime(\"now\")');\n  }\n\n  async getBadgeTypeByName(name: string): Promise<BadgeType | null> {\n    const result = await this.databaseService.read<BadgeType>('SELECT * FROM badge_types WHERE name = ?', [name]);\n    return result.length > 0 ? result[0] : null;\n  }\n}\n\n\r\n", "import { inject, injectable } from 'inversify';\nimport { v4 as uuidv4 } from 'uuid';\nimport { BuyOrder } from '../interfaces/BuyOrder';\nimport { BuyOrderRepository } from '../repositories/BuyOrderRepository';\nimport { IDatabaseService } from './DatabaseService';\n\nexport interface IBuyOrderService {\n  createBuyOrder(buyerId: string, itemId: string, price: number): Promise<BuyOrder>;\n  cancelBuyOrder(orderId: string, buyerId: string): Promise<void>;\n  getBuyOrders(filters?: { userId?: string; itemId?: string; status?: string; minPrice?: number }, orderBy?: string, limit?: number): Promise<BuyOrder[]>;\n  matchSellOrder(itemId: string, price: number): Promise<BuyOrder | null>;\n}\n\n@injectable()\nexport class BuyOrderService implements IBuyOrderService {\n  private buyOrderRepository: BuyOrderRepository;\n  constructor(@inject('DatabaseService') private databaseService: IDatabaseService) {\n    this.buyOrderRepository = new BuyOrderRepository(this.databaseService);\n  }\n\n  async createBuyOrder(buyerId: string, itemId: string, price: number): Promise<BuyOrder> {\n    const now = new Date().toISOString();\n    const order: BuyOrder = {\n      id: uuidv4(),\n      buyer_id: buyerId,\n      item_id: itemId,\n      price,\n      status: 'active',\n      created_at: now,\n      updated_at: now,\n    };\n    await this.buyOrderRepository.insertBuyOrder(order);\n    return order;\n  }\n\n  async cancelBuyOrder(orderId: string, buyerId: string): Promise<void> {\n    await this.buyOrderRepository.updateBuyOrderStatusToCancelled(orderId, buyerId, new Date().toISOString());\n  }\n\n  async getBuyOrders(filters: { userId?: string; itemId?: string; status?: string; minPrice?: number } = {}, orderBy: string = 'created_at DESC', limit?: number): Promise<BuyOrder[]> {\n    return await this.buyOrderRepository.getBuyOrders(filters, orderBy, limit);\n  }\n\n  async matchSellOrder(itemId: string, sellPrice: number): Promise<BuyOrder | null> {\n    const orders = await this.buyOrderRepository.getBuyOrders({ itemId, status: 'active', minPrice: sellPrice }, 'price DESC, created_at ASC', 1);\n    return orders.length > 0 ? orders[0] : null;\n  }\n}\n", "export { default as MAX } from './max.js';\nexport { default as NIL } from './nil.js';\nexport { default as parse } from './parse.js';\nexport { default as stringify } from './stringify.js';\nexport { default as v1 } from './v1.js';\nexport { default as v1ToV6 } from './v1ToV6.js';\nexport { default as v3 } from './v3.js';\nexport { default as v4 } from './v4.js';\nexport { default as v5 } from './v5.js';\nexport { default as v6 } from './v6.js';\nexport { default as v6ToV1 } from './v6ToV1.js';\nexport { default as v7 } from './v7.js';\nexport { default as validate } from './validate.js';\nexport { default as version } from './version.js';\n", "import validate from './validate.js';\nconst byteToHex = [];\nfor (let i = 0; i < 256; ++i) {\n    byteToHex.push((i + 0x100).toString(16).slice(1));\n}\nexport function unsafeStringify(arr, offset = 0) {\n    return (byteToHex[arr[offset + 0]] +\n        byteToHex[arr[offset + 1]] +\n        byteToHex[arr[offset + 2]] +\n        byteToHex[arr[offset + 3]] +\n        '-' +\n        byteToHex[arr[offset + 4]] +\n        byteToHex[arr[offset + 5]] +\n        '-' +\n        byteToHex[arr[offset + 6]] +\n        byteToHex[arr[offset + 7]] +\n        '-' +\n        byteToHex[arr[offset + 8]] +\n        byteToHex[arr[offset + 9]] +\n        '-' +\n        byteToHex[arr[offset + 10]] +\n        byteToHex[arr[offset + 11]] +\n        byteToHex[arr[offset + 12]] +\n        byteToHex[arr[offset + 13]] +\n        byteToHex[arr[offset + 14]] +\n        byteToHex[arr[offset + 15]]).toLowerCase();\n}\nfunction stringify(arr, offset = 0) {\n    const uuid = unsafeStringify(arr, offset);\n    if (!validate(uuid)) {\n        throw TypeError('Stringified UUID is invalid');\n    }\n    return uuid;\n}\nexport default stringify;\n", "let getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n    if (!getRandomValues) {\n        if (typeof crypto === 'undefined' || !crypto.getRandomValues) {\n            throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n        }\n        getRandomValues = crypto.getRandomValues.bind(crypto);\n    }\n    return getRandomValues(rnds8);\n}\n", "import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\nfunction v4(options, buf, offset) {\n    if (native.randomUUID && !buf && !options) {\n        return native.randomUUID();\n    }\n    options = options || {};\n    const rnds = options.random ?? options.rng?.() ?? rng();\n    if (rnds.length < 16) {\n        throw new Error('Random bytes length must be >= 16');\n    }\n    rnds[6] = (rnds[6] & 0x0f) | 0x40;\n    rnds[8] = (rnds[8] & 0x3f) | 0x80;\n    if (buf) {\n        offset = offset || 0;\n        if (offset < 0 || offset + 16 > buf.length) {\n            throw new RangeError(`UUID byte range ${offset}:${offset + 15} is out of buffer bounds`);\n        }\n        for (let i = 0; i < 16; ++i) {\n            buf[offset + i] = rnds[i];\n        }\n        return buf;\n    }\n    return unsafeStringify(rnds);\n}\nexport default v4;\n", "const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default { randomUUID };\n", "import { BuyOrder } from '../interfaces/BuyOrder';\nimport { IDatabaseService } from '../services/DatabaseService';\n\nexport class BuyOrderRepository {\n  constructor(private databaseService: IDatabaseService) {}\n\n  async insertBuyOrder(order: BuyOrder): Promise<void> {\n    await this.databaseService.request(\n      `INSERT INTO buy_orders (id, buyer_id, item_id, price, status, created_at, updated_at)\n             VALUES (?, ?, ?, ?, ?, ?, ?)`,\n      [order.id, order.buyer_id, order.item_id, order.price, order.status, order.created_at, order.updated_at]\n    );\n  }\n\n  async updateBuyOrderStatusToCancelled(orderId: string, buyerId: string, updatedAt: string): Promise<void> {\n    await this.databaseService.request(\n      `UPDATE buy_orders \n             SET status = 'cancelled', updated_at = ? \n             WHERE id = ? AND buyer_id = ? AND status = 'active'`,\n      [updatedAt, orderId, buyerId]\n    );\n  }\n\n  async getBuyOrders(filters: { userId?: string; itemId?: string; status?: string; minPrice?: number } = {}, orderBy: string = 'created_at DESC', limit?: number): Promise<BuyOrder[]> {\n    let query = `SELECT * FROM buy_orders WHERE 1=1`;\n    const params = [];\n\n    if (filters.userId) {\n      query += ` AND buyer_id = ?`;\n      params.push(filters.userId);\n    }\n    if (filters.itemId) {\n      query += ` AND item_id = ?`;\n      params.push(filters.itemId);\n    }\n    if (filters.status) {\n      query += ` AND status = ?`;\n      params.push(filters.status);\n    }\n    if (filters.minPrice !== undefined) {\n      query += ` AND price >= ?`;\n      params.push(filters.minPrice);\n    }\n\n    query += ` ORDER BY ${orderBy}`;\n    if (limit) {\n      query += ` LIMIT ${limit}`;\n    }\n\n    return await this.databaseService.read<BuyOrder>(query, params);\n  }\n}\n", "import { injectable } from 'inversify';\nimport 'reflect-metadata';\n\nexport interface IDatabaseService {\n  request(query: string, params?: unknown[]): Promise<void>;\n  read<T>(query: string, params?: unknown[]): Promise<T[]>;\n  initialize(): Promise<void>;\n}\n\n@injectable()\nexport class DatabaseService implements IDatabaseService {\n  private readonly workerUrl: string;\n  private readonly authHeader: string;\n  private isInitialized: boolean = false;\n  private initializationPromise: Promise<void> | null = null;\n\n  constructor() {\n    this.workerUrl = process.env.WORKER_URL as string;\n    const user = process.env.WORKER_USER as string;\n    const pass = process.env.WORKER_PASS as string;\n    this.authHeader = \"Basic \" + Buffer.from(`${user}:${pass}`).toString(\"base64\");\n    // Remove any initialization here - it must be lazy\n  }\n\n  public async initialize(): Promise<void> {\n    if (this.isInitialized) {\n      return;\n    }\n    \n    if (this.initializationPromise) {\n      return this.initializationPromise;\n    }\n\n    this.initializationPromise = this.performInitialization();\n    return this.initializationPromise;\n  }\n\n  private async performInitialization(): Promise<void> {\n    try {\n      // await this.testConnection();\n      this.isInitialized = true;\n      console.log('Database Worker connection established');\n    } catch (err) {\n      console.error('Database Worker connection error:', err);\n      this.initializationPromise = null; // Reset so we can retry\n      throw err;\n    }\n  }\n\n  private async ensureInitialized(): Promise<void> {\n    if (!this.isInitialized) {\n      await this.initialize();\n    }\n  }\n\n  private async runQuery(sql: string, format: \"json\" | \"csv\" = \"json\"): Promise<{ results: unknown[] } | string> {\n    const headers = {\n      \"Content-Type\": \"application/json\",\n      \"Accept\": format === \"csv\" ? \"text/csv\" : \"application/json\",\n      \"Authorization\": this.authHeader\n    };\n\n    const body = JSON.stringify({ query: sql });\n\n    const res = await fetch(this.workerUrl, {\n      method: \"POST\",\n      headers,\n      body\n    });\n\n    if (!res.ok) {\n      const errText = await res.text();\n      throw new Error(`Worker error ${res.status}: ${errText}`);\n    }\n\n    if (format === \"csv\") {\n      return await res.text();\n    } else {\n      return await res.json();\n    }\n  }\n\n  private interpolateParams(query: string, params: unknown[] = []): string {\n    let index = 0;\n    return query.replace(/\\?/g, () => {\n      if (index >= params.length) {\n        throw new Error('Not enough parameters provided for query');\n      }\n      const param = params[index++];\n      if (typeof param === 'string') {\n        return `'${param.replace(/'/g, \"''\")}'`; \n      } else if (param === null || param === undefined) {\n        return 'NULL';\n      } else {\n        return String(param);\n      }\n    });\n  }\n\n  public async request(query: string, params: unknown[] = []): Promise<void> {\n    await this.ensureInitialized();\n    try {\n      const interpolatedQuery = this.interpolateParams(query, params);\n      await this.runQuery(interpolatedQuery);\n    } catch (err) {\n      console.error('Error executing query', err);\n      throw err;\n    }\n  }\n\n  public async read<T>(query: string, params: unknown[] = []): Promise<T[]> {\n    await this.ensureInitialized();\n    try {\n      const interpolatedQuery = this.interpolateParams(query, params);\n      const result = await this.runQuery(interpolatedQuery, \"json\");\n\n      let rows: unknown[] = [];\n      if (typeof result === 'object' && result !== null && 'results' in result) {\n        rows = result.results || [];\n      }\n\n      if (!Array.isArray(rows)) {\n        console.warn('Database query returned non-array result:', rows);\n        return [];\n      }\n\n      return rows.map((row: unknown) => {\n        if (typeof row === 'object' && row !== null) {\n          const processedRow = { ...row as Record<string, unknown> };\n          for (const key in processedRow) {\n            if (typeof processedRow[key] === 'string') {\n              try {\n                const parsed = JSON.parse(processedRow[key] as string);\n                processedRow[key] = parsed;\n              } catch {\n                // Value is not JSON, leaving as string\n              }\n            }\n          }\n          return processedRow as T;\n        }\n        return row as T;\n      });\n    } catch (err) {\n      console.error('Error reading data', err);\n      throw err;\n    }\n  }\n\n  public async destroy(): Promise<void> {\n    console.log('DatabaseService destroyed');\n  }\n}\n\nexport default DatabaseService;\n\n\n", "import crypto from 'crypto';\nimport { inject, injectable } from 'inversify';\nimport { v4 } from 'uuid';\nimport { GameGift } from '../interfaces/GameGift';\nimport { GameGiftRepository } from '../repositories/GameGiftRepository';\nimport { IDatabaseService } from './DatabaseService';\n\nexport interface IGameGiftService {\n  createGift(gameId: string, fromUserId: string, message?: string): Promise<GameGift>;\n  claimGift(giftCode: string, userId: string): Promise<GameGift>;\n  getGift(giftCode: string): Promise<GameGift | null>;\n  getUserSentGifts(userId: string): Promise<GameGift[]>;\n  getUserReceivedGifts(userId: string): Promise<GameGift[]>;\n  revokeGift(giftId: string, userId: string): Promise<void>;\n}\n\n@injectable()\nexport class GameGiftService implements IGameGiftService {\n  private gameGiftRepository: GameGiftRepository;\n  constructor(@inject('DatabaseService') private databaseService: IDatabaseService) {\n    this.gameGiftRepository = new GameGiftRepository(this.databaseService);\n  }\n\n  async createGift(gameId: string, fromUserId: string, message?: string): Promise<GameGift> {\n    const giftId = v4();\n    const giftCode = this.generateGiftCode();\n    const createdAt = new Date();\n    const gift: GameGift = {\n      id: giftId,\n      gameId,\n      fromUserId,\n      giftCode,\n      createdAt,\n      isActive: true,\n      message,\n    };\n    await this.gameGiftRepository.insertGift(gift);\n    return gift;\n  }\n\n  async claimGift(giftCode: string, userId: string): Promise<GameGift> {\n    const gift = await this.getGift(giftCode);\n    if (!gift) throw new Error('Gift not found');\n    if (!gift.isActive) throw new Error('Gift is no longer active');\n    if (gift.toUserId) throw new Error('Gift already claimed');\n    if (gift.fromUserId === userId) throw new Error('Cannot claim your own gift');\n    const claimedAt = new Date();\n    await this.gameGiftRepository.updateGiftClaim(giftCode, userId, claimedAt);\n    return {\n      ...gift,\n      toUserId: userId,\n      claimedAt,\n      isActive: false,\n    };\n  }\n\n  async getGift(giftCode: string): Promise<GameGift | null> {\n    const gifts = await this.gameGiftRepository.getGifts({ giftCode });\n    return gifts[0] || null;\n  }\n\n  async getUserSentGifts(userId: string): Promise<GameGift[]> {\n    return await this.gameGiftRepository.getGifts({ fromUserId: userId }, 'createdAt DESC');\n  }\n\n  async getUserReceivedGifts(userId: string): Promise<GameGift[]> {\n    return await this.gameGiftRepository.getGifts({ toUserId: userId }, 'claimedAt DESC');\n  }\n\n  async revokeGift(giftId: string, userId: string): Promise<void> {\n    const gifts = await this.gameGiftRepository.getGifts({ giftId });\n    const gift = gifts[0];\n    if (!gift) throw new Error('Gift not found');\n    if (gift.fromUserId !== userId) throw new Error('You can only revoke your own gifts');\n    if (!gift.isActive) throw new Error('Gift is no longer active');\n    await this.gameGiftRepository.updateGiftStatus(giftId, false);\n  }\n\n  private generateGiftCode(): string {\n    return crypto.randomBytes(8).toString('hex').toUpperCase();\n  }\n}\n", "import { GameGift } from '../interfaces/GameGift';\nimport { IDatabaseService } from '../services/DatabaseService';\n\nexport class GameGiftRepository {\n  constructor(private databaseService: IDatabaseService) {}\n\n  async insertGift(gift: GameGift): Promise<void> {\n    await this.databaseService.request(\n      `INSERT INTO game_gifts (id, gameId, fromUserId, giftCode, createdAt, isActive, message)\n             VALUES (?, ?, ?, ?, ?, ?, ?)`,\n      [gift.id, gift.gameId, gift.fromUserId, gift.giftCode, gift.createdAt.toISOString(), 1, gift.message || null]\n    );\n  }\n\n  async updateGiftClaim(giftCode: string, userId: string, claimedAt: Date): Promise<void> {\n    await this.databaseService.request(`UPDATE game_gifts SET toUserId = ?, claimedAt = ?, isActive = 0 WHERE giftCode = ?`, [userId, claimedAt.toISOString(), giftCode]);\n  }\n\n  async updateGiftStatus(giftId: string, isActive: boolean): Promise<void> {\n    await this.databaseService.request(`UPDATE game_gifts SET isActive = ? WHERE id = ?`, [isActive ? 1 : 0, giftId]);\n  }\n\n  // M\u00E9thode g\u00E9n\u00E9rique pour r\u00E9cup\u00E9rer les gifts selon des filtres\n  async getGifts(filters: { giftCode?: string; giftId?: string; fromUserId?: string; toUserId?: string; isActive?: boolean } = {}, orderBy: string = 'createdAt DESC'): Promise<GameGift[]> {\n    let query = `SELECT * FROM game_gifts WHERE 1=1`;\n    const params = [];\n\n    if (filters.giftCode) {\n      query += ` AND giftCode = ?`;\n      params.push(filters.giftCode);\n    }\n    if (filters.giftId) {\n      query += ` AND id = ?`;\n      params.push(filters.giftId);\n    }\n    if (filters.fromUserId) {\n      query += ` AND fromUserId = ?`;\n      params.push(filters.fromUserId);\n    }\n    if (filters.toUserId) {\n      query += ` AND toUserId = ?`;\n      params.push(filters.toUserId);\n    }\n    if (filters.isActive !== undefined) {\n      query += ` AND isActive = ?`;\n      params.push(filters.isActive ? 1 : 0);\n    }\n\n    query += ` ORDER BY ${orderBy}`;\n\n    const rows = await this.databaseService.read<GameGift>(query, params);\n    return rows.map(row => ({\n      id: row.id,\n      gameId: row.gameId,\n      fromUserId: row.fromUserId,\n      toUserId: row.toUserId,\n      giftCode: row.giftCode,\n      createdAt: new Date(row.createdAt),\n      claimedAt: row.claimedAt ? new Date(row.claimedAt) : undefined,\n      isActive: Boolean(row.isActive),\n      message: row.message,\n    }));\n  }\n\n  // Surcharges utilisant la m\u00E9thode g\u00E9n\u00E9rique\n  async getGiftByCode(giftCode: string): Promise<GameGift | null> {\n    const gifts = await this.getGifts({ giftCode });\n    return gifts[0] || null;\n  }\n\n  async getGiftById(giftId: string): Promise<GameGift | null> {\n    const gifts = await this.getGifts({ giftId });\n    return gifts[0] || null;\n  }\n\n  async getUserSentGifts(userId: string): Promise<GameGift[]> {\n    return await this.getGifts({ fromUserId: userId }, 'createdAt DESC');\n  }\n\n  async getUserReceivedGifts(userId: string): Promise<GameGift[]> {\n    return await this.getGifts({ toUserId: userId }, 'claimedAt DESC');\n  }\n\n  async revokeGift(giftId: string): Promise<void> {\n    await this.updateGiftStatus(giftId, false);\n  }\n}\n", "import { inject, injectable } from 'inversify';\nimport { Badge } from '../interfaces/Badge';\nimport { Game } from '../interfaces/Game';\nimport { GameViewStats } from '../interfaces/GameView';\nimport { GameRepository } from '../repositories/GameRepository';\nimport { BadgeService } from './BadgeService';\nimport { IDatabaseService } from './DatabaseService';\nimport { GameViewService } from './GameViewService';\n\nexport interface IGameService {\n  getUserGames(userId: string): Promise<Game[]>;\n  getGame(gameId: string): Promise<Game | null>;\n  listGames(): Promise<Game[]>;\n  getStoreGames(): Promise<Game[]>;\n  getMyCreatedGames(userId: string): Promise<Game[]>;\n  getUserOwnedGames(userId: string): Promise<Game[]>;\n  createGame(game: Omit<Game, 'id'>): Promise<void>;\n  updateGame(gameId: string, game: Partial<Omit<Game, 'id' | 'gameId'>>): Promise<void>;\n  deleteGame(gameId: string): Promise<void>;\n  addOwner(gameId: string, ownerId: string): Promise<void>;\n  removeOwner(gameId: string, ownerId: string): Promise<void>;\n  transferOwnership(gameId: string, newOwnerId: string): Promise<void>;\n  searchGames(query: string): Promise<Game[]>;\n  getGameForPublic(gameId: string): Promise<Game | null>;\n  getGameForOwner(gameId: string, userId: string): Promise<Game | null>;\n  canUserGiftGame(): Promise<boolean>;\n  userOwnsGame(gameId: string, userId: string): Promise<boolean>;\n  transferGameCopy(gameId: string, fromUserId: string, toUserId: string): Promise<void>;\n  canTransferGame(gameId: string, fromUserId: string, toUserId: string): Promise<{ canTransfer: boolean; reason?: string }>;\n  getGameWithBadgesAndViews(gameId: string): Promise<(Game & { badges: Badge[]; views: GameViewStats }) | null>;\n  getGamesWithBadgesAndViews(gameIds: string[]): Promise<(Game & { badges: Badge[]; views: GameViewStats })[]>;\n}\n\n@injectable()\nexport class GameService implements IGameService {\n  private gameRepository: GameRepository;\n  private badgeService: BadgeService;\n  private gameViewService: GameViewService;\n\n  constructor(@inject('DatabaseService') private databaseService: IDatabaseService) {\n    this.gameRepository = new GameRepository(this.databaseService);\n    this.badgeService = new BadgeService(this.databaseService);\n    this.gameViewService = new GameViewService(this.databaseService);\n  }\n\n  async getGame(gameId: string): Promise<Game | null> {\n    return this.gameRepository.getGame(gameId);\n  }\n\n  async getGameForPublic(gameId: string): Promise<Game | null> {\n    return this.gameRepository.getGameForPublic(gameId);\n  }\n\n  async getGameForOwner(gameId: string, userId: string): Promise<Game | null> {\n    const game = await this.gameRepository.getGameForOwner(gameId, userId);\n    return game ? { ...game, download_link: `/api/games/${gameId}/download` } : null;\n  }\n\n  async getUserGames(userId: string): Promise<Game[]> {\n    const games = await this.gameRepository.getUserGames(userId);\n    return games.map(game => ({ ...game, download_link: `/api/games/${game.gameId}/download` }));\n  }\n\n  async listGames(): Promise<Game[]> {\n    return this.gameRepository.listGames();\n  }\n\n  async getStoreGames(): Promise<Game[]> {\n    return this.gameRepository.getStoreGames();\n  }\n\n  async getMyCreatedGames(userId: string): Promise<Game[]> {\n    return this.gameRepository.getMyCreatedGames(userId);\n  }\n\n  async getUserOwnedGames(userId: string): Promise<Game[]> {\n    const games = await this.gameRepository.getUserOwnedGames(userId);\n    return games.map(game => ({ ...game, download_link: `/api/games/${game.gameId}/download` }));\n  }\n\n  async searchGames(query: string): Promise<Game[]> {\n    return this.gameRepository.searchGames(query);\n  }\n\n  async createGame(game: Omit<Game, 'id'>): Promise<void> {\n    await this.gameRepository.createGame(game);\n    // Ajouter le badge \"nouveau\" pour 10 jours\n    try {\n      await this.badgeService.addBadgeToGame(game.gameId, 'nouveau');\n    } catch (error) {\n      console.error(\"Error adding 'nouveau' badge to game:\", error);\n    }\n  }\n\n  async updateGame(gameId: string, game: Partial<Omit<Game, 'id' | 'gameId'>>): Promise<void> {\n    const { fields, values } = buildUpdateFields(game, ['owners', 'markAsUpdated']);\n    if (fields.length) await this.gameRepository.updateGame(gameId, fields, values);\n\n    // Si markAsUpdated est true, ajouter le badge \"mise-a-jour\"\n    if (game.markAsUpdated) {\n      try {\n        await this.badgeService.addBadgeToGame(gameId, 'mise-a-jour');\n      } catch (error) {\n        console.error(\"Error adding 'mise-a-jour' badge to game:\", error);\n      }\n    }\n  }\n\n  async deleteGame(gameId: string): Promise<void> {\n    await this.gameRepository.deleteGame(gameId);\n  }\n\n  async addOwner(gameId: string, ownerId: string): Promise<void> {\n    await this.gameRepository.addOwner(gameId, ownerId);\n  }\n\n  async removeOwner(gameId: string, ownerId: string): Promise<void> {\n    await this.gameRepository.removeOwner(gameId, ownerId);\n  }\n\n  async transferOwnership(gameId: string, newOwnerId: string): Promise<void> {\n    const game = await this.getGame(gameId);\n    if (!game) throw new Error('Game not found');\n    await this.updateGame(gameId, { owner_id: newOwnerId });\n  }\n\n  async canUserGiftGame(): Promise<boolean> {\n    return true;\n  }\n\n  async userOwnsGame(gameId: string, userId: string): Promise<boolean> {\n    const games = await this.getUserGames(userId);\n    return games.some(game => game.gameId === gameId);\n  }\n\n  async transferGameCopy(gameId: string, fromUserId: string, toUserId: string): Promise<void> {\n    const [fromOwns, toOwns, game] = await Promise.all([this.userOwnsGame(gameId, fromUserId), this.userOwnsGame(gameId, toUserId), this.getGame(gameId)]);\n    if (!fromOwns) throw new Error(\"You don't own this game\");\n    if (toOwns) throw new Error('Recipient already owns this game');\n    if (!game) throw new Error('Game not found');\n    if (game.owner_id === fromUserId) throw new Error('Game creator cannot transfer their copy');\n    await this.removeOwner(gameId, fromUserId);\n    await this.addOwner(gameId, toUserId);\n  }\n\n  async canTransferGame(gameId: string, fromUserId: string, toUserId: string): Promise<{ canTransfer: boolean; reason?: string }> {\n    const [fromOwns, toOwns, game] = await Promise.all([this.userOwnsGame(gameId, fromUserId), this.userOwnsGame(gameId, toUserId), this.getGame(gameId)]);\n    if (!fromOwns) return { canTransfer: false, reason: \"You don't own this game\" };\n    if (toOwns) return { canTransfer: false, reason: 'Recipient already owns this game' };\n    if (!game) return { canTransfer: false, reason: 'Game not found' };\n    if (game.owner_id === fromUserId) return { canTransfer: false, reason: 'Game creator cannot transfer their copy' };\n    return { canTransfer: true };\n  }\n\n  async getGameWithBadgesAndViews(gameId: string): Promise<(Game & { badges: Badge[]; views: GameViewStats }) | null> {\n    const game = await this.getGame(gameId);\n    if (!game) return null;\n\n    const [badges, views] = await Promise.all([this.badgeService.getActiveBadgesForGame(gameId), this.gameViewService.getGameViewStats(gameId)]);\n\n    return {\n      ...game,\n      badges,\n      views,\n    };\n  }\n\n  async getGamesWithBadgesAndViews(gameIds: string[]): Promise<(Game & { badges: Badge[]; views: GameViewStats })[]> {\n    if (gameIds.length === 0) return [];\n\n    const [games, viewsMap] = await Promise.all([Promise.all(gameIds.map(id => this.getGame(id))), this.gameViewService.getViewsForGames(gameIds)]);\n\n    const results: (Game & { badges: Badge[]; views: GameViewStats })[] = [];\n\n    for (let i = 0; i < games.length; i++) {\n      const game = games[i];\n      if (game) {\n        const badges = await this.badgeService.getActiveBadgesForGame(game.gameId);\n        const views = viewsMap[game.gameId] || {\n          gameId: game.gameId,\n          total_views: 0,\n          unique_views: 0,\n          views_today: 0,\n          views_this_week: 0,\n          views_this_month: 0,\n        };\n\n        results.push({\n          ...game,\n          badges,\n          views,\n        });\n      }\n    }\n\n    return results;\n  }\n}\n\nfunction toDbBool(val: unknown) {\n  return val ? 1 : 0;\n}\n\nfunction buildUpdateFields(obj: Record<string, unknown>, skip: string[] = []) {\n  const fields: string[] = [];\n  const values: unknown[] = [];\n  for (const key in obj) {\n    if (skip.includes(key)) continue;\n    fields.push(`${key} = ?`);\n    values.push(['showInStore', 'multiplayer'].includes(key) ? toDbBool(obj[key]) : obj[key]);\n  }\n  return { fields, values };\n}\n", "import { Game } from '../interfaces/Game';\nimport { IDatabaseService } from '../services/DatabaseService';\n\nexport class GameRepository {\n  constructor(private databaseService: IDatabaseService) {}\n\n  async getGames(filters: { gameId?: string; ownerId?: string; showInStore?: boolean; search?: string } = {}, select: string = '*', orderBy: string = '', limit?: number): Promise<Game[]> {\n    let query = `SELECT ${select} FROM games WHERE 1=1`;\n    const params = [];\n\n    if (filters.gameId) {\n      query += ` AND gameId = ?`;\n      params.push(filters.gameId);\n    }\n    if (filters.ownerId) {\n      query += ` AND owner_id = ?`;\n      params.push(filters.ownerId);\n    }\n    if (filters.showInStore !== undefined) {\n      query += ` AND showInStore = ?`;\n      params.push(filters.showInStore ? 1 : 0);\n    }\n    if (filters.search) {\n      const searchTerm = `%${filters.search.toLowerCase()}%`;\n      query += ` AND (LOWER(name) LIKE ? OR LOWER(description) LIKE ? OR LOWER(genre) LIKE ?)`;\n      params.push(searchTerm, searchTerm, searchTerm);\n    }\n    if (orderBy) query += ` ORDER BY ${orderBy}`;\n    if (limit) query += ` LIMIT ${limit}`;\n\n    return await this.databaseService.read<Game>(query, params);\n  }\n\n  async getGame(gameId: string): Promise<Game | null> {\n    const games = await this.getGames({ gameId });\n    return games[0] || null;\n  }\n\n  async getGameForPublic(gameId: string): Promise<Game | null> {\n    const select = `gameId, name, description, price, owner_id, showInStore, \n      iconHash, splashHash, bannerHash, genre, release_date, \n      developer, publisher, platforms, rating, website, \n      trailer_link, multiplayer`;\n    const games = await this.getGames({ gameId }, select);\n    return games[0] || null;\n  }\n\n  async getGameForOwner(gameId: string, userId: string): Promise<Game | null> {\n    const rows = await this.databaseService.read<Game>(\n      `SELECT g.*,\n              CASE \n                WHEN g.owner_id = ? OR go.ownerId IS NOT NULL \n                THEN 1 ELSE 0 \n              END as can_download\n       FROM games g \n       LEFT JOIN game_owners go ON g.gameId = go.gameId AND go.ownerId = ?\n       WHERE g.gameId = ?`,\n      [userId, userId, gameId]\n    );\n    return rows.length > 0 ? rows[0] : null;\n  }\n\n  async getUserGames(userId: string): Promise<Game[]> {\n    return await this.databaseService.read<Game>(\n      `SELECT g.* \n       FROM games g \n       INNER JOIN game_owners go ON g.gameId = go.gameId \n       WHERE go.ownerId = ?`,\n      [userId]\n    );\n  }\n\n  async listGames(): Promise<Game[]> {\n    return await this.getGames();\n  }\n\n  async getStoreGames(): Promise<Game[]> {\n    const select = `gameId, name, description, price, owner_id, showInStore, \n      iconHash, splashHash, bannerHash, genre, release_date, \n      developer, publisher, platforms, rating, website, \n      trailer_link, multiplayer`;\n    return await this.getGames({ showInStore: true }, select);\n  }\n\n  async getMyCreatedGames(userId: string): Promise<Game[]> {\n    return await this.getGames({ ownerId: userId });\n  }\n\n  async getUserOwnedGames(userId: string): Promise<Game[]> {\n    return await this.databaseService.read<Game>(\n      `SELECT g.* \n       FROM games g \n       INNER JOIN game_owners go ON g.gameId = go.gameId \n       WHERE go.ownerId = ?`,\n      [userId]\n    );\n  }\n\n  async searchGames(query: string): Promise<Game[]> {\n    const select = `gameId, name, description, price, owner_id, showInStore, \n      iconHash, splashHash, bannerHash, genre, release_date, \n      developer, publisher, platforms, rating, website, \n      trailer_link, multiplayer`;\n    return await this.getGames({ showInStore: true, search: query }, select, '', 100);\n  }\n\n  async createGame(game: Omit<Game, 'id'>): Promise<void> {\n    await this.databaseService.request(\n      `INSERT INTO games (\n                gameId, name, description, price, owner_id, showInStore, download_link,\n                iconHash, splashHash, bannerHash, genre, release_date, developer,\n                publisher, platforms, rating, website, trailer_link, multiplayer\n            ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)`,\n      [game.gameId, game.name, game.description, game.price, game.owner_id, game.showInStore ? 1 : 0, game.download_link, game.iconHash ?? null, game.splashHash ?? null, game.bannerHash ?? null, game.genre ?? null, game.release_date ?? null, game.developer ?? null, game.publisher ?? null, game.platforms ?? null, game.rating ?? 0, game.website ?? null, game.trailer_link ?? null, game.multiplayer ? 1 : 0]\n    );\n  }\n\n  async updateGame(gameId: string, fields: string[], values: unknown[]): Promise<void> {\n    values.push(gameId);\n    await this.databaseService.request(`UPDATE games SET ${fields.join(', ')} WHERE gameId = ?`, values);\n  }\n\n  async deleteGame(gameId: string): Promise<void> {\n    await this.databaseService.request('DELETE FROM games WHERE gameId = ?', [gameId]);\n    await this.databaseService.request('DELETE FROM game_owners WHERE gameId = ?', [gameId]);\n  }\n\n  async addOwner(gameId: string, ownerId: string): Promise<void> {\n    await this.databaseService.request('INSERT INTO game_owners (gameId, ownerId) VALUES (?, ?)', [gameId, ownerId]);\n  }\n\n  async removeOwner(gameId: string, ownerId: string): Promise<void> {\n    await this.databaseService.request('DELETE FROM game_owners WHERE gameId = ? AND ownerId = ?', [gameId, ownerId]);\n  }\n}\n", "import { inject, injectable } from 'inversify';\nimport { GameViewStats } from '../interfaces/GameView';\nimport { GameViewRepository } from '../repositories/GameViewRepository';\nimport { IDatabaseService } from './DatabaseService';\n\nexport interface IGameViewService {\n  addView(gameId: string, viewerCookie: string, ipAddress: string, userAgent?: string): Promise<void>;\n  hasViewedToday(gameId: string, viewerCookie: string): Promise<boolean>;\n  getGameViewStats(gameId: string): Promise<GameViewStats>;\n  getViewsForGames(gameIds: string[]): Promise<Record<string, GameViewStats>>;\n  cleanupOldViews(daysToKeep?: number): Promise<void>;\n}\n\n@injectable()\nexport class GameViewService implements IGameViewService {\n  private gameViewRepository: GameViewRepository;\n\n  constructor(@inject('DatabaseService') private databaseService: IDatabaseService) {\n    this.gameViewRepository = new GameViewRepository(this.databaseService);\n  }\n\n  async addView(gameId: string, viewerCookie: string, ipAddress: string, userAgent?: string): Promise<void> {\n    await this.gameViewRepository.addView(gameId, viewerCookie, ipAddress, userAgent);\n  }\n\n  async hasViewedToday(gameId: string, viewerCookie: string): Promise<boolean> {\n    return this.gameViewRepository.hasViewedToday(gameId, viewerCookie);\n  }\n\n  async getGameViewStats(gameId: string): Promise<GameViewStats> {\n    return this.gameViewRepository.getGameViewStats(gameId);\n  }\n\n  async getViewsForGames(gameIds: string[]): Promise<Record<string, GameViewStats>> {\n    return this.gameViewRepository.getViewsForGames(gameIds);\n  }\n\n  async cleanupOldViews(daysToKeep: number = 365): Promise<void> {\n    await this.gameViewRepository.cleanupOldViews(daysToKeep);\n  }\n}\n", "import { GameViewStats } from '../interfaces/GameView';\nimport { IDatabaseService } from '../services/DatabaseService';\n\nexport class GameViewRepository {\n  constructor(private databaseService: IDatabaseService) {}\n\n  async addView(gameId: string, viewerCookie: string, ipAddress: string, userAgent?: string): Promise<void> {\n    await this.databaseService.request(\n      `INSERT INTO game_views (game_id, viewer_cookie, ip_address, viewed_at, user_agent)\n       VALUES (?, ?, ?, datetime('now'), ?)`,\n      [gameId, viewerCookie, ipAddress, userAgent || null]\n    );\n  }\n\n  async hasViewedToday(gameId: string, viewerCookie: string): Promise<boolean> {\n    const result = await this.databaseService.read<{ count: number }>(\n      `SELECT COUNT(*) as count FROM game_views \n       WHERE game_id = ? AND viewer_cookie = ? \n       AND date(viewed_at) = date('now')`,\n      [gameId, viewerCookie]\n    );\n    return result.length > 0 && result[0].count > 0;\n  }\n\n  async getGameViewStats(gameId: string): Promise<GameViewStats> {\n    const result = await this.databaseService.read<GameViewStats>(\n      `SELECT \n        ? as gameId,\n        COUNT(*) as total_views,\n        COUNT(DISTINCT viewer_cookie) as unique_views,\n        COUNT(CASE WHEN date(viewed_at) = date('now') THEN 1 END) as views_today,\n        COUNT(CASE WHEN viewed_at >= datetime('now', '-7 days') THEN 1 END) as views_this_week,\n        COUNT(CASE WHEN viewed_at >= datetime('now', '-30 days') THEN 1 END) as views_this_month\n      FROM game_views \n      WHERE game_id = ?`,\n      [gameId, gameId]\n    );\n    return result.length > 0 ? result[0] : { gameId, total_views: 0, unique_views: 0, views_today: 0, views_this_week: 0, views_this_month: 0 };\n  }\n\n  async getViewsForGames(gameIds: string[]): Promise<Record<string, GameViewStats>> {\n    if (gameIds.length === 0) return {};\n\n    const placeholders = gameIds.map(() => '?').join(',');\n    const result = await this.databaseService.read<GameViewStats>(\n      `SELECT \n        game_id as gameId,\n        COUNT(*) as total_views,\n        COUNT(DISTINCT viewer_cookie) as unique_views,\n        COUNT(CASE WHEN date(viewed_at) = date('now') THEN 1 END) as views_today,\n        COUNT(CASE WHEN viewed_at >= datetime('now', '-7 days') THEN 1 END) as views_this_week,\n        COUNT(CASE WHEN viewed_at >= datetime('now', '-30 days') THEN 1 END) as views_this_month\n      FROM game_views \n      WHERE game_id IN (${placeholders})\n      GROUP BY game_id`,\n      gameIds\n    );\n\n    const stats: Record<string, GameViewStats> = {};\n    for (const row of result) {\n      stats[row.gameId] = row;\n    }\n\n    for (const gameId of gameIds) {\n      if (!stats[gameId]) {\n        stats[gameId] = {\n          gameId,\n          total_views: 0,\n          unique_views: 0,\n          views_today: 0,\n          views_this_week: 0,\n          views_this_month: 0,\n        };\n      }\n    }\n\n    return stats;\n  }\n\n  async cleanupOldViews(daysToKeep: number = 365): Promise<void> {\n    await this.databaseService.request('DELETE FROM game_views WHERE viewed_at < datetime(\"now\", \"-\" || ? || \" days\")', [daysToKeep]);\n  }\n}\n\n\r\n", "import { inject, injectable } from 'inversify';\nimport { v4 as uuidv4 } from 'uuid';\nimport { Inventory } from '../interfaces/Inventory';\nimport { InventoryRepository } from '../repositories/InventoryRepository';\nimport { IDatabaseService } from './DatabaseService';\nimport { IUserService } from './UserService';\n\nexport interface IInventoryService {\n  getInventory(userId: string): Promise<Inventory>;\n  addItem(userId: string, itemId: string, amount: number, metadata?: { [key: string]: unknown }, sellable?: boolean, purchasePrice?: number): Promise<void>;\n  removeItem(userId: string, itemId: string, amount: number, dataItemIndex?: number): Promise<void>;\n  removeItemByUniqueId(userId: string, itemId: string, uniqueId: string): Promise<void>;\n  setItemAmount(userId: string, itemId: string, amount: number): Promise<void>;\n  updateItemMetadata(userId: string, itemId: string, uniqueId: string, metadata: { [key: string]: unknown }): Promise<void>;\n  transferItem(fromUserId: string, toUserId: string, itemId: string, uniqueId: string): Promise<void>;\n  getInventoryRepository(): InventoryRepository;\n  getCorrectedUserId(userId: string): Promise<string>;\n}\n\n@injectable()\nexport class InventoryService implements IInventoryService {\n  private inventoryRepository: InventoryRepository;\n  constructor(\n    @inject('DatabaseService') private databaseService: IDatabaseService,\n    @inject('UserService') private userService: IUserService\n  ) {\n    this.inventoryRepository = new InventoryRepository(this.databaseService);\n  }\n\n  getInventoryRepository(): InventoryRepository {\n    return this.inventoryRepository;\n  }\n\n  async getCorrectedUserId(userId: string): Promise<string> {\n    return (await this.userService.getUser(userId))?.user_id || userId;\n  }\n\n  async getInventory(userId: string): Promise<Inventory> {\n    const correctedUserId = await this.getCorrectedUserId(userId);\n    await this.inventoryRepository.deleteNonExistingItems(correctedUserId);\n    const items = await this.inventoryRepository.getInventoryItems(correctedUserId);\n    return { user_id: userId, inventory: items };\n  }\n\n  async addItem(userId: string, itemId: string, amount: number, metadata?: { [key: string]: unknown }, sellable = false, purchasePrice?: number): Promise<void> {\n    await this.inventoryRepository.addItem(await this.getCorrectedUserId(userId), itemId, amount, metadata, sellable, purchasePrice, uuidv4);\n  }\n\n  async setItemAmount(userId: string, itemId: string, amount: number): Promise<void> {\n    await this.inventoryRepository.setItemAmount(await this.getCorrectedUserId(userId), itemId, amount);\n  }\n\n  async updateItemMetadata(userId: string, itemId: string, uniqueId: string, metadata: { [key: string]: unknown }): Promise<void> {\n    await this.inventoryRepository.updateItemMetadata(await this.getCorrectedUserId(userId), itemId, uniqueId, metadata);\n  }\n\n  async removeItem(userId: string, itemId: string, amount: number, dataItemIndex?: number): Promise<void> {\n    await this.inventoryRepository.removeItem(await this.getCorrectedUserId(userId), itemId, amount, dataItemIndex);\n  }\n\n  async removeItemByUniqueId(userId: string, itemId: string, uniqueId: string): Promise<void> {\n    await this.inventoryRepository.removeItemByUniqueId(await this.getCorrectedUserId(userId), itemId, uniqueId);\n  }\n\n  async transferItem(fromUserId: string, toUserId: string, itemId: string, uniqueId: string): Promise<void> {\n    await this.inventoryRepository.transferItem(await this.getCorrectedUserId(fromUserId), await this.getCorrectedUserId(toUserId), itemId, uniqueId);\n  }\n}\n", "import { InventoryItem } from '../interfaces/Inventory';\nimport { IDatabaseService } from '../services/DatabaseService';\n\nexport class InventoryRepository {\n  constructor(private databaseService: IDatabaseService) {}\n\n  async deleteNonExistingItems(userId: string): Promise<void> {\n    await this.databaseService.request(\n      `DELETE FROM inventories \n       WHERE user_id = ? \n       AND item_id NOT IN (\n         SELECT itemId FROM items WHERE deleted IS NULL OR deleted = 0\n       )`,\n      [userId]\n    );\n  }\n\n  async getInventory(filters: { userId?: string; itemId?: string; sellable?: boolean; purchasePrice?: number; uniqueId?: string; minAmount?: number } = {}): Promise<InventoryItem[]> {\n    let query = `\n      SELECT \n        inv.user_id, \n        inv.item_id, \n        inv.amount, \n        inv.metadata,\n        inv.sellable,\n        inv.purchasePrice,\n        inv.rarity,\n        inv.custom_url_link,\n        i.itemId,\n        i.name,\n        i.description,\n        i.iconHash,\n        i.price,\n        i.owner,\n        i.showInStore\n      FROM inventories inv\n      INNER JOIN items i ON inv.item_id = i.itemId AND (i.deleted IS NULL OR i.deleted = 0)\n      WHERE 1=1\n    `;\n    const params = [];\n    if (filters.userId) {\n      query += ' AND inv.user_id = ?';\n      params.push(filters.userId);\n    }\n    if (filters.itemId) {\n      query += ' AND inv.item_id = ?';\n      params.push(filters.itemId);\n    }\n    if (filters.sellable !== undefined) {\n      query += ' AND inv.sellable = ?';\n      params.push(filters.sellable ? 1 : 0);\n    }\n    if (filters.purchasePrice !== undefined) {\n      query += ' AND (inv.purchasePrice = ? OR (inv.purchasePrice IS NULL AND ? IS NULL))';\n      params.push(filters.purchasePrice, filters.purchasePrice);\n    }\n    if (filters.uniqueId) {\n      query += \" AND JSON_EXTRACT(inv.metadata, '$._unique_id') = ?\";\n      params.push(filters.uniqueId);\n    }\n    if (filters.minAmount !== undefined) {\n      query += ' AND inv.amount >= ?';\n      params.push(filters.minAmount);\n    }\n    const items = await this.databaseService.read<InventoryItem>(query, params);\n    items.map(item => ({\n      user_id: item.user_id,\n      item_id: item.item_id,\n      amount: item.amount,\n      metadata: item.metadata,\n      sellable: !!item.sellable,\n      purchasePrice: item.purchasePrice,\n      name: item.name,\n      description: item.description,\n      iconHash: item.iconHash,\n      price: item.purchasePrice,\n      rarity: item.rarity,\n      custom_url_link: item.custom_url_link,\n    }));\n    return items;\n  }\n\n  async getInventoryItems(userId: string): Promise<InventoryItem[]> {\n    return this.getInventory({ userId, minAmount: 1 });\n  }\n\n  async getItemAmount(userId: string, itemId: string): Promise<number> {\n    const items = await this.getInventory({ userId, itemId });\n    return items.reduce((sum, item) => sum + (item.amount || 0), 0);\n  }\n\n  async hasItemWithoutMetadata(userId: string, itemId: string, amount: number): Promise<boolean> {\n    const items = await this.getInventory({ userId, itemId });\n    const totalAmount = items.filter(i => !i.metadata).reduce((sum, i) => sum + (i.amount || 0), 0);\n    return totalAmount >= amount;\n  }\n\n  async hasItemWithoutMetadataSellable(userId: string, itemId: string, amount: number): Promise<boolean> {\n    const items = await this.getInventory({ userId, itemId, sellable: true });\n    const totalAmount = items.filter(i => !i.metadata).reduce((sum, i) => sum + (i.amount || 0), 0);\n    return totalAmount >= amount;\n  }\n\n  async addItem(userId: string, itemId: string, amount: number, metadata: { [key: string]: unknown } | undefined, sellable: boolean, purchasePrice: number | undefined, uuidv4: () => string): Promise<void> {\n    if (metadata) {\n      for (let i = 0; i < amount; i++) {\n        const uniqueMetadata = { ...metadata, _unique_id: uuidv4() };\n        await this.databaseService.request('INSERT INTO inventories (user_id, item_id, amount, metadata, sellable, purchasePrice, rarity, custom_url_link) VALUES (?, ?, ?, ?, ?, ?, ?, ?)', [userId, itemId, 1, JSON.stringify(uniqueMetadata), sellable ? 1 : 0, purchasePrice, metadata['rarity'], metadata['custom_url_link']]);\n      }\n    } else {\n      const items = await this.getInventory({ userId, itemId, sellable, purchasePrice });\n      if (items.length > 0) {\n        await this.databaseService.request('UPDATE inventories SET amount = amount + ? WHERE user_id = ? AND item_id = ? AND metadata IS NULL AND sellable = ? AND (purchasePrice = ? OR (purchasePrice IS NULL AND ? IS NULL))', [amount, userId, itemId, sellable ? 1 : 0, purchasePrice, purchasePrice]);\n      } else {\n        await this.databaseService.request('INSERT INTO inventories (user_id, item_id, amount, metadata, sellable, purchasePrice) VALUES (?, ?, ?, ?, ?, ?)', [userId, itemId, amount, null, sellable ? 1 : 0, purchasePrice]);\n      }\n    }\n  }\n\n  async setItemAmount(userId: string, itemId: string, amount: number): Promise<void> {\n    if (amount <= 0) {\n      await this.databaseService.request(`DELETE FROM inventories WHERE user_id = ? AND item_id = ?`, [userId, itemId]);\n      return;\n    }\n    const items = await this.getInventory({ userId, itemId });\n    if (items.length > 0) {\n      await this.databaseService.request(`UPDATE inventories SET amount = ? WHERE user_id = ? AND item_id = ? AND metadata IS NULL`, [amount, userId, itemId]);\n    } else {\n      await this.databaseService.request(`INSERT INTO inventories (user_id, item_id, amount, metadata, sellable, purchasePrice) VALUES (?, ?, ?, ?, ?, ?)`, [userId, itemId, amount, null, 0, null]);\n    }\n  }\n\n  async updateItemMetadata(userId: string, itemId: string, uniqueId: string, metadata: object): Promise<void> {\n    const metadataWithUniqueId = { ...metadata, _unique_id: uniqueId };\n    const metadataJson = JSON.stringify(metadataWithUniqueId);\n    await this.databaseService.request(\"UPDATE inventories SET metadata = ? WHERE user_id = ? AND item_id = ? AND JSON_EXTRACT(metadata, '$._unique_id') = ?\", [metadataJson, userId, itemId, uniqueId]);\n  }\n\n  async removeItem(userId: string, itemId: string, amount: number, dataItemIndex?: number): Promise<void> {\n    const items = await this.getInventory({ userId, itemId });\n\n    if (typeof dataItemIndex === 'number' && items[dataItemIndex]) {\n      const item = items[dataItemIndex];\n      const toRemoveFromStack = Math.min(amount, item.amount);\n      const newAmount = item.amount - toRemoveFromStack;\n      if (newAmount <= 0) {\n        await this.databaseService.request(`DELETE FROM inventories WHERE user_id = ? AND item_id = ? AND sellable = ? AND amount = ?  AND purchasePrice = ? LIMIT 1`, [userId, item.item_id, item.sellable ? 1 : 0, item.amount, item.purchasePrice]);\n      } else {\n        await this.databaseService.request(`UPDATE inventories SET amount = ? WHERE user_id = ? AND item_id = ? AND metadata IS NULL AND sellable = ? AND amount = ? AND purchasePrice = ? LIMIT 1`, [newAmount, userId, item.item_id, item.sellable ? 1 : 0, item.amount, item.purchasePrice]);\n      }\n      return;\n    }\n\n    let remainingToRemove = amount;\n    for (const item of items) {\n      if (remainingToRemove <= 0) break;\n      const toRemoveFromStack = Math.min(remainingToRemove, item.amount);\n      const newAmount = item.amount - toRemoveFromStack;\n      if (newAmount <= 0) {\n        await this.databaseService.request(`DELETE FROM inventories WHERE user_id = ? AND item_id = ? AND metadata IS NULL AND sellable = ? AND amount = ? LIMIT 1`, [userId, itemId, item.sellable ? 1 : 0, item.amount]);\n      } else {\n        await this.databaseService.request(`UPDATE inventories SET amount = ? WHERE user_id = ? AND item_id = ? AND metadata IS NULL AND sellable = ? AND amount = ? LIMIT 1`, [newAmount, userId, itemId, item.sellable ? 1 : 0, item.amount]);\n      }\n      remainingToRemove -= toRemoveFromStack;\n    }\n  }\n\n  async removeItemByUniqueId(userId: string, itemId: string, uniqueId: string): Promise<void> {\n    await this.databaseService.request(`DELETE FROM inventories WHERE user_id = ? AND item_id = ? AND JSON_EXTRACT(metadata, '$._unique_id') = ?`, [userId, itemId, uniqueId]);\n  }\n\n  async removeSellableItem(userId: string, itemId: string, amount: number): Promise<void> {\n    const items = await this.getInventory({ userId, itemId, sellable: true });\n    let remainingToRemove = amount;\n    for (const item of items) {\n      if (remainingToRemove <= 0) break;\n      const toRemoveFromStack = Math.min(remainingToRemove, item.amount);\n      const newAmount = item.amount - toRemoveFromStack;\n      if (newAmount <= 0) {\n        await this.databaseService.request(`DELETE FROM inventories WHERE user_id = ? AND item_id = ? AND metadata IS NULL AND sellable = 1`, [userId, itemId]);\n      } else {\n        await this.databaseService.request(`UPDATE inventories SET amount = ? WHERE user_id = ? AND item_id = ? AND metadata IS NULL AND sellable = 1`, [newAmount, userId, itemId]);\n      }\n      remainingToRemove -= toRemoveFromStack;\n    }\n  }\n\n  async removeSellableItemWithPrice(userId: string, itemId: string, amount: number, purchasePrice: number, dataItemIndex?: number): Promise<void> {\n    const items = await this.getInventory({ userId, itemId, sellable: true, purchasePrice });\n\n    if (typeof dataItemIndex === 'number' && items[dataItemIndex]) {\n      const item = items[dataItemIndex];\n      const toRemoveFromStack = Math.min(amount, item.amount);\n      const newAmount = item.amount - toRemoveFromStack;\n      if (newAmount <= 0) {\n        await this.databaseService.request(`DELETE FROM inventories WHERE user_id = ? AND item_id = ? AND metadata IS NULL AND sellable = 1 AND amount = ? AND purchasePrice = ? LIMIT 1`, [userId, itemId, item.amount, purchasePrice]);\n      } else {\n        await this.databaseService.request(`UPDATE inventories SET amount = ? WHERE user_id = ? AND item_id = ? AND metadata IS NULL AND sellable = 1 AND amount = ? AND purchasePrice = ? LIMIT 1`, [newAmount, userId, itemId, item.amount, purchasePrice]);\n      }\n      return;\n    }\n\n    let remainingToRemove = amount;\n    for (const item of items) {\n      if (remainingToRemove <= 0) break;\n      const toRemoveFromStack = Math.min(remainingToRemove, item.amount);\n      const newAmount = item.amount - toRemoveFromStack;\n      if (newAmount <= 0) {\n        await this.databaseService.request(`DELETE FROM inventories WHERE user_id = ? AND item_id = ? AND metadata IS NULL AND sellable = 1 AND amount = ? AND purchasePrice = ? LIMIT 1`, [userId, itemId, item.amount, purchasePrice]);\n      } else {\n        await this.databaseService.request(`UPDATE inventories SET amount = ? WHERE user_id = ? AND item_id = ? AND metadata IS NULL AND sellable = 1 AND amount = ? AND purchasePrice = ? LIMIT 1`, [newAmount, userId, itemId, item.amount, purchasePrice]);\n      }\n      remainingToRemove -= toRemoveFromStack;\n    }\n  }\n\n  async transferItem(fromUserId: string, toUserId: string, itemId: string, uniqueId: string): Promise<void> {\n    await this.databaseService.request(`UPDATE inventories SET user_id = ? WHERE user_id = ? AND item_id = ? AND JSON_EXTRACT(metadata, '$._unique_id') = ?`, [toUserId, fromUserId, itemId, uniqueId]);\n  }\n}\n", "import { Item } from 'interfaces/Item';\nimport { inject, injectable } from 'inversify';\nimport { ItemRepository } from '../repositories/ItemRepository';\nimport { IDatabaseService } from './DatabaseService';\n\nexport interface IItemService {\n  createItem(item: Omit<Item, 'id'>): Promise<void>;\n  getItem(itemId: string): Promise<Item | null>;\n  getAllItems(): Promise<Item[]>;\n  getStoreItems(): Promise<Item[]>;\n  getMyItems(userId: string): Promise<Item[]>;\n  updateItem(itemId: string, item: Partial<Omit<Item, 'id' | 'itemId' | 'owner'>>): Promise<void>;\n  deleteItem(itemId: string): Promise<void>;\n  searchItemsByName(query: string): Promise<Item[]>;\n  transferOwnership(itemId: string, newOwnerId: string): Promise<void>;\n}\n\n@injectable()\nexport class ItemService implements IItemService {\n  private itemRepository: ItemRepository;\n  constructor(@inject('DatabaseService') private databaseService: IDatabaseService) {\n    this.itemRepository = new ItemRepository(this.databaseService);\n  }\n\n  async createItem(item: Omit<Item, 'id'>): Promise<void> {\n    await this.itemRepository.createItem(item);\n  }\n\n  async getItem(itemId: string): Promise<Item | null> {\n    return this.itemRepository.getItem(itemId);\n  }\n\n  async getAllItems(): Promise<Item[]> {\n    return this.itemRepository.getAllItems();\n  }\n\n  async getStoreItems(): Promise<Item[]> {\n    return this.itemRepository.getStoreItems();\n  }\n\n  async getMyItems(userId: string): Promise<Item[]> {\n    return this.itemRepository.getMyItems(userId);\n  }\n\n  async updateItem(itemId: string, item: Partial<Omit<Item, 'id' | 'itemId'>>): Promise<void> {\n    await this.itemRepository.updateItem(itemId, item, buildUpdateFields);\n  }\n\n  async deleteItem(itemId: string): Promise<void> {\n    await this.itemRepository.deleteItem(itemId);\n  }\n\n  async searchItemsByName(query: string): Promise<Item[]> {\n    return this.itemRepository.searchItemsByName(query);\n  }\n\n  async transferOwnership(itemId: string, newOwnerId: string): Promise<void> {\n    const item = await this.getItem(itemId);\n    if (!item) throw new Error('Item not found');\n    if (item.deleted) throw new Error('Cannot transfer deleted item');\n    await this.updateItem(itemId, { owner: newOwnerId });\n  }\n}\n\nfunction toDbBool(val: unknown) {\n  return val ? 1 : 0;\n}\n\nfunction buildUpdateFields(obj: Record<string, unknown>, skip: string[] = []) {\n  const fields: string[] = [];\n  const values: unknown[] = [];\n  for (const key in obj) {\n    if (skip.includes(key)) continue;\n    fields.push(`${key} = ?`);\n    values.push(['showInStore', 'deleted'].includes(key) ? toDbBool(obj[key]) : obj[key]);\n  }\n  return { fields, values };\n}\n", "import { Item } from '../interfaces/Item';\nimport { IDatabaseService } from '../services/DatabaseService';\n\nexport class ItemRepository {\n  constructor(private databaseService: IDatabaseService) {}\n\n  async createItem(item: Omit<Item, 'id'>): Promise<void> {\n    const existing = await this.getItem(item.itemId);\n    if (existing) throw new Error('ItemId already exists');\n    await this.databaseService.request(\n      `INSERT INTO items (itemId, name, description, price, owner, iconHash, showInStore, deleted)\n       VALUES (?, ?, ?, ?, ?, ?, ?, ?)`,\n      [item.itemId, item.name ?? null, item.description ?? null, item.price ?? 0, item.owner, item.iconHash ?? null, item.showInStore ? 1 : 0, item.deleted ? 1 : 0]\n    );\n  }\n\n  async getItems(filters: { itemId?: string; owner?: string; showInStore?: boolean; deleted?: boolean; search?: string } = {}, select: string = '*', orderBy: string = 'name', limit?: number): Promise<Item[]> {\n    let query = `SELECT ${select} FROM items WHERE 1=1`;\n    const params = [];\n    if (filters.itemId) {\n      query += ' AND itemId = ?';\n      params.push(filters.itemId);\n    }\n    if (filters.owner) {\n      query += ' AND owner = ?';\n      params.push(filters.owner);\n    }\n    if (filters.showInStore !== undefined) {\n      query += ' AND showInStore = ?';\n      params.push(filters.showInStore ? 1 : 0);\n    }\n    if (filters.deleted !== undefined) {\n      query += ' AND deleted = ?';\n      params.push(filters.deleted ? 1 : 0);\n    }\n    if (filters.search) {\n      const searchTerm = `%${filters.search.toLowerCase()}%`;\n      query += ' AND LOWER(name) LIKE ?';\n      params.push(searchTerm);\n    }\n    query += ` ORDER BY ${orderBy}`;\n    if (limit) query += ` LIMIT ${limit}`;\n    return this.databaseService.read<Item>(query, params);\n  }\n\n  async getItem(itemId: string): Promise<Item | null> {\n    const items = await this.getItems({ itemId });\n    return items[0] || null;\n  }\n\n  async getAllItems(): Promise<Item[]> {\n    return this.getItems();\n  }\n\n  async getStoreItems(): Promise<Item[]> {\n    return this.getItems({ showInStore: true, deleted: false }, 'itemId, name, description, owner, price, iconHash, showInStore');\n  }\n\n  async getMyItems(userId: string): Promise<Item[]> {\n    return this.getItems({ owner: userId, deleted: false }, 'itemId, name, description, owner, price, iconHash, showInStore');\n  }\n\n  async updateItem(itemId: string, item: Partial<Omit<Item, 'id' | 'itemId'>>, buildUpdateFields: (obj: Record<string, unknown>, skip?: string[]) => { fields: string[]; values: unknown[] }): Promise<void> {\n    const { fields, values } = buildUpdateFields(item);\n    if (!fields.length) return;\n    values.push(itemId);\n    await this.databaseService.request(`UPDATE items SET ${fields.join(', ')} WHERE itemId = ?`, values);\n  }\n\n  async deleteItem(itemId: string): Promise<void> {\n    await this.databaseService.request('UPDATE items SET deleted = 1 WHERE itemId = ?', [itemId]);\n  }\n\n  async searchItemsByName(query: string): Promise<Item[]> {\n    return this.getItems({ search: query, showInStore: true, deleted: false }, 'itemId, name, description, owner, price, iconHash, showInStore', 'name', 100);\n  }\n}\n", "import { inject, injectable } from 'inversify';\nimport { Lobby } from '../interfaces/Lobbies';\nimport { LobbyRepository } from '../repositories/LobbyRepository';\nimport { IDatabaseService } from './DatabaseService';\nimport { UserService } from './UserService';\n\nexport interface ILobbyService {\n  getLobby(lobbyId: string): Promise<Lobby | null>;\n  joinLobby(lobbyId: string, userId: string): Promise<void>;\n  leaveLobby(lobbyId: string, userId: string): Promise<void>;\n  getUserLobby(userId: string): Promise<Lobby | null>;\n  createLobby(lobbyId: string, users?: string[]): Promise<void>;\n  deleteLobby(lobbyId: string): Promise<void>;\n  getUserLobbies(userId: string): Promise<Lobby[]>;\n  leaveAllLobbies(userId: string): Promise<void>;\n}\n\n@injectable()\nexport class LobbyService implements ILobbyService {\n  private lobbyRepository: LobbyRepository;\n  constructor(\n    @inject('DatabaseService') private databaseService: IDatabaseService,\n    @inject('UserService') private userService: UserService\n  ) {\n    this.lobbyRepository = new LobbyRepository(this.databaseService);\n  }\n\n  async getLobby(lobbyId: string): Promise<Lobby | null> {\n    const lobby = await this.lobbyRepository.getLobby(lobbyId);\n    if (!lobby) return null;\n    return lobby;\n  }\n\n  async joinLobby(lobbyId: string, userId: string): Promise<void> {\n    const lobby = await this.getLobby(lobbyId);\n    const user = await this.userService.getUser(userId);\n    if (!lobby) throw new Error('Lobby not found');\n    if (!user) throw new Error('User not found');\n    const users = [...new Set([...lobby.users, user])];\n    await this.lobbyRepository.updateLobbyUsers(lobbyId, users);\n  }\n\n  async leaveLobby(lobbyId: string, userId: string): Promise<void> {\n    const lobby = await this.getLobby(lobbyId);\n    if (!lobby) throw new Error('Lobby not found');\n    const newUsers = lobby.users.filter(u => u.user_id !== userId);\n    if (newUsers.length === 0) {\n      // await this.deleteLobby(lobbyId);\n    } else {\n      await this.lobbyRepository.updateLobbyUsers(lobbyId, newUsers);\n    }\n  }\n\n  async getUserLobby(userId: string): Promise<Lobby | null> {\n    const lobby = await this.lobbyRepository.getUserLobby(userId);\n    if (!lobby) return null;\n    return lobby;\n  }\n\n  async createLobby(lobbyId: string, users: string[] = []): Promise<void> {\n    await this.lobbyRepository.createLobby(lobbyId, users);\n  }\n\n  async deleteLobby(lobbyId: string): Promise<void> {\n    await this.lobbyRepository.deleteLobby(lobbyId);\n  }\n\n  async getUserLobbies(userId: string): Promise<Lobby[]> {\n    const lobbies = await this.lobbyRepository.getUserLobbies(userId);\n    return Promise.all(\n      lobbies.map(async lobby => {\n        return lobby;\n      })\n    );\n  }\n\n  async leaveAllLobbies(userId: string): Promise<void> {\n    const lobbies = await this.getUserLobbies(userId);\n    for (const lobby of lobbies) {\n      await this.leaveLobby(lobby.lobbyId, userId);\n    }\n  }\n}\n", "import { Lobby } from '../interfaces/Lobbies';\nimport { PublicUser } from '../interfaces/User';\nimport { IDatabaseService } from '../services/DatabaseService';\n\nexport class LobbyRepository {\n  constructor(private databaseService: IDatabaseService) {}\n\n  async getLobbies(filters: { lobbyId?: string; userId?: string } = {}): Promise<Lobby[]> {\n    const query = 'SELECT lobbyId, users FROM lobbies WHERE 1=1';\n    const rows = await this.databaseService.read<{ lobbyId: string; users: string[] }>(query);\n\n    const lobbies: Lobby[] = [];\n    for (const row of rows) {\n      if (filters.userId && row.users.indexOf(filters.userId) !== -1 && filters.userId) {\n        const users = await this.getUsersByIds(row.users);\n        lobbies.push({\n          lobbyId: row.lobbyId,\n          users,\n        });\n      } else if (filters.lobbyId && row.lobbyId === filters.lobbyId) {\n        const users = await this.getUsersByIds(row.users);\n        lobbies.push({\n          lobbyId: row.lobbyId,\n          users,\n        });\n      }\n    }\n    return lobbies;\n  }\n\n  async getLobby(lobbyId: string): Promise<Lobby | null> {\n    const lobbies = await this.getLobbies({ lobbyId });\n    return lobbies[0] || null;\n  }\n\n  async getUserLobby(userId: string): Promise<Lobby | null> {\n    const lobbies = await this.getLobbies({ userId });\n    if (lobbies.length === 0) return null;\n    return lobbies ? { lobbyId: lobbies[0].lobbyId, users: lobbies[0].users } : null;\n  }\n\n  async getUserLobbies(userId: string): Promise<Lobby[]> {\n    return this.getLobbies({ userId });\n  }\n\n  async createLobby(lobbyId: string, users: string[] = []): Promise<void> {\n    await this.databaseService.request('INSERT INTO lobbies (lobbyId, users) VALUES (?, ?)', [lobbyId, JSON.stringify(users)]);\n  }\n\n  async updateLobbyUsers(lobbyId: string, users: PublicUser[]): Promise<void> {\n    const usersIds = await this.getUsersIdOnly(users);\n    await this.databaseService.request('UPDATE lobbies SET users = ? WHERE lobbyId = ?', [JSON.stringify(usersIds), lobbyId]);\n  }\n\n  async deleteLobby(lobbyId: string): Promise<void> {\n    await this.databaseService.request('DELETE FROM lobbies WHERE lobbyId = ?', [lobbyId]);\n  }\n\n  private async getUsersByIds(userIds: string[]): Promise<PublicUser[]> {\n    if (userIds.length === 0) return [];\n\n    return await this.databaseService.read<PublicUser>(`SELECT user_id, username, verified, admin FROM users WHERE user_id IN (${userIds.map(() => '?').join(',')}) AND disabled = 0`, userIds);\n  }\n\n  private async getUsersIdOnly(users: PublicUser[]): Promise<string[]> {\n    return users.map(user => user.user_id);\n  }\n}\n", "import { inject, injectable } from 'inversify';\nimport { CreateLogData, Log } from '../interfaces/Log';\nimport { IDatabaseService } from './DatabaseService';\n\nexport interface ILogService {\n  createLog(logData: CreateLogData): Promise<void>;\n  getLogs(limit?: number, offset?: number): Promise<Log[]>;\n  getLogsByController(controller: string, limit?: number): Promise<Log[]>;\n  getLogsByUser(userId: string, limit?: number): Promise<Log[]>;\n  getLogsByTable(tableName: string, limit?: number): Promise<Log[]>;\n  deleteOldLogs(daysOld: number): Promise<void>;\n  getLogStats(): Promise<{\n    totalLogs: number;\n    logsByController: { controller: string; count: number }[];\n    logsByTable: { table_name: string; count: number }[];\n  }>;\n  initialize(): Promise<void>;\n}\n\n@injectable()\nexport class LogService implements ILogService {\n  private isInitialized: boolean = false;\n\n  constructor(\n    @inject('DatabaseService') private databaseService: IDatabaseService\n  ) {}\n\n  public async initialize(): Promise<void> {\n    if (!this.isInitialized) {\n      await this.databaseService.initialize();\n      await this.ensureTableExists();\n      this.isInitialized = true;\n    }\n  }\n\n  private async ensureInitialized(): Promise<void> {\n    if (!this.isInitialized) {\n      await this.initialize();\n    }\n  }\n\n  private async ensureTableExists(): Promise<void> {\n    const createTableQuery = `\n      CREATE TABLE IF NOT EXISTS logs (\n        id INTEGER PRIMARY KEY AUTOINCREMENT,\n        timestamp TEXT NOT NULL,\n        ip_address TEXT NOT NULL,\n        table_name TEXT,\n        controller TEXT NOT NULL,\n        original_path TEXT NOT NULL,\n        http_method TEXT NOT NULL,\n        request_body TEXT,\n        user_id TEXT,\n        status_code INTEGER\n      )\n    `;\n    await this.databaseService.request(createTableQuery);\n  }\n\n  async createLog(logData: CreateLogData): Promise<void> {\n    await this.ensureInitialized();\n    \n    const insertQuery = `\n      INSERT INTO logs (timestamp, ip_address, table_name, controller, original_path, http_method, request_body, user_id, status_code)\n      VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)\n    `;\n    \n    const params = [\n      new Date().toISOString(),\n      logData.ip_address,\n      logData.table_name || null,\n      logData.controller,\n      logData.original_path,\n      logData.http_method,\n      logData.request_body ? JSON.stringify(logData.request_body) : null,\n      logData.user_id || null,\n      logData.status_code || null\n    ];\n\n    await this.databaseService.request(insertQuery, params);\n  }\n\n  async getLogs(limit = 100, offset = 0): Promise<Log[]> {\n    await this.ensureInitialized();\n    \n    const query = `\n      SELECT * FROM logs \n      ORDER BY timestamp DESC \n      LIMIT ? OFFSET ?\n    `;\n    \n    return await this.databaseService.read<Log>(query, [limit, offset]);\n  }\n\n  async getLogsByController(controller: string, limit = 100): Promise<Log[]> {\n    await this.ensureInitialized();\n    \n    const query = `\n      SELECT * FROM logs \n      WHERE controller = ? \n      ORDER BY timestamp DESC \n      LIMIT ?\n    `;\n    \n    return await this.databaseService.read<Log>(query, [controller, limit]);\n  }\n\n  async getLogsByUser(userId: string, limit = 100): Promise<Log[]> {\n    await this.ensureInitialized();\n    \n    const query = `\n      SELECT * FROM logs \n      WHERE user_id = ? \n      ORDER BY timestamp DESC \n      LIMIT ?\n    `;\n    \n    return await this.databaseService.read<Log>(query, [userId, limit]);\n  }\n\n  async getLogsByTable(tableName: string, limit = 100): Promise<Log[]> {\n    await this.ensureInitialized();\n    \n    const query = `\n      SELECT * FROM logs \n      WHERE table_name = ? \n      ORDER BY timestamp DESC \n      LIMIT ?\n    `;\n    \n    return await this.databaseService.read<Log>(query, [tableName, limit]);\n  }\n\n  async deleteOldLogs(daysOld: number): Promise<void> {\n    await this.ensureInitialized();\n    \n    const cutoffDate = new Date(Date.now() - daysOld * 24 * 60 * 60 * 1000).toISOString();\n    const query = `DELETE FROM logs WHERE timestamp < ?`;\n    \n    await this.databaseService.request(query, [cutoffDate]);\n  }\n\n  async getLogStats(): Promise<{\n    totalLogs: number;\n    logsByController: { controller: string; count: number }[];\n    logsByTable: { table_name: string; count: number }[];\n  }> {\n    await this.ensureInitialized();\n    \n    const totalQuery = `SELECT COUNT(*) as count FROM logs`;\n    const controllerQuery = `\n      SELECT controller, COUNT(*) as count \n      FROM logs \n      GROUP BY controller \n      ORDER BY count DESC\n    `;\n    const tableQuery = `\n      SELECT table_name, COUNT(*) as count \n      FROM logs \n      WHERE table_name IS NOT NULL \n      GROUP BY table_name \n      ORDER BY count DESC\n    `;\n\n    const [totalResult, controllerResults, tableResults] = await Promise.all([\n      this.databaseService.read<{ count: number }>(totalQuery),\n      this.databaseService.read<{ controller: string; count: number }>(controllerQuery),\n      this.databaseService.read<{ table_name: string; count: number }>(tableQuery)\n    ]);\n\n    return {\n      totalLogs: totalResult[0]?.count || 0,\n      logsByController: controllerResults,\n      logsByTable: tableResults\n    };\n  }\n}\n", "import ejs from 'ejs';\nimport { injectable } from 'inversify';\nimport nodemailer, { Transporter } from 'nodemailer';\nimport path from 'path';\n\nexport interface IMailService {\n  sendPasswordResetMail(to: string, resetLink: string): Promise<void>;\n  sendAccountConfirmationMail(to: string, confirmationLink: string): Promise<void>;\n  sendConnectionNotificationMail(to: string, username: string): Promise<void>;\n  initialize(): Promise<void>;\n}\n\n@injectable()\nexport class MailService implements IMailService {\n  private transporter: Transporter | null = null;\n  private isInitialized: boolean = false;\n\n  constructor() {\n    // Ne pas cr\u00E9er le transporter dans le constructeur\n  }\n\n  public async initialize(): Promise<void> {\n    if (!this.isInitialized) {\n      this.transporter = nodemailer.createTransport({\n        host: process.env.SMTP_HOST || 'mail.croissant-api.fr',\n        port: Number(process.env.SMTP_PORT) || 587,\n        secure: false, // true for 465, false for other ports\n        auth: {\n          user: process.env.SMTP_USER || 'noreply@croissant-api.fr',\n          pass: process.env.SMTP_PASS,\n        },\n      });\n      this.isInitialized = true;\n    }\n  }\n\n  private async ensureInitialized(): Promise<void> {\n    if (!this.isInitialized) {\n      await this.initialize();\n    }\n  }\n\n  private async sendTemplateMail(to: string, template: string, subject: string, data?: Record<string, unknown>) {\n    await this.ensureInitialized();\n    const templatePath = path.join(process.cwd(), 'mailTemplates', template);\n    const html = await ejs.renderFile(templatePath, data || {});\n    const mailOptions = {\n      from: process.env.SMTP_FROM || 'Croissant API <noreply@croissant-api.fr>',\n      to,\n      subject,\n      html,\n    };\n    if (!this.transporter) {\n      throw new Error('Mail service is not properly initialized');\n    }\n    await this.transporter.sendMail(mailOptions);\n  }\n\n  async sendPasswordResetMail(to: string, resetToken: string) {\n    await this.sendTemplateMail(to, 'passwordReset.ejs', 'Password Reset Request', { resetToken });\n  }\n\n  async sendAccountConfirmationMail(to: string) {\n    await this.sendTemplateMail(to, 'accountConfirmation.ejs', 'Account Creation notification');\n  }\n\n  async sendConnectionNotificationMail(to: string, username: string) {\n    await this.sendTemplateMail(to, 'connectionNotification.ejs', 'New login to your account', { username });\n  }\n}\n", "import { inject, injectable } from 'inversify';\nimport { v4 as uuidv4 } from 'uuid';\nimport { InventoryItem } from '../interfaces/Inventory';\nimport { EnrichedMarketListing, MarketListing, MarketListingStatus } from '../interfaces/MarketListing';\nimport { MarketListingRepository } from '../repositories/MarketListingRepository';\nimport { IBuyOrderService } from './BuyOrderService';\nimport { DatabaseService } from './DatabaseService';\n\nexport interface IMarketListingService {\n  createMarketListing(sellerId: string, inventoryItem: InventoryItem, sellingPrice: number): Promise<MarketListing>;\n  cancelMarketListing(listingId: string, sellerId: string): Promise<void>;\n  buyMarketListing(listingId: string, buyerId: string): Promise<MarketListing>;\n  getMarketListingsByUser(userId: string): Promise<EnrichedMarketListing[]>;\n  getActiveListingsForItem(itemId: string): Promise<MarketListing[]>;\n  getMarketListingById(listingId: string): Promise<MarketListing | null>;\n  getEnrichedMarketListings(limit?: number, offset?: number): Promise<EnrichedMarketListing[]>;\n  searchMarketListings(searchTerm: string, limit?: number): Promise<EnrichedMarketListing[]>;\n}\n\n@injectable()\nexport class MarketListingService implements IMarketListingService {\n  private marketListingRepository: MarketListingRepository;\n\n  constructor(\n    @inject('DatabaseService') private databaseService: DatabaseService,\n    @inject('BuyOrderService') private buyOrderService: IBuyOrderService\n  ) {\n    this.marketListingRepository = new MarketListingRepository(this.databaseService);\n  }\n\n  async createMarketListing(sellerId: string, inventoryItem: InventoryItem, sellingPrice: number): Promise<MarketListing> {\n    const now = new Date().toISOString();\n\n    if (!inventoryItem.sellable && !inventoryItem.metadata) {\n      throw new Error('This item cannot be sold');\n    }\n\n    if (inventoryItem.user_id !== sellerId) {\n      throw new Error('You do not own this item');\n    }\n\n    if (inventoryItem.amount < 1) {\n      throw new Error('Not enough quantity to sell');\n    }\n\n    if (sellingPrice <= 0) {\n      throw new Error('Selling price must be positive');\n    }\n\n    const marketListing: MarketListing = {\n      id: uuidv4(),\n      seller_id: sellerId,\n      item_id: inventoryItem.item_id,\n      price: sellingPrice,\n      purchasePrice: inventoryItem.purchasePrice || undefined,\n      status: 'active' as MarketListingStatus,\n      metadata: inventoryItem.metadata,\n      created_at: now,\n      updated_at: now,\n      rarity: inventoryItem.rarity || 'common',\n      custom_url_link: inventoryItem.custom_url_link || undefined,\n    };\n\n    await this.marketListingRepository.insertMarketListing(marketListing);\n\n    if (inventoryItem.metadata && inventoryItem.metadata._unique_id && typeof inventoryItem.metadata._unique_id === 'string') {\n      await this.marketListingRepository.removeInventoryItemByUniqueId(sellerId, inventoryItem.item_id, inventoryItem.metadata._unique_id);\n    } else if (inventoryItem.purchasePrice) {\n      await this.marketListingRepository.updateInventoryAmountOrDelete(sellerId, inventoryItem.item_id, inventoryItem.purchasePrice);\n    } else {\n      await this.marketListingRepository.decrementOrDeleteInventory(sellerId, inventoryItem.item_id);\n    }\n\n    const matchedBuyOrder = await this.buyOrderService.matchSellOrder(marketListing.item_id, marketListing.price);\n    if (matchedBuyOrder) {\n      await this.marketListingRepository.updateBuyOrderToFulfilled(matchedBuyOrder.id, now);\n      await this.buyMarketListing(marketListing.id, matchedBuyOrder.buyer_id);\n    }\n    return marketListing;\n  }\n\n  async cancelMarketListing(listingId: string, sellerId: string): Promise<void> {\n    const listing = await this.marketListingRepository.getMarketListingById(listingId, sellerId);\n    if (!listing) throw new Error('Market listing not found or already processed');\n    const metadata = typeof listing.metadata === 'string' ? JSON.parse(listing.metadata) : listing.metadata || {};\n    await this.marketListingRepository.updateMarketListingStatus(listingId, 'cancelled', new Date().toISOString());\n    const inventoryItem: InventoryItem = {\n      user_id: sellerId,\n      item_id: listing.item_id,\n      amount: 1,\n      metadata: Object.keys(metadata).length > 0 ? metadata : undefined,\n      sellable: true,\n      purchasePrice: listing.purchasePrice || undefined,\n      rarity: listing.rarity,\n      custom_url_link: listing.custom_url_link || undefined,\n    };\n    await this.marketListingRepository.addItemToInventory(inventoryItem);\n  }\n\n  async buyMarketListing(listingId: string, buyerId: string): Promise<MarketListing> {\n    const now = new Date().toISOString();\n    const listing = await this.marketListingRepository.getMarketListingById(listingId);\n    if (!listing) throw new Error('Market listing not found or already sold');\n\n    await this.marketListingRepository.updateMarketListingSold(listingId, buyerId, now);\n    const inventoryItem: InventoryItem = {\n      user_id: buyerId,\n      item_id: listing.item_id,\n      amount: 1,\n      metadata: listing.metadata,\n      sellable: true,\n      purchasePrice: listing.purchasePrice || undefined,\n      rarity: listing.rarity || 'common',\n      custom_url_link: listing.custom_url_link,\n    };\n    await this.marketListingRepository.addItemToInventory(inventoryItem);\n    return { ...listing, status: 'sold', buyer_id: buyerId, sold_at: now };\n  }\n\n  async getMarketListingsByUser(userId: string): Promise<EnrichedMarketListing[]> {\n    const listings = await this.marketListingRepository.getMarketListingsByUser(userId);\n    return listings.map(row => ({\n      ...this.deserializeMarketListing(row),\n      item_name: row.item_name,\n      item_description: row.item_description,\n      item_icon_hash: row.item_icon_hash,\n    }));\n  }\n\n  async getActiveListingsForItem(itemId: string): Promise<MarketListing[]> {\n    const listings = await this.marketListingRepository.getActiveListingsForItem(itemId);\n    return listings.map(this.deserializeMarketListing);\n  }\n\n  async getMarketListingById(listingId: string): Promise<MarketListing | null> {\n    const listing = await this.marketListingRepository.getMarketListingByIdAnyStatus(listingId);\n    return listing ? this.deserializeMarketListing(listing) : null;\n  }\n\n  async getEnrichedMarketListings(limit: number = 50, offset: number = 0): Promise<EnrichedMarketListing[]> {\n    const listings = await this.marketListingRepository.getEnrichedMarketListings(limit, offset);\n    return listings.map(row => ({\n      ...this.deserializeMarketListing(row),\n      item_name: row.item_name,\n      item_description: row.item_description,\n      item_icon_hash: row.item_icon_hash,\n    }));\n  }\n\n  async searchMarketListings(searchTerm: string, limit: number = 50): Promise<EnrichedMarketListing[]> {\n    const listings = await this.marketListingRepository.searchMarketListings(searchTerm, limit);\n    return listings.map(row => ({\n      ...this.deserializeMarketListing(row),\n      item_name: row.item_name,\n      item_description: row.item_description,\n      item_icon_hash: row.item_icon_hash,\n    }));\n  }\n\n  private deserializeMarketListing = (row: MarketListing): MarketListing => ({\n    id: row.id,\n    seller_id: row.seller_id,\n    item_id: row.item_id,\n    price: row.price,\n    status: row.status,\n    metadata: row.metadata,\n    created_at: row.created_at,\n    updated_at: row.updated_at,\n    sold_at: row.sold_at || undefined,\n    buyer_id: row.buyer_id || undefined,\n    rarity: row.rarity || 'common',\n    custom_url_link: row.custom_url_link || undefined,\n  });\n}\n", "import { InventoryItem } from '../interfaces/Inventory';\nimport { EnrichedMarketListing, MarketListing } from '../interfaces/MarketListing';\nimport { IDatabaseService } from '../services/DatabaseService';\n\nexport class MarketListingRepository {\n  constructor(private databaseService: IDatabaseService) {}\n\n  async insertMarketListing(listing: MarketListing): Promise<void> {\n    await this.databaseService.request(\n      `INSERT INTO market_listings (id, seller_id, item_id, price, status, metadata, created_at, updated_at, purchasePrice) \n             VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)`,\n      [listing.id, listing.seller_id, listing.item_id, listing.price, listing.status, JSON.stringify(listing.metadata || {}), listing.created_at, listing.updated_at, listing.purchasePrice]\n    );\n  }\n\n  // --- INVENTORY HELPERS ---\n  async removeInventoryItemByUniqueId(userId: string, itemId: string, uniqueId: string): Promise<void> {\n    await this.databaseService.request(`DELETE FROM inventories WHERE user_id = ? AND item_id = ? AND JSON_EXTRACT(metadata, '$._unique_id') = ?`, [userId, itemId, uniqueId]);\n  }\n\n  async updateInventoryAmountOrDelete(userId: string, itemId: string, purchasePrice: number): Promise<void> {\n    const [row] = await this.databaseService.read<{ amount: number }>(`SELECT amount FROM inventories WHERE user_id = ? AND item_id = ? AND purchasePrice = ?`, [userId, itemId, purchasePrice]);\n    if (row && row.amount > 1) {\n      await this.databaseService.request(`UPDATE inventories SET amount = amount - 1 WHERE user_id = ? AND item_id = ? AND purchasePrice = ?`, [userId, itemId, purchasePrice]);\n    } else {\n      await this.databaseService.request(`DELETE FROM inventories WHERE user_id = ? AND item_id = ? AND purchasePrice = ?`, [userId, itemId, purchasePrice]);\n    }\n  }\n\n  async decrementOrDeleteInventory(userId: string, itemId: string): Promise<void> {\n    await this.databaseService.request(`UPDATE inventories SET amount = amount - 1 WHERE user_id = ? AND item_id = ? AND amount > 0`, [userId, itemId]);\n    await this.databaseService.request(`DELETE FROM inventories WHERE user_id = ? AND item_id = ? AND amount = 0`, [userId, itemId]);\n  }\n\n  // --- MARKET LISTING GENERIC GETTER ---\n  async getMarketListings(filters: { id?: string; sellerId?: string; itemId?: string; status?: string } = {}, select: string = '*', orderBy: string = 'created_at DESC', limit?: number): Promise<MarketListing[]> {\n    let query = `SELECT ${select} FROM market_listings WHERE 1=1`;\n    const params = [];\n    if (filters.id) {\n      query += ' AND id = ?';\n      params.push(filters.id);\n    }\n    if (filters.sellerId) {\n      query += ' AND seller_id = ?';\n      params.push(filters.sellerId);\n    }\n    if (filters.itemId) {\n      query += ' AND item_id = ?';\n      params.push(filters.itemId);\n    }\n    if (filters.status) {\n      query += ' AND status = ?';\n      params.push(filters.status);\n    }\n    query += ` ORDER BY ${orderBy}`;\n    if (limit) query += ` LIMIT ${limit}`;\n    return this.databaseService.read<MarketListing>(query, params);\n  }\n\n  // --- Surcharges utilisant la m\u00E9thode g\u00E9n\u00E9rique ---\n  async getMarketListingById(listingId: string, sellerId?: string): Promise<MarketListing | null> {\n    const listings = await this.getMarketListings({ id: listingId, sellerId, status: 'active' });\n    return listings[0] || null;\n  }\n\n  async getMarketListingByIdAnyStatus(listingId: string): Promise<MarketListing | null> {\n    const listings = await this.getMarketListings({ id: listingId });\n    return listings[0] || null;\n  }\n\n  async getMarketListingsByUser(userId: string): Promise<EnrichedMarketListing[]> {\n    return this.databaseService.read<EnrichedMarketListing>(\n      `SELECT \n                ml.*,\n                i.name as item_name,\n                i.description as item_description,\n                i.iconHash as item_icon_hash\n             FROM market_listings ml\n             JOIN items i ON ml.item_id = i.itemId\n             WHERE ml.seller_id = ?\n             ORDER BY ml.created_at DESC`,\n      [userId]\n    );\n  }\n\n  async getActiveListingsForItem(itemId: string): Promise<MarketListing[]> {\n    return this.getMarketListings({ itemId, status: 'active' }, '*', 'price ASC, created_at ASC');\n  }\n\n  async getEnrichedMarketListings(limit: number, offset: number): Promise<EnrichedMarketListing[]> {\n    return this.databaseService.read<EnrichedMarketListing>(\n      `SELECT \n                ml.*,\n                i.name as item_name,\n                i.description as item_description,\n                i.iconHash as item_icon_hash\n             FROM market_listings ml\n             JOIN items i ON ml.item_id = i.itemId\n             WHERE ml.status = 'active' AND (i.deleted IS NULL OR i.deleted = 0)\n             ORDER BY ml.created_at DESC\n             LIMIT ? OFFSET ?`,\n      [limit, offset]\n    );\n  }\n\n  async searchMarketListings(searchTerm: string, limit: number): Promise<EnrichedMarketListing[]> {\n    return this.databaseService.read<EnrichedMarketListing>(\n      `SELECT \n                ml.*,\n                i.name as item_name,\n                i.description as item_description,\n                i.iconHash as item_icon_hash\n             FROM market_listings ml\n             JOIN items i ON ml.item_id = i.itemId\n             WHERE ml.status = 'active' \n               AND (i.deleted IS NULL OR i.deleted = 0)\n               AND i.name LIKE ?\n             ORDER BY ml.price ASC, ml.created_at ASC\n             LIMIT ?`,\n      [`%${searchTerm}%`, limit]\n    );\n  }\n\n  // --- UPDATE STATUS ---\n  async updateMarketListingStatus(listingId: string, status: string, updatedAt: string): Promise<void> {\n    await this.databaseService.request(`UPDATE market_listings SET status = ?, updated_at = ? WHERE id = ?`, [status, updatedAt, listingId]);\n  }\n\n  async updateMarketListingSold(listingId: string, buyerId: string, now: string): Promise<void> {\n    await this.databaseService.request(`UPDATE market_listings SET status = 'sold', buyer_id = ?, sold_at = ?, updated_at = ? WHERE id = ?`, [buyerId, now, now, listingId]);\n  }\n\n  async updateBuyOrderToFulfilled(buyOrderId: string, now: string): Promise<void> {\n    await this.databaseService.request(`UPDATE buy_orders SET status = 'fulfilled', fulfilled_at = ?, updated_at = ? WHERE id = ?`, [now, now, buyOrderId]);\n  }\n\n  // --- INVENTORY ADD ---\n  async addItemToInventory(inventoryItem: InventoryItem): Promise<void> {\n    if (inventoryItem.metadata && inventoryItem.metadata._unique_id) {\n      await this.databaseService.request(`INSERT INTO inventories (user_id, item_id, amount, metadata, sellable, purchasePrice) VALUES (?, ?, ?, ?, ?, ?)`, [inventoryItem.user_id, inventoryItem.item_id, inventoryItem.amount, JSON.stringify(inventoryItem.metadata), inventoryItem.sellable, inventoryItem.purchasePrice]);\n    } else {\n      const existingResult = await this.databaseService.read(`SELECT * FROM inventories WHERE user_id = ? AND item_id = ? AND purchasePrice = ?`, [inventoryItem.user_id, inventoryItem.item_id, inventoryItem.purchasePrice || null]);\n      if (existingResult.length > 0) {\n        await this.databaseService.request(`UPDATE inventories SET amount = amount + ? WHERE user_id = ? AND item_id = ? AND purchasePrice = ?`, [inventoryItem.amount, inventoryItem.user_id, inventoryItem.item_id, inventoryItem.purchasePrice || null]);\n      } else {\n        await this.databaseService.request(`INSERT INTO inventories (user_id, item_id, amount, metadata, sellable, purchasePrice) VALUES (?, ?, ?, ?, ?, ?)`, [inventoryItem.user_id, inventoryItem.item_id, inventoryItem.amount, null, inventoryItem.sellable, inventoryItem.purchasePrice]);\n      }\n    }\n  }\n}\n", "import { inject, injectable } from 'inversify';\nimport { OAuth2App } from '../interfaces/OAuth2App';\nimport { Oauth2User } from '../interfaces/User';\nimport { OAuth2Repository } from '../repositories/OAuth2Repository';\nimport { IDatabaseService } from './DatabaseService';\n\nexport interface IOAuth2Service {\n  createApp(owner_id: string, name: string, redirect_urls: string[]): Promise<OAuth2App>;\n  getAppsByOwner(owner_id: string): Promise<OAuth2App[]>;\n  getAppByClientId(client_id: string): Promise<OAuth2App | null>;\n  generateAuthCode(client_id: string, redirect_uri: string, user_id: string): Promise<string>;\n  deleteApp(client_id: string, owner_id: string): Promise<void>;\n  updateApp(client_id: string, owner_id: string, update: { name?: string; redirect_urls?: string[] }): Promise<void>;\n  getUserByCode(code: string, client_id: string): Promise<Oauth2User | null>;\n}\n\n@injectable()\nexport class OAuth2Service implements IOAuth2Service {\n  private oauth2Repository: OAuth2Repository;\n  constructor(@inject('DatabaseService') private db: IDatabaseService) {\n    this.oauth2Repository = new OAuth2Repository(this.db);\n  }\n\n  async createApp(owner_id: string, name: string, redirect_urls: string[]): Promise<OAuth2App> {\n    return this.oauth2Repository.createApp(owner_id, name, redirect_urls);\n  }\n\n  async getAppsByOwner(owner_id: string): Promise<OAuth2App[]> {\n    return this.oauth2Repository.getAppsByOwner(owner_id);\n  }\n\n  async getAppByClientId(client_id: string): Promise<OAuth2App | null> {\n    return this.oauth2Repository.getAppByClientId(client_id);\n  }\n\n  async generateAuthCode(client_id: string, redirect_uri: string, user_id: string): Promise<string> {\n    return this.oauth2Repository.generateAuthCode(client_id, redirect_uri, user_id);\n  }\n\n  async deleteApp(client_id: string, owner_id: string): Promise<void> {\n    await this.oauth2Repository.deleteApp(client_id, owner_id);\n  }\n\n  async updateApp(client_id: string, owner_id: string, update: { name?: string; redirect_urls?: string[] }): Promise<void> {\n    await this.oauth2Repository.updateApp(client_id, owner_id, update);\n  }\n\n  async getUserByCode(code: string, client_id: string): Promise<Oauth2User | null> {\n    return this.oauth2Repository.getUserByCode(code, client_id);\n  }\n}\n", "import { v4 } from 'uuid';\nimport { OAuth2App } from '../interfaces/OAuth2App';\nimport { Oauth2User } from '../interfaces/User';\nimport { IDatabaseService } from '../services/DatabaseService';\n\nexport class OAuth2Repository {\n  constructor(private db: IDatabaseService) {}\n\n  async createApp(owner_id: string, name: string, redirect_urls: string[]): Promise<OAuth2App> {\n    const client_id = v4();\n    const client_secret = v4();\n    await this.db.request('INSERT INTO oauth2_apps (owner_id, client_id, client_secret, name, redirect_urls) VALUES (?, ?, ?, ?, ?)', [owner_id, client_id, client_secret, name, JSON.stringify(redirect_urls)]);\n    return { owner_id, client_id, client_secret, name, redirect_urls };\n  }\n\n  async getApps(filters: { owner_id?: string; client_id?: string } = {}, select: string = '*'): Promise<OAuth2App[]> {\n    let query = `SELECT ${select} FROM oauth2_apps WHERE 1=1`;\n    const params = [];\n    if (filters.owner_id) {\n      query += ' AND owner_id = ?';\n      params.push(filters.owner_id);\n    }\n    if (filters.client_id) {\n      query += ' AND client_id = ?';\n      params.push(filters.client_id);\n    }\n    const apps = await this.db.read<OAuth2App>(query, params);\n\n    return apps.map(app => ({\n      ...app,\n      redirect_urls: typeof app.redirect_urls === 'string' ? JSON.parse(app.redirect_urls) : app.redirect_urls,\n    }));\n  }\n\n  async getAppsByOwner(owner_id: string): Promise<OAuth2App[]> {\n    return this.getApps({ owner_id });\n  }\n\n  async getFormattedAppsByOwner(owner_id: string): Promise<\n    Array<{\n      client_id: string;\n      client_secret: string;\n      name: string;\n      redirect_urls: string[];\n    }>\n  > {\n    const apps = await this.db.read<OAuth2App>('SELECT client_id, client_secret, name, redirect_urls FROM oauth2_apps WHERE owner_id = ?', [owner_id]);\n    return apps.map(app => ({\n      client_id: app.client_id,\n      client_secret: app.client_secret,\n      name: app.name,\n      redirect_urls: app.redirect_urls,\n    }));\n  }\n\n  async getAppByClientId(client_id: string): Promise<OAuth2App | null> {\n    const apps = await this.getApps({ client_id });\n    return apps[0] || null;\n  }\n\n  async getFormattedAppByClientId(client_id: string): Promise<{\n    client_id: string;\n    client_secret: string;\n    name: string;\n    redirect_urls: string[];\n  } | null> {\n    const rows = await this.db.read<OAuth2App>('SELECT client_id, client_secret, name, redirect_urls FROM oauth2_apps WHERE client_id = ?', [client_id]);\n    if (!rows) return null;\n    const app = rows[0];\n    return {\n      client_id: app.client_id,\n      client_secret: app.client_secret,\n      name: app.name,\n      redirect_urls: app.redirect_urls,\n    };\n  }\n\n  async generateAuthCode(client_id: string, redirect_uri: string, user_id: string): Promise<string> {\n    const code = v4();\n    await this.db.request('INSERT INTO oauth2_codes (code, client_id, redirect_uri, user_id) VALUES (?, ?, ?, ?)', [code, client_id, redirect_uri, user_id]);\n    return code;\n  }\n\n  async deleteApp(client_id: string, owner_id: string): Promise<void> {\n    await this.db.request('DELETE FROM oauth2_apps WHERE client_id = ? AND owner_id = ?', [client_id, owner_id]);\n  }\n\n  async updateApp(client_id: string, owner_id: string, update: { name?: string; redirect_urls?: string[] }): Promise<void> {\n    const { fields, values } = buildUpdateFields(update, { redirect_urls: v => JSON.stringify(v) });\n    if (!fields.length) return;\n    values.push(client_id, owner_id);\n    await this.db.request(`UPDATE oauth2_apps SET ${fields.join(', ')} WHERE client_id = ? AND owner_id = ?`, values);\n  }\n\n  async getUserByCode(code: string, client_id: string): Promise<Oauth2User | null> {\n    const users = await this.db.read<Oauth2User>(\n      `SELECT u.username, u.user_id, u.email, u.balance, u.verified, \n              u.steam_username, u.steam_avatar_url, u.steam_id, u.discord_id, u.google_id\n       FROM oauth2_codes c\n       INNER JOIN oauth2_apps a ON c.client_id = a.client_id\n       INNER JOIN users u ON c.user_id = u.user_id\n       WHERE c.code = ? AND c.client_id = ?`,\n      [code, client_id]\n    );\n    return users[0] || null;\n  }\n}\n\nfunction buildUpdateFields(obj: Record<string, unknown>, mapping: Record<string, (v: unknown) => unknown> = {}) {\n  const fields: string[] = [];\n  const values: unknown[] = [];\n  for (const key in obj) {\n    if (typeof obj[key] === 'undefined') continue;\n    fields.push(`${key} = ?`);\n    values.push(mapping[key] ? mapping[key](obj[key]) : obj[key]);\n  }\n  return { fields, values };\n}\n", "import axios from 'axios';\nimport { injectable } from 'inversify';\nimport querystring from 'querystring';\n\nconst STEAM_API_KEY = process.env.STEAM_API_KEY || 'BE084FB89CC0FF28AC790A9CC5D008A1';\nconst STEAM_REALM = process.env.STEAM_REALM || 'http://localhost:8580/';\nconst STEAM_RETURN_URL = process.env.STEAM_RETURN_URL || 'http://localhost:8580/api/users/steam-associate';\n\nexport interface ISteamOAuthService {\n  getAuthUrl(): string;\n  verifySteamOpenId(query: Record<string, string | string[]>): Promise<string | null>;\n  getSteamProfile(steamid: string): Promise<{\n    steamid: string;\n    personaname: string;\n    avatarfull: string;\n    profileurl: string;\n  } | null>;\n}\n\n@injectable()\nexport class SteamOAuthService implements ISteamOAuthService {\n  private extractSteamId(claimedId: string | undefined): string | null {\n    if (!claimedId) return null;\n    const match = claimedId.match(/\\/(id|profiles)\\/(\\d+)$/);\n    return match ? match[2] : null;\n  }\n\n  /**\n   * G\u00E9n\u00E8re l'URL d'authentification Steam (OpenID)\n   */\n  getAuthUrl(): string {\n    const params = {\n      'openid.ns': 'http://specs.openid.net/auth/2.0',\n      'openid.mode': 'checkid_setup',\n      'openid.return_to': STEAM_RETURN_URL,\n      'openid.realm': STEAM_REALM,\n      'openid.identity': 'http://specs.openid.net/auth/2.0/identifier_select',\n      'openid.claimed_id': 'http://specs.openid.net/auth/2.0/identifier_select',\n    };\n    return `https://steamcommunity.com/openid/login?${querystring.stringify(params)}`;\n  }\n\n  /**\n   * V\u00E9rifie la r\u00E9ponse OpenID de Steam et retourne le steamid si succ\u00E8s\n   */\n  async verifySteamOpenId(query: Record<string, string | string[]>): Promise<string | null> {\n    const body = { ...query, 'openid.mode': 'check_authentication' };\n    try {\n      const response = await axios.post('https://steamcommunity.com/openid/login', querystring.stringify(body), { headers: { 'Content-Type': 'application/x-www-form-urlencoded' } });\n      if (response.data && response.data.includes('is_valid:true')) {\n        const claimedId = typeof query['openid.claimed_id'] === 'string' ? query['openid.claimed_id'] : (query['openid.claimed_id'] || [])[0];\n        return this.extractSteamId(claimedId);\n      }\n    } catch (e: unknown) {\n      console.error('Error verifying Steam OpenID', e);\n      // Optionally log error\n    }\n    return null;\n  }\n\n  /**\n   * R\u00E9cup\u00E8re les infos publiques Steam d'un utilisateur via l'API Steam Web\n   */\n  async getSteamProfile(steamid: string): Promise<{\n    steamid: string;\n    personaname: string;\n    avatarfull: string;\n    profileurl: string;\n  } | null> {\n    const url = `https://api.steampowered.com/ISteamUser/GetPlayerSummaries/v2/?key=${STEAM_API_KEY}&steamids=${steamid}`;\n    try {\n      const response = await axios.get(url);\n      const player = response.data?.response?.players?.[0];\n      if (!player) return null;\n      return {\n        steamid: player.steamid,\n        personaname: player.personaname,\n        avatarfull: player.avatarfull,\n        profileurl: player.profileurl,\n      };\n    } catch (e: unknown) {\n      console.error('Error fetching Steam profile', e);\n      return null;\n    }\n  }\n}\n", "import axios from './lib/axios.js';\n\n// This module is intended to unwrap Axios default export as named.\n// Keep top-level export same with static properties\n// so that it can keep same with es module or cjs\nconst {\n  Axios,\n  AxiosError,\n  CanceledError,\n  isCancel,\n  CancelToken,\n  VERSION,\n  all,\n  Cancel,\n  isAxiosError,\n  spread,\n  toFormData,\n  AxiosHeaders,\n  HttpStatusCode,\n  formToJSON,\n  getAdapter,\n  mergeConfig\n} = axios;\n\nexport {\n  axios as default,\n  Axios,\n  AxiosError,\n  CanceledError,\n  isCancel,\n  CancelToken,\n  VERSION,\n  all,\n  Cancel,\n  isAxiosError,\n  spread,\n  toFormData,\n  AxiosHeaders,\n  HttpStatusCode,\n  formToJSON,\n  getAdapter,\n  mergeConfig\n}\n", "'use strict';\n\nimport utils from './utils.js';\nimport bind from './helpers/bind.js';\nimport Axios from './core/Axios.js';\nimport mergeConfig from './core/mergeConfig.js';\nimport defaults from './defaults/index.js';\nimport formDataToJSON from './helpers/formDataToJSON.js';\nimport CanceledError from './cancel/CanceledError.js';\nimport CancelToken from './cancel/CancelToken.js';\nimport isCancel from './cancel/isCancel.js';\nimport {VERSION} from './env/data.js';\nimport toFormData from './helpers/toFormData.js';\nimport AxiosError from './core/AxiosError.js';\nimport spread from './helpers/spread.js';\nimport isAxiosError from './helpers/isAxiosError.js';\nimport AxiosHeaders from \"./core/AxiosHeaders.js\";\nimport adapters from './adapters/adapters.js';\nimport HttpStatusCode from './helpers/HttpStatusCode.js';\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n *\n * @returns {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  const context = new Axios(defaultConfig);\n  const instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context, {allOwnKeys: true});\n\n  // Copy context to instance\n  utils.extend(instance, context, null, {allOwnKeys: true});\n\n  // Factory for creating new instances\n  instance.create = function create(instanceConfig) {\n    return createInstance(mergeConfig(defaultConfig, instanceConfig));\n  };\n\n  return instance;\n}\n\n// Create the default instance to be exported\nconst axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Expose Cancel & CancelToken\naxios.CanceledError = CanceledError;\naxios.CancelToken = CancelToken;\naxios.isCancel = isCancel;\naxios.VERSION = VERSION;\naxios.toFormData = toFormData;\n\n// Expose AxiosError class\naxios.AxiosError = AxiosError;\n\n// alias for CanceledError for backward compatibility\naxios.Cancel = axios.CanceledError;\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\n\naxios.spread = spread;\n\n// Expose isAxiosError\naxios.isAxiosError = isAxiosError;\n\n// Expose mergeConfig\naxios.mergeConfig = mergeConfig;\n\naxios.AxiosHeaders = AxiosHeaders;\n\naxios.formToJSON = thing => formDataToJSON(utils.isHTMLForm(thing) ? new FormData(thing) : thing);\n\naxios.getAdapter = adapters.getAdapter;\n\naxios.HttpStatusCode = HttpStatusCode;\n\naxios.default = axios;\n\n// this module should only have a default export\nexport default axios\n", "'use strict';\n\nimport bind from './helpers/bind.js';\n\n// utils is a library of generic helper functions non-specific to axios\n\nconst {toString} = Object.prototype;\nconst {getPrototypeOf} = Object;\nconst {iterator, toStringTag} = Symbol;\n\nconst kindOf = (cache => thing => {\n    const str = toString.call(thing);\n    return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());\n})(Object.create(null));\n\nconst kindOfTest = (type) => {\n  type = type.toLowerCase();\n  return (thing) => kindOf(thing) === type\n}\n\nconst typeOfTest = type => thing => typeof thing === type;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n *\n * @returns {boolean} True if value is an Array, otherwise false\n */\nconst {isArray} = Array;\n\n/**\n * Determine if a value is undefined\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nconst isUndefined = typeOfTest('undefined');\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && isFunction(val.constructor.isBuffer) && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nconst isArrayBuffer = kindOfTest('ArrayBuffer');\n\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  let result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (isArrayBuffer(val.buffer));\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a String, otherwise false\n */\nconst isString = typeOfTest('string');\n\n/**\n * Determine if a value is a Function\n *\n * @param {*} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nconst isFunction = typeOfTest('function');\n\n/**\n * Determine if a value is a Number\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Number, otherwise false\n */\nconst isNumber = typeOfTest('number');\n\n/**\n * Determine if a value is an Object\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an Object, otherwise false\n */\nconst isObject = (thing) => thing !== null && typeof thing === 'object';\n\n/**\n * Determine if a value is a Boolean\n *\n * @param {*} thing The value to test\n * @returns {boolean} True if value is a Boolean, otherwise false\n */\nconst isBoolean = thing => thing === true || thing === false;\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a plain Object, otherwise false\n */\nconst isPlainObject = (val) => {\n  if (kindOf(val) !== 'object') {\n    return false;\n  }\n\n  const prototype = getPrototypeOf(val);\n  return (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(toStringTag in val) && !(iterator in val);\n}\n\n/**\n * Determine if a value is an empty object (safely handles Buffers)\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is an empty object, otherwise false\n */\nconst isEmptyObject = (val) => {\n  // Early return for non-objects or Buffers to prevent RangeError\n  if (!isObject(val) || isBuffer(val)) {\n    return false;\n  }\n\n  try {\n    return Object.keys(val).length === 0 && Object.getPrototypeOf(val) === Object.prototype;\n  } catch (e) {\n    // Fallback for any other objects that might cause RangeError with Object.keys()\n    return false;\n  }\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Date, otherwise false\n */\nconst isDate = kindOfTest('Date');\n\n/**\n * Determine if a value is a File\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFile = kindOfTest('File');\n\n/**\n * Determine if a value is a Blob\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nconst isBlob = kindOfTest('Blob');\n\n/**\n * Determine if a value is a FileList\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFileList = kindOfTest('FileList');\n\n/**\n * Determine if a value is a Stream\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nconst isStream = (val) => isObject(val) && isFunction(val.pipe);\n\n/**\n * Determine if a value is a FormData\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nconst isFormData = (thing) => {\n  let kind;\n  return thing && (\n    (typeof FormData === 'function' && thing instanceof FormData) || (\n      isFunction(thing.append) && (\n        (kind = kindOf(thing)) === 'formdata' ||\n        // detect form-data instance\n        (kind === 'object' && isFunction(thing.toString) && thing.toString() === '[object FormData]')\n      )\n    )\n  )\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nconst isURLSearchParams = kindOfTest('URLSearchParams');\n\nconst [isReadableStream, isRequest, isResponse, isHeaders] = ['ReadableStream', 'Request', 'Response', 'Headers'].map(kindOfTest);\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n *\n * @returns {String} The String freed of excess whitespace\n */\nconst trim = (str) => str.trim ?\n  str.trim() : str.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n *\n * @param {Boolean} [allOwnKeys = false]\n * @returns {any}\n */\nfunction forEach(obj, fn, {allOwnKeys = false} = {}) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  let i;\n  let l;\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Buffer check\n    if (isBuffer(obj)) {\n      return;\n    }\n\n    // Iterate over object keys\n    const keys = allOwnKeys ? Object.getOwnPropertyNames(obj) : Object.keys(obj);\n    const len = keys.length;\n    let key;\n\n    for (i = 0; i < len; i++) {\n      key = keys[i];\n      fn.call(null, obj[key], key, obj);\n    }\n  }\n}\n\nfunction findKey(obj, key) {\n  if (isBuffer(obj)){\n    return null;\n  }\n\n  key = key.toLowerCase();\n  const keys = Object.keys(obj);\n  let i = keys.length;\n  let _key;\n  while (i-- > 0) {\n    _key = keys[i];\n    if (key === _key.toLowerCase()) {\n      return _key;\n    }\n  }\n  return null;\n}\n\nconst _global = (() => {\n  /*eslint no-undef:0*/\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  return typeof self !== \"undefined\" ? self : (typeof window !== 'undefined' ? window : global)\n})();\n\nconst isContextDefined = (context) => !isUndefined(context) && context !== _global;\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n *\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  const {caseless, skipUndefined} = isContextDefined(this) && this || {};\n  const result = {};\n  const assignValue = (val, key) => {\n    const targetKey = caseless && findKey(result, key) || key;\n    if (isPlainObject(result[targetKey]) && isPlainObject(val)) {\n      result[targetKey] = merge(result[targetKey], val);\n    } else if (isPlainObject(val)) {\n      result[targetKey] = merge({}, val);\n    } else if (isArray(val)) {\n      result[targetKey] = val.slice();\n    } else {\n      if (!skipUndefined || !isUndefined(val)) {\n        result[targetKey] = val;\n      }\n    }\n  }\n\n  for (let i = 0, l = arguments.length; i < l; i++) {\n    arguments[i] && forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n *\n * @param {Boolean} [allOwnKeys]\n * @returns {Object} The resulting value of object a\n */\nconst extend = (a, b, thisArg, {allOwnKeys}= {}) => {\n  forEach(b, (val, key) => {\n    if (thisArg && isFunction(val)) {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  }, {allOwnKeys});\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n *\n * @returns {string} content value without BOM\n */\nconst stripBOM = (content) => {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\n/**\n * Inherit the prototype methods from one constructor into another\n * @param {function} constructor\n * @param {function} superConstructor\n * @param {object} [props]\n * @param {object} [descriptors]\n *\n * @returns {void}\n */\nconst inherits = (constructor, superConstructor, props, descriptors) => {\n  constructor.prototype = Object.create(superConstructor.prototype, descriptors);\n  constructor.prototype.constructor = constructor;\n  Object.defineProperty(constructor, 'super', {\n    value: superConstructor.prototype\n  });\n  props && Object.assign(constructor.prototype, props);\n}\n\n/**\n * Resolve object with deep prototype chain to a flat object\n * @param {Object} sourceObj source object\n * @param {Object} [destObj]\n * @param {Function|Boolean} [filter]\n * @param {Function} [propFilter]\n *\n * @returns {Object}\n */\nconst toFlatObject = (sourceObj, destObj, filter, propFilter) => {\n  let props;\n  let i;\n  let prop;\n  const merged = {};\n\n  destObj = destObj || {};\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  if (sourceObj == null) return destObj;\n\n  do {\n    props = Object.getOwnPropertyNames(sourceObj);\n    i = props.length;\n    while (i-- > 0) {\n      prop = props[i];\n      if ((!propFilter || propFilter(prop, sourceObj, destObj)) && !merged[prop]) {\n        destObj[prop] = sourceObj[prop];\n        merged[prop] = true;\n      }\n    }\n    sourceObj = filter !== false && getPrototypeOf(sourceObj);\n  } while (sourceObj && (!filter || filter(sourceObj, destObj)) && sourceObj !== Object.prototype);\n\n  return destObj;\n}\n\n/**\n * Determines whether a string ends with the characters of a specified string\n *\n * @param {String} str\n * @param {String} searchString\n * @param {Number} [position= 0]\n *\n * @returns {boolean}\n */\nconst endsWith = (str, searchString, position) => {\n  str = String(str);\n  if (position === undefined || position > str.length) {\n    position = str.length;\n  }\n  position -= searchString.length;\n  const lastIndex = str.indexOf(searchString, position);\n  return lastIndex !== -1 && lastIndex === position;\n}\n\n\n/**\n * Returns new array from array like object or null if failed\n *\n * @param {*} [thing]\n *\n * @returns {?Array}\n */\nconst toArray = (thing) => {\n  if (!thing) return null;\n  if (isArray(thing)) return thing;\n  let i = thing.length;\n  if (!isNumber(i)) return null;\n  const arr = new Array(i);\n  while (i-- > 0) {\n    arr[i] = thing[i];\n  }\n  return arr;\n}\n\n/**\n * Checking if the Uint8Array exists and if it does, it returns a function that checks if the\n * thing passed in is an instance of Uint8Array\n *\n * @param {TypedArray}\n *\n * @returns {Array}\n */\n// eslint-disable-next-line func-names\nconst isTypedArray = (TypedArray => {\n  // eslint-disable-next-line func-names\n  return thing => {\n    return TypedArray && thing instanceof TypedArray;\n  };\n})(typeof Uint8Array !== 'undefined' && getPrototypeOf(Uint8Array));\n\n/**\n * For each entry in the object, call the function with the key and value.\n *\n * @param {Object<any, any>} obj - The object to iterate over.\n * @param {Function} fn - The function to call for each entry.\n *\n * @returns {void}\n */\nconst forEachEntry = (obj, fn) => {\n  const generator = obj && obj[iterator];\n\n  const _iterator = generator.call(obj);\n\n  let result;\n\n  while ((result = _iterator.next()) && !result.done) {\n    const pair = result.value;\n    fn.call(obj, pair[0], pair[1]);\n  }\n}\n\n/**\n * It takes a regular expression and a string, and returns an array of all the matches\n *\n * @param {string} regExp - The regular expression to match against.\n * @param {string} str - The string to search.\n *\n * @returns {Array<boolean>}\n */\nconst matchAll = (regExp, str) => {\n  let matches;\n  const arr = [];\n\n  while ((matches = regExp.exec(str)) !== null) {\n    arr.push(matches);\n  }\n\n  return arr;\n}\n\n/* Checking if the kindOfTest function returns true when passed an HTMLFormElement. */\nconst isHTMLForm = kindOfTest('HTMLFormElement');\n\nconst toCamelCase = str => {\n  return str.toLowerCase().replace(/[-_\\s]([a-z\\d])(\\w*)/g,\n    function replacer(m, p1, p2) {\n      return p1.toUpperCase() + p2;\n    }\n  );\n};\n\n/* Creating a function that will check if an object has a property. */\nconst hasOwnProperty = (({hasOwnProperty}) => (obj, prop) => hasOwnProperty.call(obj, prop))(Object.prototype);\n\n/**\n * Determine if a value is a RegExp object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a RegExp object, otherwise false\n */\nconst isRegExp = kindOfTest('RegExp');\n\nconst reduceDescriptors = (obj, reducer) => {\n  const descriptors = Object.getOwnPropertyDescriptors(obj);\n  const reducedDescriptors = {};\n\n  forEach(descriptors, (descriptor, name) => {\n    let ret;\n    if ((ret = reducer(descriptor, name, obj)) !== false) {\n      reducedDescriptors[name] = ret || descriptor;\n    }\n  });\n\n  Object.defineProperties(obj, reducedDescriptors);\n}\n\n/**\n * Makes all methods read-only\n * @param {Object} obj\n */\n\nconst freezeMethods = (obj) => {\n  reduceDescriptors(obj, (descriptor, name) => {\n    // skip restricted props in strict mode\n    if (isFunction(obj) && ['arguments', 'caller', 'callee'].indexOf(name) !== -1) {\n      return false;\n    }\n\n    const value = obj[name];\n\n    if (!isFunction(value)) return;\n\n    descriptor.enumerable = false;\n\n    if ('writable' in descriptor) {\n      descriptor.writable = false;\n      return;\n    }\n\n    if (!descriptor.set) {\n      descriptor.set = () => {\n        throw Error('Can not rewrite read-only method \\'' + name + '\\'');\n      };\n    }\n  });\n}\n\nconst toObjectSet = (arrayOrString, delimiter) => {\n  const obj = {};\n\n  const define = (arr) => {\n    arr.forEach(value => {\n      obj[value] = true;\n    });\n  }\n\n  isArray(arrayOrString) ? define(arrayOrString) : define(String(arrayOrString).split(delimiter));\n\n  return obj;\n}\n\nconst noop = () => {}\n\nconst toFiniteNumber = (value, defaultValue) => {\n  return value != null && Number.isFinite(value = +value) ? value : defaultValue;\n}\n\n\n\n/**\n * If the thing is a FormData object, return true, otherwise return false.\n *\n * @param {unknown} thing - The thing to check.\n *\n * @returns {boolean}\n */\nfunction isSpecCompliantForm(thing) {\n  return !!(thing && isFunction(thing.append) && thing[toStringTag] === 'FormData' && thing[iterator]);\n}\n\nconst toJSONObject = (obj) => {\n  const stack = new Array(10);\n\n  const visit = (source, i) => {\n\n    if (isObject(source)) {\n      if (stack.indexOf(source) >= 0) {\n        return;\n      }\n\n      //Buffer check\n      if (isBuffer(source)) {\n        return source;\n      }\n\n      if(!('toJSON' in source)) {\n        stack[i] = source;\n        const target = isArray(source) ? [] : {};\n\n        forEach(source, (value, key) => {\n          const reducedValue = visit(value, i + 1);\n          !isUndefined(reducedValue) && (target[key] = reducedValue);\n        });\n\n        stack[i] = undefined;\n\n        return target;\n      }\n    }\n\n    return source;\n  }\n\n  return visit(obj, 0);\n}\n\nconst isAsyncFn = kindOfTest('AsyncFunction');\n\nconst isThenable = (thing) =>\n  thing && (isObject(thing) || isFunction(thing)) && isFunction(thing.then) && isFunction(thing.catch);\n\n// original code\n// https://github.com/DigitalBrainJS/AxiosPromise/blob/16deab13710ec09779922131f3fa5954320f83ab/lib/utils.js#L11-L34\n\nconst _setImmediate = ((setImmediateSupported, postMessageSupported) => {\n  if (setImmediateSupported) {\n    return setImmediate;\n  }\n\n  return postMessageSupported ? ((token, callbacks) => {\n    _global.addEventListener(\"message\", ({source, data}) => {\n      if (source === _global && data === token) {\n        callbacks.length && callbacks.shift()();\n      }\n    }, false);\n\n    return (cb) => {\n      callbacks.push(cb);\n      _global.postMessage(token, \"*\");\n    }\n  })(`axios@${Math.random()}`, []) : (cb) => setTimeout(cb);\n})(\n  typeof setImmediate === 'function',\n  isFunction(_global.postMessage)\n);\n\nconst asap = typeof queueMicrotask !== 'undefined' ?\n  queueMicrotask.bind(_global) : ( typeof process !== 'undefined' && process.nextTick || _setImmediate);\n\n// *********************\n\n\nconst isIterable = (thing) => thing != null && isFunction(thing[iterator]);\n\n\nexport default {\n  isArray,\n  isArrayBuffer,\n  isBuffer,\n  isFormData,\n  isArrayBufferView,\n  isString,\n  isNumber,\n  isBoolean,\n  isObject,\n  isPlainObject,\n  isEmptyObject,\n  isReadableStream,\n  isRequest,\n  isResponse,\n  isHeaders,\n  isUndefined,\n  isDate,\n  isFile,\n  isBlob,\n  isRegExp,\n  isFunction,\n  isStream,\n  isURLSearchParams,\n  isTypedArray,\n  isFileList,\n  forEach,\n  merge,\n  extend,\n  trim,\n  stripBOM,\n  inherits,\n  toFlatObject,\n  kindOf,\n  kindOfTest,\n  endsWith,\n  toArray,\n  forEachEntry,\n  matchAll,\n  isHTMLForm,\n  hasOwnProperty,\n  hasOwnProp: hasOwnProperty, // an alias to avoid ESLint no-prototype-builtins detection\n  reduceDescriptors,\n  freezeMethods,\n  toObjectSet,\n  toCamelCase,\n  noop,\n  toFiniteNumber,\n  findKey,\n  global: _global,\n  isContextDefined,\n  isSpecCompliantForm,\n  toJSONObject,\n  isAsyncFn,\n  isThenable,\n  setImmediate: _setImmediate,\n  asap,\n  isIterable\n};\n", "'use strict';\n\nexport default function bind(fn, thisArg) {\n  return function wrap() {\n    return fn.apply(thisArg, arguments);\n  };\n}\n", "'use strict';\n\nimport utils from './../utils.js';\nimport buildURL from '../helpers/buildURL.js';\nimport InterceptorManager from './InterceptorManager.js';\nimport dispatchRequest from './dispatchRequest.js';\nimport mergeConfig from './mergeConfig.js';\nimport buildFullPath from './buildFullPath.js';\nimport validator from '../helpers/validator.js';\nimport AxiosHeaders from './AxiosHeaders.js';\n\nconst validators = validator.validators;\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n *\n * @return {Axios} A new instance of Axios\n */\nclass Axios {\n  constructor(instanceConfig) {\n    this.defaults = instanceConfig || {};\n    this.interceptors = {\n      request: new InterceptorManager(),\n      response: new InterceptorManager()\n    };\n  }\n\n  /**\n   * Dispatch a request\n   *\n   * @param {String|Object} configOrUrl The config specific for this request (merged with this.defaults)\n   * @param {?Object} config\n   *\n   * @returns {Promise} The Promise to be fulfilled\n   */\n  async request(configOrUrl, config) {\n    try {\n      return await this._request(configOrUrl, config);\n    } catch (err) {\n      if (err instanceof Error) {\n        let dummy = {};\n\n        Error.captureStackTrace ? Error.captureStackTrace(dummy) : (dummy = new Error());\n\n        // slice off the Error: ... line\n        const stack = dummy.stack ? dummy.stack.replace(/^.+\\n/, '') : '';\n        try {\n          if (!err.stack) {\n            err.stack = stack;\n            // match without the 2 top stack lines\n          } else if (stack && !String(err.stack).endsWith(stack.replace(/^.+\\n.+\\n/, ''))) {\n            err.stack += '\\n' + stack\n          }\n        } catch (e) {\n          // ignore the case where \"stack\" is an un-writable property\n        }\n      }\n\n      throw err;\n    }\n  }\n\n  _request(configOrUrl, config) {\n    /*eslint no-param-reassign:0*/\n    // Allow for axios('example/url'[, config]) a la fetch API\n    if (typeof configOrUrl === 'string') {\n      config = config || {};\n      config.url = configOrUrl;\n    } else {\n      config = configOrUrl || {};\n    }\n\n    config = mergeConfig(this.defaults, config);\n\n    const {transitional, paramsSerializer, headers} = config;\n\n    if (transitional !== undefined) {\n      validator.assertOptions(transitional, {\n        silentJSONParsing: validators.transitional(validators.boolean),\n        forcedJSONParsing: validators.transitional(validators.boolean),\n        clarifyTimeoutError: validators.transitional(validators.boolean)\n      }, false);\n    }\n\n    if (paramsSerializer != null) {\n      if (utils.isFunction(paramsSerializer)) {\n        config.paramsSerializer = {\n          serialize: paramsSerializer\n        }\n      } else {\n        validator.assertOptions(paramsSerializer, {\n          encode: validators.function,\n          serialize: validators.function\n        }, true);\n      }\n    }\n\n    // Set config.allowAbsoluteUrls\n    if (config.allowAbsoluteUrls !== undefined) {\n      // do nothing\n    } else if (this.defaults.allowAbsoluteUrls !== undefined) {\n      config.allowAbsoluteUrls = this.defaults.allowAbsoluteUrls;\n    } else {\n      config.allowAbsoluteUrls = true;\n    }\n\n    validator.assertOptions(config, {\n      baseUrl: validators.spelling('baseURL'),\n      withXsrfToken: validators.spelling('withXSRFToken')\n    }, true);\n\n    // Set config.method\n    config.method = (config.method || this.defaults.method || 'get').toLowerCase();\n\n    // Flatten headers\n    let contextHeaders = headers && utils.merge(\n      headers.common,\n      headers[config.method]\n    );\n\n    headers && utils.forEach(\n      ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n      (method) => {\n        delete headers[method];\n      }\n    );\n\n    config.headers = AxiosHeaders.concat(contextHeaders, headers);\n\n    // filter out skipped interceptors\n    const requestInterceptorChain = [];\n    let synchronousRequestInterceptors = true;\n    this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n      if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\n        return;\n      }\n\n      synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\n\n      requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    const responseInterceptorChain = [];\n    this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n      responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    let promise;\n    let i = 0;\n    let len;\n\n    if (!synchronousRequestInterceptors) {\n      const chain = [dispatchRequest.bind(this), undefined];\n      chain.unshift(...requestInterceptorChain);\n      chain.push(...responseInterceptorChain);\n      len = chain.length;\n\n      promise = Promise.resolve(config);\n\n      while (i < len) {\n        promise = promise.then(chain[i++], chain[i++]);\n      }\n\n      return promise;\n    }\n\n    len = requestInterceptorChain.length;\n\n    let newConfig = config;\n\n    i = 0;\n\n    while (i < len) {\n      const onFulfilled = requestInterceptorChain[i++];\n      const onRejected = requestInterceptorChain[i++];\n      try {\n        newConfig = onFulfilled(newConfig);\n      } catch (error) {\n        onRejected.call(this, error);\n        break;\n      }\n    }\n\n    try {\n      promise = dispatchRequest.call(this, newConfig);\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    i = 0;\n    len = responseInterceptorChain.length;\n\n    while (i < len) {\n      promise = promise.then(responseInterceptorChain[i++], responseInterceptorChain[i++]);\n    }\n\n    return promise;\n  }\n\n  getUri(config) {\n    config = mergeConfig(this.defaults, config);\n    const fullPath = buildFullPath(config.baseURL, config.url, config.allowAbsoluteUrls);\n    return buildURL(fullPath, config.params, config.paramsSerializer);\n  }\n}\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method,\n      url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n\n  function generateHTTPMethod(isForm) {\n    return function httpMethod(url, data, config) {\n      return this.request(mergeConfig(config || {}, {\n        method,\n        headers: isForm ? {\n          'Content-Type': 'multipart/form-data'\n        } : {},\n        url,\n        data\n      }));\n    };\n  }\n\n  Axios.prototype[method] = generateHTTPMethod();\n\n  Axios.prototype[method + 'Form'] = generateHTTPMethod(true);\n});\n\nexport default Axios;\n", "'use strict';\n\nimport utils from '../utils.js';\nimport AxiosURLSearchParams from '../helpers/AxiosURLSearchParams.js';\n\n/**\n * It replaces all instances of the characters `:`, `$`, `,`, `+`, `[`, and `]` with their\n * URI encoded counterparts\n *\n * @param {string} val The value to be encoded.\n *\n * @returns {string} The encoded value.\n */\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @param {?(object|Function)} options\n *\n * @returns {string} The formatted url\n */\nexport default function buildURL(url, params, options) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n  \n  const _encode = options && options.encode || encode;\n\n  if (utils.isFunction(options)) {\n    options = {\n      serialize: options\n    };\n  } \n\n  const serializeFn = options && options.serialize;\n\n  let serializedParams;\n\n  if (serializeFn) {\n    serializedParams = serializeFn(params, options);\n  } else {\n    serializedParams = utils.isURLSearchParams(params) ?\n      params.toString() :\n      new AxiosURLSearchParams(params, options).toString(_encode);\n  }\n\n  if (serializedParams) {\n    const hashmarkIndex = url.indexOf(\"#\");\n\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n}\n", "'use strict';\n\nimport toFormData from './toFormData.js';\n\n/**\n * It encodes a string by replacing all characters that are not in the unreserved set with\n * their percent-encoded equivalents\n *\n * @param {string} str - The string to encode.\n *\n * @returns {string} The encoded string.\n */\nfunction encode(str) {\n  const charMap = {\n    '!': '%21',\n    \"'\": '%27',\n    '(': '%28',\n    ')': '%29',\n    '~': '%7E',\n    '%20': '+',\n    '%00': '\\x00'\n  };\n  return encodeURIComponent(str).replace(/[!'()~]|%20|%00/g, function replacer(match) {\n    return charMap[match];\n  });\n}\n\n/**\n * It takes a params object and converts it to a FormData object\n *\n * @param {Object<string, any>} params - The parameters to be converted to a FormData object.\n * @param {Object<string, any>} options - The options object passed to the Axios constructor.\n *\n * @returns {void}\n */\nfunction AxiosURLSearchParams(params, options) {\n  this._pairs = [];\n\n  params && toFormData(params, this, options);\n}\n\nconst prototype = AxiosURLSearchParams.prototype;\n\nprototype.append = function append(name, value) {\n  this._pairs.push([name, value]);\n};\n\nprototype.toString = function toString(encoder) {\n  const _encode = encoder ? function(value) {\n    return encoder.call(this, value, encode);\n  } : encode;\n\n  return this._pairs.map(function each(pair) {\n    return _encode(pair[0]) + '=' + _encode(pair[1]);\n  }, '').join('&');\n};\n\nexport default AxiosURLSearchParams;\n", "'use strict';\n\nimport utils from '../utils.js';\nimport AxiosError from '../core/AxiosError.js';\n// temporary hotfix to avoid circular references until AxiosURLSearchParams is refactored\nimport PlatformFormData from '../platform/node/classes/FormData.js';\n\n/**\n * Determines if the given thing is a array or js object.\n *\n * @param {string} thing - The object or array to be visited.\n *\n * @returns {boolean}\n */\nfunction isVisitable(thing) {\n  return utils.isPlainObject(thing) || utils.isArray(thing);\n}\n\n/**\n * It removes the brackets from the end of a string\n *\n * @param {string} key - The key of the parameter.\n *\n * @returns {string} the key without the brackets.\n */\nfunction removeBrackets(key) {\n  return utils.endsWith(key, '[]') ? key.slice(0, -2) : key;\n}\n\n/**\n * It takes a path, a key, and a boolean, and returns a string\n *\n * @param {string} path - The path to the current key.\n * @param {string} key - The key of the current object being iterated over.\n * @param {string} dots - If true, the key will be rendered with dots instead of brackets.\n *\n * @returns {string} The path to the current key.\n */\nfunction renderKey(path, key, dots) {\n  if (!path) return key;\n  return path.concat(key).map(function each(token, i) {\n    // eslint-disable-next-line no-param-reassign\n    token = removeBrackets(token);\n    return !dots && i ? '[' + token + ']' : token;\n  }).join(dots ? '.' : '');\n}\n\n/**\n * If the array is an array and none of its elements are visitable, then it's a flat array.\n *\n * @param {Array<any>} arr - The array to check\n *\n * @returns {boolean}\n */\nfunction isFlatArray(arr) {\n  return utils.isArray(arr) && !arr.some(isVisitable);\n}\n\nconst predicates = utils.toFlatObject(utils, {}, null, function filter(prop) {\n  return /^is[A-Z]/.test(prop);\n});\n\n/**\n * Convert a data object to FormData\n *\n * @param {Object} obj\n * @param {?Object} [formData]\n * @param {?Object} [options]\n * @param {Function} [options.visitor]\n * @param {Boolean} [options.metaTokens = true]\n * @param {Boolean} [options.dots = false]\n * @param {?Boolean} [options.indexes = false]\n *\n * @returns {Object}\n **/\n\n/**\n * It converts an object into a FormData object\n *\n * @param {Object<any, any>} obj - The object to convert to form data.\n * @param {string} formData - The FormData object to append to.\n * @param {Object<string, any>} options\n *\n * @returns\n */\nfunction toFormData(obj, formData, options) {\n  if (!utils.isObject(obj)) {\n    throw new TypeError('target must be an object');\n  }\n\n  // eslint-disable-next-line no-param-reassign\n  formData = formData || new (PlatformFormData || FormData)();\n\n  // eslint-disable-next-line no-param-reassign\n  options = utils.toFlatObject(options, {\n    metaTokens: true,\n    dots: false,\n    indexes: false\n  }, false, function defined(option, source) {\n    // eslint-disable-next-line no-eq-null,eqeqeq\n    return !utils.isUndefined(source[option]);\n  });\n\n  const metaTokens = options.metaTokens;\n  // eslint-disable-next-line no-use-before-define\n  const visitor = options.visitor || defaultVisitor;\n  const dots = options.dots;\n  const indexes = options.indexes;\n  const _Blob = options.Blob || typeof Blob !== 'undefined' && Blob;\n  const useBlob = _Blob && utils.isSpecCompliantForm(formData);\n\n  if (!utils.isFunction(visitor)) {\n    throw new TypeError('visitor must be a function');\n  }\n\n  function convertValue(value) {\n    if (value === null) return '';\n\n    if (utils.isDate(value)) {\n      return value.toISOString();\n    }\n\n    if (utils.isBoolean(value)) {\n      return value.toString();\n    }\n\n    if (!useBlob && utils.isBlob(value)) {\n      throw new AxiosError('Blob is not supported. Use a Buffer instead.');\n    }\n\n    if (utils.isArrayBuffer(value) || utils.isTypedArray(value)) {\n      return useBlob && typeof Blob === 'function' ? new Blob([value]) : Buffer.from(value);\n    }\n\n    return value;\n  }\n\n  /**\n   * Default visitor.\n   *\n   * @param {*} value\n   * @param {String|Number} key\n   * @param {Array<String|Number>} path\n   * @this {FormData}\n   *\n   * @returns {boolean} return true to visit the each prop of the value recursively\n   */\n  function defaultVisitor(value, key, path) {\n    let arr = value;\n\n    if (value && !path && typeof value === 'object') {\n      if (utils.endsWith(key, '{}')) {\n        // eslint-disable-next-line no-param-reassign\n        key = metaTokens ? key : key.slice(0, -2);\n        // eslint-disable-next-line no-param-reassign\n        value = JSON.stringify(value);\n      } else if (\n        (utils.isArray(value) && isFlatArray(value)) ||\n        ((utils.isFileList(value) || utils.endsWith(key, '[]')) && (arr = utils.toArray(value))\n        )) {\n        // eslint-disable-next-line no-param-reassign\n        key = removeBrackets(key);\n\n        arr.forEach(function each(el, index) {\n          !(utils.isUndefined(el) || el === null) && formData.append(\n            // eslint-disable-next-line no-nested-ternary\n            indexes === true ? renderKey([key], index, dots) : (indexes === null ? key : key + '[]'),\n            convertValue(el)\n          );\n        });\n        return false;\n      }\n    }\n\n    if (isVisitable(value)) {\n      return true;\n    }\n\n    formData.append(renderKey(path, key, dots), convertValue(value));\n\n    return false;\n  }\n\n  const stack = [];\n\n  const exposedHelpers = Object.assign(predicates, {\n    defaultVisitor,\n    convertValue,\n    isVisitable\n  });\n\n  function build(value, path) {\n    if (utils.isUndefined(value)) return;\n\n    if (stack.indexOf(value) !== -1) {\n      throw Error('Circular reference detected in ' + path.join('.'));\n    }\n\n    stack.push(value);\n\n    utils.forEach(value, function each(el, key) {\n      const result = !(utils.isUndefined(el) || el === null) && visitor.call(\n        formData, el, utils.isString(key) ? key.trim() : key, path, exposedHelpers\n      );\n\n      if (result === true) {\n        build(el, path ? path.concat(key) : [key]);\n      }\n    });\n\n    stack.pop();\n  }\n\n  if (!utils.isObject(obj)) {\n    throw new TypeError('data must be an object');\n  }\n\n  build(obj);\n\n  return formData;\n}\n\nexport default toFormData;\n", "'use strict';\n\nimport utils from '../utils.js';\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [config] The config.\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n *\n * @returns {Error} The created error.\n */\nfunction AxiosError(message, code, config, request, response) {\n  Error.call(this);\n\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, this.constructor);\n  } else {\n    this.stack = (new Error()).stack;\n  }\n\n  this.message = message;\n  this.name = 'AxiosError';\n  code && (this.code = code);\n  config && (this.config = config);\n  request && (this.request = request);\n  if (response) {\n    this.response = response;\n    this.status = response.status ? response.status : null;\n  }\n}\n\nutils.inherits(AxiosError, Error, {\n  toJSON: function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: utils.toJSONObject(this.config),\n      code: this.code,\n      status: this.status\n    };\n  }\n});\n\nconst prototype = AxiosError.prototype;\nconst descriptors = {};\n\n[\n  'ERR_BAD_OPTION_VALUE',\n  'ERR_BAD_OPTION',\n  'ECONNABORTED',\n  'ETIMEDOUT',\n  'ERR_NETWORK',\n  'ERR_FR_TOO_MANY_REDIRECTS',\n  'ERR_DEPRECATED',\n  'ERR_BAD_RESPONSE',\n  'ERR_BAD_REQUEST',\n  'ERR_CANCELED',\n  'ERR_NOT_SUPPORT',\n  'ERR_INVALID_URL'\n// eslint-disable-next-line func-names\n].forEach(code => {\n  descriptors[code] = {value: code};\n});\n\nObject.defineProperties(AxiosError, descriptors);\nObject.defineProperty(prototype, 'isAxiosError', {value: true});\n\n// eslint-disable-next-line func-names\nAxiosError.from = (error, code, config, request, response, customProps) => {\n  const axiosError = Object.create(prototype);\n\n  utils.toFlatObject(error, axiosError, function filter(obj) {\n    return obj !== Error.prototype;\n  }, prop => {\n    return prop !== 'isAxiosError';\n  });\n\n  const msg = error && error.message ? error.message : 'Error';\n\n  // Prefer explicit code; otherwise copy the low-level error's code (e.g. ECONNREFUSED)\n  const errCode = code == null && error ? error.code : code;\n  AxiosError.call(axiosError, msg, errCode, config, request, response);\n\n  // Chain the original error on the standard field; non-enumerable to avoid JSON noise\n  if (error && axiosError.cause == null) {\n    Object.defineProperty(axiosError, 'cause', { value: error, configurable: true });\n  }\n\n  axiosError.name = (error && error.name) || 'Error';\n\n  customProps && Object.assign(axiosError, customProps);\n\n  return axiosError;\n};\n\nexport default AxiosError;\n", "// eslint-disable-next-line strict\nexport default null;\n", "'use strict';\n\nimport utils from './../utils.js';\n\nclass InterceptorManager {\n  constructor() {\n    this.handlers = [];\n  }\n\n  /**\n   * Add a new interceptor to the stack\n   *\n   * @param {Function} fulfilled The function to handle `then` for a `Promise`\n   * @param {Function} rejected The function to handle `reject` for a `Promise`\n   *\n   * @return {Number} An ID used to remove interceptor later\n   */\n  use(fulfilled, rejected, options) {\n    this.handlers.push({\n      fulfilled,\n      rejected,\n      synchronous: options ? options.synchronous : false,\n      runWhen: options ? options.runWhen : null\n    });\n    return this.handlers.length - 1;\n  }\n\n  /**\n   * Remove an interceptor from the stack\n   *\n   * @param {Number} id The ID that was returned by `use`\n   *\n   * @returns {Boolean} `true` if the interceptor was removed, `false` otherwise\n   */\n  eject(id) {\n    if (this.handlers[id]) {\n      this.handlers[id] = null;\n    }\n  }\n\n  /**\n   * Clear all interceptors from the stack\n   *\n   * @returns {void}\n   */\n  clear() {\n    if (this.handlers) {\n      this.handlers = [];\n    }\n  }\n\n  /**\n   * Iterate over all the registered interceptors\n   *\n   * This method is particularly useful for skipping over any\n   * interceptors that may have become `null` calling `eject`.\n   *\n   * @param {Function} fn The function to call for each interceptor\n   *\n   * @returns {void}\n   */\n  forEach(fn) {\n    utils.forEach(this.handlers, function forEachHandler(h) {\n      if (h !== null) {\n        fn(h);\n      }\n    });\n  }\n}\n\nexport default InterceptorManager;\n", "'use strict';\n\nimport transformData from './transformData.js';\nimport isCancel from '../cancel/isCancel.js';\nimport defaults from '../defaults/index.js';\nimport CanceledError from '../cancel/CanceledError.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\nimport adapters from \"../adapters/adapters.js\";\n\n/**\n * Throws a `CanceledError` if cancellation has been requested.\n *\n * @param {Object} config The config that is to be used for the request\n *\n * @returns {void}\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n\n  if (config.signal && config.signal.aborted) {\n    throw new CanceledError(null, config);\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n *\n * @returns {Promise} The Promise to be fulfilled\n */\nexport default function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  config.headers = AxiosHeaders.from(config.headers);\n\n  // Transform request data\n  config.data = transformData.call(\n    config,\n    config.transformRequest\n  );\n\n  if (['post', 'put', 'patch'].indexOf(config.method) !== -1) {\n    config.headers.setContentType('application/x-www-form-urlencoded', false);\n  }\n\n  const adapter = adapters.getAdapter(config.adapter || defaults.adapter, config);\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData.call(\n      config,\n      config.transformResponse,\n      response\n    );\n\n    response.headers = AxiosHeaders.from(response.headers);\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData.call(\n          config,\n          config.transformResponse,\n          reason.response\n        );\n        reason.response.headers = AxiosHeaders.from(reason.response.headers);\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n}\n", "'use strict';\n\nimport utils from './../utils.js';\nimport defaults from '../defaults/index.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Array|Function} fns A single function or Array of functions\n * @param {?Object} response The response object\n *\n * @returns {*} The resulting transformed data\n */\nexport default function transformData(fns, response) {\n  const config = this || defaults;\n  const context = response || config;\n  const headers = AxiosHeaders.from(context.headers);\n  let data = context.data;\n\n  utils.forEach(fns, function transform(fn) {\n    data = fn.call(config, data, headers.normalize(), response ? response.status : undefined);\n  });\n\n  headers.normalize();\n\n  return data;\n}\n", "'use strict';\n\nimport utils from '../utils.js';\nimport AxiosError from '../core/AxiosError.js';\nimport transitionalDefaults from './transitional.js';\nimport toFormData from '../helpers/toFormData.js';\nimport toURLEncodedForm from '../helpers/toURLEncodedForm.js';\nimport platform from '../platform/index.js';\nimport formDataToJSON from '../helpers/formDataToJSON.js';\n\n/**\n * It takes a string, tries to parse it, and if it fails, it returns the stringified version\n * of the input\n *\n * @param {any} rawValue - The value to be stringified.\n * @param {Function} parser - A function that parses a string into a JavaScript object.\n * @param {Function} encoder - A function that takes a value and returns a string.\n *\n * @returns {string} A stringified version of the rawValue.\n */\nfunction stringifySafely(rawValue, parser, encoder) {\n  if (utils.isString(rawValue)) {\n    try {\n      (parser || JSON.parse)(rawValue);\n      return utils.trim(rawValue);\n    } catch (e) {\n      if (e.name !== 'SyntaxError') {\n        throw e;\n      }\n    }\n  }\n\n  return (encoder || JSON.stringify)(rawValue);\n}\n\nconst defaults = {\n\n  transitional: transitionalDefaults,\n\n  adapter: ['xhr', 'http', 'fetch'],\n\n  transformRequest: [function transformRequest(data, headers) {\n    const contentType = headers.getContentType() || '';\n    const hasJSONContentType = contentType.indexOf('application/json') > -1;\n    const isObjectPayload = utils.isObject(data);\n\n    if (isObjectPayload && utils.isHTMLForm(data)) {\n      data = new FormData(data);\n    }\n\n    const isFormData = utils.isFormData(data);\n\n    if (isFormData) {\n      return hasJSONContentType ? JSON.stringify(formDataToJSON(data)) : data;\n    }\n\n    if (utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data) ||\n      utils.isReadableStream(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      headers.setContentType('application/x-www-form-urlencoded;charset=utf-8', false);\n      return data.toString();\n    }\n\n    let isFileList;\n\n    if (isObjectPayload) {\n      if (contentType.indexOf('application/x-www-form-urlencoded') > -1) {\n        return toURLEncodedForm(data, this.formSerializer).toString();\n      }\n\n      if ((isFileList = utils.isFileList(data)) || contentType.indexOf('multipart/form-data') > -1) {\n        const _FormData = this.env && this.env.FormData;\n\n        return toFormData(\n          isFileList ? {'files[]': data} : data,\n          _FormData && new _FormData(),\n          this.formSerializer\n        );\n      }\n    }\n\n    if (isObjectPayload || hasJSONContentType ) {\n      headers.setContentType('application/json', false);\n      return stringifySafely(data);\n    }\n\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    const transitional = this.transitional || defaults.transitional;\n    const forcedJSONParsing = transitional && transitional.forcedJSONParsing;\n    const JSONRequested = this.responseType === 'json';\n\n    if (utils.isResponse(data) || utils.isReadableStream(data)) {\n      return data;\n    }\n\n    if (data && utils.isString(data) && ((forcedJSONParsing && !this.responseType) || JSONRequested)) {\n      const silentJSONParsing = transitional && transitional.silentJSONParsing;\n      const strictJSONParsing = !silentJSONParsing && JSONRequested;\n\n      try {\n        return JSON.parse(data, this.parseReviver);\n      } catch (e) {\n        if (strictJSONParsing) {\n          if (e.name === 'SyntaxError') {\n            throw AxiosError.from(e, AxiosError.ERR_BAD_RESPONSE, this, null, this.response);\n          }\n          throw e;\n        }\n      }\n    }\n\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  env: {\n    FormData: platform.classes.FormData,\n    Blob: platform.classes.Blob\n  },\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  },\n\n  headers: {\n    common: {\n      'Accept': 'application/json, text/plain, */*',\n      'Content-Type': undefined\n    }\n  }\n};\n\nutils.forEach(['delete', 'get', 'head', 'post', 'put', 'patch'], (method) => {\n  defaults.headers[method] = {};\n});\n\nexport default defaults;\n", "'use strict';\n\nexport default {\n  silentJSONParsing: true,\n  forcedJSONParsing: true,\n  clarifyTimeoutError: false\n};\n", "'use strict';\n\nimport utils from '../utils.js';\nimport toFormData from './toFormData.js';\nimport platform from '../platform/index.js';\n\nexport default function toURLEncodedForm(data, options) {\n  return toFormData(data, new platform.classes.URLSearchParams(), {\n    visitor: function(value, key, path, helpers) {\n      if (platform.isNode && utils.isBuffer(value)) {\n        this.append(key, value.toString('base64'));\n        return false;\n      }\n\n      return helpers.defaultVisitor.apply(this, arguments);\n    },\n    ...options\n  });\n}\n", "import platform from './node/index.js';\nimport * as utils from './common/utils.js';\n\nexport default {\n  ...utils,\n  ...platform\n}\n", "import URLSearchParams from './classes/URLSearchParams.js'\nimport FormData from './classes/FormData.js'\nimport Blob from './classes/Blob.js'\n\nexport default {\n  isBrowser: true,\n  classes: {\n    URLSearchParams,\n    FormData,\n    Blob\n  },\n  protocols: ['http', 'https', 'file', 'blob', 'url', 'data']\n};\n", "'use strict';\n\nimport AxiosURLSearchParams from '../../../helpers/AxiosURLSearchParams.js';\nexport default typeof URLSearchParams !== 'undefined' ? URLSearchParams : AxiosURLSearchParams;\n", "'use strict';\n\nexport default typeof FormData !== 'undefined' ? FormData : null;\n", "'use strict'\n\nexport default typeof Blob !== 'undefined' ? Blob : null\n", "const hasBrowserEnv = typeof window !== 'undefined' && typeof document !== 'undefined';\n\nconst _navigator = typeof navigator === 'object' && navigator || undefined;\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n *\n * @returns {boolean}\n */\nconst hasStandardBrowserEnv = hasBrowserEnv &&\n  (!_navigator || ['ReactNative', 'NativeScript', 'NS'].indexOf(_navigator.product) < 0);\n\n/**\n * Determine if we're running in a standard browser webWorker environment\n *\n * Although the `isStandardBrowserEnv` method indicates that\n * `allows axios to run in a web worker`, the WebWorker will still be\n * filtered out due to its judgment standard\n * `typeof window !== 'undefined' && typeof document !== 'undefined'`.\n * This leads to a problem when axios post `FormData` in webWorker\n */\nconst hasStandardBrowserWebWorkerEnv = (() => {\n  return (\n    typeof WorkerGlobalScope !== 'undefined' &&\n    // eslint-disable-next-line no-undef\n    self instanceof WorkerGlobalScope &&\n    typeof self.importScripts === 'function'\n  );\n})();\n\nconst origin = hasBrowserEnv && window.location.href || 'http://localhost';\n\nexport {\n  hasBrowserEnv,\n  hasStandardBrowserWebWorkerEnv,\n  hasStandardBrowserEnv,\n  _navigator as navigator,\n  origin\n}\n", "'use strict';\n\nimport utils from '../utils.js';\n\n/**\n * It takes a string like `foo[x][y][z]` and returns an array like `['foo', 'x', 'y', 'z']\n *\n * @param {string} name - The name of the property to get.\n *\n * @returns An array of strings.\n */\nfunction parsePropPath(name) {\n  // foo[x][y][z]\n  // foo.x.y.z\n  // foo-x-y-z\n  // foo x y z\n  return utils.matchAll(/\\w+|\\[(\\w*)]/g, name).map(match => {\n    return match[0] === '[]' ? '' : match[1] || match[0];\n  });\n}\n\n/**\n * Convert an array to an object.\n *\n * @param {Array<any>} arr - The array to convert to an object.\n *\n * @returns An object with the same keys and values as the array.\n */\nfunction arrayToObject(arr) {\n  const obj = {};\n  const keys = Object.keys(arr);\n  let i;\n  const len = keys.length;\n  let key;\n  for (i = 0; i < len; i++) {\n    key = keys[i];\n    obj[key] = arr[key];\n  }\n  return obj;\n}\n\n/**\n * It takes a FormData object and returns a JavaScript object\n *\n * @param {string} formData The FormData object to convert to JSON.\n *\n * @returns {Object<string, any> | null} The converted object.\n */\nfunction formDataToJSON(formData) {\n  function buildPath(path, value, target, index) {\n    let name = path[index++];\n\n    if (name === '__proto__') return true;\n\n    const isNumericKey = Number.isFinite(+name);\n    const isLast = index >= path.length;\n    name = !name && utils.isArray(target) ? target.length : name;\n\n    if (isLast) {\n      if (utils.hasOwnProp(target, name)) {\n        target[name] = [target[name], value];\n      } else {\n        target[name] = value;\n      }\n\n      return !isNumericKey;\n    }\n\n    if (!target[name] || !utils.isObject(target[name])) {\n      target[name] = [];\n    }\n\n    const result = buildPath(path, value, target[name], index);\n\n    if (result && utils.isArray(target[name])) {\n      target[name] = arrayToObject(target[name]);\n    }\n\n    return !isNumericKey;\n  }\n\n  if (utils.isFormData(formData) && utils.isFunction(formData.entries)) {\n    const obj = {};\n\n    utils.forEachEntry(formData, (name, value) => {\n      buildPath(parsePropPath(name), value, obj, 0);\n    });\n\n    return obj;\n  }\n\n  return null;\n}\n\nexport default formDataToJSON;\n", "'use strict';\n\nimport utils from '../utils.js';\nimport parseHeaders from '../helpers/parseHeaders.js';\n\nconst $internals = Symbol('internals');\n\nfunction normalizeHeader(header) {\n  return header && String(header).trim().toLowerCase();\n}\n\nfunction normalizeValue(value) {\n  if (value === false || value == null) {\n    return value;\n  }\n\n  return utils.isArray(value) ? value.map(normalizeValue) : String(value);\n}\n\nfunction parseTokens(str) {\n  const tokens = Object.create(null);\n  const tokensRE = /([^\\s,;=]+)\\s*(?:=\\s*([^,;]+))?/g;\n  let match;\n\n  while ((match = tokensRE.exec(str))) {\n    tokens[match[1]] = match[2];\n  }\n\n  return tokens;\n}\n\nconst isValidHeaderName = (str) => /^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(str.trim());\n\nfunction matchHeaderValue(context, value, header, filter, isHeaderNameFilter) {\n  if (utils.isFunction(filter)) {\n    return filter.call(this, value, header);\n  }\n\n  if (isHeaderNameFilter) {\n    value = header;\n  }\n\n  if (!utils.isString(value)) return;\n\n  if (utils.isString(filter)) {\n    return value.indexOf(filter) !== -1;\n  }\n\n  if (utils.isRegExp(filter)) {\n    return filter.test(value);\n  }\n}\n\nfunction formatHeader(header) {\n  return header.trim()\n    .toLowerCase().replace(/([a-z\\d])(\\w*)/g, (w, char, str) => {\n      return char.toUpperCase() + str;\n    });\n}\n\nfunction buildAccessors(obj, header) {\n  const accessorName = utils.toCamelCase(' ' + header);\n\n  ['get', 'set', 'has'].forEach(methodName => {\n    Object.defineProperty(obj, methodName + accessorName, {\n      value: function(arg1, arg2, arg3) {\n        return this[methodName].call(this, header, arg1, arg2, arg3);\n      },\n      configurable: true\n    });\n  });\n}\n\nclass AxiosHeaders {\n  constructor(headers) {\n    headers && this.set(headers);\n  }\n\n  set(header, valueOrRewrite, rewrite) {\n    const self = this;\n\n    function setHeader(_value, _header, _rewrite) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!lHeader) {\n        throw new Error('header name must be a non-empty string');\n      }\n\n      const key = utils.findKey(self, lHeader);\n\n      if(!key || self[key] === undefined || _rewrite === true || (_rewrite === undefined && self[key] !== false)) {\n        self[key || _header] = normalizeValue(_value);\n      }\n    }\n\n    const setHeaders = (headers, _rewrite) =>\n      utils.forEach(headers, (_value, _header) => setHeader(_value, _header, _rewrite));\n\n    if (utils.isPlainObject(header) || header instanceof this.constructor) {\n      setHeaders(header, valueOrRewrite)\n    } else if(utils.isString(header) && (header = header.trim()) && !isValidHeaderName(header)) {\n      setHeaders(parseHeaders(header), valueOrRewrite);\n    } else if (utils.isObject(header) && utils.isIterable(header)) {\n      let obj = {}, dest, key;\n      for (const entry of header) {\n        if (!utils.isArray(entry)) {\n          throw TypeError('Object iterator must return a key-value pair');\n        }\n\n        obj[key = entry[0]] = (dest = obj[key]) ?\n          (utils.isArray(dest) ? [...dest, entry[1]] : [dest, entry[1]]) : entry[1];\n      }\n\n      setHeaders(obj, valueOrRewrite)\n    } else {\n      header != null && setHeader(valueOrRewrite, header, rewrite);\n    }\n\n    return this;\n  }\n\n  get(header, parser) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils.findKey(this, header);\n\n      if (key) {\n        const value = this[key];\n\n        if (!parser) {\n          return value;\n        }\n\n        if (parser === true) {\n          return parseTokens(value);\n        }\n\n        if (utils.isFunction(parser)) {\n          return parser.call(this, value, key);\n        }\n\n        if (utils.isRegExp(parser)) {\n          return parser.exec(value);\n        }\n\n        throw new TypeError('parser must be boolean|regexp|function');\n      }\n    }\n  }\n\n  has(header, matcher) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils.findKey(this, header);\n\n      return !!(key && this[key] !== undefined && (!matcher || matchHeaderValue(this, this[key], key, matcher)));\n    }\n\n    return false;\n  }\n\n  delete(header, matcher) {\n    const self = this;\n    let deleted = false;\n\n    function deleteHeader(_header) {\n      _header = normalizeHeader(_header);\n\n      if (_header) {\n        const key = utils.findKey(self, _header);\n\n        if (key && (!matcher || matchHeaderValue(self, self[key], key, matcher))) {\n          delete self[key];\n\n          deleted = true;\n        }\n      }\n    }\n\n    if (utils.isArray(header)) {\n      header.forEach(deleteHeader);\n    } else {\n      deleteHeader(header);\n    }\n\n    return deleted;\n  }\n\n  clear(matcher) {\n    const keys = Object.keys(this);\n    let i = keys.length;\n    let deleted = false;\n\n    while (i--) {\n      const key = keys[i];\n      if(!matcher || matchHeaderValue(this, this[key], key, matcher, true)) {\n        delete this[key];\n        deleted = true;\n      }\n    }\n\n    return deleted;\n  }\n\n  normalize(format) {\n    const self = this;\n    const headers = {};\n\n    utils.forEach(this, (value, header) => {\n      const key = utils.findKey(headers, header);\n\n      if (key) {\n        self[key] = normalizeValue(value);\n        delete self[header];\n        return;\n      }\n\n      const normalized = format ? formatHeader(header) : String(header).trim();\n\n      if (normalized !== header) {\n        delete self[header];\n      }\n\n      self[normalized] = normalizeValue(value);\n\n      headers[normalized] = true;\n    });\n\n    return this;\n  }\n\n  concat(...targets) {\n    return this.constructor.concat(this, ...targets);\n  }\n\n  toJSON(asStrings) {\n    const obj = Object.create(null);\n\n    utils.forEach(this, (value, header) => {\n      value != null && value !== false && (obj[header] = asStrings && utils.isArray(value) ? value.join(', ') : value);\n    });\n\n    return obj;\n  }\n\n  [Symbol.iterator]() {\n    return Object.entries(this.toJSON())[Symbol.iterator]();\n  }\n\n  toString() {\n    return Object.entries(this.toJSON()).map(([header, value]) => header + ': ' + value).join('\\n');\n  }\n\n  getSetCookie() {\n    return this.get(\"set-cookie\") || [];\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'AxiosHeaders';\n  }\n\n  static from(thing) {\n    return thing instanceof this ? thing : new this(thing);\n  }\n\n  static concat(first, ...targets) {\n    const computed = new this(first);\n\n    targets.forEach((target) => computed.set(target));\n\n    return computed;\n  }\n\n  static accessor(header) {\n    const internals = this[$internals] = (this[$internals] = {\n      accessors: {}\n    });\n\n    const accessors = internals.accessors;\n    const prototype = this.prototype;\n\n    function defineAccessor(_header) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!accessors[lHeader]) {\n        buildAccessors(prototype, _header);\n        accessors[lHeader] = true;\n      }\n    }\n\n    utils.isArray(header) ? header.forEach(defineAccessor) : defineAccessor(header);\n\n    return this;\n  }\n}\n\nAxiosHeaders.accessor(['Content-Type', 'Content-Length', 'Accept', 'Accept-Encoding', 'User-Agent', 'Authorization']);\n\n// reserved names hotfix\nutils.reduceDescriptors(AxiosHeaders.prototype, ({value}, key) => {\n  let mapped = key[0].toUpperCase() + key.slice(1); // map `set` => `Set`\n  return {\n    get: () => value,\n    set(headerValue) {\n      this[mapped] = headerValue;\n    }\n  }\n});\n\nutils.freezeMethods(AxiosHeaders);\n\nexport default AxiosHeaders;\n", "'use strict';\n\nimport utils from './../utils.js';\n\n// RawAxiosHeaders whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nconst ignoreDuplicateOf = utils.toObjectSet([\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n]);\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} rawHeaders Headers needing to be parsed\n *\n * @returns {Object} Headers parsed into an object\n */\nexport default rawHeaders => {\n  const parsed = {};\n  let key;\n  let val;\n  let i;\n\n  rawHeaders && rawHeaders.split('\\n').forEach(function parser(line) {\n    i = line.indexOf(':');\n    key = line.substring(0, i).trim().toLowerCase();\n    val = line.substring(i + 1).trim();\n\n    if (!key || (parsed[key] && ignoreDuplicateOf[key])) {\n      return;\n    }\n\n    if (key === 'set-cookie') {\n      if (parsed[key]) {\n        parsed[key].push(val);\n      } else {\n        parsed[key] = [val];\n      }\n    } else {\n      parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n    }\n  });\n\n  return parsed;\n};\n", "'use strict';\n\nexport default function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n}\n", "'use strict';\n\nimport AxiosError from '../core/AxiosError.js';\nimport utils from '../utils.js';\n\n/**\n * A `CanceledError` is an object that is thrown when an operation is canceled.\n *\n * @param {string=} message The message.\n * @param {Object=} config The config.\n * @param {Object=} request The request.\n *\n * @returns {CanceledError} The created error.\n */\nfunction CanceledError(message, config, request) {\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  AxiosError.call(this, message == null ? 'canceled' : message, AxiosError.ERR_CANCELED, config, request);\n  this.name = 'CanceledError';\n}\n\nutils.inherits(CanceledError, AxiosError, {\n  __CANCEL__: true\n});\n\nexport default CanceledError;\n", "import utils from '../utils.js';\nimport httpAdapter from './http.js';\nimport xhrAdapter from './xhr.js';\nimport * as fetchAdapter from './fetch.js';\nimport AxiosError from \"../core/AxiosError.js\";\n\nconst knownAdapters = {\n  http: httpAdapter,\n  xhr: xhrAdapter,\n  fetch: {\n    get: fetchAdapter.getFetch,\n  }\n}\n\nutils.forEach(knownAdapters, (fn, value) => {\n  if (fn) {\n    try {\n      Object.defineProperty(fn, 'name', {value});\n    } catch (e) {\n      // eslint-disable-next-line no-empty\n    }\n    Object.defineProperty(fn, 'adapterName', {value});\n  }\n});\n\nconst renderReason = (reason) => `- ${reason}`;\n\nconst isResolvedHandle = (adapter) => utils.isFunction(adapter) || adapter === null || adapter === false;\n\nexport default {\n  getAdapter: (adapters, config) => {\n    adapters = utils.isArray(adapters) ? adapters : [adapters];\n\n    const {length} = adapters;\n    let nameOrAdapter;\n    let adapter;\n\n    const rejectedReasons = {};\n\n    for (let i = 0; i < length; i++) {\n      nameOrAdapter = adapters[i];\n      let id;\n\n      adapter = nameOrAdapter;\n\n      if (!isResolvedHandle(nameOrAdapter)) {\n        adapter = knownAdapters[(id = String(nameOrAdapter)).toLowerCase()];\n\n        if (adapter === undefined) {\n          throw new AxiosError(`Unknown adapter '${id}'`);\n        }\n      }\n\n      if (adapter && (utils.isFunction(adapter) || (adapter = adapter.get(config)))) {\n        break;\n      }\n\n      rejectedReasons[id || '#' + i] = adapter;\n    }\n\n    if (!adapter) {\n\n      const reasons = Object.entries(rejectedReasons)\n        .map(([id, state]) => `adapter ${id} ` +\n          (state === false ? 'is not supported by the environment' : 'is not available in the build')\n        );\n\n      let s = length ?\n        (reasons.length > 1 ? 'since :\\n' + reasons.map(renderReason).join('\\n') : ' ' + renderReason(reasons[0])) :\n        'as no adapter specified';\n\n      throw new AxiosError(\n        `There is no suitable adapter to dispatch the request ` + s,\n        'ERR_NOT_SUPPORT'\n      );\n    }\n\n    return adapter;\n  },\n  adapters: knownAdapters\n}\n", "import utils from './../utils.js';\nimport settle from './../core/settle.js';\nimport transitionalDefaults from '../defaults/transitional.js';\nimport AxiosError from '../core/AxiosError.js';\nimport CanceledError from '../cancel/CanceledError.js';\nimport parseProtocol from '../helpers/parseProtocol.js';\nimport platform from '../platform/index.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\nimport {progressEventReducer} from '../helpers/progressEventReducer.js';\nimport resolveConfig from \"../helpers/resolveConfig.js\";\n\nconst isXHRAdapterSupported = typeof XMLHttpRequest !== 'undefined';\n\nexport default isXHRAdapterSupported && function (config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    const _config = resolveConfig(config);\n    let requestData = _config.data;\n    const requestHeaders = AxiosHeaders.from(_config.headers).normalize();\n    let {responseType, onUploadProgress, onDownloadProgress} = _config;\n    let onCanceled;\n    let uploadThrottled, downloadThrottled;\n    let flushUpload, flushDownload;\n\n    function done() {\n      flushUpload && flushUpload(); // flush events\n      flushDownload && flushDownload(); // flush events\n\n      _config.cancelToken && _config.cancelToken.unsubscribe(onCanceled);\n\n      _config.signal && _config.signal.removeEventListener('abort', onCanceled);\n    }\n\n    let request = new XMLHttpRequest();\n\n    request.open(_config.method.toUpperCase(), _config.url, true);\n\n    // Set the request timeout in MS\n    request.timeout = _config.timeout;\n\n    function onloadend() {\n      if (!request) {\n        return;\n      }\n      // Prepare the response\n      const responseHeaders = AxiosHeaders.from(\n        'getAllResponseHeaders' in request && request.getAllResponseHeaders()\n      );\n      const responseData = !responseType || responseType === 'text' || responseType === 'json' ?\n        request.responseText : request.response;\n      const response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config,\n        request\n      };\n\n      settle(function _resolve(value) {\n        resolve(value);\n        done();\n      }, function _reject(err) {\n        reject(err);\n        done();\n      }, response);\n\n      // Clean up request\n      request = null;\n    }\n\n    if ('onloadend' in request) {\n      // Use onloadend if available\n      request.onloadend = onloadend;\n    } else {\n      // Listen for ready state to emulate onloadend\n      request.onreadystatechange = function handleLoad() {\n        if (!request || request.readyState !== 4) {\n          return;\n        }\n\n        // The request errored out and we didn't get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it's a successful request\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n          return;\n        }\n        // readystate handler is calling before onerror or ontimeout handlers,\n        // so we should call onloadend on the next 'tick'\n        setTimeout(onloadend);\n      };\n    }\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(new AxiosError('Request aborted', AxiosError.ECONNABORTED, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n  request.onerror = function handleError(event) {\n       // Browsers deliver a ProgressEvent in XHR onerror\n       // (message may be empty; when present, surface it)\n       // See https://developer.mozilla.org/docs/Web/API/XMLHttpRequest/error_event\n       const msg = event && event.message ? event.message : 'Network Error';\n       const err = new AxiosError(msg, AxiosError.ERR_NETWORK, config, request);\n       // attach the underlying event for consumers who want details\n       err.event = event || null;\n       reject(err);\n       request = null;\n    };\n    \n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      let timeoutErrorMessage = _config.timeout ? 'timeout of ' + _config.timeout + 'ms exceeded' : 'timeout exceeded';\n      const transitional = _config.transitional || transitionalDefaults;\n      if (_config.timeoutErrorMessage) {\n        timeoutErrorMessage = _config.timeoutErrorMessage;\n      }\n      reject(new AxiosError(\n        timeoutErrorMessage,\n        transitional.clarifyTimeoutError ? AxiosError.ETIMEDOUT : AxiosError.ECONNABORTED,\n        config,\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Remove Content-Type if data is undefined\n    requestData === undefined && requestHeaders.setContentType(null);\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders.toJSON(), function setRequestHeader(val, key) {\n        request.setRequestHeader(key, val);\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(_config.withCredentials)) {\n      request.withCredentials = !!_config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (responseType && responseType !== 'json') {\n      request.responseType = _config.responseType;\n    }\n\n    // Handle progress if needed\n    if (onDownloadProgress) {\n      ([downloadThrottled, flushDownload] = progressEventReducer(onDownloadProgress, true));\n      request.addEventListener('progress', downloadThrottled);\n    }\n\n    // Not all browsers support upload events\n    if (onUploadProgress && request.upload) {\n      ([uploadThrottled, flushUpload] = progressEventReducer(onUploadProgress));\n\n      request.upload.addEventListener('progress', uploadThrottled);\n\n      request.upload.addEventListener('loadend', flushUpload);\n    }\n\n    if (_config.cancelToken || _config.signal) {\n      // Handle cancellation\n      // eslint-disable-next-line func-names\n      onCanceled = cancel => {\n        if (!request) {\n          return;\n        }\n        reject(!cancel || cancel.type ? new CanceledError(null, config, request) : cancel);\n        request.abort();\n        request = null;\n      };\n\n      _config.cancelToken && _config.cancelToken.subscribe(onCanceled);\n      if (_config.signal) {\n        _config.signal.aborted ? onCanceled() : _config.signal.addEventListener('abort', onCanceled);\n      }\n    }\n\n    const protocol = parseProtocol(_config.url);\n\n    if (protocol && platform.protocols.indexOf(protocol) === -1) {\n      reject(new AxiosError('Unsupported protocol ' + protocol + ':', AxiosError.ERR_BAD_REQUEST, config));\n      return;\n    }\n\n\n    // Send the request\n    request.send(requestData || null);\n  });\n}\n", "'use strict';\n\nimport AxiosError from './AxiosError.js';\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n *\n * @returns {object} The response.\n */\nexport default function settle(resolve, reject, response) {\n  const validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(new AxiosError(\n      'Request failed with status code ' + response.status,\n      [AxiosError.ERR_BAD_REQUEST, AxiosError.ERR_BAD_RESPONSE][Math.floor(response.status / 100) - 4],\n      response.config,\n      response.request,\n      response\n    ));\n  }\n}\n", "'use strict';\n\nexport default function parseProtocol(url) {\n  const match = /^([-+\\w]{1,25})(:?\\/\\/|:)/.exec(url);\n  return match && match[1] || '';\n}\n", "import speedometer from \"./speedometer.js\";\nimport throttle from \"./throttle.js\";\nimport utils from \"../utils.js\";\n\nexport const progressEventReducer = (listener, isDownloadStream, freq = 3) => {\n  let bytesNotified = 0;\n  const _speedometer = speedometer(50, 250);\n\n  return throttle(e => {\n    const loaded = e.loaded;\n    const total = e.lengthComputable ? e.total : undefined;\n    const progressBytes = loaded - bytesNotified;\n    const rate = _speedometer(progressBytes);\n    const inRange = loaded <= total;\n\n    bytesNotified = loaded;\n\n    const data = {\n      loaded,\n      total,\n      progress: total ? (loaded / total) : undefined,\n      bytes: progressBytes,\n      rate: rate ? rate : undefined,\n      estimated: rate && total && inRange ? (total - loaded) / rate : undefined,\n      event: e,\n      lengthComputable: total != null,\n      [isDownloadStream ? 'download' : 'upload']: true\n    };\n\n    listener(data);\n  }, freq);\n}\n\nexport const progressEventDecorator = (total, throttled) => {\n  const lengthComputable = total != null;\n\n  return [(loaded) => throttled[0]({\n    lengthComputable,\n    total,\n    loaded\n  }), throttled[1]];\n}\n\nexport const asyncDecorator = (fn) => (...args) => utils.asap(() => fn(...args));\n", "'use strict';\n\n/**\n * Calculate data maxRate\n * @param {Number} [samplesCount= 10]\n * @param {Number} [min= 1000]\n * @returns {Function}\n */\nfunction speedometer(samplesCount, min) {\n  samplesCount = samplesCount || 10;\n  const bytes = new Array(samplesCount);\n  const timestamps = new Array(samplesCount);\n  let head = 0;\n  let tail = 0;\n  let firstSampleTS;\n\n  min = min !== undefined ? min : 1000;\n\n  return function push(chunkLength) {\n    const now = Date.now();\n\n    const startedAt = timestamps[tail];\n\n    if (!firstSampleTS) {\n      firstSampleTS = now;\n    }\n\n    bytes[head] = chunkLength;\n    timestamps[head] = now;\n\n    let i = tail;\n    let bytesCount = 0;\n\n    while (i !== head) {\n      bytesCount += bytes[i++];\n      i = i % samplesCount;\n    }\n\n    head = (head + 1) % samplesCount;\n\n    if (head === tail) {\n      tail = (tail + 1) % samplesCount;\n    }\n\n    if (now - firstSampleTS < min) {\n      return;\n    }\n\n    const passed = startedAt && now - startedAt;\n\n    return passed ? Math.round(bytesCount * 1000 / passed) : undefined;\n  };\n}\n\nexport default speedometer;\n", "/**\n * Throttle decorator\n * @param {Function} fn\n * @param {Number} freq\n * @return {Function}\n */\nfunction throttle(fn, freq) {\n  let timestamp = 0;\n  let threshold = 1000 / freq;\n  let lastArgs;\n  let timer;\n\n  const invoke = (args, now = Date.now()) => {\n    timestamp = now;\n    lastArgs = null;\n    if (timer) {\n      clearTimeout(timer);\n      timer = null;\n    }\n    fn(...args);\n  }\n\n  const throttled = (...args) => {\n    const now = Date.now();\n    const passed = now - timestamp;\n    if ( passed >= threshold) {\n      invoke(args, now);\n    } else {\n      lastArgs = args;\n      if (!timer) {\n        timer = setTimeout(() => {\n          timer = null;\n          invoke(lastArgs)\n        }, threshold - passed);\n      }\n    }\n  }\n\n  const flush = () => lastArgs && invoke(lastArgs);\n\n  return [throttled, flush];\n}\n\nexport default throttle;\n", "import platform from \"../platform/index.js\";\nimport utils from \"../utils.js\";\nimport isURLSameOrigin from \"./isURLSameOrigin.js\";\nimport cookies from \"./cookies.js\";\nimport buildFullPath from \"../core/buildFullPath.js\";\nimport mergeConfig from \"../core/mergeConfig.js\";\nimport AxiosHeaders from \"../core/AxiosHeaders.js\";\nimport buildURL from \"./buildURL.js\";\n\nexport default (config) => {\n  const newConfig = mergeConfig({}, config);\n\n  let { data, withXSRFToken, xsrfHeaderName, xsrfCookieName, headers, auth } = newConfig;\n\n  newConfig.headers = headers = AxiosHeaders.from(headers);\n\n  newConfig.url = buildURL(buildFullPath(newConfig.baseURL, newConfig.url, newConfig.allowAbsoluteUrls), config.params, config.paramsSerializer);\n\n  // HTTP basic authentication\n  if (auth) {\n    headers.set('Authorization', 'Basic ' +\n      btoa((auth.username || '') + ':' + (auth.password ? unescape(encodeURIComponent(auth.password)) : ''))\n    );\n  }\n\n  if (utils.isFormData(data)) {\n    if (platform.hasStandardBrowserEnv || platform.hasStandardBrowserWebWorkerEnv) {\n      headers.setContentType(undefined); // browser handles it\n    } else if (utils.isFunction(data.getHeaders)) {\n      // Node.js FormData (like form-data package)\n      const formHeaders = data.getHeaders();\n      // Only set safe headers to avoid overwriting security headers\n      const allowedHeaders = ['content-type', 'content-length'];\n      Object.entries(formHeaders).forEach(([key, val]) => {\n        if (allowedHeaders.includes(key.toLowerCase())) {\n          headers.set(key, val);\n        }\n      });\n    }\n  }  \n\n  // Add xsrf header\n  // This is only done if running in a standard browser environment.\n  // Specifically not if we're in a web worker, or react-native.\n\n  if (platform.hasStandardBrowserEnv) {\n    withXSRFToken && utils.isFunction(withXSRFToken) && (withXSRFToken = withXSRFToken(newConfig));\n\n    if (withXSRFToken || (withXSRFToken !== false && isURLSameOrigin(newConfig.url))) {\n      // Add xsrf header\n      const xsrfValue = xsrfHeaderName && xsrfCookieName && cookies.read(xsrfCookieName);\n\n      if (xsrfValue) {\n        headers.set(xsrfHeaderName, xsrfValue);\n      }\n    }\n  }\n\n  return newConfig;\n}\n\n", "import platform from '../platform/index.js';\n\nexport default platform.hasStandardBrowserEnv ? ((origin, isMSIE) => (url) => {\n  url = new URL(url, platform.origin);\n\n  return (\n    origin.protocol === url.protocol &&\n    origin.host === url.host &&\n    (isMSIE || origin.port === url.port)\n  );\n})(\n  new URL(platform.origin),\n  platform.navigator && /(msie|trident)/i.test(platform.navigator.userAgent)\n) : () => true;\n", "import utils from './../utils.js';\nimport platform from '../platform/index.js';\n\nexport default platform.hasStandardBrowserEnv ?\n\n  // Standard browser envs support document.cookie\n  {\n    write(name, value, expires, path, domain, secure) {\n      const cookie = [name + '=' + encodeURIComponent(value)];\n\n      utils.isNumber(expires) && cookie.push('expires=' + new Date(expires).toGMTString());\n\n      utils.isString(path) && cookie.push('path=' + path);\n\n      utils.isString(domain) && cookie.push('domain=' + domain);\n\n      secure === true && cookie.push('secure');\n\n      document.cookie = cookie.join('; ');\n    },\n\n    read(name) {\n      const match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n      return (match ? decodeURIComponent(match[3]) : null);\n    },\n\n    remove(name) {\n      this.write(name, '', Date.now() - 86400000);\n    }\n  }\n\n  :\n\n  // Non-standard browser env (web workers, react-native) lack needed support.\n  {\n    write() {},\n    read() {\n      return null;\n    },\n    remove() {}\n  };\n\n", "'use strict';\n\nimport isAbsoluteURL from '../helpers/isAbsoluteURL.js';\nimport combineURLs from '../helpers/combineURLs.js';\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n *\n * @returns {string} The combined full path\n */\nexport default function buildFullPath(baseURL, requestedURL, allowAbsoluteUrls) {\n  let isRelativeUrl = !isAbsoluteURL(requestedURL);\n  if (baseURL && (isRelativeUrl || allowAbsoluteUrls == false)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n}\n", "'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n *\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nexport default function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(url);\n}\n", "'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n *\n * @returns {string} The combined URL\n */\nexport default function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/?\\/$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n}\n", "'use strict';\n\nimport utils from '../utils.js';\nimport AxiosHeaders from \"./AxiosHeaders.js\";\n\nconst headersToObject = (thing) => thing instanceof AxiosHeaders ? { ...thing } : thing;\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n *\n * @returns {Object} New object resulting from merging config2 to config1\n */\nexport default function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  const config = {};\n\n  function getMergedValue(target, source, prop, caseless) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge.call({caseless}, target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDeepProperties(a, b, prop , caseless) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(a, b, prop , caseless);\n    } else if (!utils.isUndefined(a)) {\n      return getMergedValue(undefined, a, prop , caseless);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function valueFromConfig2(a, b) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function defaultToConfig2(a, b) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    } else if (!utils.isUndefined(a)) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDirectKeys(a, b, prop) {\n    if (prop in config2) {\n      return getMergedValue(a, b);\n    } else if (prop in config1) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  const mergeMap = {\n    url: valueFromConfig2,\n    method: valueFromConfig2,\n    data: valueFromConfig2,\n    baseURL: defaultToConfig2,\n    transformRequest: defaultToConfig2,\n    transformResponse: defaultToConfig2,\n    paramsSerializer: defaultToConfig2,\n    timeout: defaultToConfig2,\n    timeoutMessage: defaultToConfig2,\n    withCredentials: defaultToConfig2,\n    withXSRFToken: defaultToConfig2,\n    adapter: defaultToConfig2,\n    responseType: defaultToConfig2,\n    xsrfCookieName: defaultToConfig2,\n    xsrfHeaderName: defaultToConfig2,\n    onUploadProgress: defaultToConfig2,\n    onDownloadProgress: defaultToConfig2,\n    decompress: defaultToConfig2,\n    maxContentLength: defaultToConfig2,\n    maxBodyLength: defaultToConfig2,\n    beforeRedirect: defaultToConfig2,\n    transport: defaultToConfig2,\n    httpAgent: defaultToConfig2,\n    httpsAgent: defaultToConfig2,\n    cancelToken: defaultToConfig2,\n    socketPath: defaultToConfig2,\n    responseEncoding: defaultToConfig2,\n    validateStatus: mergeDirectKeys,\n    headers: (a, b , prop) => mergeDeepProperties(headersToObject(a), headersToObject(b),prop, true)\n  };\n\n  utils.forEach(Object.keys({...config1, ...config2}), function computeConfigValue(prop) {\n    const merge = mergeMap[prop] || mergeDeepProperties;\n    const configValue = merge(config1[prop], config2[prop], prop);\n    (utils.isUndefined(configValue) && merge !== mergeDirectKeys) || (config[prop] = configValue);\n  });\n\n  return config;\n}\n", "import platform from \"../platform/index.js\";\nimport utils from \"../utils.js\";\nimport AxiosError from \"../core/AxiosError.js\";\nimport composeSignals from \"../helpers/composeSignals.js\";\nimport {trackStream} from \"../helpers/trackStream.js\";\nimport AxiosHeaders from \"../core/AxiosHeaders.js\";\nimport {progressEventReducer, progressEventDecorator, asyncDecorator} from \"../helpers/progressEventReducer.js\";\nimport resolveConfig from \"../helpers/resolveConfig.js\";\nimport settle from \"../core/settle.js\";\n\nconst DEFAULT_CHUNK_SIZE = 64 * 1024;\n\nconst {isFunction} = utils;\n\nconst globalFetchAPI = (({fetch, Request, Response}) => ({\n    fetch, Request, Response\n  }))(utils.global);\n\nconst {\n  ReadableStream, TextEncoder\n} = utils.global;\n\n\nconst test = (fn, ...args) => {\n  try {\n    return !!fn(...args);\n  } catch (e) {\n    return false\n  }\n}\n\nconst factory = (env) => {\n  const {fetch, Request, Response} = Object.assign({}, globalFetchAPI, env);\n  const isFetchSupported = isFunction(fetch);\n  const isRequestSupported = isFunction(Request);\n  const isResponseSupported = isFunction(Response);\n\n  if (!isFetchSupported) {\n    return false;\n  }\n\n  const isReadableStreamSupported = isFetchSupported && isFunction(ReadableStream);\n\n  const encodeText = isFetchSupported && (typeof TextEncoder === 'function' ?\n      ((encoder) => (str) => encoder.encode(str))(new TextEncoder()) :\n      async (str) => new Uint8Array(await new Request(str).arrayBuffer())\n  );\n\n  const supportsRequestStream = isRequestSupported && isReadableStreamSupported && test(() => {\n    let duplexAccessed = false;\n\n    const hasContentType = new Request(platform.origin, {\n      body: new ReadableStream(),\n      method: 'POST',\n      get duplex() {\n        duplexAccessed = true;\n        return 'half';\n      },\n    }).headers.has('Content-Type');\n\n    return duplexAccessed && !hasContentType;\n  });\n\n  const supportsResponseStream = isResponseSupported && isReadableStreamSupported &&\n    test(() => utils.isReadableStream(new Response('').body));\n\n  const resolvers = {\n    stream: supportsResponseStream && ((res) => res.body)\n  };\n\n  isFetchSupported && ((() => {\n    ['text', 'arrayBuffer', 'blob', 'formData', 'stream'].forEach(type => {\n      !resolvers[type] && (resolvers[type] = (res, config) => {\n        let method = res && res[type];\n\n        if (method) {\n          return method.call(res);\n        }\n\n        throw new AxiosError(`Response type '${type}' is not supported`, AxiosError.ERR_NOT_SUPPORT, config);\n      })\n    });\n  })());\n\n  const getBodyLength = async (body) => {\n    if (body == null) {\n      return 0;\n    }\n\n    if (utils.isBlob(body)) {\n      return body.size;\n    }\n\n    if (utils.isSpecCompliantForm(body)) {\n      const _request = new Request(platform.origin, {\n        method: 'POST',\n        body,\n      });\n      return (await _request.arrayBuffer()).byteLength;\n    }\n\n    if (utils.isArrayBufferView(body) || utils.isArrayBuffer(body)) {\n      return body.byteLength;\n    }\n\n    if (utils.isURLSearchParams(body)) {\n      body = body + '';\n    }\n\n    if (utils.isString(body)) {\n      return (await encodeText(body)).byteLength;\n    }\n  }\n\n  const resolveBodyLength = async (headers, body) => {\n    const length = utils.toFiniteNumber(headers.getContentLength());\n\n    return length == null ? getBodyLength(body) : length;\n  }\n\n  return async (config) => {\n    let {\n      url,\n      method,\n      data,\n      signal,\n      cancelToken,\n      timeout,\n      onDownloadProgress,\n      onUploadProgress,\n      responseType,\n      headers,\n      withCredentials = 'same-origin',\n      fetchOptions\n    } = resolveConfig(config);\n\n    responseType = responseType ? (responseType + '').toLowerCase() : 'text';\n\n    let composedSignal = composeSignals([signal, cancelToken && cancelToken.toAbortSignal()], timeout);\n\n    let request = null;\n\n    const unsubscribe = composedSignal && composedSignal.unsubscribe && (() => {\n      composedSignal.unsubscribe();\n    });\n\n    let requestContentLength;\n\n    try {\n      if (\n        onUploadProgress && supportsRequestStream && method !== 'get' && method !== 'head' &&\n        (requestContentLength = await resolveBodyLength(headers, data)) !== 0\n      ) {\n        let _request = new Request(url, {\n          method: 'POST',\n          body: data,\n          duplex: \"half\"\n        });\n\n        let contentTypeHeader;\n\n        if (utils.isFormData(data) && (contentTypeHeader = _request.headers.get('content-type'))) {\n          headers.setContentType(contentTypeHeader)\n        }\n\n        if (_request.body) {\n          const [onProgress, flush] = progressEventDecorator(\n            requestContentLength,\n            progressEventReducer(asyncDecorator(onUploadProgress))\n          );\n\n          data = trackStream(_request.body, DEFAULT_CHUNK_SIZE, onProgress, flush);\n        }\n      }\n\n      if (!utils.isString(withCredentials)) {\n        withCredentials = withCredentials ? 'include' : 'omit';\n      }\n\n      // Cloudflare Workers throws when credentials are defined\n      // see https://github.com/cloudflare/workerd/issues/902\n      const isCredentialsSupported = isRequestSupported && \"credentials\" in Request.prototype;\n\n      const resolvedOptions = {\n        ...fetchOptions,\n        signal: composedSignal,\n        method: method.toUpperCase(),\n        headers: headers.normalize().toJSON(),\n        body: data,\n        duplex: \"half\",\n        credentials: isCredentialsSupported ? withCredentials : undefined\n      };\n\n      request = isRequestSupported && new Request(url, resolvedOptions);\n\n      let response = await (isRequestSupported ? fetch(request, fetchOptions) : fetch(url, resolvedOptions));\n\n      const isStreamResponse = supportsResponseStream && (responseType === 'stream' || responseType === 'response');\n\n      if (supportsResponseStream && (onDownloadProgress || (isStreamResponse && unsubscribe))) {\n        const options = {};\n\n        ['status', 'statusText', 'headers'].forEach(prop => {\n          options[prop] = response[prop];\n        });\n\n        const responseContentLength = utils.toFiniteNumber(response.headers.get('content-length'));\n\n        const [onProgress, flush] = onDownloadProgress && progressEventDecorator(\n          responseContentLength,\n          progressEventReducer(asyncDecorator(onDownloadProgress), true)\n        ) || [];\n\n        response = new Response(\n          trackStream(response.body, DEFAULT_CHUNK_SIZE, onProgress, () => {\n            flush && flush();\n            unsubscribe && unsubscribe();\n          }),\n          options\n        );\n      }\n\n      responseType = responseType || 'text';\n\n      let responseData = await resolvers[utils.findKey(resolvers, responseType) || 'text'](response, config);\n\n      !isStreamResponse && unsubscribe && unsubscribe();\n\n      return await new Promise((resolve, reject) => {\n        settle(resolve, reject, {\n          data: responseData,\n          headers: AxiosHeaders.from(response.headers),\n          status: response.status,\n          statusText: response.statusText,\n          config,\n          request\n        })\n      })\n    } catch (err) {\n      unsubscribe && unsubscribe();\n\n      if (err && err.name === 'TypeError' && /Load failed|fetch/i.test(err.message)) {\n        throw Object.assign(\n          new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request),\n          {\n            cause: err.cause || err\n          }\n        )\n      }\n\n      throw AxiosError.from(err, err && err.code, config, request);\n    }\n  }\n}\n\nconst seedCache = new Map();\n\nexport const getFetch = (config) => {\n  let env = utils.merge.call({\n    skipUndefined: true\n  }, globalFetchAPI, config ? config.env : null);\n\n  const {fetch, Request, Response} = env;\n\n  const seeds = [\n    Request, Response, fetch\n  ];\n\n  let len = seeds.length, i = len,\n    seed, target, map = seedCache;\n\n  while (i--) {\n    seed = seeds[i];\n    target = map.get(seed);\n\n    target === undefined && map.set(seed, target = (i ? new Map() : factory(env)))\n\n    map = target;\n  }\n\n  return target;\n};\n\nconst adapter = getFetch();\n\nexport default adapter;\n", "import CanceledError from \"../cancel/CanceledError.js\";\nimport AxiosError from \"../core/AxiosError.js\";\nimport utils from '../utils.js';\n\nconst composeSignals = (signals, timeout) => {\n  const {length} = (signals = signals ? signals.filter(Boolean) : []);\n\n  if (timeout || length) {\n    let controller = new AbortController();\n\n    let aborted;\n\n    const onabort = function (reason) {\n      if (!aborted) {\n        aborted = true;\n        unsubscribe();\n        const err = reason instanceof Error ? reason : this.reason;\n        controller.abort(err instanceof AxiosError ? err : new CanceledError(err instanceof Error ? err.message : err));\n      }\n    }\n\n    let timer = timeout && setTimeout(() => {\n      timer = null;\n      onabort(new AxiosError(`timeout ${timeout} of ms exceeded`, AxiosError.ETIMEDOUT))\n    }, timeout)\n\n    const unsubscribe = () => {\n      if (signals) {\n        timer && clearTimeout(timer);\n        timer = null;\n        signals.forEach(signal => {\n          signal.unsubscribe ? signal.unsubscribe(onabort) : signal.removeEventListener('abort', onabort);\n        });\n        signals = null;\n      }\n    }\n\n    signals.forEach((signal) => signal.addEventListener('abort', onabort));\n\n    const {signal} = controller;\n\n    signal.unsubscribe = () => utils.asap(unsubscribe);\n\n    return signal;\n  }\n}\n\nexport default composeSignals;\n", "\nexport const streamChunk = function* (chunk, chunkSize) {\n  let len = chunk.byteLength;\n\n  if (!chunkSize || len < chunkSize) {\n    yield chunk;\n    return;\n  }\n\n  let pos = 0;\n  let end;\n\n  while (pos < len) {\n    end = pos + chunkSize;\n    yield chunk.slice(pos, end);\n    pos = end;\n  }\n}\n\nexport const readBytes = async function* (iterable, chunkSize) {\n  for await (const chunk of readStream(iterable)) {\n    yield* streamChunk(chunk, chunkSize);\n  }\n}\n\nconst readStream = async function* (stream) {\n  if (stream[Symbol.asyncIterator]) {\n    yield* stream;\n    return;\n  }\n\n  const reader = stream.getReader();\n  try {\n    for (;;) {\n      const {done, value} = await reader.read();\n      if (done) {\n        break;\n      }\n      yield value;\n    }\n  } finally {\n    await reader.cancel();\n  }\n}\n\nexport const trackStream = (stream, chunkSize, onProgress, onFinish) => {\n  const iterator = readBytes(stream, chunkSize);\n\n  let bytes = 0;\n  let done;\n  let _onFinish = (e) => {\n    if (!done) {\n      done = true;\n      onFinish && onFinish(e);\n    }\n  }\n\n  return new ReadableStream({\n    async pull(controller) {\n      try {\n        const {done, value} = await iterator.next();\n\n        if (done) {\n         _onFinish();\n          controller.close();\n          return;\n        }\n\n        let len = value.byteLength;\n        if (onProgress) {\n          let loadedBytes = bytes += len;\n          onProgress(loadedBytes);\n        }\n        controller.enqueue(new Uint8Array(value));\n      } catch (err) {\n        _onFinish(err);\n        throw err;\n      }\n    },\n    cancel(reason) {\n      _onFinish(reason);\n      return iterator.return();\n    }\n  }, {\n    highWaterMark: 2\n  })\n}\n", "'use strict';\n\nimport {VERSION} from '../env/data.js';\nimport AxiosError from '../core/AxiosError.js';\n\nconst validators = {};\n\n// eslint-disable-next-line func-names\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach((type, i) => {\n  validators[type] = function validator(thing) {\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n  };\n});\n\nconst deprecatedWarnings = {};\n\n/**\n * Transitional option validator\n *\n * @param {function|boolean?} validator - set to false if the transitional option has been removed\n * @param {string?} version - deprecated version / removed since version\n * @param {string?} message - some message with additional info\n *\n * @returns {function}\n */\nvalidators.transitional = function transitional(validator, version, message) {\n  function formatMessage(opt, desc) {\n    return '[Axios v' + VERSION + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n  }\n\n  // eslint-disable-next-line func-names\n  return (value, opt, opts) => {\n    if (validator === false) {\n      throw new AxiosError(\n        formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')),\n        AxiosError.ERR_DEPRECATED\n      );\n    }\n\n    if (version && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true;\n      // eslint-disable-next-line no-console\n      console.warn(\n        formatMessage(\n          opt,\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\n        )\n      );\n    }\n\n    return validator ? validator(value, opt, opts) : true;\n  };\n};\n\nvalidators.spelling = function spelling(correctSpelling) {\n  return (value, opt) => {\n    // eslint-disable-next-line no-console\n    console.warn(`${opt} is likely a misspelling of ${correctSpelling}`);\n    return true;\n  }\n};\n\n/**\n * Assert object's properties type\n *\n * @param {object} options\n * @param {object} schema\n * @param {boolean?} allowUnknown\n *\n * @returns {object}\n */\n\nfunction assertOptions(options, schema, allowUnknown) {\n  if (typeof options !== 'object') {\n    throw new AxiosError('options must be an object', AxiosError.ERR_BAD_OPTION_VALUE);\n  }\n  const keys = Object.keys(options);\n  let i = keys.length;\n  while (i-- > 0) {\n    const opt = keys[i];\n    const validator = schema[opt];\n    if (validator) {\n      const value = options[opt];\n      const result = value === undefined || validator(value, opt, options);\n      if (result !== true) {\n        throw new AxiosError('option ' + opt + ' must be ' + result, AxiosError.ERR_BAD_OPTION_VALUE);\n      }\n      continue;\n    }\n    if (allowUnknown !== true) {\n      throw new AxiosError('Unknown option ' + opt, AxiosError.ERR_BAD_OPTION);\n    }\n  }\n}\n\nexport default {\n  assertOptions,\n  validators\n};\n", "export const VERSION = \"1.12.1\";", "'use strict';\n\nimport CanceledError from './CanceledError.js';\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @param {Function} executor The executor function.\n *\n * @returns {CancelToken}\n */\nclass CancelToken {\n  constructor(executor) {\n    if (typeof executor !== 'function') {\n      throw new TypeError('executor must be a function.');\n    }\n\n    let resolvePromise;\n\n    this.promise = new Promise(function promiseExecutor(resolve) {\n      resolvePromise = resolve;\n    });\n\n    const token = this;\n\n    // eslint-disable-next-line func-names\n    this.promise.then(cancel => {\n      if (!token._listeners) return;\n\n      let i = token._listeners.length;\n\n      while (i-- > 0) {\n        token._listeners[i](cancel);\n      }\n      token._listeners = null;\n    });\n\n    // eslint-disable-next-line func-names\n    this.promise.then = onfulfilled => {\n      let _resolve;\n      // eslint-disable-next-line func-names\n      const promise = new Promise(resolve => {\n        token.subscribe(resolve);\n        _resolve = resolve;\n      }).then(onfulfilled);\n\n      promise.cancel = function reject() {\n        token.unsubscribe(_resolve);\n      };\n\n      return promise;\n    };\n\n    executor(function cancel(message, config, request) {\n      if (token.reason) {\n        // Cancellation has already been requested\n        return;\n      }\n\n      token.reason = new CanceledError(message, config, request);\n      resolvePromise(token.reason);\n    });\n  }\n\n  /**\n   * Throws a `CanceledError` if cancellation has been requested.\n   */\n  throwIfRequested() {\n    if (this.reason) {\n      throw this.reason;\n    }\n  }\n\n  /**\n   * Subscribe to the cancel signal\n   */\n\n  subscribe(listener) {\n    if (this.reason) {\n      listener(this.reason);\n      return;\n    }\n\n    if (this._listeners) {\n      this._listeners.push(listener);\n    } else {\n      this._listeners = [listener];\n    }\n  }\n\n  /**\n   * Unsubscribe from the cancel signal\n   */\n\n  unsubscribe(listener) {\n    if (!this._listeners) {\n      return;\n    }\n    const index = this._listeners.indexOf(listener);\n    if (index !== -1) {\n      this._listeners.splice(index, 1);\n    }\n  }\n\n  toAbortSignal() {\n    const controller = new AbortController();\n\n    const abort = (err) => {\n      controller.abort(err);\n    };\n\n    this.subscribe(abort);\n\n    controller.signal.unsubscribe = () => this.unsubscribe(abort);\n\n    return controller.signal;\n  }\n\n  /**\n   * Returns an object that contains a new `CancelToken` and a function that, when called,\n   * cancels the `CancelToken`.\n   */\n  static source() {\n    let cancel;\n    const token = new CancelToken(function executor(c) {\n      cancel = c;\n    });\n    return {\n      token,\n      cancel\n    };\n  }\n}\n\nexport default CancelToken;\n", "'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n *\n * @returns {Function}\n */\nexport default function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n}\n", "'use strict';\n\nimport utils from './../utils.js';\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n *\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nexport default function isAxiosError(payload) {\n  return utils.isObject(payload) && (payload.isAxiosError === true);\n}\n", "const HttpStatusCode = {\n  Continue: 100,\n  SwitchingProtocols: 101,\n  Processing: 102,\n  EarlyHints: 103,\n  Ok: 200,\n  Created: 201,\n  Accepted: 202,\n  NonAuthoritativeInformation: 203,\n  NoContent: 204,\n  ResetContent: 205,\n  PartialContent: 206,\n  MultiStatus: 207,\n  AlreadyReported: 208,\n  ImUsed: 226,\n  MultipleChoices: 300,\n  MovedPermanently: 301,\n  Found: 302,\n  SeeOther: 303,\n  NotModified: 304,\n  UseProxy: 305,\n  Unused: 306,\n  TemporaryRedirect: 307,\n  PermanentRedirect: 308,\n  BadRequest: 400,\n  Unauthorized: 401,\n  PaymentRequired: 402,\n  Forbidden: 403,\n  NotFound: 404,\n  MethodNotAllowed: 405,\n  NotAcceptable: 406,\n  ProxyAuthenticationRequired: 407,\n  RequestTimeout: 408,\n  Conflict: 409,\n  Gone: 410,\n  LengthRequired: 411,\n  PreconditionFailed: 412,\n  PayloadTooLarge: 413,\n  UriTooLong: 414,\n  UnsupportedMediaType: 415,\n  RangeNotSatisfiable: 416,\n  ExpectationFailed: 417,\n  ImATeapot: 418,\n  MisdirectedRequest: 421,\n  UnprocessableEntity: 422,\n  Locked: 423,\n  FailedDependency: 424,\n  TooEarly: 425,\n  UpgradeRequired: 426,\n  PreconditionRequired: 428,\n  TooManyRequests: 429,\n  RequestHeaderFieldsTooLarge: 431,\n  UnavailableForLegalReasons: 451,\n  InternalServerError: 500,\n  NotImplemented: 501,\n  BadGateway: 502,\n  ServiceUnavailable: 503,\n  GatewayTimeout: 504,\n  HttpVersionNotSupported: 505,\n  VariantAlsoNegotiates: 506,\n  InsufficientStorage: 507,\n  LoopDetected: 508,\n  NotExtended: 510,\n  NetworkAuthenticationRequired: 511,\n};\n\nObject.entries(HttpStatusCode).forEach(([key, value]) => {\n  HttpStatusCode[value] = key;\n});\n\nexport default HttpStatusCode;\n", "import crypto from 'crypto';\nimport { inject, injectable } from 'inversify';\nimport { Studio, StudioUser, StudioWithApiKey } from '../interfaces/Studio';\nimport { User } from '../interfaces/User';\nimport { StudioRepository } from '../repositories/StudioRepository';\nimport { genKey } from '../utils/GenKey';\nimport { IDatabaseService } from './DatabaseService';\nimport { IUserService } from './UserService';\n\nexport interface IStudioService {\n  getStudio(user_id: string): Promise<Studio | null>;\n  setStudioProperties(user_id: string, admin_id: string, users: User[]): Promise<void>;\n  getUserStudios(user_id: string): Promise<StudioWithApiKey[]>;\n  createStudio(studioName: string, admin_id: string): Promise<void>;\n  addUserToStudio(studioId: string, user: User): Promise<void>;\n  removeUserFromStudio(studioId: string, userId: string): Promise<void>;\n  getUser(user_id: string): Promise<User | null>;\n}\n\n@injectable()\nexport class StudioService implements IStudioService {\n  private studioRepository: StudioRepository;\n  constructor(\n    @inject('DatabaseService') private db: IDatabaseService,\n    @inject('UserService') private userService: IUserService\n  ) {\n    this.studioRepository = new StudioRepository(this.db);\n  }\n\n  async getStudio(user_id: string) {\n    const studio = await this.studioRepository.getStudio(user_id);\n    if (!studio) return null;\n    const users = await this.getUsersByIds(studio.users);\n    const me = (await this.userService.getUserWithPublicProfile(studio.user_id)) as StudioUser;\n    return { ...studio, users, me };\n  }\n\n  async setStudioProperties(user_id: string, admin_id: string, users: User[]) {\n    await this.studioRepository.setStudioProperties(\n      user_id,\n      admin_id,\n      users.map(u => u.user_id)\n    );\n  }\n\n  async getUserStudios(user_id: string) {\n    const studios = await this.studioRepository.getUserStudios(user_id);\n    return Promise.all(\n      studios.map(async s => {\n        const userIds = [...s.users, s.admin_id];\n        const users = await this.getUsersByIds(userIds);\n        const me = (await this.userService.getUser(s.user_id)) as StudioUser;\n        return {\n          user_id: s.user_id,\n          admin_id: s.admin_id,\n          users,\n          me,\n          apiKey: s.admin_id === user_id ? genKey(s.user_id) : undefined,\n        };\n      })\n    );\n  }\n\n  async createStudio(studioName: string, admin_id: string) {\n    const user_id = crypto.randomUUID();\n    await this.userService.createBrandUser(user_id, studioName);\n    await this.studioRepository.createStudio(user_id, admin_id);\n  }\n\n  async addUserToStudio(studioId: string, user: User) {\n    const studio = await this.getStudio(studioId);\n    if (!studio) throw new Error('Studio not found');\n    if (!studio.users.some(u => u.user_id === user.user_id)) {\n      await this.setStudioProperties(studioId, studio.admin_id, [...studio.users, user]);\n    }\n  }\n\n  async removeUserFromStudio(studioId: string, userId: string) {\n    const studio = await this.getStudio(studioId);\n    if (!studio) throw new Error('Studio not found');\n    await this.setStudioProperties(\n      studioId,\n      studio.admin_id,\n      studio.users.filter(u => u.user_id !== userId)\n    );\n  }\n\n  async getUser(user_id: string) {\n    return this.userService.getUser(user_id);\n  }\n\n  private async getUsersByIds(userIds: string[]) {\n    if (!userIds.length) return [];\n    return this.db.read<User>(`SELECT user_id, username, verified, admin FROM users WHERE user_id IN (${userIds.map(() => '?').join(',')})`, userIds);\n  }\n}\n", "import { IDatabaseService } from '../services/DatabaseService';\n\nexport class StudioRepository {\n  constructor(private db: IDatabaseService) {}\n\n  private parseUsers(users: string | string[]): string[] {\n    return Array.isArray(users) ? users : JSON.parse(users);\n  }\n\n  async getStudio(user_id: string) {\n    const res = await this.db.read<{ user_id: string; admin_id: string; users: string[] }>('SELECT * FROM studios WHERE user_id = ?', [user_id]);\n    return res[0] ?? null;\n  }\n\n  async setStudioProperties(user_id: string, admin_id: string, userIds: string[]) {\n    await this.db.request('UPDATE studios SET admin_id = ?, users = ? WHERE user_id = ?', [admin_id, JSON.stringify(userIds), user_id]);\n  }\n\n  async getUserStudios(user_id: string) {\n    const studios = await this.db.read<{ user_id: string; admin_id: string; users: string }>('SELECT * FROM studios WHERE admin_id = ? OR users LIKE ?', [user_id, `%\"${user_id}\"%`]);\n    return studios.map(s => ({ ...s, users: this.parseUsers(s.users) }));\n  }\n\n  async createStudio(user_id: string, admin_id: string) {\n    await this.db.request('INSERT INTO studios (user_id, admin_id, users) VALUES (?, ?, ?)', [user_id, admin_id, JSON.stringify([])]);\n  }\n}\n", "import crypto from 'crypto';\n// dotenv.config({ path: path.join(__dirname, '..', '.env') });\n\nconst ALGO = 'aes-256-cbc';\nconst IV_LENGTH = 16;\n\nexport function encryptUserId(userId: string): string {\n  const SECRET = process.env.HASH_SECRET!;\n\n  const iv = crypto.randomBytes(IV_LENGTH);\n  const key = crypto.createHash('sha256').update(SECRET).digest();\n  const cipher = crypto.createCipheriv(ALGO, key, iv);\n  let encrypted = cipher.update(userId, 'utf8', 'hex');\n  encrypted += cipher.final('hex');\n  return iv.toString('hex') + ':' + encrypted;\n}\n\nexport function decryptUserId(apiKey: string): string | null {\n  try {\n    const SECRET = process.env.HASH_SECRET!;\n    const [ivHex, encrypted] = apiKey.split(':');\n    const iv = Buffer.from(ivHex, 'hex');\n    const key = crypto.createHash('sha256').update(SECRET).digest();\n    const decipher = crypto.createDecipheriv(ALGO, key, iv);\n    let decrypted = decipher.update(encrypted, 'hex', 'utf8');\n    decrypted += decipher.final('utf8');\n    return decrypted;\n  } catch {\n    return null;\n  }\n}\n\nfunction createHash(userId: string, secret: string | undefined): string {\n  if (!userId) throw new Error('userId is required for key generation');\n  if (!secret) throw new Error('Secret is not defined in environment variables');\n  return crypto\n    .createHash('md5')\n    .update(userId + userId + secret)\n    .digest('hex');\n}\n\nexport function genKey(userId: string): string {\n  const encryptedUserId = encryptUserId(userId);\n  return encryptedUserId;\n}\n\nexport function genVerificationKey(userId: string): string {\n  return createHash(userId, process.env.VERIFICATION_SECRET);\n}\n", "import { InventoryItem } from 'interfaces/Inventory';\nimport { Item } from 'interfaces/Item';\nimport { inject, injectable } from 'inversify';\nimport { v4 } from 'uuid';\nimport { Trade, TradeItem } from '../interfaces/Trade';\nimport { TradeRepository } from '../repositories/TradeRepository';\nimport { IDatabaseService } from './DatabaseService';\nimport { IInventoryService } from './InventoryService';\n\nexport interface ITradeService {\n  startOrGetPendingTrade(fromUserId: string, toUserId: string): Promise<Trade>;\n  getTradeById(id: string): Promise<Trade | null>;\n  getFormattedTradeById(id: string): Promise<Trade | null>;\n  getTradesByUser(userId: string): Promise<Trade[]>;\n  getFormattedTradesByUser(userId: string): Promise<Trade[]>;\n  addItemToTrade(tradeId: string, userId: string, tradeItem: TradeItem): Promise<void>;\n  removeItemFromTrade(tradeId: string, userId: string, tradeItem: TradeItem): Promise<void>;\n  approveTrade(tradeId: string, userId: string): Promise<void>;\n  cancelTrade(tradeId: string, userId: string): Promise<void>;\n}\n\n@injectable()\nexport class TradeService implements ITradeService {\n  private tradeRepository: TradeRepository;\n  constructor(\n    @inject('DatabaseService') private databaseService: IDatabaseService,\n    @inject('InventoryService') private inventoryService: IInventoryService\n  ) {\n    this.tradeRepository = new TradeRepository(this.databaseService);\n  }\n\n  async startOrGetPendingTrade(fromUserId: string, toUserId: string): Promise<Trade> {\n    const existingTrade = await this.tradeRepository.findPendingTrade(fromUserId, toUserId);\n    if (existingTrade) return this.parseTradeItems(existingTrade);\n    const now = new Date().toISOString();\n    const id = v4();\n    const newTrade: Trade = {\n      id,\n      fromUserId,\n      toUserId,\n      fromUserItems: [],\n      toUserItems: [],\n      approvedFromUser: false,\n      approvedToUser: false,\n      status: 'pending',\n      createdAt: now,\n      updatedAt: now,\n    };\n    await this.tradeRepository.createTrade(newTrade);\n    return newTrade;\n  }\n\n  async getTradeById(id: string): Promise<Trade | null> {\n    const trade = await this.tradeRepository.getTradeById(id);\n    return trade ? this.parseTradeItems(trade) : null;\n  }\n\n  async getFormattedTradeById(id: string): Promise<Trade | null> {\n    const trade = await this.getTradeById(id);\n    if (!trade) return null;\n    const allItems = [...trade.fromUserItems, ...trade.toUserItems];\n    const uniqueItemIds = Array.from(new Set(allItems.map(i => i.itemId)));\n    let itemsInfo: Record<string, Item> = {};\n    if (uniqueItemIds.length) {\n      const placeholders = uniqueItemIds.map(() => '?').join(',');\n      const items = await this.databaseService.read<Item>(`SELECT * FROM items WHERE itemId IN (${placeholders}) AND (deleted IS NULL OR deleted = 0)`, uniqueItemIds);\n      itemsInfo = Object.fromEntries(items.map(item => [item.itemId, item]));\n    }\n    const enrich = (arr: TradeItem[]) => arr.map(item => ({ ...item, ...(itemsInfo[item.itemId] || {}) }));\n    return {\n      ...trade,\n      fromUserItems: enrich(trade.fromUserItems),\n      toUserItems: enrich(trade.toUserItems),\n    };\n  }\n\n  async getTradesByUser(userId: string): Promise<Trade[]> {\n    const trades = await this.tradeRepository.getTradesByUser(userId);\n    return trades.map(t => this.parseTradeItems(t));\n  }\n\n  async getFormattedTradesByUser(userId: string): Promise<Trade[]> {\n    const trades = await this.getTradesByUser(userId);\n    if (!trades.length) return [];\n    const allItemIds = Array.from(new Set(trades.flatMap(trade => [...trade.fromUserItems.map(i => i.itemId), ...trade.toUserItems.map(i => i.itemId)])));\n    let itemsInfo: Record<string, Item> = {};\n    if (allItemIds.length) {\n      const placeholders = allItemIds.map(() => '?').join(',');\n      const items = await this.databaseService.read<Item>(`SELECT * FROM items WHERE itemId IN (${placeholders}) AND (deleted IS NULL OR deleted = 0)`, allItemIds);\n      itemsInfo = Object.fromEntries(items.map(item => [item.itemId, item]));\n    }\n    const enrich = (arr: TradeItem[]) => arr.map(item => ({ ...item, ...(itemsInfo[item.itemId] || {}) }));\n    return trades.map(trade => ({\n      ...trade,\n      fromUserItems: enrich(trade.fromUserItems),\n      toUserItems: enrich(trade.toUserItems),\n    }));\n  }\n\n  private getUserKey(trade: Trade, userId: string): 'fromUserItems' | 'toUserItems' {\n    if (trade.fromUserId === userId) return 'fromUserItems';\n    if (trade.toUserId === userId) return 'toUserItems';\n    throw new Error('User not part of this trade');\n  }\n\n  private assertPending(trade: Trade) {\n    if (trade.status !== 'pending') throw new Error('Trade is not pending');\n  }\n\n  private parseTradeItems(trade: Trade): Trade {\n    const parse = (items: unknown) => (typeof items === 'string' ? JSON.parse(items) : items);\n    return {\n      ...trade,\n      fromUserItems: parse(trade.fromUserItems),\n      toUserItems: parse(trade.toUserItems),\n      approvedFromUser: !!trade.approvedFromUser,\n      approvedToUser: !!trade.approvedToUser,\n    };\n  }\n\n  async addItemToTrade(tradeId: string, userId: string, tradeItem: TradeItem): Promise<void> {\n    const trade = await this.getTradeById(tradeId);\n    if (!trade) throw new Error('Trade not found');\n    this.assertPending(trade);\n    const userKey = this.getUserKey(trade, userId);\n\n    // V\u00E9rification de la possession de l'item\n    if (tradeItem.metadata?._unique_id) {\n      const inventoryItems = await this.databaseService.read<{ user_id: string; item_id: string; amount: number }>(\n        `SELECT user_id, item_id, amount FROM inventories \n         WHERE user_id = ? AND item_id = ? AND JSON_EXTRACT(metadata, '$._unique_id') = ?`,\n        [userId, tradeItem.itemId, tradeItem.metadata._unique_id]\n      );\n      if (!inventoryItems.length) throw new Error('User does not have this specific item');\n    } else if (tradeItem.purchasePrice) {\n      const inventoryItems = await this.databaseService.read<InventoryItem>(\n        `SELECT user_id, item_id, amount FROM inventories\n         WHERE user_id = ? AND item_id = ? AND purchasePrice = ?`,\n        [userId, tradeItem.itemId, tradeItem.purchasePrice]\n      );\n      const totalAvailable = inventoryItems.reduce((sum, item) => sum + item.amount, 0);\n      if (totalAvailable < tradeItem.amount) throw new Error('User does not have enough of the item with specified purchase price');\n    } else {\n      const inventory = await this.inventoryService.getInventory(userId);\n      const item = inventory.inventory.find(i => i.item_id === tradeItem.itemId);\n      const hasItem = !!item && item.amount >= tradeItem.amount;\n      if (!hasItem) throw new Error('User does not have enough of the item');\n    }\n\n    const items = [...trade[userKey]];\n    if (tradeItem.metadata && tradeItem.metadata._unique_id) {\n      if (items.find(i => i.itemId === tradeItem.itemId && i.metadata?._unique_id === tradeItem.metadata?._unique_id)) throw new Error('This specific item is already in the trade');\n      items.push({ ...tradeItem });\n    } else {\n      const idx = items.findIndex(i => i.itemId === tradeItem.itemId && !i.metadata?._unique_id && i.purchasePrice === tradeItem.purchasePrice);\n      if (idx >= 0) items[idx].amount += tradeItem.amount;\n      else items.push({ ...tradeItem });\n    }\n\n    const now = new Date().toISOString();\n    await this.tradeRepository.updateTradeFields(tradeId, {\n      [userKey]: JSON.stringify(items),\n      approvedFromUser: 0,\n      approvedToUser: 0,\n      updatedAt: now,\n    });\n  }\n\n  async removeItemFromTrade(tradeId: string, userId: string, tradeItem: TradeItem): Promise<void> {\n    const trade = await this.getTradeById(tradeId);\n    if (!trade) throw new Error('Trade not found');\n    this.assertPending(trade);\n    const userKey = this.getUserKey(trade, userId);\n    const items = [...trade[userKey]];\n    let idx = -1;\n    if (tradeItem.metadata?._unique_id) {\n      idx = items.findIndex(i => i.itemId === tradeItem.itemId && i.metadata?._unique_id === tradeItem.metadata?._unique_id);\n    } else {\n      idx = items.findIndex(i => i.itemId === tradeItem.itemId && !i.metadata?._unique_id && i.purchasePrice === tradeItem.purchasePrice);\n    }\n    if (idx === -1) return;\n    if (tradeItem.metadata?._unique_id) {\n      items.splice(idx, 1);\n    } else {\n      if (items[idx].amount < tradeItem.amount) throw new Error('Not enough amount to remove');\n      items[idx].amount -= tradeItem.amount;\n      if (items[idx].amount <= 0) items.splice(idx, 1);\n    }\n    const now = new Date().toISOString();\n    await this.tradeRepository.updateTradeFields(tradeId, {\n      [userKey]: JSON.stringify(items),\n      approvedFromUser: 0,\n      approvedToUser: 0,\n      updatedAt: now,\n    });\n  }\n\n  async approveTrade(tradeId: string, userId: string): Promise<void> {\n    const trade = await this.getTradeById(tradeId);\n    if (!trade) throw new Error('Trade not found');\n    this.assertPending(trade);\n    const updateField = trade.fromUserId === userId ? 'approvedFromUser' : trade.toUserId === userId ? 'approvedToUser' : null;\n    if (!updateField) throw new Error('User not part of this trade');\n    const updatedAt = new Date().toISOString();\n    await this.tradeRepository.updateTradeField(tradeId, updateField, 1, updatedAt);\n    const updatedTrade = await this.getTradeById(tradeId);\n    if (!updatedTrade) throw new Error('Trade not found after update');\n    if (updatedTrade.approvedFromUser && updatedTrade.approvedToUser) {\n      await this.exchangeTradeItems(updatedTrade);\n    }\n  }\n\n  async cancelTrade(tradeId: string, userId: string): Promise<void> {\n    const trade = await this.getTradeById(tradeId);\n    if (!trade) throw new Error('Trade not found');\n    this.assertPending(trade);\n    if (trade.fromUserId !== userId && trade.toUserId !== userId) {\n      throw new Error('User not part of this trade');\n    }\n    const now = new Date().toISOString();\n    await this.tradeRepository.updateTradeFields(tradeId, {\n      status: 'canceled',\n      updatedAt: now,\n    });\n  }\n\n  // \u00C9change les items et passe la trade \u00E0 completed\n  private async exchangeTradeItems(trade: Trade): Promise<void> {\n    for (const item of trade.fromUserItems) {\n      if (item.metadata?._unique_id) {\n        await this.inventoryService.transferItem(trade.fromUserId, trade.toUserId, item.itemId, item.metadata._unique_id as string);\n      } else if (item.purchasePrice !== undefined) {\n        await this.inventoryService.getInventoryRepository().removeSellableItemWithPrice(trade.fromUserId, item.itemId, item.amount, item.purchasePrice);\n        await this.inventoryService.addItem(trade.toUserId, item.itemId, item.amount, undefined, true, item.purchasePrice);\n      } else {\n        const inventory = await this.inventoryService.getInventory(trade.fromUserId);\n        const inventoryItem = inventory.inventory.find(invItem => invItem.item_id === item.itemId && !invItem.metadata);\n        const isSellable = inventoryItem?.sellable || false;\n        const purchasePrice = inventoryItem?.purchasePrice;\n        await this.inventoryService.removeItem(trade.fromUserId, item.itemId, item.amount);\n        await this.inventoryService.addItem(trade.toUserId, item.itemId, item.amount, undefined, isSellable, purchasePrice);\n      }\n    }\n    for (const item of trade.toUserItems) {\n      if (item.metadata?._unique_id) {\n        await this.inventoryService.transferItem(trade.toUserId, trade.fromUserId, item.itemId, item.metadata._unique_id as string);\n      } else if (item.purchasePrice !== undefined) {\n        await this.inventoryService.getInventoryRepository().removeSellableItemWithPrice(trade.toUserId, item.itemId, item.amount, item.purchasePrice);\n        await this.inventoryService.addItem(trade.fromUserId, item.itemId, item.amount, undefined, true, item.purchasePrice);\n      } else {\n        const inventory = await this.inventoryService.getInventory(trade.toUserId);\n        const inventoryItem = inventory.inventory.find(invItem => invItem.item_id === item.itemId && !invItem.metadata);\n        const isSellable = inventoryItem?.sellable || false;\n        const purchasePrice = inventoryItem?.purchasePrice;\n        await this.inventoryService.removeItem(trade.toUserId, item.itemId, item.amount);\n        await this.inventoryService.addItem(trade.fromUserId, item.itemId, item.amount, undefined, isSellable, purchasePrice);\n      }\n    }\n    const now = new Date().toISOString();\n    await this.tradeRepository.updateTradeFields(trade.id, {\n      status: 'completed',\n      updatedAt: now,\n    });\n  }\n}\n", "import { Trade } from '../interfaces/Trade';\nimport { IDatabaseService } from '../services/DatabaseService';\n\nexport class TradeRepository {\n  constructor(private db: IDatabaseService) {}\n\n  async findPendingTrade(fromUserId: string, toUserId: string) {\n    const trades = await this.db.read<Trade>(\n      `SELECT * FROM trades\n       WHERE status = 'pending'\n         AND ((fromUserId = ? AND toUserId = ?) OR (fromUserId = ? AND toUserId = ?))\n       ORDER BY createdAt DESC\n       LIMIT 1`,\n      [fromUserId, toUserId, toUserId, fromUserId]\n    );\n    return trades[0] ?? null;\n  }\n\n  async createTrade(trade: Trade) {\n    await this.db.request(\n      `INSERT INTO trades (id, fromUserId, toUserId, fromUserItems, toUserItems, approvedFromUser, approvedToUser, status, createdAt, updatedAt)\n       VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)`,\n      [trade.id, trade.fromUserId, trade.toUserId, JSON.stringify(trade.fromUserItems), JSON.stringify(trade.toUserItems), 0, 0, trade.status, trade.createdAt, trade.updatedAt]\n    );\n  }\n\n  async getTradeById(id: string) {\n    const trades = await this.db.read<Trade>('SELECT * FROM trades WHERE id = ?', [id]);\n    return trades[0] ?? null;\n  }\n\n  async getTradesByUser(userId: string) {\n    return this.db.read<Trade>('SELECT * FROM trades WHERE fromUserId = ? OR toUserId = ? ORDER BY createdAt DESC', [userId, userId]);\n  }\n\n  async updateTradeField(tradeId: string, field: string, value: unknown, updatedAt: string) {\n    await this.db.request(`UPDATE trades SET ${field} = ?, updatedAt = ? WHERE id = ?`, [value, updatedAt, tradeId]);\n  }\n\n  async updateTradeFields(tradeId: string, fields: Record<string, unknown>) {\n    const setClause = Object.keys(fields)\n      .map(f => `${f} = ?`)\n      .join(', ');\n    const values = [...Object.values(fields), tradeId];\n    await this.db.request(`UPDATE trades SET ${setClause} WHERE id = ?`, values);\n  }\n}\n", "import crypto from 'crypto';\nimport removeDiacritics from 'diacritics';\nimport { InventoryItem } from 'interfaces/Inventory';\nimport { Item } from 'interfaces/Item';\nimport { inject, injectable } from 'inversify';\nimport { PublicUser, PublicUserAsAdmin, User, UserExtensions } from '../interfaces/User';\nimport { UserRepository } from '../repositories/UserRepository';\nimport { decryptUserId } from '../utils/GenKey';\nimport { verifyUserJwt } from '../utils/Jwt';\nimport { IDatabaseService } from './DatabaseService';\n\nfunction slugify(str: string): string {\n  str = str.normalize('NFKD');\n  str = removeDiacritics.remove(str);\n  const substitutions: Record<string, string> = { \u03B1: 'a', \u03B2: 'b', \u03B3: 'g', \u03B4: 'd', \u03B5: 'e', \u03B8: 'o', \u03BB: 'l', \u03BC: 'm', \u03BD: 'v', \u03C0: 'p', \u03C1: 'r', \u03C3: 's', \u03C4: 't', \u03C6: 'f', \u03C7: 'x', \u03C8: 'ps', \u03C9: 'w', \u2113: 'l', '\uD835\uDCC1': 'l', '\uD835\uDD29': 'l' };\n  str = str\n    .split('')\n    .map(c => substitutions[c] ?? c)\n    .join('');\n  str = str.replace(/[^a-zA-Z0-9]/g, '');\n  return str.toLowerCase();\n}\n\n// config({ path: path.join(__dirname, '..', '..', '.env') });\n\nexport interface IUserService {\n  updateSteamFields(user_id: string, steam_id: string | null, steam_username: string | null, steam_avatar_url: string | null): Promise<void>;\n  searchUsersByUsername(query: string): Promise<PublicUser[]>;\n  updateUserBalance(user_id: string, balance: number): Promise<void>;\n  createUser(user_id: string, username: string, email: string, password: string | null, provider?: 'discord' | 'google', providerId?: string): Promise<User>;\n  createBrandUser(user_id: string, username: string): Promise<User>;\n  getUser(user_id: string): Promise<User | null>;\n  adminGetUser(user_id: string): Promise<User | null>;\n  adminSearchUsers(query: string): Promise<PublicUser[]>;\n  getAllUsers(): Promise<User[]>;\n  getAllUsersWithDisabled(): Promise<User[]>;\n  updateUser(user_id: string, username?: string, balance?: number): Promise<void>;\n  deleteUser(user_id: string): Promise<void>;\n  authenticateUser(api_key: string): Promise<User | null>;\n  updateUserPassword(user_id: string, hashedPassword: string): Promise<void>;\n  disableAccount(targetUserId: string, adminUserId: string): Promise<void>;\n  reenableAccount(targetUserId: string, adminUserId: string): Promise<void>;\n  findByEmail(email: string): Promise<User | null>;\n  associateOAuth(user_id: string, provider: 'discord' | 'google', providerId: string): Promise<void>;\n  getUserBySteamId(steamId: string): Promise<User | null>;\n  generatePasswordResetToken(user_id: string): Promise<string>;\n  updateWebauthnChallenge(user_id: string, challenge: string | null): Promise<void>;\n  addWebauthnCredential(userId: string, credential: { id: string; name: string; created_at: Date }): Promise<void>;\n  getUserByCredentialId(credentialId: string): Promise<User | null>;\n  setAuthenticatorSecret(userId: string, secret: string | null): Promise<void>;\n  getAuthenticatorSecret(userId: string): Promise<string | null>;\n  getUserWithCompleteProfile(user_id: string): Promise<(User & UserExtensions) | null>;\n  getUserWithPublicProfile(user_id: string): Promise<(PublicUser & UserExtensions) | null>;\n  adminGetUserWithProfile(user_id: string): Promise<(PublicUserAsAdmin & UserExtensions) | null>;\n  findByResetToken(reset_token: string): Promise<User | null>;\n  getSteamAuthUrl(): string;\n}\n\n@injectable()\nexport class UserService implements IUserService {\n  private apiKeyUserCache: Map<string, User> = new Map();\n\n  private userRepository: UserRepository;\n  constructor(@inject('DatabaseService') private databaseService: IDatabaseService) {\n    this.userRepository = new UserRepository(this.databaseService);\n    // this.getAllUsersWithDisabled().then(users => {\n    //   for (const user of users) {\n    //     const key = genKey(user.user_id);\n    //     this.apiKeyUserCache.set(key, user);\n    //   }\n    // });\n  }\n\n  \n\n  async updateSteamFields(user_id: string, steam_id: string | null, steam_username: string | null, steam_avatar_url: string | null): Promise<void> {\n    await this.userRepository.updateSteamFields(user_id, steam_id, steam_username, steam_avatar_url);\n  }\n\n  async findByEmail(email: string): Promise<User | null> {\n    return await this.userRepository.findByEmail(email);\n  }\n\n  async associateOAuth(user_id: string, provider: 'discord' | 'google', providerId: string): Promise<void> {\n    await this.userRepository.associateOAuth(user_id, provider, providerId);\n  }\n\n  async disableAccount(targetUserId: string, adminUserId: string): Promise<void> {\n    const admin = await this.adminGetUser(adminUserId);\n    if (!admin || !admin.admin) {\n      throw new Error('Unauthorized: not admin');\n    }\n    await this.userRepository.disableAccount(targetUserId);\n  }\n\n  async reenableAccount(targetUserId: string, adminUserId: string): Promise<void> {\n    const admin = await this.adminGetUser(adminUserId);\n    if (!admin || !admin.admin) {\n      throw new Error('Unauthorized: not admin');\n    }\n    await this.userRepository.reenableAccount(targetUserId);\n  }\n\n  async searchUsersByUsername(query: string): Promise<PublicUser[]> {\n    const users = await this.adminSearchUsers(query);\n    \n    return users\n      .filter((u: PublicUser) => !u.disabled)\n      .map((u: PublicUser) => ({\n        user_id: u.user_id,\n        username: u.username,\n        verified: !!u.verified,\n        isStudio: !!u.isStudio,\n        admin: !!u.admin,\n        beta_user: !!u.beta_user,\n        badges: u.beta_user ? ['early_user', ...u.badges] : u.badges || [],\n        disabled: !!u.disabled, \n      }));\n  }\n\n  async createUser(user_id: string, username: string, email: string, password: string | null, provider?: 'discord' | 'google', providerId?: string): Promise<User> {\n    const existing = await this.findByEmail(email);\n    if (existing) {\n      if (provider && providerId) {\n        await this.associateOAuth(existing.user_id, provider, providerId);\n      }\n      return existing;\n    }\n    await this.userRepository.createUser(user_id, username, email, password, provider, providerId);\n    return (await this.getUser(user_id)) as User;\n  }\n\n  async createBrandUser(user_id: string, username: string): Promise<User> {\n    await this.userRepository.createBrandUser(user_id, username);\n    return (await this.getUser(user_id)) as User;\n  }\n\n  async getUser(user_id: string): Promise<User | null> {\n    return this.userRepository.getUserByAnyId(user_id, false);\n  }\n\n  async adminGetUser(user_id: string): Promise<User | null> {\n    return this.userRepository.getUserByAnyId(user_id, true);\n  }\n\n  async adminSearchUsers(query: string): Promise<PublicUser[]> {\n    const users = await this.userRepository.searchUsers();\n    const querySlug = slugify(query);\n    const matchedUsers = users.filter((u: User) => {\n      return slugify(u.username).indexOf(querySlug) !== -1;\n    });\n    return matchedUsers.map((u: User) => ({\n      user_id: u.user_id,\n      username: u.username,\n      verified: !!u.verified,\n      isStudio: !!u.isStudio,\n      admin: !!u.admin,\n      beta_user: !!u.beta_user,\n      badges: u.beta_user ? ['early_user', ...u.badges] : u.badges || [],\n      disabled: !!u.disabled,\n    }));\n  }\n\n  async getAllUsers(): Promise<User[]> {\n    return this.userRepository.getAllUsers(false);\n  }\n\n  async getAllUsersWithDisabled(): Promise<User[]> {\n    return this.userRepository.getAllUsers(true);\n  }\n\n  async updateUser(user_id: string, username?: string, balance?: number): Promise<void> {\n    await this.userRepository.updateUserFields(user_id, { username, balance });\n  }\n\n  async updateUserBalance(user_id: string, balance: number): Promise<void> {\n    await this.userRepository.updateUserFields(user_id, { balance });\n  }\n\n  async updateUserPassword(user_id: string, hashedPassword: string): Promise<void> {\n    await this.userRepository.updateUserPassword(user_id, hashedPassword);\n  }\n\n  async getUserBySteamId(steamId: string): Promise<User | null> {\n    return await this.userRepository.getUserBySteamId(steamId);\n  }\n\n  async generatePasswordResetToken(email: string): Promise<string> {\n    const token = crypto.randomBytes(32).toString('hex');\n    await this.userRepository.generatePasswordResetToken(email, token);\n    return token;\n  }\n\n  async deleteUser(user_id: string): Promise<void> {\n    await this.userRepository.deleteUser(user_id);\n  }\n\n  async authenticateUser(tokenOrApiKey: string): Promise<User | null> {\n    const jwtPayload = verifyUserJwt(tokenOrApiKey);\n    if (jwtPayload && jwtPayload.apiKey) {\n      return this.getUser(jwtPayload.user_id);\n    }\n    const apiKey = tokenOrApiKey;\n\n    \n    const userId = decryptUserId(apiKey);\n    if (!userId) return null;\n\n    return this.getUser(userId);\n  }\n\n  async updateWebauthnChallenge(user_id: string, challenge: string | null): Promise<void> {\n    await this.userRepository.updateWebauthnChallenge(user_id, challenge);\n  }\n\n  async addWebauthnCredential(userId: string, credential: { id: string; name: string; created_at: Date }): Promise<void> {\n    const existing = await this.getUser(userId);\n    if (!existing) {\n      throw new Error('User not found');\n    }\n    const credentials = JSON.parse(existing.webauthn_credentials || '[]');\n    credentials.push({\n      id: credential.id,\n      name: credential.name,\n      created_at: credential.created_at,\n    });\n    await this.userRepository.addWebauthnCredential(userId, JSON.stringify(credentials));\n  }\n\n  async getUserByCredentialId(credentialId: string): Promise<User | null> {\n    return await this.userRepository.getUserByCredentialId(credentialId);\n  }\n\n  async setAuthenticatorSecret(userId: string, secret: string | null): Promise<void> {\n    await this.userRepository.setAuthenticatorSecret(userId, secret);\n  }\n\n  async getAuthenticatorSecret(userId: string): Promise<string | null> {\n    const user = await this.getUser(userId);\n    return user ? user.authenticator_secret || null : null;\n  }\n\n  async getUserWithCompleteProfile(user_id: string): Promise<(User & UserExtensions) | null> {\n    const query = `\n      SELECT \n        u.*,\n        COALESCE(json_group_array(\n          CASE WHEN inv.item_id IS NOT NULL AND i.itemId IS NOT NULL THEN\n            json_object(\n              'user_id', inv.user_id,\n              'item_id', inv.item_id,\n              'itemId', i.itemId,\n              'name', i.name,\n              'description', i.description,\n              'amount', inv.amount,\n              'iconHash', i.iconHash,\n              'sellable', CASE WHEN inv.sellable = 1 THEN 1 ELSE 0 END,\n              'purchasePrice', inv.purchasePrice,\n              'rarity', inv.rarity,\n              'custom_url_link', inv.custom_url_link,\n              'metadata', inv.metadata\n            )\n          END\n        ), '[]') as inventory,\n        (SELECT COALESCE(json_group_array(\n          json_object(\n            'itemId', oi.itemId,\n            'name', oi.name,\n            'description', oi.description,\n            'owner', oi.owner,\n            'price', oi.price,\n            'iconHash', oi.iconHash,\n            'showInStore', oi.showInStore\n          )\n        ), '[]') FROM items oi WHERE oi.owner = u.user_id AND (oi.deleted IS NULL OR oi.deleted = 0) AND oi.showInStore = 1 ORDER BY oi.name) as ownedItems,\n        (SELECT COALESCE(json_group_array(\n          json_object(\n            'gameId', g.gameId,\n            'name', g.name,\n            'description', g.description,\n            'price', g.price,\n            'owner_id', g.owner_id,\n            'showInStore', g.showInStore,\n            'iconHash', g.iconHash,\n            'splashHash', g.splashHash,\n            'bannerHash', g.bannerHash,\n            'genre', g.genre,\n            'release_date', g.release_date,\n            'developer', g.developer,\n            'publisher', g.publisher,\n            'platforms', g.platforms,\n            'rating', g.rating,\n            'website', g.website,\n            'trailer_link', g.trailer_link,\n            'multiplayer', g.multiplayer,\n            'download_link', g.download_link\n          )\n        ), '[]') FROM games g WHERE g.owner_id = u.user_id AND g.showInStore = 1 ORDER BY g.name) as createdGames\n      FROM users u\n      LEFT JOIN inventories inv ON u.user_id = inv.user_id AND inv.amount > 0\n      LEFT JOIN items i ON inv.item_id = i.itemId AND (i.deleted IS NULL OR i.deleted = 0)\n      WHERE (u.user_id = ? OR u.discord_id = ? OR u.google_id = ? OR u.steam_id = ?)\n      GROUP BY u.user_id\n    `;\n\n    await this.databaseService.request(\n      `DELETE FROM inventories \n       WHERE user_id = (\n         SELECT user_id FROM users \n         WHERE user_id = ?\n           OR discord_id = ?\n           OR google_id = ?\n           OR steam_id = ?\n       ) \n       AND item_id NOT IN (\n         SELECT itemId FROM items WHERE deleted IS NULL OR deleted = 0\n       )`,\n      [user_id, user_id, user_id, user_id]\n    );\n\n    const results = await this.databaseService.read<User & UserExtensions>(query, [user_id, user_id, user_id, user_id]);\n    if (results.length === 0) return null;\n\n    const user = results[0];\n    if (user.beta_user) {\n      user.badges = ['early_user', ...user.badges];\n    }\n    if (user.inventory) {\n      user.inventory = user.inventory\n        .filter((item: InventoryItem) => item !== null)\n        .map((item: InventoryItem) => ({\n          ...item,\n          metadata:\n            typeof item.metadata === 'string' && item.metadata\n              ? (() => {\n                  try {\n                    return JSON.parse(item.metadata);\n                  } catch {\n                    return item.metadata;\n                  }\n                })()\n              : item.metadata,\n        }));\n    }\n    if (user.ownedItems) {\n      user.ownedItems = user.ownedItems.sort((a: Item, b: Item) => {\n        const nameCompare = a.name?.localeCompare(b.name || '') || 0;\n        if (nameCompare !== 0) return nameCompare;\n        return 0;\n      });\n    }\n    if (user.badges) {\n      const badgeOrder = ['early_user', 'staff', 'bug_hunter', 'contributor', 'moderator', 'community_manager', 'partner'];\n      user.badges = user.badges.filter(badge => badgeOrder.includes(badge));\n      user.badges.sort((a, b) => badgeOrder.indexOf(a) - badgeOrder.indexOf(b));\n    }\n    return user;\n  }\n\n  async getUserWithPublicProfile(user_id: string): Promise<(PublicUser & UserExtensions) | null> {\n    const user = await this.getUserWithCompleteProfile(user_id);\n    if (!user) return null;\n    \n    const publicProfile: PublicUser & UserExtensions = {\n      user_id: user.user_id,\n      username: user.username,\n      verified: user.verified,\n      isStudio: user.isStudio,\n      admin: user.admin,\n      beta_user: user.beta_user,\n      badges: user.badges,\n      inventory: user.inventory || [],\n      ownedItems: user.ownedItems || [],\n      createdGames: user.createdGames || [],\n      disabled: user.disabled,\n    };\n    return publicProfile;\n  }\n\n  async adminGetUserWithProfile(user_id: string): Promise<(PublicUserAsAdmin & UserExtensions) | null> {\n    const user = await this.getUserWithCompleteProfile(user_id);\n    if (!user) return null;\n\n    const publicProfile: PublicUserAsAdmin & UserExtensions = {\n      user_id: user.user_id,\n      username: user.username,\n      verified: user.verified,\n      isStudio: user.isStudio,\n      admin: user.admin,\n      beta_user: user.beta_user,\n      badges: user.badges,\n      disabled: user.disabled,\n      inventory: user.inventory,\n      ownedItems: user.ownedItems,\n      createdGames: user.createdGames,\n    };\n    return publicProfile;\n  }\n\n  async findByResetToken(reset_token: string): Promise<User | null> {\n    return await this.userRepository.findByResetToken(reset_token);\n  }\n\n  getSteamAuthUrl(): string {\n    const returnUrl = `${process.env.BASE_URL}/api/users/steam-associate`;\n    return `https://steamcommunity.com/openid/login?openid.ns=http://specs.openid.net/auth/2.0&openid.mode=checkid_setup&openid.return_to=${encodeURIComponent(returnUrl)}&openid.realm=${encodeURIComponent(process.env.BASE_URL || '')}&openid.identity=http://specs.openid.net/auth/2.0/identifier_select&openid.claimed_id=http://specs.openid.net/auth/2.0/identifier_select`;\n  }\n}\n\n\n", "import { User } from '../interfaces/User';\nimport { IDatabaseService } from '../services/DatabaseService';\n\nexport class UserRepository {\n  constructor(private databaseService: IDatabaseService) {}\n\n  async getUserByAnyId(user_id: string, includeDisabled = false): Promise<User | null> {\n    const base = '(user_id = ? OR discord_id = ? OR google_id = ? OR steam_id = ?)';\n    const where = includeDisabled ? base : base + ' AND (disabled = 0 OR disabled IS NULL)';\n    const users = await this.databaseService.read<User>(`SELECT * FROM users WHERE ${where}`, [user_id, user_id, user_id, user_id]);\n    return users.length > 0 ? users[0] : null;\n  }\n\n  async getAllUsers(includeDisabled = false): Promise<User[]> {\n    if (includeDisabled) {\n      return await this.databaseService.read<User>('SELECT * FROM users');\n    }\n    return await this.databaseService.read<User>('SELECT * FROM users WHERE (disabled = 0 OR disabled IS NULL)');\n  }\n\n  async updateUserFields(user_id: string, fields: Partial<Pick<User, 'username' | 'balance' | 'password'>>): Promise<void> {\n    const updates: string[] = [];\n    const params: unknown[] = [];\n    if (fields.username !== undefined) {\n      updates.push('username = ?');\n      params.push(fields.username);\n    }\n    if (fields.balance !== undefined) {\n      updates.push('balance = ?');\n      params.push(fields.balance);\n    }\n    if (fields.password !== undefined) {\n      updates.push('password = ?');\n      params.push(fields.password);\n    }\n    if (updates.length === 0) return;\n    params.push(user_id);\n    await this.databaseService.request(`UPDATE users SET ${updates.join(', ')} WHERE user_id = ?`, params);\n  }\n\n  async updateSteamFields(user_id: string, steam_id: string | null, steam_username: string | null, steam_avatar_url: string | null): Promise<void> {\n    await this.databaseService.request('UPDATE users SET steam_id = ?, steam_username = ?, steam_avatar_url = ? WHERE user_id = ?', [steam_id, steam_username, steam_avatar_url, user_id]);\n  }\n\n  async findByEmail(email: string): Promise<User | null> {\n    const users = await this.databaseService.read<User>('SELECT * FROM users WHERE email = ?', [email]);\n    return users.length > 0 ? users[0] : null;\n  }\n\n  async associateOAuth(user_id: string, provider: 'discord' | 'google', providerId: string): Promise<void> {\n    const column = provider === 'discord' ? 'discord_id' : 'google_id';\n    await this.databaseService.request(`UPDATE users SET ${column} = ? WHERE user_id = ?`, [providerId, user_id]);\n  }\n\n  async disableAccount(targetUserId: string): Promise<void> {\n    await this.databaseService.request('UPDATE users SET disabled = 1 WHERE user_id = ?', [targetUserId]);\n  }\n\n  async reenableAccount(targetUserId: string): Promise<void> {\n    await this.databaseService.request('UPDATE users SET disabled = 0 WHERE user_id = ?', [targetUserId]);\n  }\n\n  async searchUsers(): Promise<User[]> {\n    return await this.databaseService.read<User>(`SELECT user_id, username, verified, isStudio, admin, badges, beta_user, disabled FROM users LIMIT 100`);\n  }\n\n  async createUser(user_id: string, username: string, email: string, password: string | null, provider?: 'discord' | 'google', providerId?: string, created_at?: string): Promise<void> {\n    await this.databaseService.request('INSERT INTO users (user_id, username, email, password, balance, discord_id, google_id, created_at) VALUES (?, ?, ?, ?, 0, ?, ?, COALESCE(?, datetime(\"now\")))', [user_id, username, email, password, provider === 'discord' ? providerId : null, provider === 'google' ? providerId : null, created_at]);\n  }\n\n  async createBrandUser(user_id: string, username: string): Promise<void> {\n    await this.databaseService.request('INSERT INTO users (user_id, username, email, balance, isStudio) VALUES (?, ?, ?, 0, 1)', [user_id, username, '']);\n  }\n\n  async updateUserPassword(user_id: string, hashedPassword: string): Promise<void> {\n    await this.updateUserFields(user_id, { password: hashedPassword });\n  }\n\n  async getUserBySteamId(steamId: string): Promise<User | null> {\n    const users = await this.databaseService.read<User>('SELECT * FROM users WHERE steam_id = ? AND (disabled = 0 OR disabled IS NULL)', [steamId]);\n    return users.length > 0 ? users[0] : null;\n  }\n\n  async generatePasswordResetToken(email: string, token: string): Promise<void> {\n    await this.databaseService.request('UPDATE users SET forgot_password_token = ? WHERE email = ?', [token, email]);\n  }\n\n  async deleteUser(user_id: string): Promise<void> {\n    await this.databaseService.request('DELETE FROM users WHERE user_id = ?', [user_id]);\n  }\n\n  async updateWebauthnChallenge(user_id: string, challenge: string | null): Promise<void> {\n    await this.databaseService.request('UPDATE users SET webauthn_challenge = ? WHERE user_id = ?', [challenge, user_id]);\n  }\n\n  async addWebauthnCredential(userId: string, credentials: string): Promise<void> {\n    await this.databaseService.request('UPDATE users SET webauthn_credentials = ? WHERE user_id = ?', [credentials, userId]);\n  }\n\n  async getUserByCredentialId(credentialId: string): Promise<User | null> {\n    const users = await this.databaseService.read<User>('SELECT * FROM users WHERE webauthn_credentials LIKE ? AND (disabled = 0 OR disabled IS NULL)', [`%${credentialId}%`]);\n    return users.length > 0 ? users[0] : null;\n  }\n\n  async setAuthenticatorSecret(userId: string, secret: string | null): Promise<void> {\n    await this.databaseService.request('UPDATE users SET authenticator_secret = ? WHERE user_id = ?', [secret, userId]);\n  }\n\n  async findByResetToken(reset_token: string): Promise<User | null> {\n    const users = await this.databaseService.read<User>('SELECT * FROM users WHERE forgot_password_token = ?', [reset_token]);\n    return users.length > 0 ? users[0] : null;\n  }\n}\n\n\n", "import * as dotenv from 'dotenv';\nimport jwt from 'jsonwebtoken';\n\ndotenv.config();\n\nconst JWT_SECRET = process.env.JWT_SECRET as string;\n\nexport function generateUserJwt(user: { user_id: string; username: string; email: string }, apiKey: string) {\n  return jwt.sign(\n    {\n      user_id: user.user_id,\n      username: user.username,\n      email: user.email,\n      apiKey,\n    },\n    JWT_SECRET,\n    { expiresIn: '30d' }\n  );\n}\n\nexport function verifyUserJwt(token: string) {\n  try {\n    return jwt.verify(token, JWT_SECRET) as {\n      user_id: string;\n      username: string;\n      email: string;\n      apiKey: string;\n    };\n  } catch {\n    return null;\n  }\n}\n", "/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { Context } from 'hono';\nimport { inject, injectable } from 'inversify';\nimport * as qrcode from 'qrcode';\nimport { Totp } from 'time2fa';\nimport { controller, httpPost } from '../hono-inversify';\nimport { LoggedCheck } from '../middlewares/LoggedCheck';\nimport { ILogService } from '../services/LogService';\nimport { IUserService } from '../services/UserService';\nimport { genKey } from '../utils/GenKey';\nimport { generateUserJwt } from '../utils/Jwt';\n\n@injectable()\n@controller('/authenticator')\nexport class AuthenticatorController {\n  constructor(\n    @inject('UserService') private userService: IUserService,\n    @inject('LogService') private logService: ILogService\n  ) {}\n\n  private async logAction(c: Context, action: string, statusCode: number, metadata?: object) {\n    try {\n      const requestBody = (await c.req.json().catch(() => ({}))) || {};\n      if (metadata) Object.assign(requestBody, { metadata });\n      await this.logService.createLog({\n        ip_address: c.req.header('x-real-ip') || c.req.header('cf-connecting-ip') || c.req.header('x-forwarded-for') || 'unknown',\n        table_name: 'authenticator',\n        controller: `AuthenticatorController.${action}`,\n        original_path: c.req.path,\n        http_method: c.req.method,\n        request_body: requestBody,\n        user_id: this.getUserFromContext(c)?.user_id,\n        status_code: statusCode,\n      });\n    } catch (error) {\n      console.error('Error creating log:', error);\n    }\n  }\n\n  private sendError(c: Context, status: number, message: string, error?: unknown) {\n    const msg = error instanceof Error ? error.message : String(error);\n    return c.json({ message, error: msg }, status as any);\n  }\n\n  private getUserFromContext(c: Context) {\n    return c.get('user');\n  }\n\n  @httpPost('/verifyKey')\n  public async verifyKey(c: Context) {\n    const { code, userId } = await c.req.json();\n    if (!userId) {\n      await this.logAction(c, 'verifyKey', 400);\n      return this.sendError(c, 400, 'User ID is required');\n    }\n    try {\n      const user = await this.userService.getUser(userId);\n      if (!user) {\n        await this.logAction(c, 'verifyKey', 404);\n        return this.sendError(c, 404, 'User not found');\n      }\n      const key = user.authenticator_secret;\n      if (!key || !code) {\n        await this.logAction(c, 'verifyKey', 400);\n        return this.sendError(c, 400, 'Key and code are required');\n      }\n      const isValid = Totp.validate({ secret: key, passcode: code });\n      if (isValid) {\n        await this.logAction(c, 'verifyKey', 200);\n        const apiKey = genKey(user.user_id);\n        const jwtToken = generateUserJwt(user, apiKey);\n        return c.json({ message: 'Key verified successfully', token: jwtToken }, 200);\n      } else {\n        await this.logAction(c, 'verifyKey', 400);\n        return this.sendError(c, 400, 'Invalid key or code');\n      }\n    } catch (error) {\n      await this.logAction(c, 'verifyKey', 500, { error });\n      return this.sendError(c, 500, 'Error verifying key', error);\n    }\n  }\n\n  @httpPost('/:action', LoggedCheck)\n  public async handleAuthenticatorActions(c: Context) {\n    const action = c.req.param('action');\n    const user = this.getUserFromContext(c);\n    try {\n      switch (action) {\n        case 'generateKey': {\n          if (!user || !user.email) {\n            await this.logAction(c, 'generateKey', 400);\n            return this.sendError(c, 400, 'User not authenticated or email missing');\n          }\n          const key = Totp.generateKey({ issuer: 'Croissant API', user: user.email });\n          const qrCode = await qrcode.toDataURL(key.url);\n          await this.logAction(c, 'generateKey', 200);\n          return c.json({ key, qrCode }, 200);\n        }\n\n        case 'registerKey': {\n          const { key: regKey, passcode } = await c.req.json();\n          if (!user || !user.email || !regKey) {\n            await this.logAction(c, 'registerKey', 400);\n            return this.sendError(c, 400, 'User not authenticated, email missing, or key missing');\n          }\n          if (!passcode) {\n            await this.logAction(c, 'registerKey', 400);\n            return this.sendError(c, 400, 'Passcode is required');\n          }\n          if (!Totp.validate({ secret: regKey.secret, passcode })) {\n            await this.logAction(c, 'registerKey', 400);\n            return this.sendError(c, 400, 'Invalid passcode');\n          }\n          await this.userService.setAuthenticatorSecret(user.user_id, regKey.secret);\n          await this.logAction(c, 'registerKey', 200);\n          return c.json({ message: 'Key registered successfully' }, 200);\n        }\n\n        case 'delete': {\n          if (!user || !user.email) {\n            await this.logAction(c, 'deleteKey', 400);\n            return this.sendError(c, 400, 'User not authenticated or email missing');\n          }\n          await this.userService.setAuthenticatorSecret(user.user_id, null);\n          await this.logAction(c, 'deleteKey', 200);\n          return c.json({ message: 'Google Authenticator deleted successfully' }, 200);\n        }\n\n        default:\n          return this.sendError(c, 404, 'Unknown action');\n      }\n    } catch (error) {\n      await this.logAction(c, action, 500, { error });\n      return this.sendError(c, 500, `Error in ${action}`, error);\n    }\n  }\n}\n", "import crypto from 'crypto';\n\nconst BASE32_CHARS = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=\";\nconst SHA1 = \"sha1\";\nconst DEFAULT_TOTP_PERIOD = 30;\nconst DEFAULT_TOTP_DIGITS = 6;\nconst DEFAULT_TOTP_SECRET_SIZE = 10;\nconst DEFAULT_TOTP_ALGO = SHA1;\nconst INVALID_SECRET_ERR = \"Invalid secret\";\n\nclass ValidationError extends Error {\n  constructor(message) {\n    super(message);\n    this.name = this.constructor.name;\n    Error.captureStackTrace(this, this.constructor);\n  }\n}\n\nconst Encode32 = (key) => {\n  if (!Buffer.isBuffer(key)) {\n    throw new TypeError(\"The input must be a Buffer\");\n  }\n  let binary = \"\";\n  for (let i = 0; i < key.length; i++) {\n    binary += key[i].toString(2).padStart(8, \"0\");\n  }\n  let base32 = \"\";\n  for (let i = 0; i < binary.length; i += 5) {\n    const chunk = binary.substring(i, i + 5);\n    base32 += BASE32_CHARS[parseInt(chunk, 2)];\n  }\n  const padding = base32.length % 8;\n  if (padding > 0) {\n    base32 += \"=\".repeat(8 - padding);\n  }\n  return base32;\n};\nconst Decode32 = (s) => {\n  const len = s.length;\n  let bits = 0;\n  let value = 0;\n  let offset = 0;\n  const result = Buffer.alloc(Math.ceil(len * 5 / 8));\n  for (let i = 0; i < len; i++) {\n    const char = s.charAt(i);\n    const index = BASE32_CHARS.indexOf(char.toUpperCase());\n    if (index === 32) {\n      continue;\n    }\n    if (index === -1) {\n      throw new ValidationError(INVALID_SECRET_ERR);\n    }\n    value = value << 5 | index;\n    bits += 5;\n    if (bits >= 8) {\n      result[offset++] = value >> bits - 8;\n      bits -= 8;\n    }\n  }\n  return result.subarray(0, offset);\n};\n\nclass HmacBased {\n  generatePasscode(options, config) {\n    const secretBytes = Buffer.from(Decode32(options.secret));\n    if (secretBytes.length !== config.secretSize) {\n      throw new ValidationError(INVALID_SECRET_ERR);\n    }\n    const buf = Buffer.alloc(8);\n    buf.writeUInt32BE(options.counter, 4);\n    const hmac = crypto.createHmac(config.algo, secretBytes);\n    hmac.update(buf);\n    const hmacResult = hmac.digest();\n    const offset = hmacResult[hmacResult.length - 1] & 15;\n    const value = (hmacResult[offset] & 127) << 24 | (hmacResult[offset + 1] & 255) << 16 | (hmacResult[offset + 2] & 255) << 8 | hmacResult[offset + 3] & 255;\n    const mod = value % Math.pow(10, config.digits);\n    return mod.toString().padStart(config.digits, \"0\");\n  }\n  validate(options, config) {\n    const validatedConfig = generateConfig(config);\n    const passcode = options?.passcode.replace(/\\s/g, \"\") || \"\";\n    if (passcode.length !== validatedConfig.digits) {\n      throw new ValidationError(\"Invalid passcode\");\n    }\n    const code = this.generatePasscode(options, validatedConfig);\n    if (code === passcode) {\n      return true;\n    }\n    return false;\n  }\n}\n\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nclass GenerateKey {\n  constructor(options, config) {\n    __publicField(this, \"issuer\");\n    __publicField(this, \"user\");\n    __publicField(this, \"secret\");\n    __publicField(this, \"url\");\n    __publicField(this, \"config\");\n    if (!options?.issuer) {\n      throw new Error(\"No issuer found\");\n    }\n    if (!options?.user) {\n      throw new Error(\"No user found\");\n    }\n    this.issuer = options.issuer;\n    this.user = options.user;\n    this.config = generateConfig(config);\n    this.secret = generateSecret(this.config.secretSize);\n    this.url = generateUrl(\n      {\n        issuer: this.issuer,\n        user: this.user,\n        secret: this.secret\n      },\n      this.config\n    );\n  }\n}\n\nclass TimeBased {\n  generateKey(options, config) {\n    return new GenerateKey(options, config);\n  }\n  generatePasscodes(options, config) {\n    const epoch = Math.floor(Date.now() / 1e3);\n    const counter = Math.floor(epoch / (config.period || DEFAULT_TOTP_PERIOD));\n    const counters = [counter];\n    if (options.drift && options.drift > 0) {\n      for (let i = 1; i <= options.drift; i++) {\n        counters.push(counter + i);\n        counters.push(counter - i);\n      }\n    }\n    const codes = [];\n    const hmac = new HmacBased();\n    for (let i = 0; i < counters.length; i++) {\n      codes.push(\n        hmac.generatePasscode(\n          {\n            secret: options.secret,\n            counter: counters[i]\n          },\n          config\n        )\n      );\n    }\n    return codes;\n  }\n  validate(options, config) {\n    const validatedConfig = generateConfig(config);\n    const passcode = options?.passcode.replace(/\\s/g, \"\") || \"\";\n    if (passcode.length !== validatedConfig.digits) {\n      throw new ValidationError(\"Invalid passcode\");\n    }\n    const codes = this.generatePasscodes(options, validatedConfig);\n    if (codes.includes(passcode)) {\n      return true;\n    }\n    return false;\n  }\n}\n\nconst generateConfig = (config) => {\n  return {\n    algo: config?.algo || DEFAULT_TOTP_ALGO,\n    digits: config?.digits || DEFAULT_TOTP_DIGITS,\n    period: config?.period || DEFAULT_TOTP_PERIOD,\n    secretSize: config?.secretSize || DEFAULT_TOTP_SECRET_SIZE\n  };\n};\nconst generateSecret = (secretSize = DEFAULT_TOTP_SECRET_SIZE) => {\n  const bytes = Buffer.from(crypto.randomBytes(secretSize));\n  return Encode32(bytes);\n};\nconst generateBackupCodes = (numCodes = 10, codeLength = DEFAULT_TOTP_DIGITS) => {\n  const backupCodes = [];\n  for (let i = 0; i < numCodes; i++) {\n    let code = \"\";\n    for (let j = 0; j < codeLength; j++) {\n      code += crypto.randomInt(0, 10).toString();\n    }\n    backupCodes.push(code);\n  }\n  return backupCodes;\n};\nconst generateUrl = (options, config) => {\n  const url = new URL(`otpauth://totp/${encodeURIComponent(options.issuer)}:${encodeURIComponent(\n    options.user\n  )}`);\n  const params = new URLSearchParams({\n    issuer: options.issuer,\n    period: config.period.toString(),\n    // Currently ignored by the google auth implementations\n    secret: options.secret\n  });\n  if (config.algo !== DEFAULT_TOTP_ALGO) {\n    params.set(\"algorithm\", config.algo);\n  }\n  if (config.digits !== DEFAULT_TOTP_DIGITS) {\n    params.set(\"digits\", config.digits.toString());\n  }\n  url.search = params.toString();\n  return url.toString();\n};\nconst Totp = new TimeBased();\nconst Hotp = new HmacBased();\n\nexport { Hotp, Totp, generateBackupCodes, generateConfig, generateSecret, generateUrl };\n", "export * from './decorators';\r\nexport * from './InversifyHonoServer';\r\nexport * from './types';\r\n", "/* eslint-disable @typescript-eslint/no-explicit-any */\r\nimport { MiddlewareHandler } from 'hono';\r\nimport 'reflect-metadata';\r\nimport { HonoControllerMetadata, HonoHandlerDecorator, METADATA_KEY } from './types';\r\n\r\n// Registry to store all controller constructors\r\nconst controllerRegistry = new Set<any>();\r\n\r\n// Export function to get the registry\r\nexport function getControllerRegistry(): Set<any> {\r\n  return controllerRegistry;\r\n}\r\n\r\nexport function controller(path?: string, ...middleware: MiddlewareHandler[]) {\r\n  return function <T extends { new (...args: any[]): object }>(target: T) {\r\n    const metadata: HonoControllerMetadata = {\r\n      path: path || '',\r\n      middleware\r\n    };\r\n    \r\n    Reflect.defineMetadata(METADATA_KEY.controller, metadata, target);\r\n    \r\n    // Add to registry\r\n    controllerRegistry.add(target);\r\n    console.log(`Registered controller: ${target.name} with path: ${metadata.path}`);\r\n    \r\n    return target;\r\n  };\r\n}\r\n\r\nfunction httpMethod(method: string, path?: string, ...middleware: MiddlewareHandler[]) {\r\n  return function (target: any, key: string, descriptor: PropertyDescriptor) {\r\n    const metadata: HonoHandlerDecorator = {\r\n      key,\r\n      method: method.toUpperCase(),\r\n      path: path || '',\r\n      middleware,\r\n      target,\r\n      descriptor\r\n    };\r\n\r\n    const metadataList: HonoHandlerDecorator[] = \r\n      Reflect.getMetadata(METADATA_KEY.httpMethod, target.constructor) || [];\r\n    \r\n    metadataList.push(metadata);\r\n    \r\n    Reflect.defineMetadata(METADATA_KEY.httpMethod, metadataList, target.constructor);\r\n    \r\n    return descriptor;\r\n  };\r\n}\r\n\r\nexport function httpGet(path?: string, ...middleware: MiddlewareHandler[]) {\r\n  return httpMethod('GET', path, ...middleware);\r\n}\r\n\r\nexport function httpPost(path?: string, ...middleware: MiddlewareHandler[]) {\r\n  return httpMethod('POST', path, ...middleware);\r\n}\r\n\r\nexport function httpPut(path?: string, ...middleware: MiddlewareHandler[]) {\r\n  return httpMethod('PUT', path, ...middleware);\r\n}\r\n\r\nexport function httpPatch(path?: string, ...middleware: MiddlewareHandler[]) {\r\n  return httpMethod('PATCH', path, ...middleware);\r\n}\r\n\r\nexport function httpDelete(path?: string, ...middleware: MiddlewareHandler[]) {\r\n  return httpMethod('DELETE', path, ...middleware);\r\n}\r\n\r\nexport function httpHead(path?: string, ...middleware: MiddlewareHandler[]) {\r\n  return httpMethod('HEAD', path, ...middleware);\r\n}\r\n\r\nexport function httpAll(path?: string, ...middleware: MiddlewareHandler[]) {\r\n  return httpMethod('ALL', path, ...middleware);\r\n}", "import { MiddlewareHandler } from 'hono';\r\n\r\nexport interface HonoHandlerResult {\r\n  [key: string]: unknown;\r\n}\r\n\r\nexport interface HonoHandlerDecorator {\r\n  path?: string | RegExp;\r\n  method: string;\r\n  middleware?: MiddlewareHandler[];\r\n  target: object;\r\n  key: string;\r\n  descriptor: PropertyDescriptor;\r\n}\r\n\r\nexport const TYPE = {\r\n  HonoRequestHandler: Symbol.for('HonoRequestHandler'),\r\n};\r\n\r\nexport const METADATA_KEY = {\r\n  controller: 'hono-inversify:controller',\r\n  httpMethod: 'hono-inversify:httpMethod',\r\n};\r\n\r\nexport interface HonoControllerMetadata {\r\n  path: string;\r\n  middleware?: MiddlewareHandler[];\r\n}", "import { Context, Hono, MiddlewareHandler } from 'hono';\r\nimport { Container } from 'inversify';\r\nimport { getControllerRegistry } from './decorators';\r\nimport { HonoControllerMetadata, HonoHandlerDecorator, METADATA_KEY } from './types';\r\n\r\nexport class InversifyHonoServer {\r\n  private _container: Container;\r\n  private _app: Hono;\r\n  private _configFn?: (app: Hono) => void;\r\n  private _errorConfigFn?: (app: Hono) => void;\r\n\r\n  constructor(container: Container) {\r\n    this._container = container;\r\n    this._app = new Hono();\r\n  }\r\n\r\n  public setConfig(fn: (app: Hono) => void): InversifyHonoServer {\r\n    this._configFn = fn;\r\n    return this;\r\n  }\r\n\r\n  public setErrorConfig(fn: (app: Hono) => void): InversifyHonoServer {\r\n    this._errorConfigFn = fn;\r\n    return this;\r\n  }\r\n\r\n  public build(): Hono {\r\n    // Apply config first\r\n    if (this._configFn) {\r\n      this._configFn(this._app);\r\n    }\r\n\r\n    // Register all controllers\r\n    this.registerControllers();\r\n\r\n    // Apply error config last\r\n    if (this._errorConfigFn) {\r\n      this._errorConfigFn(this._app);\r\n    }\r\n\r\n    return this._app;\r\n  }\r\n\r\n  private registerControllers(): void {\r\n    const registry = getControllerRegistry();\r\n    console.log(`Registering ${registry.size} controllers from registry`);\r\n    registry.forEach((controllerConstructor) => {\r\n      const metadata = Reflect.getMetadata(METADATA_KEY.controller, controllerConstructor);\r\n    \r\n      if (!metadata) {\r\n        console.warn(`No controller metadata found for ${controllerConstructor.name}`);\r\n        return;\r\n      }\r\n\r\n      // Get controller instance from container - FIX: Ensure proper binding\r\n      let controllerInstance: object;\r\n      try {\r\n        // Check if the controller is bound in the container\r\n        if (this._container.isBound(controllerConstructor)) {\r\n          controllerInstance = this._container.get<object>(controllerConstructor);\r\n        } else {\r\n          console.error(`Controller ${controllerConstructor.name} is not bound to the container`);\r\n          return;\r\n        }\r\n      } catch (error) {\r\n        console.error(`Error getting controller instance for ${controllerConstructor.name}:`, error);\r\n        return;\r\n      }\r\n\r\n      this.registerController(controllerInstance, metadata);\r\n    });\r\n  }\r\n\r\n  private registerController(\r\n    controllerInstance: object,\r\n    controllerMetadata: HonoControllerMetadata\r\n  ): void {\r\n    const handlerMetadatas: HonoHandlerDecorator[] = this.getHandlersFromMetadata(\r\n      controllerInstance.constructor\r\n    );\r\n\r\n    console.log(`Registering controller: ${controllerInstance.constructor.name}`);\r\n\r\n    console.log(`Registering controller with ${handlerMetadatas.length} handlers`);\r\n\r\n    // Register each method as a route\r\n    handlerMetadatas.forEach((handlerMetadata) => {\r\n      this.registerHandler(\r\n        controllerInstance,\r\n        controllerMetadata,\r\n        handlerMetadata\r\n      );\r\n    });\r\n  }\r\n\r\n  private registerHandler(\r\n    controllerInstance: object,\r\n    controllerMetadata: HonoControllerMetadata,\r\n    handlerMetadata: HonoHandlerDecorator\r\n  ): void {\r\n    // Build the full path\r\n    let path = '';\r\n    if (controllerMetadata.path) {\r\n      path += controllerMetadata.path;\r\n    }\r\n    if (handlerMetadata.path) {\r\n      path += handlerMetadata.path;\r\n    }\r\n\r\n    // Ensure path starts with /\r\n    if (path && !path.startsWith('/')) {\r\n      path = '/' + path;\r\n    }\r\n    if (!path) {\r\n      path = '/';\r\n    }\r\n\r\n    // Create the handler wrapper\r\n    const handler: MiddlewareHandler = async (c: Context) => {\r\n      try {\r\n        const method = (controllerInstance as Record<string, unknown>)[handlerMetadata.key];\r\n        if (typeof method === 'function') {\r\n          const result = await method.call(controllerInstance, c);\r\n          return result;\r\n        }\r\n        \r\n        throw new Error(`Method ${handlerMetadata.key} not found on controller`);\r\n      } catch (error) {\r\n        console.error('Handler error:', error);\r\n        return c.json({ error: 'Internal server error' }, 500);\r\n      }\r\n    };\r\n\r\n    // Combine middlewares: controller middleware + method middleware\r\n    const middlewares: MiddlewareHandler[] = [];\r\n    if (controllerMetadata.middleware) {\r\n      middlewares.push(...controllerMetadata.middleware);\r\n    }\r\n    if (handlerMetadata.middleware) {\r\n      middlewares.push(...handlerMetadata.middleware);\r\n    }\r\n    middlewares.push(handler);\r\n\r\n    // Register the route\r\n    const method = handlerMetadata.method.toLowerCase();\r\n    switch (method) {\r\n      case 'get':\r\n        this._app.get(path, ...middlewares);\r\n        break;\r\n      case 'post':\r\n        this._app.post(path, ...middlewares);\r\n        break;\r\n      case 'put':\r\n        this._app.put(path, ...middlewares);\r\n        break;\r\n      case 'patch':\r\n        this._app.patch(path, ...middlewares);\r\n        break;\r\n      case 'delete':\r\n        this._app.delete(path, ...middlewares);\r\n        break;\r\n      case 'head':\r\n        this._app.on('HEAD', path, ...middlewares);\r\n        break;\r\n      case 'all':\r\n        this._app.all(path, ...middlewares);\r\n        break;\r\n      default:\r\n        console.warn(`Unsupported HTTP method: ${method}`);\r\n    }\r\n\r\n    console.log(`Registered ${method.toUpperCase()} ${path} -> ${controllerInstance.constructor.name}.${handlerMetadata.key}`);\r\n  }\r\n\r\n  private getHandlersFromMetadata(constructor: object): HonoHandlerDecorator[] {\r\n    const handlerMetadatas: HonoHandlerDecorator[] = \r\n      Reflect.getMetadata(METADATA_KEY.httpMethod, constructor) || [];\r\n    \r\n    return handlerMetadatas;\r\n  }\r\n}", "// src/index.ts\nimport { Hono } from \"./hono.js\";\nexport {\n  Hono\n};\n", "// src/hono.ts\nimport { HonoBase } from \"./hono-base.js\";\nimport { RegExpRouter } from \"./router/reg-exp-router/index.js\";\nimport { SmartRouter } from \"./router/smart-router/index.js\";\nimport { TrieRouter } from \"./router/trie-router/index.js\";\nvar Hono = class extends HonoBase {\n  constructor(options = {}) {\n    super(options);\n    this.router = options.router ?? new SmartRouter({\n      routers: [new RegExpRouter(), new TrieRouter()]\n    });\n  }\n};\nexport {\n  Hono\n};\n", "// src/hono-base.ts\nimport { compose } from \"./compose.js\";\nimport { Context } from \"./context.js\";\nimport { METHODS, METHOD_NAME_ALL, METHOD_NAME_ALL_LOWERCASE } from \"./router.js\";\nimport { COMPOSED_HANDLER } from \"./utils/constants.js\";\nimport { getPath, getPathNoStrict, mergePath } from \"./utils/url.js\";\nvar notFoundHandler = (c) => {\n  return c.text(\"404 Not Found\", 404);\n};\nvar errorHandler = (err, c) => {\n  if (\"getResponse\" in err) {\n    const res = err.getResponse();\n    return c.newResponse(res.body, res);\n  }\n  console.error(err);\n  return c.text(\"Internal Server Error\", 500);\n};\nvar Hono = class {\n  get;\n  post;\n  put;\n  delete;\n  options;\n  patch;\n  all;\n  on;\n  use;\n  router;\n  getPath;\n  _basePath = \"/\";\n  #path = \"/\";\n  routes = [];\n  constructor(options = {}) {\n    const allMethods = [...METHODS, METHOD_NAME_ALL_LOWERCASE];\n    allMethods.forEach((method) => {\n      this[method] = (args1, ...args) => {\n        if (typeof args1 === \"string\") {\n          this.#path = args1;\n        } else {\n          this.#addRoute(method, this.#path, args1);\n        }\n        args.forEach((handler) => {\n          this.#addRoute(method, this.#path, handler);\n        });\n        return this;\n      };\n    });\n    this.on = (method, path, ...handlers) => {\n      for (const p of [path].flat()) {\n        this.#path = p;\n        for (const m of [method].flat()) {\n          handlers.map((handler) => {\n            this.#addRoute(m.toUpperCase(), this.#path, handler);\n          });\n        }\n      }\n      return this;\n    };\n    this.use = (arg1, ...handlers) => {\n      if (typeof arg1 === \"string\") {\n        this.#path = arg1;\n      } else {\n        this.#path = \"*\";\n        handlers.unshift(arg1);\n      }\n      handlers.forEach((handler) => {\n        this.#addRoute(METHOD_NAME_ALL, this.#path, handler);\n      });\n      return this;\n    };\n    const { strict, ...optionsWithoutStrict } = options;\n    Object.assign(this, optionsWithoutStrict);\n    this.getPath = strict ?? true ? options.getPath ?? getPath : getPathNoStrict;\n  }\n  #clone() {\n    const clone = new Hono({\n      router: this.router,\n      getPath: this.getPath\n    });\n    clone.errorHandler = this.errorHandler;\n    clone.#notFoundHandler = this.#notFoundHandler;\n    clone.routes = this.routes;\n    return clone;\n  }\n  #notFoundHandler = notFoundHandler;\n  errorHandler = errorHandler;\n  route(path, app) {\n    const subApp = this.basePath(path);\n    app.routes.map((r) => {\n      let handler;\n      if (app.errorHandler === errorHandler) {\n        handler = r.handler;\n      } else {\n        handler = async (c, next) => (await compose([], app.errorHandler)(c, () => r.handler(c, next))).res;\n        handler[COMPOSED_HANDLER] = r.handler;\n      }\n      subApp.#addRoute(r.method, r.path, handler);\n    });\n    return this;\n  }\n  basePath(path) {\n    const subApp = this.#clone();\n    subApp._basePath = mergePath(this._basePath, path);\n    return subApp;\n  }\n  onError = (handler) => {\n    this.errorHandler = handler;\n    return this;\n  };\n  notFound = (handler) => {\n    this.#notFoundHandler = handler;\n    return this;\n  };\n  mount(path, applicationHandler, options) {\n    let replaceRequest;\n    let optionHandler;\n    if (options) {\n      if (typeof options === \"function\") {\n        optionHandler = options;\n      } else {\n        optionHandler = options.optionHandler;\n        if (options.replaceRequest === false) {\n          replaceRequest = (request) => request;\n        } else {\n          replaceRequest = options.replaceRequest;\n        }\n      }\n    }\n    const getOptions = optionHandler ? (c) => {\n      const options2 = optionHandler(c);\n      return Array.isArray(options2) ? options2 : [options2];\n    } : (c) => {\n      let executionContext = void 0;\n      try {\n        executionContext = c.executionCtx;\n      } catch {\n      }\n      return [c.env, executionContext];\n    };\n    replaceRequest ||= (() => {\n      const mergedPath = mergePath(this._basePath, path);\n      const pathPrefixLength = mergedPath === \"/\" ? 0 : mergedPath.length;\n      return (request) => {\n        const url = new URL(request.url);\n        url.pathname = url.pathname.slice(pathPrefixLength) || \"/\";\n        return new Request(url, request);\n      };\n    })();\n    const handler = async (c, next) => {\n      const res = await applicationHandler(replaceRequest(c.req.raw), ...getOptions(c));\n      if (res) {\n        return res;\n      }\n      await next();\n    };\n    this.#addRoute(METHOD_NAME_ALL, mergePath(path, \"*\"), handler);\n    return this;\n  }\n  #addRoute(method, path, handler) {\n    method = method.toUpperCase();\n    path = mergePath(this._basePath, path);\n    const r = { basePath: this._basePath, path, method, handler };\n    this.router.add(method, path, [handler, r]);\n    this.routes.push(r);\n  }\n  #handleError(err, c) {\n    if (err instanceof Error) {\n      return this.errorHandler(err, c);\n    }\n    throw err;\n  }\n  #dispatch(request, executionCtx, env, method) {\n    if (method === \"HEAD\") {\n      return (async () => new Response(null, await this.#dispatch(request, executionCtx, env, \"GET\")))();\n    }\n    const path = this.getPath(request, { env });\n    const matchResult = this.router.match(method, path);\n    const c = new Context(request, {\n      path,\n      matchResult,\n      env,\n      executionCtx,\n      notFoundHandler: this.#notFoundHandler\n    });\n    if (matchResult[0].length === 1) {\n      let res;\n      try {\n        res = matchResult[0][0][0][0](c, async () => {\n          c.res = await this.#notFoundHandler(c);\n        });\n      } catch (err) {\n        return this.#handleError(err, c);\n      }\n      return res instanceof Promise ? res.then(\n        (resolved) => resolved || (c.finalized ? c.res : this.#notFoundHandler(c))\n      ).catch((err) => this.#handleError(err, c)) : res ?? this.#notFoundHandler(c);\n    }\n    const composed = compose(matchResult[0], this.errorHandler, this.#notFoundHandler);\n    return (async () => {\n      try {\n        const context = await composed(c);\n        if (!context.finalized) {\n          throw new Error(\n            \"Context is not finalized. Did you forget to return a Response object or `await next()`?\"\n          );\n        }\n        return context.res;\n      } catch (err) {\n        return this.#handleError(err, c);\n      }\n    })();\n  }\n  fetch = (request, ...rest) => {\n    return this.#dispatch(request, rest[1], rest[0], request.method);\n  };\n  request = (input, requestInit, Env, executionCtx) => {\n    if (input instanceof Request) {\n      return this.fetch(requestInit ? new Request(input, requestInit) : input, Env, executionCtx);\n    }\n    input = input.toString();\n    return this.fetch(\n      new Request(\n        /^https?:\\/\\//.test(input) ? input : `http://localhost${mergePath(\"/\", input)}`,\n        requestInit\n      ),\n      Env,\n      executionCtx\n    );\n  };\n  fire = () => {\n    addEventListener(\"fetch\", (event) => {\n      event.respondWith(this.#dispatch(event.request, event, void 0, event.request.method));\n    });\n  };\n};\nexport {\n  Hono as HonoBase\n};\n", "// src/compose.ts\nvar compose = (middleware, onError, onNotFound) => {\n  return (context, next) => {\n    let index = -1;\n    return dispatch(0);\n    async function dispatch(i) {\n      if (i <= index) {\n        throw new Error(\"next() called multiple times\");\n      }\n      index = i;\n      let res;\n      let isError = false;\n      let handler;\n      if (middleware[i]) {\n        handler = middleware[i][0][0];\n        context.req.routeIndex = i;\n      } else {\n        handler = i === middleware.length && next || void 0;\n      }\n      if (handler) {\n        try {\n          res = await handler(context, () => dispatch(i + 1));\n        } catch (err) {\n          if (err instanceof Error && onError) {\n            context.error = err;\n            res = await onError(err, context);\n            isError = true;\n          } else {\n            throw err;\n          }\n        }\n      } else {\n        if (context.finalized === false && onNotFound) {\n          res = await onNotFound(context);\n        }\n      }\n      if (res && (context.finalized === false || isError)) {\n        context.res = res;\n      }\n      return context;\n    }\n  };\n};\nexport {\n  compose\n};\n", "// src/context.ts\nimport { HonoRequest } from \"./request.js\";\nimport { HtmlEscapedCallbackPhase, resolveCallback } from \"./utils/html.js\";\nvar TEXT_PLAIN = \"text/plain; charset=UTF-8\";\nvar setDefaultContentType = (contentType, headers) => {\n  return {\n    \"Content-Type\": contentType,\n    ...headers\n  };\n};\nvar Context = class {\n  #rawRequest;\n  #req;\n  env = {};\n  #var;\n  finalized = false;\n  error;\n  #status;\n  #executionCtx;\n  #res;\n  #layout;\n  #renderer;\n  #notFoundHandler;\n  #preparedHeaders;\n  #matchResult;\n  #path;\n  constructor(req, options) {\n    this.#rawRequest = req;\n    if (options) {\n      this.#executionCtx = options.executionCtx;\n      this.env = options.env;\n      this.#notFoundHandler = options.notFoundHandler;\n      this.#path = options.path;\n      this.#matchResult = options.matchResult;\n    }\n  }\n  get req() {\n    this.#req ??= new HonoRequest(this.#rawRequest, this.#path, this.#matchResult);\n    return this.#req;\n  }\n  get event() {\n    if (this.#executionCtx && \"respondWith\" in this.#executionCtx) {\n      return this.#executionCtx;\n    } else {\n      throw Error(\"This context has no FetchEvent\");\n    }\n  }\n  get executionCtx() {\n    if (this.#executionCtx) {\n      return this.#executionCtx;\n    } else {\n      throw Error(\"This context has no ExecutionContext\");\n    }\n  }\n  get res() {\n    return this.#res ||= new Response(null, {\n      headers: this.#preparedHeaders ??= new Headers()\n    });\n  }\n  set res(_res) {\n    if (this.#res && _res) {\n      _res = new Response(_res.body, _res);\n      for (const [k, v] of this.#res.headers.entries()) {\n        if (k === \"content-type\") {\n          continue;\n        }\n        if (k === \"set-cookie\") {\n          const cookies = this.#res.headers.getSetCookie();\n          _res.headers.delete(\"set-cookie\");\n          for (const cookie of cookies) {\n            _res.headers.append(\"set-cookie\", cookie);\n          }\n        } else {\n          _res.headers.set(k, v);\n        }\n      }\n    }\n    this.#res = _res;\n    this.finalized = true;\n  }\n  render = (...args) => {\n    this.#renderer ??= (content) => this.html(content);\n    return this.#renderer(...args);\n  };\n  setLayout = (layout) => this.#layout = layout;\n  getLayout = () => this.#layout;\n  setRenderer = (renderer) => {\n    this.#renderer = renderer;\n  };\n  header = (name, value, options) => {\n    if (this.finalized) {\n      this.#res = new Response(this.#res.body, this.#res);\n    }\n    const headers = this.#res ? this.#res.headers : this.#preparedHeaders ??= new Headers();\n    if (value === void 0) {\n      headers.delete(name);\n    } else if (options?.append) {\n      headers.append(name, value);\n    } else {\n      headers.set(name, value);\n    }\n  };\n  status = (status) => {\n    this.#status = status;\n  };\n  set = (key, value) => {\n    this.#var ??= /* @__PURE__ */ new Map();\n    this.#var.set(key, value);\n  };\n  get = (key) => {\n    return this.#var ? this.#var.get(key) : void 0;\n  };\n  get var() {\n    if (!this.#var) {\n      return {};\n    }\n    return Object.fromEntries(this.#var);\n  }\n  #newResponse(data, arg, headers) {\n    const responseHeaders = this.#res ? new Headers(this.#res.headers) : this.#preparedHeaders ?? new Headers();\n    if (typeof arg === \"object\" && \"headers\" in arg) {\n      const argHeaders = arg.headers instanceof Headers ? arg.headers : new Headers(arg.headers);\n      for (const [key, value] of argHeaders) {\n        if (key.toLowerCase() === \"set-cookie\") {\n          responseHeaders.append(key, value);\n        } else {\n          responseHeaders.set(key, value);\n        }\n      }\n    }\n    if (headers) {\n      for (const [k, v] of Object.entries(headers)) {\n        if (typeof v === \"string\") {\n          responseHeaders.set(k, v);\n        } else {\n          responseHeaders.delete(k);\n          for (const v2 of v) {\n            responseHeaders.append(k, v2);\n          }\n        }\n      }\n    }\n    const status = typeof arg === \"number\" ? arg : arg?.status ?? this.#status;\n    return new Response(data, { status, headers: responseHeaders });\n  }\n  newResponse = (...args) => this.#newResponse(...args);\n  body = (data, arg, headers) => this.#newResponse(data, arg, headers);\n  text = (text, arg, headers) => {\n    return !this.#preparedHeaders && !this.#status && !arg && !headers && !this.finalized ? new Response(text) : this.#newResponse(\n      text,\n      arg,\n      setDefaultContentType(TEXT_PLAIN, headers)\n    );\n  };\n  json = (object, arg, headers) => {\n    return this.#newResponse(\n      JSON.stringify(object),\n      arg,\n      setDefaultContentType(\"application/json\", headers)\n    );\n  };\n  html = (html, arg, headers) => {\n    const res = (html2) => this.#newResponse(html2, arg, setDefaultContentType(\"text/html; charset=UTF-8\", headers));\n    return typeof html === \"object\" ? resolveCallback(html, HtmlEscapedCallbackPhase.Stringify, false, {}).then(res) : res(html);\n  };\n  redirect = (location, status) => {\n    const locationString = String(location);\n    this.header(\n      \"Location\",\n      !/[^\\x00-\\xFF]/.test(locationString) ? locationString : encodeURI(locationString)\n    );\n    return this.newResponse(null, status ?? 302);\n  };\n  notFound = () => {\n    this.#notFoundHandler ??= () => new Response();\n    return this.#notFoundHandler(this);\n  };\n};\nexport {\n  Context,\n  TEXT_PLAIN\n};\n", "// src/request.ts\nimport { HTTPException } from \"./http-exception.js\";\nimport { GET_MATCH_RESULT } from \"./request/constants.js\";\nimport { parseBody } from \"./utils/body.js\";\nimport { decodeURIComponent_, getQueryParam, getQueryParams, tryDecode } from \"./utils/url.js\";\nvar tryDecodeURIComponent = (str) => tryDecode(str, decodeURIComponent_);\nvar HonoRequest = class {\n  raw;\n  #validatedData;\n  #matchResult;\n  routeIndex = 0;\n  path;\n  bodyCache = {};\n  constructor(request, path = \"/\", matchResult = [[]]) {\n    this.raw = request;\n    this.path = path;\n    this.#matchResult = matchResult;\n    this.#validatedData = {};\n  }\n  param(key) {\n    return key ? this.#getDecodedParam(key) : this.#getAllDecodedParams();\n  }\n  #getDecodedParam(key) {\n    const paramKey = this.#matchResult[0][this.routeIndex][1][key];\n    const param = this.#getParamValue(paramKey);\n    return param && /\\%/.test(param) ? tryDecodeURIComponent(param) : param;\n  }\n  #getAllDecodedParams() {\n    const decoded = {};\n    const keys = Object.keys(this.#matchResult[0][this.routeIndex][1]);\n    for (const key of keys) {\n      const value = this.#getParamValue(this.#matchResult[0][this.routeIndex][1][key]);\n      if (value !== void 0) {\n        decoded[key] = /\\%/.test(value) ? tryDecodeURIComponent(value) : value;\n      }\n    }\n    return decoded;\n  }\n  #getParamValue(paramKey) {\n    return this.#matchResult[1] ? this.#matchResult[1][paramKey] : paramKey;\n  }\n  query(key) {\n    return getQueryParam(this.url, key);\n  }\n  queries(key) {\n    return getQueryParams(this.url, key);\n  }\n  header(name) {\n    if (name) {\n      return this.raw.headers.get(name) ?? void 0;\n    }\n    const headerData = {};\n    this.raw.headers.forEach((value, key) => {\n      headerData[key] = value;\n    });\n    return headerData;\n  }\n  async parseBody(options) {\n    return this.bodyCache.parsedBody ??= await parseBody(this, options);\n  }\n  #cachedBody = (key) => {\n    const { bodyCache, raw } = this;\n    const cachedBody = bodyCache[key];\n    if (cachedBody) {\n      return cachedBody;\n    }\n    const anyCachedKey = Object.keys(bodyCache)[0];\n    if (anyCachedKey) {\n      return bodyCache[anyCachedKey].then((body) => {\n        if (anyCachedKey === \"json\") {\n          body = JSON.stringify(body);\n        }\n        return new Response(body)[key]();\n      });\n    }\n    return bodyCache[key] = raw[key]();\n  };\n  json() {\n    return this.#cachedBody(\"text\").then((text) => JSON.parse(text));\n  }\n  text() {\n    return this.#cachedBody(\"text\");\n  }\n  arrayBuffer() {\n    return this.#cachedBody(\"arrayBuffer\");\n  }\n  blob() {\n    return this.#cachedBody(\"blob\");\n  }\n  formData() {\n    return this.#cachedBody(\"formData\");\n  }\n  addValidatedData(target, data) {\n    this.#validatedData[target] = data;\n  }\n  valid(target) {\n    return this.#validatedData[target];\n  }\n  get url() {\n    return this.raw.url;\n  }\n  get method() {\n    return this.raw.method;\n  }\n  get [GET_MATCH_RESULT]() {\n    return this.#matchResult;\n  }\n  get matchedRoutes() {\n    return this.#matchResult[0].map(([[, route]]) => route);\n  }\n  get routePath() {\n    return this.#matchResult[0].map(([[, route]]) => route)[this.routeIndex].path;\n  }\n};\nvar cloneRawRequest = async (req) => {\n  if (!req.raw.bodyUsed) {\n    return req.raw.clone();\n  }\n  const cacheKey = Object.keys(req.bodyCache)[0];\n  if (!cacheKey) {\n    throw new HTTPException(500, {\n      message: \"Cannot clone request: body was already consumed and not cached. Please use HonoRequest methods (e.g., req.json(), req.text()) instead of consuming req.raw directly.\"\n    });\n  }\n  const requestInit = {\n    body: await req[cacheKey](),\n    cache: req.raw.cache,\n    credentials: req.raw.credentials,\n    headers: req.header(),\n    integrity: req.raw.integrity,\n    keepalive: req.raw.keepalive,\n    method: req.method,\n    mode: req.raw.mode,\n    redirect: req.raw.redirect,\n    referrer: req.raw.referrer,\n    referrerPolicy: req.raw.referrerPolicy,\n    signal: req.raw.signal\n  };\n  return new Request(req.url, requestInit);\n};\nexport {\n  HonoRequest,\n  cloneRawRequest\n};\n", "// src/http-exception.ts\nvar HTTPException = class extends Error {\n  res;\n  status;\n  constructor(status = 500, options) {\n    super(options?.message, { cause: options?.cause });\n    this.res = options?.res;\n    this.status = status;\n  }\n  getResponse() {\n    if (this.res) {\n      const newResponse = new Response(this.res.body, {\n        status: this.status,\n        headers: this.res.headers\n      });\n      return newResponse;\n    }\n    return new Response(this.message, {\n      status: this.status\n    });\n  }\n};\nexport {\n  HTTPException\n};\n", "// src/request/constants.ts\nvar GET_MATCH_RESULT = Symbol();\nexport {\n  GET_MATCH_RESULT\n};\n", "// src/utils/body.ts\nimport { HonoRequest } from \"../request.js\";\nvar parseBody = async (request, options = /* @__PURE__ */ Object.create(null)) => {\n  const { all = false, dot = false } = options;\n  const headers = request instanceof HonoRequest ? request.raw.headers : request.headers;\n  const contentType = headers.get(\"Content-Type\");\n  if (contentType?.startsWith(\"multipart/form-data\") || contentType?.startsWith(\"application/x-www-form-urlencoded\")) {\n    return parseFormData(request, { all, dot });\n  }\n  return {};\n};\nasync function parseFormData(request, options) {\n  const formData = await request.formData();\n  if (formData) {\n    return convertFormDataToBodyData(formData, options);\n  }\n  return {};\n}\nfunction convertFormDataToBodyData(formData, options) {\n  const form = /* @__PURE__ */ Object.create(null);\n  formData.forEach((value, key) => {\n    const shouldParseAllValues = options.all || key.endsWith(\"[]\");\n    if (!shouldParseAllValues) {\n      form[key] = value;\n    } else {\n      handleParsingAllValues(form, key, value);\n    }\n  });\n  if (options.dot) {\n    Object.entries(form).forEach(([key, value]) => {\n      const shouldParseDotValues = key.includes(\".\");\n      if (shouldParseDotValues) {\n        handleParsingNestedValues(form, key, value);\n        delete form[key];\n      }\n    });\n  }\n  return form;\n}\nvar handleParsingAllValues = (form, key, value) => {\n  if (form[key] !== void 0) {\n    if (Array.isArray(form[key])) {\n      ;\n      form[key].push(value);\n    } else {\n      form[key] = [form[key], value];\n    }\n  } else {\n    if (!key.endsWith(\"[]\")) {\n      form[key] = value;\n    } else {\n      form[key] = [value];\n    }\n  }\n};\nvar handleParsingNestedValues = (form, key, value) => {\n  let nestedForm = form;\n  const keys = key.split(\".\");\n  keys.forEach((key2, index) => {\n    if (index === keys.length - 1) {\n      nestedForm[key2] = value;\n    } else {\n      if (!nestedForm[key2] || typeof nestedForm[key2] !== \"object\" || Array.isArray(nestedForm[key2]) || nestedForm[key2] instanceof File) {\n        nestedForm[key2] = /* @__PURE__ */ Object.create(null);\n      }\n      nestedForm = nestedForm[key2];\n    }\n  });\n};\nexport {\n  parseBody\n};\n", "// src/utils/url.ts\nvar splitPath = (path) => {\n  const paths = path.split(\"/\");\n  if (paths[0] === \"\") {\n    paths.shift();\n  }\n  return paths;\n};\nvar splitRoutingPath = (routePath) => {\n  const { groups, path } = extractGroupsFromPath(routePath);\n  const paths = splitPath(path);\n  return replaceGroupMarks(paths, groups);\n};\nvar extractGroupsFromPath = (path) => {\n  const groups = [];\n  path = path.replace(/\\{[^}]+\\}/g, (match, index) => {\n    const mark = `@${index}`;\n    groups.push([mark, match]);\n    return mark;\n  });\n  return { groups, path };\n};\nvar replaceGroupMarks = (paths, groups) => {\n  for (let i = groups.length - 1; i >= 0; i--) {\n    const [mark] = groups[i];\n    for (let j = paths.length - 1; j >= 0; j--) {\n      if (paths[j].includes(mark)) {\n        paths[j] = paths[j].replace(mark, groups[i][1]);\n        break;\n      }\n    }\n  }\n  return paths;\n};\nvar patternCache = {};\nvar getPattern = (label, next) => {\n  if (label === \"*\") {\n    return \"*\";\n  }\n  const match = label.match(/^\\:([^\\{\\}]+)(?:\\{(.+)\\})?$/);\n  if (match) {\n    const cacheKey = `${label}#${next}`;\n    if (!patternCache[cacheKey]) {\n      if (match[2]) {\n        patternCache[cacheKey] = next && next[0] !== \":\" && next[0] !== \"*\" ? [cacheKey, match[1], new RegExp(`^${match[2]}(?=/${next})`)] : [label, match[1], new RegExp(`^${match[2]}$`)];\n      } else {\n        patternCache[cacheKey] = [label, match[1], true];\n      }\n    }\n    return patternCache[cacheKey];\n  }\n  return null;\n};\nvar tryDecode = (str, decoder) => {\n  try {\n    return decoder(str);\n  } catch {\n    return str.replace(/(?:%[0-9A-Fa-f]{2})+/g, (match) => {\n      try {\n        return decoder(match);\n      } catch {\n        return match;\n      }\n    });\n  }\n};\nvar tryDecodeURI = (str) => tryDecode(str, decodeURI);\nvar getPath = (request) => {\n  const url = request.url;\n  const start = url.indexOf(\"/\", url.indexOf(\":\") + 4);\n  let i = start;\n  for (; i < url.length; i++) {\n    const charCode = url.charCodeAt(i);\n    if (charCode === 37) {\n      const queryIndex = url.indexOf(\"?\", i);\n      const path = url.slice(start, queryIndex === -1 ? void 0 : queryIndex);\n      return tryDecodeURI(path.includes(\"%25\") ? path.replace(/%25/g, \"%2525\") : path);\n    } else if (charCode === 63) {\n      break;\n    }\n  }\n  return url.slice(start, i);\n};\nvar getQueryStrings = (url) => {\n  const queryIndex = url.indexOf(\"?\", 8);\n  return queryIndex === -1 ? \"\" : \"?\" + url.slice(queryIndex + 1);\n};\nvar getPathNoStrict = (request) => {\n  const result = getPath(request);\n  return result.length > 1 && result.at(-1) === \"/\" ? result.slice(0, -1) : result;\n};\nvar mergePath = (base, sub, ...rest) => {\n  if (rest.length) {\n    sub = mergePath(sub, ...rest);\n  }\n  return `${base?.[0] === \"/\" ? \"\" : \"/\"}${base}${sub === \"/\" ? \"\" : `${base?.at(-1) === \"/\" ? \"\" : \"/\"}${sub?.[0] === \"/\" ? sub.slice(1) : sub}`}`;\n};\nvar checkOptionalParameter = (path) => {\n  if (path.charCodeAt(path.length - 1) !== 63 || !path.includes(\":\")) {\n    return null;\n  }\n  const segments = path.split(\"/\");\n  const results = [];\n  let basePath = \"\";\n  segments.forEach((segment) => {\n    if (segment !== \"\" && !/\\:/.test(segment)) {\n      basePath += \"/\" + segment;\n    } else if (/\\:/.test(segment)) {\n      if (/\\?/.test(segment)) {\n        if (results.length === 0 && basePath === \"\") {\n          results.push(\"/\");\n        } else {\n          results.push(basePath);\n        }\n        const optionalSegment = segment.replace(\"?\", \"\");\n        basePath += \"/\" + optionalSegment;\n        results.push(basePath);\n      } else {\n        basePath += \"/\" + segment;\n      }\n    }\n  });\n  return results.filter((v, i, a) => a.indexOf(v) === i);\n};\nvar _decodeURI = (value) => {\n  if (!/[%+]/.test(value)) {\n    return value;\n  }\n  if (value.indexOf(\"+\") !== -1) {\n    value = value.replace(/\\+/g, \" \");\n  }\n  return value.indexOf(\"%\") !== -1 ? tryDecode(value, decodeURIComponent_) : value;\n};\nvar _getQueryParam = (url, key, multiple) => {\n  let encoded;\n  if (!multiple && key && !/[%+]/.test(key)) {\n    let keyIndex2 = url.indexOf(`?${key}`, 8);\n    if (keyIndex2 === -1) {\n      keyIndex2 = url.indexOf(`&${key}`, 8);\n    }\n    while (keyIndex2 !== -1) {\n      const trailingKeyCode = url.charCodeAt(keyIndex2 + key.length + 1);\n      if (trailingKeyCode === 61) {\n        const valueIndex = keyIndex2 + key.length + 2;\n        const endIndex = url.indexOf(\"&\", valueIndex);\n        return _decodeURI(url.slice(valueIndex, endIndex === -1 ? void 0 : endIndex));\n      } else if (trailingKeyCode == 38 || isNaN(trailingKeyCode)) {\n        return \"\";\n      }\n      keyIndex2 = url.indexOf(`&${key}`, keyIndex2 + 1);\n    }\n    encoded = /[%+]/.test(url);\n    if (!encoded) {\n      return void 0;\n    }\n  }\n  const results = {};\n  encoded ??= /[%+]/.test(url);\n  let keyIndex = url.indexOf(\"?\", 8);\n  while (keyIndex !== -1) {\n    const nextKeyIndex = url.indexOf(\"&\", keyIndex + 1);\n    let valueIndex = url.indexOf(\"=\", keyIndex);\n    if (valueIndex > nextKeyIndex && nextKeyIndex !== -1) {\n      valueIndex = -1;\n    }\n    let name = url.slice(\n      keyIndex + 1,\n      valueIndex === -1 ? nextKeyIndex === -1 ? void 0 : nextKeyIndex : valueIndex\n    );\n    if (encoded) {\n      name = _decodeURI(name);\n    }\n    keyIndex = nextKeyIndex;\n    if (name === \"\") {\n      continue;\n    }\n    let value;\n    if (valueIndex === -1) {\n      value = \"\";\n    } else {\n      value = url.slice(valueIndex + 1, nextKeyIndex === -1 ? void 0 : nextKeyIndex);\n      if (encoded) {\n        value = _decodeURI(value);\n      }\n    }\n    if (multiple) {\n      if (!(results[name] && Array.isArray(results[name]))) {\n        results[name] = [];\n      }\n      ;\n      results[name].push(value);\n    } else {\n      results[name] ??= value;\n    }\n  }\n  return key ? results[key] : results;\n};\nvar getQueryParam = _getQueryParam;\nvar getQueryParams = (url, key) => {\n  return _getQueryParam(url, key, true);\n};\nvar decodeURIComponent_ = decodeURIComponent;\nexport {\n  checkOptionalParameter,\n  decodeURIComponent_,\n  getPath,\n  getPathNoStrict,\n  getPattern,\n  getQueryParam,\n  getQueryParams,\n  getQueryStrings,\n  mergePath,\n  splitPath,\n  splitRoutingPath,\n  tryDecode\n};\n", "// src/utils/html.ts\nvar HtmlEscapedCallbackPhase = {\n  Stringify: 1,\n  BeforeStream: 2,\n  Stream: 3\n};\nvar raw = (value, callbacks) => {\n  const escapedString = new String(value);\n  escapedString.isEscaped = true;\n  escapedString.callbacks = callbacks;\n  return escapedString;\n};\nvar escapeRe = /[&<>'\"]/;\nvar stringBufferToString = async (buffer, callbacks) => {\n  let str = \"\";\n  callbacks ||= [];\n  const resolvedBuffer = await Promise.all(buffer);\n  for (let i = resolvedBuffer.length - 1; ; i--) {\n    str += resolvedBuffer[i];\n    i--;\n    if (i < 0) {\n      break;\n    }\n    let r = resolvedBuffer[i];\n    if (typeof r === \"object\") {\n      callbacks.push(...r.callbacks || []);\n    }\n    const isEscaped = r.isEscaped;\n    r = await (typeof r === \"object\" ? r.toString() : r);\n    if (typeof r === \"object\") {\n      callbacks.push(...r.callbacks || []);\n    }\n    if (r.isEscaped ?? isEscaped) {\n      str += r;\n    } else {\n      const buf = [str];\n      escapeToBuffer(r, buf);\n      str = buf[0];\n    }\n  }\n  return raw(str, callbacks);\n};\nvar escapeToBuffer = (str, buffer) => {\n  const match = str.search(escapeRe);\n  if (match === -1) {\n    buffer[0] += str;\n    return;\n  }\n  let escape;\n  let index;\n  let lastIndex = 0;\n  for (index = match; index < str.length; index++) {\n    switch (str.charCodeAt(index)) {\n      case 34:\n        escape = \"&quot;\";\n        break;\n      case 39:\n        escape = \"&#39;\";\n        break;\n      case 38:\n        escape = \"&amp;\";\n        break;\n      case 60:\n        escape = \"&lt;\";\n        break;\n      case 62:\n        escape = \"&gt;\";\n        break;\n      default:\n        continue;\n    }\n    buffer[0] += str.substring(lastIndex, index) + escape;\n    lastIndex = index + 1;\n  }\n  buffer[0] += str.substring(lastIndex, index);\n};\nvar resolveCallbackSync = (str) => {\n  const callbacks = str.callbacks;\n  if (!callbacks?.length) {\n    return str;\n  }\n  const buffer = [str];\n  const context = {};\n  callbacks.forEach((c) => c({ phase: HtmlEscapedCallbackPhase.Stringify, buffer, context }));\n  return buffer[0];\n};\nvar resolveCallback = async (str, phase, preserveCallbacks, context, buffer) => {\n  if (typeof str === \"object\" && !(str instanceof String)) {\n    if (!(str instanceof Promise)) {\n      str = str.toString();\n    }\n    if (str instanceof Promise) {\n      str = await str;\n    }\n  }\n  const callbacks = str.callbacks;\n  if (!callbacks?.length) {\n    return Promise.resolve(str);\n  }\n  if (buffer) {\n    buffer[0] += str;\n  } else {\n    buffer = [str];\n  }\n  const resStr = Promise.all(callbacks.map((c) => c({ phase, buffer, context }))).then(\n    (res) => Promise.all(\n      res.filter(Boolean).map((str2) => resolveCallback(str2, phase, false, context, buffer))\n    ).then(() => buffer[0])\n  );\n  if (preserveCallbacks) {\n    return raw(await resStr, callbacks);\n  } else {\n    return resStr;\n  }\n};\nexport {\n  HtmlEscapedCallbackPhase,\n  escapeToBuffer,\n  raw,\n  resolveCallback,\n  resolveCallbackSync,\n  stringBufferToString\n};\n", "// src/router.ts\nvar METHOD_NAME_ALL = \"ALL\";\nvar METHOD_NAME_ALL_LOWERCASE = \"all\";\nvar METHODS = [\"get\", \"post\", \"put\", \"delete\", \"options\", \"patch\"];\nvar MESSAGE_MATCHER_IS_ALREADY_BUILT = \"Can not add a route since the matcher is already built.\";\nvar UnsupportedPathError = class extends Error {\n};\nexport {\n  MESSAGE_MATCHER_IS_ALREADY_BUILT,\n  METHODS,\n  METHOD_NAME_ALL,\n  METHOD_NAME_ALL_LOWERCASE,\n  UnsupportedPathError\n};\n", "// src/utils/constants.ts\nvar COMPOSED_HANDLER = \"__COMPOSED_HANDLER\";\nexport {\n  COMPOSED_HANDLER\n};\n", "// src/router/reg-exp-router/index.ts\nimport { RegExpRouter } from \"./router.js\";\nimport { PreparedRegExpRouter, buildInitParams, serializeInitParams } from \"./prepared-router.js\";\nexport {\n  PreparedRegExpRouter,\n  RegExpRouter,\n  buildInitParams,\n  serializeInitParams\n};\n", "// src/router/reg-exp-router/router.ts\nimport {\n  MESSAGE_MATCHER_IS_ALREADY_BUILT,\n  METHOD_NAME_ALL,\n  UnsupportedPathError\n} from \"../../router.js\";\nimport { checkOptionalParameter } from \"../../utils/url.js\";\nimport { match, emptyParam } from \"./matcher.js\";\nimport { PATH_ERROR } from \"./node.js\";\nimport { Trie } from \"./trie.js\";\nvar nullMatcher = [/^$/, [], /* @__PURE__ */ Object.create(null)];\nvar wildcardRegExpCache = /* @__PURE__ */ Object.create(null);\nfunction buildWildcardRegExp(path) {\n  return wildcardRegExpCache[path] ??= new RegExp(\n    path === \"*\" ? \"\" : `^${path.replace(\n      /\\/\\*$|([.\\\\+*[^\\]$()])/g,\n      (_, metaChar) => metaChar ? `\\\\${metaChar}` : \"(?:|/.*)\"\n    )}$`\n  );\n}\nfunction clearWildcardRegExpCache() {\n  wildcardRegExpCache = /* @__PURE__ */ Object.create(null);\n}\nfunction buildMatcherFromPreprocessedRoutes(routes) {\n  const trie = new Trie();\n  const handlerData = [];\n  if (routes.length === 0) {\n    return nullMatcher;\n  }\n  const routesWithStaticPathFlag = routes.map(\n    (route) => [!/\\*|\\/:/.test(route[0]), ...route]\n  ).sort(\n    ([isStaticA, pathA], [isStaticB, pathB]) => isStaticA ? 1 : isStaticB ? -1 : pathA.length - pathB.length\n  );\n  const staticMap = /* @__PURE__ */ Object.create(null);\n  for (let i = 0, j = -1, len = routesWithStaticPathFlag.length; i < len; i++) {\n    const [pathErrorCheckOnly, path, handlers] = routesWithStaticPathFlag[i];\n    if (pathErrorCheckOnly) {\n      staticMap[path] = [handlers.map(([h]) => [h, /* @__PURE__ */ Object.create(null)]), emptyParam];\n    } else {\n      j++;\n    }\n    let paramAssoc;\n    try {\n      paramAssoc = trie.insert(path, j, pathErrorCheckOnly);\n    } catch (e) {\n      throw e === PATH_ERROR ? new UnsupportedPathError(path) : e;\n    }\n    if (pathErrorCheckOnly) {\n      continue;\n    }\n    handlerData[j] = handlers.map(([h, paramCount]) => {\n      const paramIndexMap = /* @__PURE__ */ Object.create(null);\n      paramCount -= 1;\n      for (; paramCount >= 0; paramCount--) {\n        const [key, value] = paramAssoc[paramCount];\n        paramIndexMap[key] = value;\n      }\n      return [h, paramIndexMap];\n    });\n  }\n  const [regexp, indexReplacementMap, paramReplacementMap] = trie.buildRegExp();\n  for (let i = 0, len = handlerData.length; i < len; i++) {\n    for (let j = 0, len2 = handlerData[i].length; j < len2; j++) {\n      const map = handlerData[i][j]?.[1];\n      if (!map) {\n        continue;\n      }\n      const keys = Object.keys(map);\n      for (let k = 0, len3 = keys.length; k < len3; k++) {\n        map[keys[k]] = paramReplacementMap[map[keys[k]]];\n      }\n    }\n  }\n  const handlerMap = [];\n  for (const i in indexReplacementMap) {\n    handlerMap[i] = handlerData[indexReplacementMap[i]];\n  }\n  return [regexp, handlerMap, staticMap];\n}\nfunction findMiddleware(middleware, path) {\n  if (!middleware) {\n    return void 0;\n  }\n  for (const k of Object.keys(middleware).sort((a, b) => b.length - a.length)) {\n    if (buildWildcardRegExp(k).test(path)) {\n      return [...middleware[k]];\n    }\n  }\n  return void 0;\n}\nvar RegExpRouter = class {\n  name = \"RegExpRouter\";\n  #middleware;\n  #routes;\n  constructor() {\n    this.#middleware = { [METHOD_NAME_ALL]: /* @__PURE__ */ Object.create(null) };\n    this.#routes = { [METHOD_NAME_ALL]: /* @__PURE__ */ Object.create(null) };\n  }\n  add(method, path, handler) {\n    const middleware = this.#middleware;\n    const routes = this.#routes;\n    if (!middleware || !routes) {\n      throw new Error(MESSAGE_MATCHER_IS_ALREADY_BUILT);\n    }\n    if (!middleware[method]) {\n      ;\n      [middleware, routes].forEach((handlerMap) => {\n        handlerMap[method] = /* @__PURE__ */ Object.create(null);\n        Object.keys(handlerMap[METHOD_NAME_ALL]).forEach((p) => {\n          handlerMap[method][p] = [...handlerMap[METHOD_NAME_ALL][p]];\n        });\n      });\n    }\n    if (path === \"/*\") {\n      path = \"*\";\n    }\n    const paramCount = (path.match(/\\/:/g) || []).length;\n    if (/\\*$/.test(path)) {\n      const re = buildWildcardRegExp(path);\n      if (method === METHOD_NAME_ALL) {\n        Object.keys(middleware).forEach((m) => {\n          middleware[m][path] ||= findMiddleware(middleware[m], path) || findMiddleware(middleware[METHOD_NAME_ALL], path) || [];\n        });\n      } else {\n        middleware[method][path] ||= findMiddleware(middleware[method], path) || findMiddleware(middleware[METHOD_NAME_ALL], path) || [];\n      }\n      Object.keys(middleware).forEach((m) => {\n        if (method === METHOD_NAME_ALL || method === m) {\n          Object.keys(middleware[m]).forEach((p) => {\n            re.test(p) && middleware[m][p].push([handler, paramCount]);\n          });\n        }\n      });\n      Object.keys(routes).forEach((m) => {\n        if (method === METHOD_NAME_ALL || method === m) {\n          Object.keys(routes[m]).forEach(\n            (p) => re.test(p) && routes[m][p].push([handler, paramCount])\n          );\n        }\n      });\n      return;\n    }\n    const paths = checkOptionalParameter(path) || [path];\n    for (let i = 0, len = paths.length; i < len; i++) {\n      const path2 = paths[i];\n      Object.keys(routes).forEach((m) => {\n        if (method === METHOD_NAME_ALL || method === m) {\n          routes[m][path2] ||= [\n            ...findMiddleware(middleware[m], path2) || findMiddleware(middleware[METHOD_NAME_ALL], path2) || []\n          ];\n          routes[m][path2].push([handler, paramCount - len + i + 1]);\n        }\n      });\n    }\n  }\n  match = match;\n  buildAllMatchers() {\n    const matchers = /* @__PURE__ */ Object.create(null);\n    Object.keys(this.#routes).concat(Object.keys(this.#middleware)).forEach((method) => {\n      matchers[method] ||= this.#buildMatcher(method);\n    });\n    this.#middleware = this.#routes = void 0;\n    clearWildcardRegExpCache();\n    return matchers;\n  }\n  #buildMatcher(method) {\n    const routes = [];\n    let hasOwnRoute = method === METHOD_NAME_ALL;\n    [this.#middleware, this.#routes].forEach((r) => {\n      const ownRoute = r[method] ? Object.keys(r[method]).map((path) => [path, r[method][path]]) : [];\n      if (ownRoute.length !== 0) {\n        hasOwnRoute ||= true;\n        routes.push(...ownRoute);\n      } else if (method !== METHOD_NAME_ALL) {\n        routes.push(\n          ...Object.keys(r[METHOD_NAME_ALL]).map((path) => [path, r[METHOD_NAME_ALL][path]])\n        );\n      }\n    });\n    if (!hasOwnRoute) {\n      return null;\n    } else {\n      return buildMatcherFromPreprocessedRoutes(routes);\n    }\n  }\n};\nexport {\n  RegExpRouter\n};\n", "// src/router/reg-exp-router/matcher.ts\nimport { METHOD_NAME_ALL } from \"../../router.js\";\nvar emptyParam = [];\nfunction match(method, path) {\n  const matchers = this.buildAllMatchers();\n  const match2 = (method2, path2) => {\n    const matcher = matchers[method2] || matchers[METHOD_NAME_ALL];\n    const staticMatch = matcher[2][path2];\n    if (staticMatch) {\n      return staticMatch;\n    }\n    const match3 = path2.match(matcher[0]);\n    if (!match3) {\n      return [[], emptyParam];\n    }\n    const index = match3.indexOf(\"\", 1);\n    return [matcher[1][index], match3];\n  };\n  this.match = match2;\n  return match2(method, path);\n}\nexport {\n  emptyParam,\n  match\n};\n", "// src/router/reg-exp-router/node.ts\nvar LABEL_REG_EXP_STR = \"[^/]+\";\nvar ONLY_WILDCARD_REG_EXP_STR = \".*\";\nvar TAIL_WILDCARD_REG_EXP_STR = \"(?:|/.*)\";\nvar PATH_ERROR = Symbol();\nvar regExpMetaChars = new Set(\".\\\\+*[^]$()\");\nfunction compareKey(a, b) {\n  if (a.length === 1) {\n    return b.length === 1 ? a < b ? -1 : 1 : -1;\n  }\n  if (b.length === 1) {\n    return 1;\n  }\n  if (a === ONLY_WILDCARD_REG_EXP_STR || a === TAIL_WILDCARD_REG_EXP_STR) {\n    return 1;\n  } else if (b === ONLY_WILDCARD_REG_EXP_STR || b === TAIL_WILDCARD_REG_EXP_STR) {\n    return -1;\n  }\n  if (a === LABEL_REG_EXP_STR) {\n    return 1;\n  } else if (b === LABEL_REG_EXP_STR) {\n    return -1;\n  }\n  return a.length === b.length ? a < b ? -1 : 1 : b.length - a.length;\n}\nvar Node = class {\n  #index;\n  #varIndex;\n  #children = /* @__PURE__ */ Object.create(null);\n  insert(tokens, index, paramMap, context, pathErrorCheckOnly) {\n    if (tokens.length === 0) {\n      if (this.#index !== void 0) {\n        throw PATH_ERROR;\n      }\n      if (pathErrorCheckOnly) {\n        return;\n      }\n      this.#index = index;\n      return;\n    }\n    const [token, ...restTokens] = tokens;\n    const pattern = token === \"*\" ? restTokens.length === 0 ? [\"\", \"\", ONLY_WILDCARD_REG_EXP_STR] : [\"\", \"\", LABEL_REG_EXP_STR] : token === \"/*\" ? [\"\", \"\", TAIL_WILDCARD_REG_EXP_STR] : token.match(/^\\:([^\\{\\}]+)(?:\\{(.+)\\})?$/);\n    let node;\n    if (pattern) {\n      const name = pattern[1];\n      let regexpStr = pattern[2] || LABEL_REG_EXP_STR;\n      if (name && pattern[2]) {\n        if (regexpStr === \".*\") {\n          throw PATH_ERROR;\n        }\n        regexpStr = regexpStr.replace(/^\\((?!\\?:)(?=[^)]+\\)$)/, \"(?:\");\n        if (/\\((?!\\?:)/.test(regexpStr)) {\n          throw PATH_ERROR;\n        }\n      }\n      node = this.#children[regexpStr];\n      if (!node) {\n        if (Object.keys(this.#children).some(\n          (k) => k !== ONLY_WILDCARD_REG_EXP_STR && k !== TAIL_WILDCARD_REG_EXP_STR\n        )) {\n          throw PATH_ERROR;\n        }\n        if (pathErrorCheckOnly) {\n          return;\n        }\n        node = this.#children[regexpStr] = new Node();\n        if (name !== \"\") {\n          node.#varIndex = context.varIndex++;\n        }\n      }\n      if (!pathErrorCheckOnly && name !== \"\") {\n        paramMap.push([name, node.#varIndex]);\n      }\n    } else {\n      node = this.#children[token];\n      if (!node) {\n        if (Object.keys(this.#children).some(\n          (k) => k.length > 1 && k !== ONLY_WILDCARD_REG_EXP_STR && k !== TAIL_WILDCARD_REG_EXP_STR\n        )) {\n          throw PATH_ERROR;\n        }\n        if (pathErrorCheckOnly) {\n          return;\n        }\n        node = this.#children[token] = new Node();\n      }\n    }\n    node.insert(restTokens, index, paramMap, context, pathErrorCheckOnly);\n  }\n  buildRegExpStr() {\n    const childKeys = Object.keys(this.#children).sort(compareKey);\n    const strList = childKeys.map((k) => {\n      const c = this.#children[k];\n      return (typeof c.#varIndex === \"number\" ? `(${k})@${c.#varIndex}` : regExpMetaChars.has(k) ? `\\\\${k}` : k) + c.buildRegExpStr();\n    });\n    if (typeof this.#index === \"number\") {\n      strList.unshift(`#${this.#index}`);\n    }\n    if (strList.length === 0) {\n      return \"\";\n    }\n    if (strList.length === 1) {\n      return strList[0];\n    }\n    return \"(?:\" + strList.join(\"|\") + \")\";\n  }\n};\nexport {\n  Node,\n  PATH_ERROR\n};\n", "// src/router/reg-exp-router/trie.ts\nimport { Node } from \"./node.js\";\nvar Trie = class {\n  #context = { varIndex: 0 };\n  #root = new Node();\n  insert(path, index, pathErrorCheckOnly) {\n    const paramAssoc = [];\n    const groups = [];\n    for (let i = 0; ; ) {\n      let replaced = false;\n      path = path.replace(/\\{[^}]+\\}/g, (m) => {\n        const mark = `@\\\\${i}`;\n        groups[i] = [mark, m];\n        i++;\n        replaced = true;\n        return mark;\n      });\n      if (!replaced) {\n        break;\n      }\n    }\n    const tokens = path.match(/(?::[^\\/]+)|(?:\\/\\*$)|./g) || [];\n    for (let i = groups.length - 1; i >= 0; i--) {\n      const [mark] = groups[i];\n      for (let j = tokens.length - 1; j >= 0; j--) {\n        if (tokens[j].indexOf(mark) !== -1) {\n          tokens[j] = tokens[j].replace(mark, groups[i][1]);\n          break;\n        }\n      }\n    }\n    this.#root.insert(tokens, index, paramAssoc, this.#context, pathErrorCheckOnly);\n    return paramAssoc;\n  }\n  buildRegExp() {\n    let regexp = this.#root.buildRegExpStr();\n    if (regexp === \"\") {\n      return [/^$/, [], []];\n    }\n    let captureIndex = 0;\n    const indexReplacementMap = [];\n    const paramReplacementMap = [];\n    regexp = regexp.replace(/#(\\d+)|@(\\d+)|\\.\\*\\$/g, (_, handlerIndex, paramIndex) => {\n      if (handlerIndex !== void 0) {\n        indexReplacementMap[++captureIndex] = Number(handlerIndex);\n        return \"$()\";\n      }\n      if (paramIndex !== void 0) {\n        paramReplacementMap[Number(paramIndex)] = ++captureIndex;\n        return \"\";\n      }\n      return \"\";\n    });\n    return [new RegExp(`^${regexp}`), indexReplacementMap, paramReplacementMap];\n  }\n};\nexport {\n  Trie\n};\n", "// src/router/reg-exp-router/prepared-router.ts\nimport { METHOD_NAME_ALL } from \"../../router.js\";\nimport { match, emptyParam } from \"./matcher.js\";\nimport { RegExpRouter } from \"./router.js\";\nvar PreparedRegExpRouter = class {\n  name = \"PreparedRegExpRouter\";\n  #matchers;\n  #relocateMap;\n  constructor(matchers, relocateMap) {\n    this.#matchers = matchers;\n    this.#relocateMap = relocateMap;\n  }\n  #addWildcard(method, handlerData) {\n    const matcher = this.#matchers[method];\n    matcher[1].forEach((list) => list && list.push(handlerData));\n    Object.values(matcher[2]).forEach((list) => list[0].push(handlerData));\n  }\n  #addPath(method, path, handler, indexes, map) {\n    const matcher = this.#matchers[method];\n    if (!map) {\n      matcher[2][path][0].push([handler, {}]);\n    } else {\n      indexes.forEach((index) => {\n        if (typeof index === \"number\") {\n          matcher[1][index].push([handler, map]);\n        } else {\n          ;\n          matcher[2][index || path][0].push([handler, map]);\n        }\n      });\n    }\n  }\n  add(method, path, handler) {\n    if (!this.#matchers[method]) {\n      const all = this.#matchers[METHOD_NAME_ALL];\n      const staticMap = {};\n      for (const key in all[2]) {\n        staticMap[key] = [all[2][key][0].slice(), emptyParam];\n      }\n      this.#matchers[method] = [\n        all[0],\n        all[1].map((list) => Array.isArray(list) ? list.slice() : 0),\n        staticMap\n      ];\n    }\n    if (path === \"/*\" || path === \"*\") {\n      const handlerData = [handler, {}];\n      if (method === METHOD_NAME_ALL) {\n        for (const m in this.#matchers) {\n          this.#addWildcard(m, handlerData);\n        }\n      } else {\n        this.#addWildcard(method, handlerData);\n      }\n      return;\n    }\n    const data = this.#relocateMap[path];\n    if (!data) {\n      throw new Error(`Path ${path} is not registered`);\n    }\n    for (const [indexes, map] of data) {\n      if (method === METHOD_NAME_ALL) {\n        for (const m in this.#matchers) {\n          this.#addPath(m, path, handler, indexes, map);\n        }\n      } else {\n        this.#addPath(method, path, handler, indexes, map);\n      }\n    }\n  }\n  buildAllMatchers() {\n    return this.#matchers;\n  }\n  match = match;\n};\nvar buildInitParams = ({ paths }) => {\n  const RegExpRouterWithMatcherExport = class extends RegExpRouter {\n    buildAndExportAllMatchers() {\n      return this.buildAllMatchers();\n    }\n  };\n  const router = new RegExpRouterWithMatcherExport();\n  for (const path of paths) {\n    router.add(METHOD_NAME_ALL, path, path);\n  }\n  const matchers = router.buildAndExportAllMatchers();\n  const all = matchers[METHOD_NAME_ALL];\n  const relocateMap = {};\n  for (const path of paths) {\n    if (path === \"/*\" || path === \"*\") {\n      continue;\n    }\n    all[1].forEach((list, i) => {\n      list.forEach(([p, map]) => {\n        if (p === path) {\n          if (relocateMap[path]) {\n            relocateMap[path][0][1] = {\n              ...relocateMap[path][0][1],\n              ...map\n            };\n          } else {\n            relocateMap[path] = [[[], map]];\n          }\n          if (relocateMap[path][0][0].findIndex((j) => j === i) === -1) {\n            relocateMap[path][0][0].push(i);\n          }\n        }\n      });\n    });\n    for (const path2 in all[2]) {\n      all[2][path2][0].forEach(([p]) => {\n        if (p === path) {\n          relocateMap[path] ||= [[[]]];\n          const value = path2 === path ? \"\" : path2;\n          if (relocateMap[path][0][0].findIndex((v) => v === value) === -1) {\n            relocateMap[path][0][0].push(value);\n          }\n        }\n      });\n    }\n  }\n  for (let i = 0, len = all[1].length; i < len; i++) {\n    all[1][i] = all[1][i] ? [] : 0;\n  }\n  for (const path in all[2]) {\n    all[2][path][0] = [];\n  }\n  return [matchers, relocateMap];\n};\nvar serializeInitParams = ([matchers, relocateMap]) => {\n  const matchersStr = JSON.stringify(\n    matchers,\n    (_, value) => value instanceof RegExp ? `##${value.toString()}##` : value\n  ).replace(/\"##(.+?)##\"/g, (_, str) => str.replace(/\\\\\\\\/g, \"\\\\\"));\n  const relocateMapStr = JSON.stringify(relocateMap);\n  return `[${matchersStr},${relocateMapStr}]`;\n};\nexport {\n  PreparedRegExpRouter,\n  buildInitParams,\n  serializeInitParams\n};\n", "// src/router/smart-router/index.ts\nimport { SmartRouter } from \"./router.js\";\nexport {\n  SmartRouter\n};\n", "// src/router/smart-router/router.ts\nimport { MESSAGE_MATCHER_IS_ALREADY_BUILT, UnsupportedPathError } from \"../../router.js\";\nvar SmartRouter = class {\n  name = \"SmartRouter\";\n  #routers = [];\n  #routes = [];\n  constructor(init) {\n    this.#routers = init.routers;\n  }\n  add(method, path, handler) {\n    if (!this.#routes) {\n      throw new Error(MESSAGE_MATCHER_IS_ALREADY_BUILT);\n    }\n    this.#routes.push([method, path, handler]);\n  }\n  match(method, path) {\n    if (!this.#routes) {\n      throw new Error(\"Fatal error\");\n    }\n    const routers = this.#routers;\n    const routes = this.#routes;\n    const len = routers.length;\n    let i = 0;\n    let res;\n    for (; i < len; i++) {\n      const router = routers[i];\n      try {\n        for (let i2 = 0, len2 = routes.length; i2 < len2; i2++) {\n          router.add(...routes[i2]);\n        }\n        res = router.match(method, path);\n      } catch (e) {\n        if (e instanceof UnsupportedPathError) {\n          continue;\n        }\n        throw e;\n      }\n      this.match = router.match.bind(router);\n      this.#routers = [router];\n      this.#routes = void 0;\n      break;\n    }\n    if (i === len) {\n      throw new Error(\"Fatal error\");\n    }\n    this.name = `SmartRouter + ${this.activeRouter.name}`;\n    return res;\n  }\n  get activeRouter() {\n    if (this.#routes || this.#routers.length !== 1) {\n      throw new Error(\"No active router has been determined yet.\");\n    }\n    return this.#routers[0];\n  }\n};\nexport {\n  SmartRouter\n};\n", "// src/router/trie-router/index.ts\nimport { TrieRouter } from \"./router.js\";\nexport {\n  TrieRouter\n};\n", "// src/router/trie-router/router.ts\nimport { checkOptionalParameter } from \"../../utils/url.js\";\nimport { Node } from \"./node.js\";\nvar TrieRouter = class {\n  name = \"TrieRouter\";\n  #node;\n  constructor() {\n    this.#node = new Node();\n  }\n  add(method, path, handler) {\n    const results = checkOptionalParameter(path);\n    if (results) {\n      for (let i = 0, len = results.length; i < len; i++) {\n        this.#node.insert(method, results[i], handler);\n      }\n      return;\n    }\n    this.#node.insert(method, path, handler);\n  }\n  match(method, path) {\n    return this.#node.search(method, path);\n  }\n};\nexport {\n  TrieRouter\n};\n", "// src/router/trie-router/node.ts\nimport { METHOD_NAME_ALL } from \"../../router.js\";\nimport { getPattern, splitPath, splitRoutingPath } from \"../../utils/url.js\";\nvar emptyParams = /* @__PURE__ */ Object.create(null);\nvar Node = class {\n  #methods;\n  #children;\n  #patterns;\n  #order = 0;\n  #params = emptyParams;\n  constructor(method, handler, children) {\n    this.#children = children || /* @__PURE__ */ Object.create(null);\n    this.#methods = [];\n    if (method && handler) {\n      const m = /* @__PURE__ */ Object.create(null);\n      m[method] = { handler, possibleKeys: [], score: 0 };\n      this.#methods = [m];\n    }\n    this.#patterns = [];\n  }\n  insert(method, path, handler) {\n    this.#order = ++this.#order;\n    let curNode = this;\n    const parts = splitRoutingPath(path);\n    const possibleKeys = [];\n    for (let i = 0, len = parts.length; i < len; i++) {\n      const p = parts[i];\n      const nextP = parts[i + 1];\n      const pattern = getPattern(p, nextP);\n      const key = Array.isArray(pattern) ? pattern[0] : p;\n      if (key in curNode.#children) {\n        curNode = curNode.#children[key];\n        if (pattern) {\n          possibleKeys.push(pattern[1]);\n        }\n        continue;\n      }\n      curNode.#children[key] = new Node();\n      if (pattern) {\n        curNode.#patterns.push(pattern);\n        possibleKeys.push(pattern[1]);\n      }\n      curNode = curNode.#children[key];\n    }\n    curNode.#methods.push({\n      [method]: {\n        handler,\n        possibleKeys: possibleKeys.filter((v, i, a) => a.indexOf(v) === i),\n        score: this.#order\n      }\n    });\n    return curNode;\n  }\n  #getHandlerSets(node, method, nodeParams, params) {\n    const handlerSets = [];\n    for (let i = 0, len = node.#methods.length; i < len; i++) {\n      const m = node.#methods[i];\n      const handlerSet = m[method] || m[METHOD_NAME_ALL];\n      const processedSet = {};\n      if (handlerSet !== void 0) {\n        handlerSet.params = /* @__PURE__ */ Object.create(null);\n        handlerSets.push(handlerSet);\n        if (nodeParams !== emptyParams || params && params !== emptyParams) {\n          for (let i2 = 0, len2 = handlerSet.possibleKeys.length; i2 < len2; i2++) {\n            const key = handlerSet.possibleKeys[i2];\n            const processed = processedSet[handlerSet.score];\n            handlerSet.params[key] = params?.[key] && !processed ? params[key] : nodeParams[key] ?? params?.[key];\n            processedSet[handlerSet.score] = true;\n          }\n        }\n      }\n    }\n    return handlerSets;\n  }\n  search(method, path) {\n    const handlerSets = [];\n    this.#params = emptyParams;\n    const curNode = this;\n    let curNodes = [curNode];\n    const parts = splitPath(path);\n    const curNodesQueue = [];\n    for (let i = 0, len = parts.length; i < len; i++) {\n      const part = parts[i];\n      const isLast = i === len - 1;\n      const tempNodes = [];\n      for (let j = 0, len2 = curNodes.length; j < len2; j++) {\n        const node = curNodes[j];\n        const nextNode = node.#children[part];\n        if (nextNode) {\n          nextNode.#params = node.#params;\n          if (isLast) {\n            if (nextNode.#children[\"*\"]) {\n              handlerSets.push(\n                ...this.#getHandlerSets(nextNode.#children[\"*\"], method, node.#params)\n              );\n            }\n            handlerSets.push(...this.#getHandlerSets(nextNode, method, node.#params));\n          } else {\n            tempNodes.push(nextNode);\n          }\n        }\n        for (let k = 0, len3 = node.#patterns.length; k < len3; k++) {\n          const pattern = node.#patterns[k];\n          const params = node.#params === emptyParams ? {} : { ...node.#params };\n          if (pattern === \"*\") {\n            const astNode = node.#children[\"*\"];\n            if (astNode) {\n              handlerSets.push(...this.#getHandlerSets(astNode, method, node.#params));\n              astNode.#params = params;\n              tempNodes.push(astNode);\n            }\n            continue;\n          }\n          const [key, name, matcher] = pattern;\n          if (!part && !(matcher instanceof RegExp)) {\n            continue;\n          }\n          const child = node.#children[key];\n          const restPathString = parts.slice(i).join(\"/\");\n          if (matcher instanceof RegExp) {\n            const m = matcher.exec(restPathString);\n            if (m) {\n              params[name] = m[0];\n              handlerSets.push(...this.#getHandlerSets(child, method, node.#params, params));\n              if (Object.keys(child.#children).length) {\n                child.#params = params;\n                const componentCount = m[0].match(/\\//)?.length ?? 0;\n                const targetCurNodes = curNodesQueue[componentCount] ||= [];\n                targetCurNodes.push(child);\n              }\n              continue;\n            }\n          }\n          if (matcher === true || matcher.test(part)) {\n            params[name] = part;\n            if (isLast) {\n              handlerSets.push(...this.#getHandlerSets(child, method, params, node.#params));\n              if (child.#children[\"*\"]) {\n                handlerSets.push(\n                  ...this.#getHandlerSets(child.#children[\"*\"], method, params, node.#params)\n                );\n              }\n            } else {\n              child.#params = params;\n              tempNodes.push(child);\n            }\n          }\n        }\n      }\n      curNodes = tempNodes.concat(curNodesQueue.shift() ?? []);\n    }\n    if (handlerSets.length > 1) {\n      handlerSets.sort((a, b) => {\n        return a.score - b.score;\n      });\n    }\n    return [handlerSets.map(({ handler, params }) => [handler, params])];\n  }\n};\nexport {\n  Node\n};\n", "\nimport { Context, Next } from 'hono';\nimport { StudioService } from 'services/StudioService';\nimport { UserService } from 'services/UserService';\nimport container from '../container';\n\nexport const LoggedCheck = async (c: Context, next: Next) => {\n  const authHeader = c.req.header('authorization') || 'Bearer ' + (c.req.header('cookie')?.split('token=')[1]?.split(';')[0] ?? '');\n  const roleCookie = c.req.header('cookie')?.split('role=')[1]?.split(';')[0];\n  if (!authHeader || !authHeader.startsWith('Bearer ')) return c.json({ message: 'Unauthorized' }, 401);\n\n  const token = authHeader.split('Bearer ')[1];\n  if (!token) return c.json({ message: 'Unauthorized' }, 401);\n\n  const userService = container.get('UserService') as UserService;\n  const user = await userService.authenticateUser(token);\n  if (!user) return c.json({ message: 'Unauthorized' }, 401);\n  if (user.disabled && !user.admin) return c.json({ message: 'Account is disabled' }, 403);\n\n  const studioService = container.get('StudioService') as StudioService;\n  const studios = await studioService.getUserStudios(user.user_id);\n  const roles = [user.user_id, ...studios.map((s) => s.user_id)];\n\n  let roleUser = null;\n  if (roleCookie && roles.includes(roleCookie)) {\n    roleUser = await userService.getUser(roleCookie);\n  } else {\n    roleUser = user;\n  }\n\n  c.set('user', roleUser || user);\n  c.set('originalUser', user);\n  await next();\n};\n", "/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { Context } from 'hono';\nimport { inject, injectable } from 'inversify';\nimport { controller, httpGet, httpPost, httpPut } from '../hono-inversify';\nimport { LoggedCheck } from '../middlewares/LoggedCheck';\nimport { IBuyOrderService } from '../services/BuyOrderService';\nimport { IItemService } from '../services/ItemService';\nimport { ILogService } from '../services/LogService';\n\n@injectable()\n@controller('/buy-orders')\nexport class BuyOrderController {\n  constructor(\n    @inject('BuyOrderService') private buyOrderService: IBuyOrderService,\n    @inject('ItemService') private itemService: IItemService,\n    @inject('LogService') private logService: ILogService\n  ) {}\n\n  private async logAction(c: Context, action: string, statusCode: number, metadata?: object) {\n    try {\n      const requestBody = (await c.req.json().catch(() => ({}))) || {};\n      if (metadata) Object.assign(requestBody, { metadata });\n      await this.logService.createLog({\n        ip_address: c.req.header('x-real-ip') || c.req.header('cf-connecting-ip') || c.req.header('x-forwarded-for') || 'unknown',\n        table_name: 'buy_order',\n        controller: `BuyOrderController.${action}`,\n        original_path: c.req.path,\n        http_method: c.req.method,\n        request_body: requestBody,\n        user_id: this.getUserFromContext(c)?.user_id,\n        status_code: statusCode,\n      });\n    } catch (error) {\n      console.error('Error creating log:', error);\n    }\n  }\n\n  private sendError(c: Context, status: number, message: string, error?: unknown) {\n    const msg = error instanceof Error ? error.message : String(error);\n    return c.json({ message, error: msg }, status as any);\n  }\n\n  private getUserFromContext(c: Context) {\n    return c.get('user');\n  }\n\n  @httpPost('/', LoggedCheck)\n  public async createBuyOrder(c: Context) {\n    const user = this.getUserFromContext(c);\n    if (!user) return this.sendError(c, 401, 'Unauthorized');\n    const { itemId, price } = await c.req.json();\n    if (!itemId || typeof price !== 'number' || price < 1) {\n      await this.logAction(c, 'createBuyOrder', 400);\n      return this.sendError(c, 400, 'itemId and price are required');\n    }\n    const itemExists = await this.itemService.getItem(itemId);\n    if (!itemExists) {\n      await this.logAction(c, 'createBuyOrder', 404);\n      return this.sendError(c, 404, 'Item not found');\n    }\n    try {\n      const order = await this.buyOrderService.createBuyOrder(user.user_id, itemId, price);\n      await this.logAction(c, 'createBuyOrder', 201);\n      return c.json(order, 201);\n    } catch (error) {\n      await this.logAction(c, 'createBuyOrder', 500, { error });\n      return this.sendError(c, 500, 'Error while creating buy order', error);\n    }\n  }\n\n  @httpPut('/:id/cancel', LoggedCheck)\n  public async cancelBuyOrder(c: Context) {\n    const user = this.getUserFromContext(c);\n    if (!user) return this.sendError(c, 401, 'Unauthorized');\n    const orderId = c.req.param('id');\n    try {\n      await this.buyOrderService.cancelBuyOrder(orderId, user.user_id);\n      await this.logAction(c, 'cancelBuyOrder', 200);\n      return c.json({ message: 'Buy order cancelled' }, 200);\n    } catch (error) {\n      await this.logAction(c, 'cancelBuyOrder', 500, { error });\n      return this.sendError(c, 500, 'Error while cancelling buy order', error);\n    }\n  }\n\n  @httpGet('/user/:userId', LoggedCheck)\n  public async getBuyOrdersByUser(c: Context) {\n    const user = this.getUserFromContext(c);\n    const userId = c.req.param('userId');\n    if (!user || userId !== user.user_id) {\n      await this.logAction(c, 'getBuyOrdersByUser', 403);\n      return this.sendError(c, 403, 'Forbidden');\n    }\n    try {\n      const orders = await this.buyOrderService.getBuyOrders({ userId });\n      await this.logAction(c, 'getBuyOrdersByUser', 200);\n      return c.json(orders);\n    } catch (error) {\n      await this.logAction(c, 'getBuyOrdersByUser', 500, { error });\n      return this.sendError(c, 500, 'Error while fetching buy orders', error);\n    }\n  }\n\n  @httpGet('/item/:itemId')\n  public async getActiveBuyOrdersForItem(c: Context) {\n    const itemId = c.req.param('itemId');\n    try {\n      const orders = await this.buyOrderService.getBuyOrders({ itemId, status: 'active' }, 'price DESC, created_at ASC');\n      await this.logAction(c, 'getActiveBuyOrdersForItem', 200);\n      return c.json(orders);\n    } catch (error) {\n      await this.logAction(c, 'getActiveBuyOrdersForItem', 500, { error });\n      return this.sendError(c, 500, 'Error while fetching buy orders', error);\n    }\n  }\n}\n", "import { Context } from 'hono';\nimport { injectable } from 'inversify';\nimport { getAllDescriptions } from '../decorators/describe';\nimport { controller, httpGet } from '../hono-inversify';\n\n@injectable()\n@controller('/describe')\nexport class DescribeController {\n  @httpGet('/')\n  public async getDescriptions(c: Context) {\n    return c.json(getAllDescriptions());\n  }\n}\n", "/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nconst endpointDescriptions: any[] = [];\n\nexport function describe(info: { endpoint: string; method: string; description: string; params?: any; body?: any; query?: any; responseType?: object; exampleResponse?: any; example?: string; requiresAuth?: boolean }) {\n  return function (target: any, propertyKey: string, descriptor: PropertyDescriptor) {\n    const category = target.constructor.name;\n    endpointDescriptions.push({ category, ...info });\n  };\n}\n\nexport function getAllDescriptions() {\n  return endpointDescriptions;\n}\n", "/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { Context } from 'hono';\nimport { inject, injectable } from 'inversify';\nimport { v4 } from 'uuid';\nimport * as yup from 'yup';\nimport { controller, httpGet, httpHead, httpPost, httpPut } from '../hono-inversify';\nimport { createRateLimit } from '../middlewares/hono/rateLimit';\nimport { LoggedCheck } from '../middlewares/LoggedCheck';\nimport { IGameService } from '../services/GameService';\nimport { IGameViewService } from '../services/GameViewService';\nimport { ILogService } from '../services/LogService';\nimport { IUserService } from '../services/UserService';\nimport { createGameBodySchema, gameIdParamSchema, updateGameBodySchema } from '../validators/GameValidator';\n\n// Rate limits using the hono rate limit middleware\nconst createGameRateLimit = createRateLimit({ windowMs: 60 * 60 * 1000, max: 5, message: 'Too many game creations, please try again later.' });\nconst updateGameRateLimit = createRateLimit({ windowMs: 60 * 60 * 1000, max: 10, message: 'Too many game updates, please try again later.' });\nconst buyGameRateLimit = createRateLimit({ windowMs: 60 * 60 * 1000, max: 20, message: 'Too many game purchases, please try again later.' });\nconst transferOwnershipRateLimit = createRateLimit({ windowMs: 60 * 60 * 1000, max: 5, message: 'Too many ownership transfers, please try again later.' });\nconst transferGameRateLimit = createRateLimit({ windowMs: 60 * 60 * 1000, max: 10, message: 'Too many game transfers, please try again later.' });\n\n\nasync function validateOr400(schema: yup.Schema<unknown>, data: unknown, c: Context) {\n  try {\n    await schema.validate(data);\n    return true;\n  } catch (error) {\n    await c.json({ message: 'Validation failed', errors: (error as yup.ValidationError).errors }, 400);\n    return false;\n  }\n}\n\n@injectable()\n@controller('/games')\nexport class Games {\n  constructor(\n    @inject('GameService') private gameService: IGameService,\n    @inject('UserService') private userService: IUserService,\n    @inject('LogService') private logService: ILogService,\n    @inject('GameViewService') private gameViewService: IGameViewService\n  ) {}\n\n  private async createLog(c: Context, action: string, tableName?: string, statusCode?: number, userId?: string, metadata: any = {}) {\n    try {\n      const clientIP = c.req.header('cf-connecting-ip') ||\n        c.req.header('x-forwarded-for') ||\n        c.req.header('x-real-ip') ||\n        'unknown';\n      await this.logService.createLog({\n        ip_address: clientIP,\n        table_name: tableName,\n        controller: `GameController.${action}`,\n        original_path: c.req.path,\n        http_method: c.req.method,\n        request_body: JSON.stringify(metadata || {}),\n        user_id: userId,\n        status_code: statusCode,\n      });\n    } catch (error) {\n      console.error('Error creating log:', error);\n    }\n  }\n\n  private sendError(c: Context, status: number, message: string, error?: any) {\n    return c.json({ message, error: error ? (error instanceof Error ? error.message : String(error)) : undefined }, status as any);\n  }\n\n  private getUserFromContext(c: Context) {\n    return c.get('user');\n  }\n\n  @httpGet('/')\n  public async listGames(c: Context) {\n    try {\n      const games = await this.gameService.getStoreGames();\n      const gameIds = games.map(game => game.gameId);\n      const gamesWithBadgesAndViews = await this.gameService.getGamesWithBadgesAndViews(gameIds);\n      await this.createLog(c, 'listGames', 'games', 200);\n      return c.json(gamesWithBadgesAndViews);\n    } catch (error) {\n      await this.createLog(c, 'listGames', 'games', 500);\n      return this.sendError(c, 500, 'Error listing games', error);\n    }\n  }\n\n  @httpGet('/search')\n  public async searchGames(c: Context) {\n    const query = c.req.query('q')?.trim();\n    if (!query) {\n      await this.createLog(c, 'searchGames', 'games', 400);\n      return this.sendError(c, 400, 'Missing search query');\n    }\n    try {\n      const games = await this.gameService.searchGames(query);\n      const gameIds = games.map(game => game.gameId);\n      const gamesWithBadgesAndViews = await this.gameService.getGamesWithBadgesAndViews(gameIds);\n      await this.createLog(c, 'searchGames', 'games', 200);\n      return c.json(gamesWithBadgesAndViews);\n    } catch (error) {\n      await this.createLog(c, 'searchGames', 'games', 500);\n      return this.sendError(c, 500, 'Error searching games', error);\n    }\n  }\n\n  @httpGet('/@mine', LoggedCheck)\n  public async getMyCreatedGames(c: Context) {\n    const user = this.getUserFromContext(c);\n    if (!user) return this.sendError(c, 401, 'Unauthorized');\n    try {\n      const games = await this.gameService.getMyCreatedGames(user.user_id);\n      await this.createLog(c, 'getMyCreatedGames', 'games', 200, user.user_id);\n      return c.json(games);\n    } catch (error) {\n      await this.createLog(c, 'getMyCreatedGames', 'games', 500, user.user_id);\n      return this.sendError(c, 500, 'Error fetching your created games', error);\n    }\n  }\n\n  @httpGet('/list/@me', LoggedCheck)\n  public async getUserGames(c: Context) {\n    const user = this.getUserFromContext(c);\n    if (!user) return this.sendError(c, 401, 'Unauthorized');\n    try {\n      const games = await this.gameService.getUserOwnedGames(user.user_id);\n      await this.createLog(c, 'getUserGames', 'games', 200, user.user_id);\n      return c.json(games);\n    } catch (error) {\n      await this.createLog(c, 'getUserGames', 'games', 500, user.user_id);\n      return this.sendError(c, 500, 'Error fetching user games', error);\n    }\n  }\n\n  @httpGet('/:gameId')\n  public async getGame(c: Context) {\n    if (!(await validateOr400(gameIdParamSchema, { gameId: c.req.param('gameId') }, c))) {\n      await this.createLog(c, 'getGame', 'games', 400);\n      return;\n    }\n    try {\n      const gameId = c.req.param('gameId');\n      const game = await this.gameService.getGameWithBadgesAndViews(gameId);\n      if (!game) {\n        await this.createLog(c, 'getGame', 'games', 404);\n        return this.sendError(c, 404, 'Game not found');\n      }\n      await this.createLog(c, 'getGame', 'games', 200);\n      return c.json(game);\n    } catch (error) {\n      await this.createLog(c, 'getGame', 'games', 500);\n      return this.sendError(c, 500, 'Error fetching game', error);\n    }\n  }\n\n  @httpGet('/:gameId/details', LoggedCheck)\n  public async getGameDetails(c: Context) {\n    const user = this.getUserFromContext(c);\n    if (!user) return this.sendError(c, 401, 'Unauthorized');\n    if (!(await validateOr400(gameIdParamSchema, { gameId: c.req.param('gameId') }, c))) {\n      await this.createLog(c, 'getGameDetails', 'games', 400, user.user_id);\n      return;\n    }\n    try {\n      const gameId = c.req.param('gameId');\n      const game = await this.gameService.getGameForOwner(gameId, user.user_id);\n      if (!game) {\n        await this.createLog(c, 'getGameDetails', 'games', 404, user.user_id);\n        return this.sendError(c, 404, 'Game not found');\n      }\n      await this.createLog(c, 'getGameDetails', 'games', 200, user.user_id);\n      return c.json(game);\n    } catch (error) {\n      await this.createLog(c, 'getGameDetails', 'games', 500, user.user_id);\n      return this.sendError(c, 500, 'Error fetching game details', error);\n    }\n  }\n\n  @httpPost('/', LoggedCheck, createGameRateLimit)\n  public async createGame(c: Context) {\n    const user = this.getUserFromContext(c);\n    if (!user) return this.sendError(c, 401, 'Unauthorized');\n    const body = await c.req.json();\n    if (!(await validateOr400(createGameBodySchema, body, c))) {\n      await this.createLog(c, 'createGame', 'games', 400, user.user_id);\n      return;\n    }\n    try {\n      const ownerId = user.user_id;\n      const gameId = v4();\n      await this.gameService.createGame({ ...body, gameId, owner_id: ownerId });\n      await this.gameService.addOwner(gameId, ownerId);\n      await this.createLog(c, 'createGame', 'games', 201, ownerId);\n      return c.json({ message: 'Game created', game: await this.gameService.getGame(gameId) }, 201);\n    } catch (error) {\n      await this.createLog(c, 'createGame', 'games', 500, user.user_id);\n      return this.sendError(c, 500, 'Error creating game', error);\n    }\n  }\n\n  @httpPut('/:gameId', LoggedCheck, updateGameRateLimit)\n  public async updateGame(c: Context) {\n    const user = this.getUserFromContext(c);\n    if (!user) return this.sendError(c, 401, 'Unauthorized');\n    if (!(await validateOr400(gameIdParamSchema, { gameId: c.req.param('gameId') }, c))) {\n      await this.createLog(c, 'updateGame', 'games', 400, user.user_id);\n      return;\n    }\n    const body = await c.req.json();\n    if (!(await validateOr400(updateGameBodySchema, body, c))) {\n      await this.createLog(c, 'updateGame', 'games', 400, user.user_id);\n      return;\n    }\n    try {\n      const game = await this.gameService.getGame(c.req.param('gameId'));\n      if (!game) {\n        await this.createLog(c, 'updateGame', 'games', 404, user.user_id);\n        return this.sendError(c, 404, 'Game not found');\n      }\n      if (user.user_id !== game.owner_id) {\n        await this.createLog(c, 'updateGame', 'games', 403, user.user_id);\n        return this.sendError(c, 403, 'You are not the owner of this game');\n      }\n      await this.gameService.updateGame(c.req.param('gameId'), body);\n      const updatedGame = await this.gameService.getGame(c.req.param('gameId'));\n      await this.createLog(c, 'updateGame', 'games', 200, user.user_id);\n      return c.json(updatedGame, 200);\n    } catch (error) {\n      await this.createLog(c, 'updateGame', 'games', 500, user.user_id);\n      return this.sendError(c, 500, 'Error updating game', error);\n    }\n  }\n\n  @httpPost('/:gameId/buy', LoggedCheck, buyGameRateLimit)\n  public async buyGame(c: Context) {\n    const user = this.getUserFromContext(c);\n    if (!user) return this.sendError(c, 401, 'Unauthorized');\n    const gameId = c.req.param('gameId');\n    try {\n      const game = await this.gameService.getGame(gameId);\n      if (!game) {\n        await this.createLog(c, 'buyGame', 'games', 404, user.user_id);\n        return this.sendError(c, 404, 'Game not found');\n      }\n      const userGames = await this.gameService.getUserGames(user.user_id);\n      if (userGames.some(g => g.gameId === gameId)) {\n        await this.createLog(c, 'buyGame', 'games', 400, user.user_id);\n        return this.sendError(c, 400, 'Game already owned');\n      }\n      if (game.owner_id === user.user_id) {\n        await this.gameService.addOwner(gameId, user.user_id);\n        await this.createLog(c, 'buyGame', 'games', 200, user.user_id);\n        return c.json({ message: 'Game obtained' }, 200);\n      }\n      const userObj = await this.userService.getUser(user.user_id);\n      if (!userObj) {\n        await this.createLog(c, 'buyGame', 'games', 404, user.user_id);\n        return this.sendError(c, 404, 'User not found');\n      }\n      if (userObj.balance < game.price) {\n        await this.createLog(c, 'buyGame', 'games', 400, user.user_id);\n        return this.sendError(c, 400, 'Not enough balance');\n      }\n      await this.userService.updateUserBalance(user.user_id, userObj.balance - game.price);\n      const owner = await this.userService.getUser(game.owner_id);\n      if (!owner) {\n        await this.createLog(c, 'buyGame', 'games', 404, user.user_id);\n        return this.sendError(c, 404, 'Owner not found');\n      }\n      await this.userService.updateUserBalance(game.owner_id, owner.balance + game.price * 0.75);\n      await this.gameService.addOwner(gameId, user.user_id);\n      await this.createLog(c, 'buyGame', 'games', 200, user.user_id);\n      return c.json({ message: 'Game purchased' }, 200);\n    } catch (error) {\n      await this.createLog(c, 'buyGame', 'games', 500, user.user_id);\n      return this.sendError(c, 500, 'Error purchasing game', error);\n    }\n  }\n\n  @httpPost('/transfer-ownership/:gameId', LoggedCheck, transferOwnershipRateLimit)\n  public async transferOwnership(c: Context) {\n    const user = this.getUserFromContext(c);\n    if (!user) return this.sendError(c, 401, 'Unauthorized');\n    const gameId = c.req.param('gameId');\n    const { newOwnerId } = await c.req.json();\n    if (!gameId || !newOwnerId) {\n      await this.createLog(c, 'transferOwnership', 'games', 400, user.user_id);\n      return this.sendError(c, 400, 'Invalid input');\n    }\n    try {\n      const game = await this.gameService.getGame(gameId);\n      if (!game) {\n        await this.createLog(c, 'transferOwnership', 'games', 404, user.user_id);\n        return this.sendError(c, 404, 'Game not found');\n      }\n      if (game.owner_id !== user.user_id) {\n        await this.createLog(c, 'transferOwnership', 'games', 403, user.user_id);\n        return this.sendError(c, 403, 'You are not the owner of this game');\n      }\n      const newOwner = await this.userService.getUser(newOwnerId);\n      if (!newOwner) {\n        await this.createLog(c, 'transferOwnership', 'games', 404, user.user_id);\n        return this.sendError(c, 404, 'New owner not found');\n      }\n      await this.gameService.transferOwnership(gameId, newOwnerId);\n      const updatedGame = await this.gameService.getGame(gameId);\n      await this.createLog(c, 'transferOwnership', 'games', 200, user.user_id);\n      return c.json({ message: 'Ownership transferred', game: updatedGame }, 200);\n    } catch (error) {\n      await this.createLog(c, 'transferOwnership', 'games', 500, user.user_id);\n      return this.sendError(c, 500, 'Error transferring ownership', error);\n    }\n  }\n\n  @httpPost('/:gameId/transfer', LoggedCheck, transferGameRateLimit)\n  public async transferGame(c: Context) {\n    const user = this.getUserFromContext(c);\n    if (!user) return this.sendError(c, 401, 'Unauthorized');\n    if (!(await validateOr400(gameIdParamSchema, { gameId: c.req.param('gameId') }, c))) {\n      await this.createLog(c, 'transferGame', 'games', 400, user.user_id);\n      return;\n    }\n    const { targetUserId } = await c.req.json();\n    const fromUserId = user.user_id;\n    if (!targetUserId || fromUserId === targetUserId) {\n      await this.createLog(c, 'transferGame', 'games', 400, fromUserId);\n      return this.sendError(c, 400, 'Invalid target user');\n    }\n    try {\n      const targetUser = await this.userService.getUser(targetUserId);\n      if (!targetUser) {\n        await this.createLog(c, 'transferGame', 'games', 404, fromUserId);\n        return this.sendError(c, 404, 'Target user not found');\n      }\n      const canTransfer = await this.gameService.canTransferGame(c.req.param('gameId'), fromUserId, targetUserId);\n      if (!canTransfer.canTransfer) {\n        await this.createLog(c, 'transferGame', 'games', 400, fromUserId);\n        return this.sendError(c, 400, canTransfer.reason || 'Cannot transfer game');\n      }\n      await this.gameService.transferGameCopy(c.req.param('gameId'), fromUserId, targetUserId);\n      await this.createLog(c, 'transferGame', 'games', 200, fromUserId);\n      return c.json({ message: `Game successfully transferred to ${targetUser.username}` }, 200);\n    } catch (error) {\n      await this.createLog(c, 'transferGame', 'games', 500, fromUserId);\n      return this.sendError(c, 500, 'Error transferring game', error);\n    }\n  }\n\n  @httpGet('/:gameId/can-transfer', LoggedCheck)\n  public async canTransferGame(c: Context) {\n    const user = this.getUserFromContext(c);\n    if (!user) return this.sendError(c, 401, 'Unauthorized');\n    if (!(await validateOr400(gameIdParamSchema, { gameId: c.req.param('gameId') }, c))) {\n      await this.createLog(c, 'canTransferGame', 'games', 400, user.user_id);\n      return;\n    }\n    const targetUserId = c.req.query('targetUserId');\n    const fromUserId = user.user_id;\n    if (!targetUserId) {\n      await this.createLog(c, 'canTransferGame', 'games', 400, fromUserId);\n      return this.sendError(c, 400, 'Target user ID is required');\n    }\n    try {\n      const result = await this.gameService.canTransferGame(c.req.param('gameId'), fromUserId, targetUserId);\n      await this.createLog(c, 'canTransferGame', 'games', 200, fromUserId);\n      return c.json(result);\n    } catch (error) {\n      await this.createLog(c, 'canTransferGame', 'games', 500, fromUserId);\n      return this.sendError(c, 500, 'Error checking transfer eligibility', error);\n    }\n  }\n\n  // Download endpoints: implementation depends on your file serving strategy with Hono.\n  // You may need to use c.res for streaming, or return a redirect to a signed URL.\n\n  @httpGet('/:gameId/download', LoggedCheck)\n  public async downloadGame(c: Context) {\n    const user = this.getUserFromContext(c);\n    if (!user) return this.sendError(c, 401, 'Unauthorized');\n    const gameId = c.req.param('gameId');\n    try {\n      const game = await this.gameService.getGame(gameId);\n      if (!game) return this.sendError(c, 404, 'Game not found');\n      const owns = (await this.gameService.userOwnsGame(gameId, user.user_id)) || game.owner_id === user.user_id;\n      if (!owns) return this.sendError(c, 403, 'Access denied');\n      const link = game.download_link;\n      if (!link) return this.sendError(c, 404, 'Download link not available');\n      // For Hono, you may want to redirect or proxy the file\n      return c.redirect(link);\n    } catch (error) {\n      return this.sendError(c, 500, 'Error downloading game', error);\n    }\n  }\n\n  @httpHead('/:gameId/download', LoggedCheck)\n  public async headDownloadGame(c: Context) {\n    const user = this.getUserFromContext(c);\n    if (!user) return this.sendError(c, 401, 'Unauthorized');\n    const gameId = c.req.param('gameId');\n    try {\n      const game = await this.gameService.getGame(gameId);\n      if (!game) return this.sendError(c, 404, 'Game not found');\n      const owns = (await this.gameService.userOwnsGame(gameId, user.user_id)) || game.owner_id === user.user_id;\n      if (!owns) return this.sendError(c, 403, 'Access denied');\n      const link = game.download_link;\n      if (!link) return this.sendError(c, 404, 'Download link not available');\n      // For Hono, you may want to return headers or redirect\n      return c.redirect(link);\n    } catch (error) {\n      return this.sendError(c, 500, 'Error fetching file headers', error);\n    }\n  }\n}\n\n\n", "import { Context, MiddlewareHandler } from 'hono';\r\n\r\ninterface RateLimitConfig {\r\n  windowMs: number;\r\n  max: number;\r\n  message: string;\r\n  standardHeaders?: boolean;\r\n  legacyHeaders?: boolean;\r\n}\r\n\r\n// Simple in-memory store for rate limiting\r\nconst rateLimitStore = new Map<string, { count: number; resetTime: number }>();\r\n\r\nexport const createRateLimit = (config: RateLimitConfig): MiddlewareHandler => {\r\n  return async (c: Context, next) => {\r\n    // Get client IP - in Cloudflare Workers this is different\r\n    const clientIP = c.req.header('cf-connecting-ip') || \r\n                     c.req.header('x-forwarded-for') || \r\n                     c.req.header('x-real-ip') || \r\n                     'unknown';\r\n    \r\n    const key = `${clientIP}:${c.req.url}`;\r\n    const now = Date.now();\r\n    \r\n    // Clean up old entries\r\n    for (const [k, v] of rateLimitStore.entries()) {\r\n      if (v.resetTime < now) {\r\n        rateLimitStore.delete(k);\r\n      }\r\n    }\r\n    \r\n    // Get or create rate limit info for this key\r\n    let rateLimitInfo = rateLimitStore.get(key);\r\n    \r\n    if (!rateLimitInfo || rateLimitInfo.resetTime < now) {\r\n      // Create new window\r\n      rateLimitInfo = {\r\n        count: 1,\r\n        resetTime: now + config.windowMs\r\n      };\r\n    } else {\r\n      // Increment existing window\r\n      rateLimitInfo.count++;\r\n    }\r\n    \r\n    rateLimitStore.set(key, rateLimitInfo);\r\n    \r\n    // Check if limit exceeded\r\n    if (rateLimitInfo.count > config.max) {\r\n      const retryAfter = Math.ceil((rateLimitInfo.resetTime - now) / 1000);\r\n      \r\n      if (config.standardHeaders) {\r\n        c.res.headers.set('RateLimit-Limit', config.max.toString());\r\n        c.res.headers.set('RateLimit-Remaining', '0');\r\n        c.res.headers.set('RateLimit-Reset', Math.ceil(rateLimitInfo.resetTime / 1000).toString());\r\n      }\r\n      \r\n      if (config.legacyHeaders !== false) {\r\n        c.res.headers.set('X-RateLimit-Limit', config.max.toString());\r\n        c.res.headers.set('X-RateLimit-Remaining', '0');\r\n        c.res.headers.set('X-RateLimit-Reset', Math.ceil(rateLimitInfo.resetTime / 1000).toString());\r\n      }\r\n      \r\n      c.res.headers.set('Retry-After', retryAfter.toString());\r\n      \r\n      return c.json({ error: config.message }, 429);\r\n    }\r\n    \r\n    // Set rate limit headers for successful requests\r\n    const remaining = Math.max(0, config.max - rateLimitInfo.count);\r\n    \r\n    if (config.standardHeaders) {\r\n      c.res.headers.set('RateLimit-Limit', config.max.toString());\r\n      c.res.headers.set('RateLimit-Remaining', remaining.toString());\r\n      c.res.headers.set('RateLimit-Reset', Math.ceil(rateLimitInfo.resetTime / 1000).toString());\r\n    }\r\n    \r\n    if (config.legacyHeaders !== false) {\r\n      c.res.headers.set('X-RateLimit-Limit', config.max.toString());\r\n      c.res.headers.set('X-RateLimit-Remaining', remaining.toString());\r\n      c.res.headers.set('X-RateLimit-Reset', Math.ceil(rateLimitInfo.resetTime / 1000).toString());\r\n    }\r\n    \r\n    await next();\r\n  };\r\n};", "import * as yup from 'yup';\n\nexport const gameIdParamSchema = yup.object({\n  gameId: yup.string().required('gameId is required'),\n});\n\nexport const createGameBodySchema = yup.object({\n  name: yup.string().required('Game name is required'),\n  description: yup.string().required('Description is required'),\n  price: yup.number().required('Price is required'),\n  download_link: yup.string().url('Download link must be a valid URL').nullable(),\n  showInStore: yup.boolean().default(false),\n  iconHash: yup.string().nullable(),\n  splashHash: yup.string().nullable(),\n  bannerHash: yup.string().nullable(),\n  genre: yup.string().nullable(),\n  release_date: yup.string().nullable(),\n  developer: yup.string().nullable(),\n  publisher: yup.string().nullable(),\n  platforms: yup.string().nullable(),\n  rating: yup.number().default(0),\n  website: yup.string().url('Website must be a valid URL').nullable(),\n  trailer_link: yup.string().url('Trailer link must be a valid URL').nullable(),\n  multiplayer: yup.boolean().default(false),\n});\n\nexport const updateGameBodySchema = yup\n  .object({\n    name: yup.string(),\n    description: yup.string(),\n    price: yup.number(),\n    download_link: yup.string().url('Download link must be a valid URL').nullable(),\n    showInStore: yup.boolean(),\n    iconHash: yup.string().nullable(),\n    splashHash: yup.string().nullable(),\n    bannerHash: yup.string().nullable(),\n    genre: yup.string().nullable(),\n    release_date: yup.string().nullable(),\n    developer: yup.string().nullable(),\n    publisher: yup.string().nullable(),\n    platforms: yup.string().nullable(),\n    rating: yup.number(),\n    website: yup.string().url('Website must be a valid URL').nullable(),\n    trailer_link: yup.string().url('Trailer link must be a valid URL').nullable(),\n    multiplayer: yup.boolean(),\n    markAsUpdated: yup.boolean(),\n  })\n  .noUnknown();\n", "import { getter, forEach, split, normalizePath, join } from 'property-expr';\nimport { camelCase, snakeCase } from 'tiny-case';\nimport toposort from 'toposort';\n\nconst toString = Object.prototype.toString;\nconst errorToString = Error.prototype.toString;\nconst regExpToString = RegExp.prototype.toString;\nconst symbolToString = typeof Symbol !== 'undefined' ? Symbol.prototype.toString : () => '';\nconst SYMBOL_REGEXP = /^Symbol\\((.*)\\)(.*)$/;\nfunction printNumber(val) {\n  if (val != +val) return 'NaN';\n  const isNegativeZero = val === 0 && 1 / val < 0;\n  return isNegativeZero ? '-0' : '' + val;\n}\nfunction printSimpleValue(val, quoteStrings = false) {\n  if (val == null || val === true || val === false) return '' + val;\n  const typeOf = typeof val;\n  if (typeOf === 'number') return printNumber(val);\n  if (typeOf === 'string') return quoteStrings ? `\"${val}\"` : val;\n  if (typeOf === 'function') return '[Function ' + (val.name || 'anonymous') + ']';\n  if (typeOf === 'symbol') return symbolToString.call(val).replace(SYMBOL_REGEXP, 'Symbol($1)');\n  const tag = toString.call(val).slice(8, -1);\n  if (tag === 'Date') return isNaN(val.getTime()) ? '' + val : val.toISOString(val);\n  if (tag === 'Error' || val instanceof Error) return '[' + errorToString.call(val) + ']';\n  if (tag === 'RegExp') return regExpToString.call(val);\n  return null;\n}\nfunction printValue(value, quoteStrings) {\n  let result = printSimpleValue(value, quoteStrings);\n  if (result !== null) return result;\n  return JSON.stringify(value, function (key, value) {\n    let result = printSimpleValue(this[key], quoteStrings);\n    if (result !== null) return result;\n    return value;\n  }, 2);\n}\n\nfunction toArray(value) {\n  return value == null ? [] : [].concat(value);\n}\n\nlet _Symbol$toStringTag, _Symbol$hasInstance, _Symbol$toStringTag2;\nlet strReg = /\\$\\{\\s*(\\w+)\\s*\\}/g;\n_Symbol$toStringTag = Symbol.toStringTag;\nclass ValidationErrorNoStack {\n  constructor(errorOrErrors, value, field, type) {\n    this.name = void 0;\n    this.message = void 0;\n    this.value = void 0;\n    this.path = void 0;\n    this.type = void 0;\n    this.params = void 0;\n    this.errors = void 0;\n    this.inner = void 0;\n    this[_Symbol$toStringTag] = 'Error';\n    this.name = 'ValidationError';\n    this.value = value;\n    this.path = field;\n    this.type = type;\n    this.errors = [];\n    this.inner = [];\n    toArray(errorOrErrors).forEach(err => {\n      if (ValidationError.isError(err)) {\n        this.errors.push(...err.errors);\n        const innerErrors = err.inner.length ? err.inner : [err];\n        this.inner.push(...innerErrors);\n      } else {\n        this.errors.push(err);\n      }\n    });\n    this.message = this.errors.length > 1 ? `${this.errors.length} errors occurred` : this.errors[0];\n  }\n}\n_Symbol$hasInstance = Symbol.hasInstance;\n_Symbol$toStringTag2 = Symbol.toStringTag;\nclass ValidationError extends Error {\n  static formatError(message, params) {\n    // Attempt to make the path more friendly for error message interpolation.\n    const path = params.label || params.path || 'this';\n    // Store the original path under `originalPath` so it isn't lost to custom\n    // message functions; e.g., ones provided in `setLocale()` calls.\n    params = Object.assign({}, params, {\n      path,\n      originalPath: params.path\n    });\n    if (typeof message === 'string') return message.replace(strReg, (_, key) => printValue(params[key]));\n    if (typeof message === 'function') return message(params);\n    return message;\n  }\n  static isError(err) {\n    return err && err.name === 'ValidationError';\n  }\n  constructor(errorOrErrors, value, field, type, disableStack) {\n    const errorNoStack = new ValidationErrorNoStack(errorOrErrors, value, field, type);\n    if (disableStack) {\n      return errorNoStack;\n    }\n    super();\n    this.value = void 0;\n    this.path = void 0;\n    this.type = void 0;\n    this.params = void 0;\n    this.errors = [];\n    this.inner = [];\n    this[_Symbol$toStringTag2] = 'Error';\n    this.name = errorNoStack.name;\n    this.message = errorNoStack.message;\n    this.type = errorNoStack.type;\n    this.value = errorNoStack.value;\n    this.path = errorNoStack.path;\n    this.errors = errorNoStack.errors;\n    this.inner = errorNoStack.inner;\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, ValidationError);\n    }\n  }\n  static [_Symbol$hasInstance](inst) {\n    return ValidationErrorNoStack[Symbol.hasInstance](inst) || super[Symbol.hasInstance](inst);\n  }\n}\n\nlet mixed = {\n  default: '${path} is invalid',\n  required: '${path} is a required field',\n  defined: '${path} must be defined',\n  notNull: '${path} cannot be null',\n  oneOf: '${path} must be one of the following values: ${values}',\n  notOneOf: '${path} must not be one of the following values: ${values}',\n  notType: ({\n    path,\n    type,\n    value,\n    originalValue\n  }) => {\n    const castMsg = originalValue != null && originalValue !== value ? ` (cast from the value \\`${printValue(originalValue, true)}\\`).` : '.';\n    return type !== 'mixed' ? `${path} must be a \\`${type}\\` type, ` + `but the final value was: \\`${printValue(value, true)}\\`` + castMsg : `${path} must match the configured type. ` + `The validated value was: \\`${printValue(value, true)}\\`` + castMsg;\n  }\n};\nlet string = {\n  length: '${path} must be exactly ${length} characters',\n  min: '${path} must be at least ${min} characters',\n  max: '${path} must be at most ${max} characters',\n  matches: '${path} must match the following: \"${regex}\"',\n  email: '${path} must be a valid email',\n  url: '${path} must be a valid URL',\n  uuid: '${path} must be a valid UUID',\n  datetime: '${path} must be a valid ISO date-time',\n  datetime_precision: '${path} must be a valid ISO date-time with a sub-second precision of exactly ${precision} digits',\n  datetime_offset: '${path} must be a valid ISO date-time with UTC \"Z\" timezone',\n  trim: '${path} must be a trimmed string',\n  lowercase: '${path} must be a lowercase string',\n  uppercase: '${path} must be a upper case string'\n};\nlet number = {\n  min: '${path} must be greater than or equal to ${min}',\n  max: '${path} must be less than or equal to ${max}',\n  lessThan: '${path} must be less than ${less}',\n  moreThan: '${path} must be greater than ${more}',\n  positive: '${path} must be a positive number',\n  negative: '${path} must be a negative number',\n  integer: '${path} must be an integer'\n};\nlet date = {\n  min: '${path} field must be later than ${min}',\n  max: '${path} field must be at earlier than ${max}'\n};\nlet boolean = {\n  isValue: '${path} field must be ${value}'\n};\nlet object = {\n  noUnknown: '${path} field has unspecified keys: ${unknown}',\n  exact: '${path} object contains unknown properties: ${properties}'\n};\nlet array = {\n  min: '${path} field must have at least ${min} items',\n  max: '${path} field must have less than or equal to ${max} items',\n  length: '${path} must have ${length} items'\n};\nlet tuple = {\n  notType: params => {\n    const {\n      path,\n      value,\n      spec\n    } = params;\n    const typeLen = spec.types.length;\n    if (Array.isArray(value)) {\n      if (value.length < typeLen) return `${path} tuple value has too few items, expected a length of ${typeLen} but got ${value.length} for value: \\`${printValue(value, true)}\\``;\n      if (value.length > typeLen) return `${path} tuple value has too many items, expected a length of ${typeLen} but got ${value.length} for value: \\`${printValue(value, true)}\\``;\n    }\n    return ValidationError.formatError(mixed.notType, params);\n  }\n};\nvar locale = Object.assign(Object.create(null), {\n  mixed,\n  string,\n  number,\n  date,\n  object,\n  array,\n  boolean,\n  tuple\n});\n\nconst isSchema = obj => obj && obj.__isYupSchema__;\n\nclass Condition {\n  static fromOptions(refs, config) {\n    if (!config.then && !config.otherwise) throw new TypeError('either `then:` or `otherwise:` is required for `when()` conditions');\n    let {\n      is,\n      then,\n      otherwise\n    } = config;\n    let check = typeof is === 'function' ? is : (...values) => values.every(value => value === is);\n    return new Condition(refs, (values, schema) => {\n      var _branch;\n      let branch = check(...values) ? then : otherwise;\n      return (_branch = branch == null ? void 0 : branch(schema)) != null ? _branch : schema;\n    });\n  }\n  constructor(refs, builder) {\n    this.fn = void 0;\n    this.refs = refs;\n    this.refs = refs;\n    this.fn = builder;\n  }\n  resolve(base, options) {\n    let values = this.refs.map(ref =>\n    // TODO: ? operator here?\n    ref.getValue(options == null ? void 0 : options.value, options == null ? void 0 : options.parent, options == null ? void 0 : options.context));\n    let schema = this.fn(values, base, options);\n    if (schema === undefined ||\n    // @ts-ignore this can be base\n    schema === base) {\n      return base;\n    }\n    if (!isSchema(schema)) throw new TypeError('conditions must return a schema object');\n    return schema.resolve(options);\n  }\n}\n\nconst prefixes = {\n  context: '$',\n  value: '.'\n};\nfunction create$9(key, options) {\n  return new Reference(key, options);\n}\nclass Reference {\n  constructor(key, options = {}) {\n    this.key = void 0;\n    this.isContext = void 0;\n    this.isValue = void 0;\n    this.isSibling = void 0;\n    this.path = void 0;\n    this.getter = void 0;\n    this.map = void 0;\n    if (typeof key !== 'string') throw new TypeError('ref must be a string, got: ' + key);\n    this.key = key.trim();\n    if (key === '') throw new TypeError('ref must be a non-empty string');\n    this.isContext = this.key[0] === prefixes.context;\n    this.isValue = this.key[0] === prefixes.value;\n    this.isSibling = !this.isContext && !this.isValue;\n    let prefix = this.isContext ? prefixes.context : this.isValue ? prefixes.value : '';\n    this.path = this.key.slice(prefix.length);\n    this.getter = this.path && getter(this.path, true);\n    this.map = options.map;\n  }\n  getValue(value, parent, context) {\n    let result = this.isContext ? context : this.isValue ? value : parent;\n    if (this.getter) result = this.getter(result || {});\n    if (this.map) result = this.map(result);\n    return result;\n  }\n\n  /**\n   *\n   * @param {*} value\n   * @param {Object} options\n   * @param {Object=} options.context\n   * @param {Object=} options.parent\n   */\n  cast(value, options) {\n    return this.getValue(value, options == null ? void 0 : options.parent, options == null ? void 0 : options.context);\n  }\n  resolve() {\n    return this;\n  }\n  describe() {\n    return {\n      type: 'ref',\n      key: this.key\n    };\n  }\n  toString() {\n    return `Ref(${this.key})`;\n  }\n  static isRef(value) {\n    return value && value.__isYupRef;\n  }\n}\n\n// @ts-ignore\nReference.prototype.__isYupRef = true;\n\nconst isAbsent = value => value == null;\n\nfunction createValidation(config) {\n  function validate({\n    value,\n    path = '',\n    options,\n    originalValue,\n    schema\n  }, panic, next) {\n    const {\n      name,\n      test,\n      params,\n      message,\n      skipAbsent\n    } = config;\n    let {\n      parent,\n      context,\n      abortEarly = schema.spec.abortEarly,\n      disableStackTrace = schema.spec.disableStackTrace\n    } = options;\n    function resolve(item) {\n      return Reference.isRef(item) ? item.getValue(value, parent, context) : item;\n    }\n    function createError(overrides = {}) {\n      const nextParams = Object.assign({\n        value,\n        originalValue,\n        label: schema.spec.label,\n        path: overrides.path || path,\n        spec: schema.spec,\n        disableStackTrace: overrides.disableStackTrace || disableStackTrace\n      }, params, overrides.params);\n      for (const key of Object.keys(nextParams)) nextParams[key] = resolve(nextParams[key]);\n      const error = new ValidationError(ValidationError.formatError(overrides.message || message, nextParams), value, nextParams.path, overrides.type || name, nextParams.disableStackTrace);\n      error.params = nextParams;\n      return error;\n    }\n    const invalid = abortEarly ? panic : next;\n    let ctx = {\n      path,\n      parent,\n      type: name,\n      from: options.from,\n      createError,\n      resolve,\n      options,\n      originalValue,\n      schema\n    };\n    const handleResult = validOrError => {\n      if (ValidationError.isError(validOrError)) invalid(validOrError);else if (!validOrError) invalid(createError());else next(null);\n    };\n    const handleError = err => {\n      if (ValidationError.isError(err)) invalid(err);else panic(err);\n    };\n    const shouldSkip = skipAbsent && isAbsent(value);\n    if (shouldSkip) {\n      return handleResult(true);\n    }\n    let result;\n    try {\n      var _result;\n      result = test.call(ctx, value, ctx);\n      if (typeof ((_result = result) == null ? void 0 : _result.then) === 'function') {\n        if (options.sync) {\n          throw new Error(`Validation test of type: \"${ctx.type}\" returned a Promise during a synchronous validate. ` + `This test will finish after the validate call has returned`);\n        }\n        return Promise.resolve(result).then(handleResult, handleError);\n      }\n    } catch (err) {\n      handleError(err);\n      return;\n    }\n    handleResult(result);\n  }\n  validate.OPTIONS = config;\n  return validate;\n}\n\nfunction getIn(schema, path, value, context = value) {\n  let parent, lastPart, lastPartDebug;\n\n  // root path: ''\n  if (!path) return {\n    parent,\n    parentPath: path,\n    schema\n  };\n  forEach(path, (_part, isBracket, isArray) => {\n    let part = isBracket ? _part.slice(1, _part.length - 1) : _part;\n    schema = schema.resolve({\n      context,\n      parent,\n      value\n    });\n    let isTuple = schema.type === 'tuple';\n    let idx = isArray ? parseInt(part, 10) : 0;\n    if (schema.innerType || isTuple) {\n      if (isTuple && !isArray) throw new Error(`Yup.reach cannot implicitly index into a tuple type. the path part \"${lastPartDebug}\" must contain an index to the tuple element, e.g. \"${lastPartDebug}[0]\"`);\n      if (value && idx >= value.length) {\n        throw new Error(`Yup.reach cannot resolve an array item at index: ${_part}, in the path: ${path}. ` + `because there is no value at that index. `);\n      }\n      parent = value;\n      value = value && value[idx];\n      schema = isTuple ? schema.spec.types[idx] : schema.innerType;\n    }\n\n    // sometimes the array index part of a path doesn't exist: \"nested.arr.child\"\n    // in these cases the current part is the next schema and should be processed\n    // in this iteration. For cases where the index signature is included this\n    // check will fail and we'll handle the `child` part on the next iteration like normal\n    if (!isArray) {\n      if (!schema.fields || !schema.fields[part]) throw new Error(`The schema does not contain the path: ${path}. ` + `(failed at: ${lastPartDebug} which is a type: \"${schema.type}\")`);\n      parent = value;\n      value = value && value[part];\n      schema = schema.fields[part];\n    }\n    lastPart = part;\n    lastPartDebug = isBracket ? '[' + _part + ']' : '.' + _part;\n  });\n  return {\n    schema,\n    parent,\n    parentPath: lastPart\n  };\n}\nfunction reach(obj, path, value, context) {\n  return getIn(obj, path, value, context).schema;\n}\n\nclass ReferenceSet extends Set {\n  describe() {\n    const description = [];\n    for (const item of this.values()) {\n      description.push(Reference.isRef(item) ? item.describe() : item);\n    }\n    return description;\n  }\n  resolveAll(resolve) {\n    let result = [];\n    for (const item of this.values()) {\n      result.push(resolve(item));\n    }\n    return result;\n  }\n  clone() {\n    return new ReferenceSet(this.values());\n  }\n  merge(newItems, removeItems) {\n    const next = this.clone();\n    newItems.forEach(value => next.add(value));\n    removeItems.forEach(value => next.delete(value));\n    return next;\n  }\n}\n\n// tweaked from https://github.com/Kelin2025/nanoclone/blob/0abeb7635bda9b68ef2277093f76dbe3bf3948e1/src/index.js\nfunction clone(src, seen = new Map()) {\n  if (isSchema(src) || !src || typeof src !== 'object') return src;\n  if (seen.has(src)) return seen.get(src);\n  let copy;\n  if (src instanceof Date) {\n    // Date\n    copy = new Date(src.getTime());\n    seen.set(src, copy);\n  } else if (src instanceof RegExp) {\n    // RegExp\n    copy = new RegExp(src);\n    seen.set(src, copy);\n  } else if (Array.isArray(src)) {\n    // Array\n    copy = new Array(src.length);\n    seen.set(src, copy);\n    for (let i = 0; i < src.length; i++) copy[i] = clone(src[i], seen);\n  } else if (src instanceof Map) {\n    // Map\n    copy = new Map();\n    seen.set(src, copy);\n    for (const [k, v] of src.entries()) copy.set(k, clone(v, seen));\n  } else if (src instanceof Set) {\n    // Set\n    copy = new Set();\n    seen.set(src, copy);\n    for (const v of src) copy.add(clone(v, seen));\n  } else if (src instanceof Object) {\n    // Object\n    copy = {};\n    seen.set(src, copy);\n    for (const [k, v] of Object.entries(src)) copy[k] = clone(v, seen);\n  } else {\n    throw Error(`Unable to clone ${src}`);\n  }\n  return copy;\n}\n\n// If `CustomSchemaMeta` isn't extended with any keys, we'll fall back to a\n// loose Record definition allowing free form usage.\nclass Schema {\n  constructor(options) {\n    this.type = void 0;\n    this.deps = [];\n    this.tests = void 0;\n    this.transforms = void 0;\n    this.conditions = [];\n    this._mutate = void 0;\n    this.internalTests = {};\n    this._whitelist = new ReferenceSet();\n    this._blacklist = new ReferenceSet();\n    this.exclusiveTests = Object.create(null);\n    this._typeCheck = void 0;\n    this.spec = void 0;\n    this.tests = [];\n    this.transforms = [];\n    this.withMutation(() => {\n      this.typeError(mixed.notType);\n    });\n    this.type = options.type;\n    this._typeCheck = options.check;\n    this.spec = Object.assign({\n      strip: false,\n      strict: false,\n      abortEarly: true,\n      recursive: true,\n      disableStackTrace: false,\n      nullable: false,\n      optional: true,\n      coerce: true\n    }, options == null ? void 0 : options.spec);\n    this.withMutation(s => {\n      s.nonNullable();\n    });\n  }\n\n  // TODO: remove\n  get _type() {\n    return this.type;\n  }\n  clone(spec) {\n    if (this._mutate) {\n      if (spec) Object.assign(this.spec, spec);\n      return this;\n    }\n\n    // if the nested value is a schema we can skip cloning, since\n    // they are already immutable\n    const next = Object.create(Object.getPrototypeOf(this));\n\n    // @ts-expect-error this is readonly\n    next.type = this.type;\n    next._typeCheck = this._typeCheck;\n    next._whitelist = this._whitelist.clone();\n    next._blacklist = this._blacklist.clone();\n    next.internalTests = Object.assign({}, this.internalTests);\n    next.exclusiveTests = Object.assign({}, this.exclusiveTests);\n\n    // @ts-expect-error this is readonly\n    next.deps = [...this.deps];\n    next.conditions = [...this.conditions];\n    next.tests = [...this.tests];\n    next.transforms = [...this.transforms];\n    next.spec = clone(Object.assign({}, this.spec, spec));\n    return next;\n  }\n  label(label) {\n    let next = this.clone();\n    next.spec.label = label;\n    return next;\n  }\n  meta(...args) {\n    if (args.length === 0) return this.spec.meta;\n    let next = this.clone();\n    next.spec.meta = Object.assign(next.spec.meta || {}, args[0]);\n    return next;\n  }\n  withMutation(fn) {\n    let before = this._mutate;\n    this._mutate = true;\n    let result = fn(this);\n    this._mutate = before;\n    return result;\n  }\n  concat(schema) {\n    if (!schema || schema === this) return this;\n    if (schema.type !== this.type && this.type !== 'mixed') throw new TypeError(`You cannot \\`concat()\\` schema's of different types: ${this.type} and ${schema.type}`);\n    let base = this;\n    let combined = schema.clone();\n    const mergedSpec = Object.assign({}, base.spec, combined.spec);\n    combined.spec = mergedSpec;\n    combined.internalTests = Object.assign({}, base.internalTests, combined.internalTests);\n\n    // manually merge the blacklist/whitelist (the other `schema` takes\n    // precedence in case of conflicts)\n    combined._whitelist = base._whitelist.merge(schema._whitelist, schema._blacklist);\n    combined._blacklist = base._blacklist.merge(schema._blacklist, schema._whitelist);\n\n    // start with the current tests\n    combined.tests = base.tests;\n    combined.exclusiveTests = base.exclusiveTests;\n\n    // manually add the new tests to ensure\n    // the deduping logic is consistent\n    combined.withMutation(next => {\n      schema.tests.forEach(fn => {\n        next.test(fn.OPTIONS);\n      });\n    });\n    combined.transforms = [...base.transforms, ...combined.transforms];\n    return combined;\n  }\n  isType(v) {\n    if (v == null) {\n      if (this.spec.nullable && v === null) return true;\n      if (this.spec.optional && v === undefined) return true;\n      return false;\n    }\n    return this._typeCheck(v);\n  }\n  resolve(options) {\n    let schema = this;\n    if (schema.conditions.length) {\n      let conditions = schema.conditions;\n      schema = schema.clone();\n      schema.conditions = [];\n      schema = conditions.reduce((prevSchema, condition) => condition.resolve(prevSchema, options), schema);\n      schema = schema.resolve(options);\n    }\n    return schema;\n  }\n  resolveOptions(options) {\n    var _options$strict, _options$abortEarly, _options$recursive, _options$disableStack;\n    return Object.assign({}, options, {\n      from: options.from || [],\n      strict: (_options$strict = options.strict) != null ? _options$strict : this.spec.strict,\n      abortEarly: (_options$abortEarly = options.abortEarly) != null ? _options$abortEarly : this.spec.abortEarly,\n      recursive: (_options$recursive = options.recursive) != null ? _options$recursive : this.spec.recursive,\n      disableStackTrace: (_options$disableStack = options.disableStackTrace) != null ? _options$disableStack : this.spec.disableStackTrace\n    });\n  }\n\n  /**\n   * Run the configured transform pipeline over an input value.\n   */\n\n  cast(value, options = {}) {\n    let resolvedSchema = this.resolve(Object.assign({\n      value\n    }, options));\n    let allowOptionality = options.assert === 'ignore-optionality';\n    let result = resolvedSchema._cast(value, options);\n    if (options.assert !== false && !resolvedSchema.isType(result)) {\n      if (allowOptionality && isAbsent(result)) {\n        return result;\n      }\n      let formattedValue = printValue(value);\n      let formattedResult = printValue(result);\n      throw new TypeError(`The value of ${options.path || 'field'} could not be cast to a value ` + `that satisfies the schema type: \"${resolvedSchema.type}\". \\n\\n` + `attempted value: ${formattedValue} \\n` + (formattedResult !== formattedValue ? `result of cast: ${formattedResult}` : ''));\n    }\n    return result;\n  }\n  _cast(rawValue, options) {\n    let value = rawValue === undefined ? rawValue : this.transforms.reduce((prevValue, fn) => fn.call(this, prevValue, rawValue, this), rawValue);\n    if (value === undefined) {\n      value = this.getDefault(options);\n    }\n    return value;\n  }\n  _validate(_value, options = {}, panic, next) {\n    let {\n      path,\n      originalValue = _value,\n      strict = this.spec.strict\n    } = options;\n    let value = _value;\n    if (!strict) {\n      value = this._cast(value, Object.assign({\n        assert: false\n      }, options));\n    }\n    let initialTests = [];\n    for (let test of Object.values(this.internalTests)) {\n      if (test) initialTests.push(test);\n    }\n    this.runTests({\n      path,\n      value,\n      originalValue,\n      options,\n      tests: initialTests\n    }, panic, initialErrors => {\n      // even if we aren't ending early we can't proceed further if the types aren't correct\n      if (initialErrors.length) {\n        return next(initialErrors, value);\n      }\n      this.runTests({\n        path,\n        value,\n        originalValue,\n        options,\n        tests: this.tests\n      }, panic, next);\n    });\n  }\n\n  /**\n   * Executes a set of validations, either schema, produced Tests or a nested\n   * schema validate result.\n   */\n  runTests(runOptions, panic, next) {\n    let fired = false;\n    let {\n      tests,\n      value,\n      originalValue,\n      path,\n      options\n    } = runOptions;\n    let panicOnce = arg => {\n      if (fired) return;\n      fired = true;\n      panic(arg, value);\n    };\n    let nextOnce = arg => {\n      if (fired) return;\n      fired = true;\n      next(arg, value);\n    };\n    let count = tests.length;\n    let nestedErrors = [];\n    if (!count) return nextOnce([]);\n    let args = {\n      value,\n      originalValue,\n      path,\n      options,\n      schema: this\n    };\n    for (let i = 0; i < tests.length; i++) {\n      const test = tests[i];\n      test(args, panicOnce, function finishTestRun(err) {\n        if (err) {\n          Array.isArray(err) ? nestedErrors.push(...err) : nestedErrors.push(err);\n        }\n        if (--count <= 0) {\n          nextOnce(nestedErrors);\n        }\n      });\n    }\n  }\n  asNestedTest({\n    key,\n    index,\n    parent,\n    parentPath,\n    originalParent,\n    options\n  }) {\n    const k = key != null ? key : index;\n    if (k == null) {\n      throw TypeError('Must include `key` or `index` for nested validations');\n    }\n    const isIndex = typeof k === 'number';\n    let value = parent[k];\n    const testOptions = Object.assign({}, options, {\n      // Nested validations fields are always strict:\n      //    1. parent isn't strict so the casting will also have cast inner values\n      //    2. parent is strict in which case the nested values weren't cast either\n      strict: true,\n      parent,\n      value,\n      originalValue: originalParent[k],\n      // FIXME: tests depend on `index` being passed around deeply,\n      //   we should not let the options.key/index bleed through\n      key: undefined,\n      // index: undefined,\n      [isIndex ? 'index' : 'key']: k,\n      path: isIndex || k.includes('.') ? `${parentPath || ''}[${isIndex ? k : `\"${k}\"`}]` : (parentPath ? `${parentPath}.` : '') + key\n    });\n    return (_, panic, next) => this.resolve(testOptions)._validate(value, testOptions, panic, next);\n  }\n  validate(value, options) {\n    var _options$disableStack2;\n    let schema = this.resolve(Object.assign({}, options, {\n      value\n    }));\n    let disableStackTrace = (_options$disableStack2 = options == null ? void 0 : options.disableStackTrace) != null ? _options$disableStack2 : schema.spec.disableStackTrace;\n    return new Promise((resolve, reject) => schema._validate(value, options, (error, parsed) => {\n      if (ValidationError.isError(error)) error.value = parsed;\n      reject(error);\n    }, (errors, validated) => {\n      if (errors.length) reject(new ValidationError(errors, validated, undefined, undefined, disableStackTrace));else resolve(validated);\n    }));\n  }\n  validateSync(value, options) {\n    var _options$disableStack3;\n    let schema = this.resolve(Object.assign({}, options, {\n      value\n    }));\n    let result;\n    let disableStackTrace = (_options$disableStack3 = options == null ? void 0 : options.disableStackTrace) != null ? _options$disableStack3 : schema.spec.disableStackTrace;\n    schema._validate(value, Object.assign({}, options, {\n      sync: true\n    }), (error, parsed) => {\n      if (ValidationError.isError(error)) error.value = parsed;\n      throw error;\n    }, (errors, validated) => {\n      if (errors.length) throw new ValidationError(errors, value, undefined, undefined, disableStackTrace);\n      result = validated;\n    });\n    return result;\n  }\n  isValid(value, options) {\n    return this.validate(value, options).then(() => true, err => {\n      if (ValidationError.isError(err)) return false;\n      throw err;\n    });\n  }\n  isValidSync(value, options) {\n    try {\n      this.validateSync(value, options);\n      return true;\n    } catch (err) {\n      if (ValidationError.isError(err)) return false;\n      throw err;\n    }\n  }\n  _getDefault(options) {\n    let defaultValue = this.spec.default;\n    if (defaultValue == null) {\n      return defaultValue;\n    }\n    return typeof defaultValue === 'function' ? defaultValue.call(this, options) : clone(defaultValue);\n  }\n  getDefault(options\n  // If schema is defaulted we know it's at least not undefined\n  ) {\n    let schema = this.resolve(options || {});\n    return schema._getDefault(options);\n  }\n  default(def) {\n    if (arguments.length === 0) {\n      return this._getDefault();\n    }\n    let next = this.clone({\n      default: def\n    });\n    return next;\n  }\n  strict(isStrict = true) {\n    return this.clone({\n      strict: isStrict\n    });\n  }\n  nullability(nullable, message) {\n    const next = this.clone({\n      nullable\n    });\n    next.internalTests.nullable = createValidation({\n      message,\n      name: 'nullable',\n      test(value) {\n        return value === null ? this.schema.spec.nullable : true;\n      }\n    });\n    return next;\n  }\n  optionality(optional, message) {\n    const next = this.clone({\n      optional\n    });\n    next.internalTests.optionality = createValidation({\n      message,\n      name: 'optionality',\n      test(value) {\n        return value === undefined ? this.schema.spec.optional : true;\n      }\n    });\n    return next;\n  }\n  optional() {\n    return this.optionality(true);\n  }\n  defined(message = mixed.defined) {\n    return this.optionality(false, message);\n  }\n  nullable() {\n    return this.nullability(true);\n  }\n  nonNullable(message = mixed.notNull) {\n    return this.nullability(false, message);\n  }\n  required(message = mixed.required) {\n    return this.clone().withMutation(next => next.nonNullable(message).defined(message));\n  }\n  notRequired() {\n    return this.clone().withMutation(next => next.nullable().optional());\n  }\n  transform(fn) {\n    let next = this.clone();\n    next.transforms.push(fn);\n    return next;\n  }\n\n  /**\n   * Adds a test function to the schema's queue of tests.\n   * tests can be exclusive or non-exclusive.\n   *\n   * - exclusive tests, will replace any existing tests of the same name.\n   * - non-exclusive: can be stacked\n   *\n   * If a non-exclusive test is added to a schema with an exclusive test of the same name\n   * the exclusive test is removed and further tests of the same name will be stacked.\n   *\n   * If an exclusive test is added to a schema with non-exclusive tests of the same name\n   * the previous tests are removed and further tests of the same name will replace each other.\n   */\n\n  test(...args) {\n    let opts;\n    if (args.length === 1) {\n      if (typeof args[0] === 'function') {\n        opts = {\n          test: args[0]\n        };\n      } else {\n        opts = args[0];\n      }\n    } else if (args.length === 2) {\n      opts = {\n        name: args[0],\n        test: args[1]\n      };\n    } else {\n      opts = {\n        name: args[0],\n        message: args[1],\n        test: args[2]\n      };\n    }\n    if (opts.message === undefined) opts.message = mixed.default;\n    if (typeof opts.test !== 'function') throw new TypeError('`test` is a required parameters');\n    let next = this.clone();\n    let validate = createValidation(opts);\n    let isExclusive = opts.exclusive || opts.name && next.exclusiveTests[opts.name] === true;\n    if (opts.exclusive) {\n      if (!opts.name) throw new TypeError('Exclusive tests must provide a unique `name` identifying the test');\n    }\n    if (opts.name) next.exclusiveTests[opts.name] = !!opts.exclusive;\n    next.tests = next.tests.filter(fn => {\n      if (fn.OPTIONS.name === opts.name) {\n        if (isExclusive) return false;\n        if (fn.OPTIONS.test === validate.OPTIONS.test) return false;\n      }\n      return true;\n    });\n    next.tests.push(validate);\n    return next;\n  }\n  when(keys, options) {\n    if (!Array.isArray(keys) && typeof keys !== 'string') {\n      options = keys;\n      keys = '.';\n    }\n    let next = this.clone();\n    let deps = toArray(keys).map(key => new Reference(key));\n    deps.forEach(dep => {\n      // @ts-ignore readonly array\n      if (dep.isSibling) next.deps.push(dep.key);\n    });\n    next.conditions.push(typeof options === 'function' ? new Condition(deps, options) : Condition.fromOptions(deps, options));\n    return next;\n  }\n  typeError(message) {\n    let next = this.clone();\n    next.internalTests.typeError = createValidation({\n      message,\n      name: 'typeError',\n      skipAbsent: true,\n      test(value) {\n        if (!this.schema._typeCheck(value)) return this.createError({\n          params: {\n            type: this.schema.type\n          }\n        });\n        return true;\n      }\n    });\n    return next;\n  }\n  oneOf(enums, message = mixed.oneOf) {\n    let next = this.clone();\n    enums.forEach(val => {\n      next._whitelist.add(val);\n      next._blacklist.delete(val);\n    });\n    next.internalTests.whiteList = createValidation({\n      message,\n      name: 'oneOf',\n      skipAbsent: true,\n      test(value) {\n        let valids = this.schema._whitelist;\n        let resolved = valids.resolveAll(this.resolve);\n        return resolved.includes(value) ? true : this.createError({\n          params: {\n            values: Array.from(valids).join(', '),\n            resolved\n          }\n        });\n      }\n    });\n    return next;\n  }\n  notOneOf(enums, message = mixed.notOneOf) {\n    let next = this.clone();\n    enums.forEach(val => {\n      next._blacklist.add(val);\n      next._whitelist.delete(val);\n    });\n    next.internalTests.blacklist = createValidation({\n      message,\n      name: 'notOneOf',\n      test(value) {\n        let invalids = this.schema._blacklist;\n        let resolved = invalids.resolveAll(this.resolve);\n        if (resolved.includes(value)) return this.createError({\n          params: {\n            values: Array.from(invalids).join(', '),\n            resolved\n          }\n        });\n        return true;\n      }\n    });\n    return next;\n  }\n  strip(strip = true) {\n    let next = this.clone();\n    next.spec.strip = strip;\n    return next;\n  }\n\n  /**\n   * Return a serialized description of the schema including validations, flags, types etc.\n   *\n   * @param options Provide any needed context for resolving runtime schema alterations (lazy, when conditions, etc).\n   */\n  describe(options) {\n    const next = (options ? this.resolve(options) : this).clone();\n    const {\n      label,\n      meta,\n      optional,\n      nullable\n    } = next.spec;\n    const description = {\n      meta,\n      label,\n      optional,\n      nullable,\n      default: next.getDefault(options),\n      type: next.type,\n      oneOf: next._whitelist.describe(),\n      notOneOf: next._blacklist.describe(),\n      tests: next.tests.map(fn => ({\n        name: fn.OPTIONS.name,\n        params: fn.OPTIONS.params\n      })).filter((n, idx, list) => list.findIndex(c => c.name === n.name) === idx)\n    };\n    return description;\n  }\n}\n// @ts-expect-error\nSchema.prototype.__isYupSchema__ = true;\nfor (const method of ['validate', 'validateSync']) Schema.prototype[`${method}At`] = function (path, value, options = {}) {\n  const {\n    parent,\n    parentPath,\n    schema\n  } = getIn(this, path, value, options.context);\n  return schema[method](parent && parent[parentPath], Object.assign({}, options, {\n    parent,\n    path\n  }));\n};\nfor (const alias of ['equals', 'is']) Schema.prototype[alias] = Schema.prototype.oneOf;\nfor (const alias of ['not', 'nope']) Schema.prototype[alias] = Schema.prototype.notOneOf;\n\nconst returnsTrue = () => true;\nfunction create$8(spec) {\n  return new MixedSchema(spec);\n}\nclass MixedSchema extends Schema {\n  constructor(spec) {\n    super(typeof spec === 'function' ? {\n      type: 'mixed',\n      check: spec\n    } : Object.assign({\n      type: 'mixed',\n      check: returnsTrue\n    }, spec));\n  }\n}\ncreate$8.prototype = MixedSchema.prototype;\n\nfunction create$7() {\n  return new BooleanSchema();\n}\nclass BooleanSchema extends Schema {\n  constructor() {\n    super({\n      type: 'boolean',\n      check(v) {\n        if (v instanceof Boolean) v = v.valueOf();\n        return typeof v === 'boolean';\n      }\n    });\n    this.withMutation(() => {\n      this.transform((value, _raw, ctx) => {\n        if (ctx.spec.coerce && !ctx.isType(value)) {\n          if (/^(true|1)$/i.test(String(value))) return true;\n          if (/^(false|0)$/i.test(String(value))) return false;\n        }\n        return value;\n      });\n    });\n  }\n  isTrue(message = boolean.isValue) {\n    return this.test({\n      message,\n      name: 'is-value',\n      exclusive: true,\n      params: {\n        value: 'true'\n      },\n      test(value) {\n        return isAbsent(value) || value === true;\n      }\n    });\n  }\n  isFalse(message = boolean.isValue) {\n    return this.test({\n      message,\n      name: 'is-value',\n      exclusive: true,\n      params: {\n        value: 'false'\n      },\n      test(value) {\n        return isAbsent(value) || value === false;\n      }\n    });\n  }\n  default(def) {\n    return super.default(def);\n  }\n  defined(msg) {\n    return super.defined(msg);\n  }\n  optional() {\n    return super.optional();\n  }\n  required(msg) {\n    return super.required(msg);\n  }\n  notRequired() {\n    return super.notRequired();\n  }\n  nullable() {\n    return super.nullable();\n  }\n  nonNullable(msg) {\n    return super.nonNullable(msg);\n  }\n  strip(v) {\n    return super.strip(v);\n  }\n}\ncreate$7.prototype = BooleanSchema.prototype;\n\n/**\n * This file is a modified version of the file from the following repository:\n * Date.parse with progressive enhancement for ISO 8601 <https://github.com/csnover/js-iso8601>\n * NON-CONFORMANT EDITION.\n * \u00A9 2011 Colin Snover <http://zetafleet.com>\n * Released under MIT license.\n */\n\n// prettier-ignore\n//                1 YYYY                2 MM        3 DD              4 HH     5 mm        6 ss           7 msec         8 Z 9 \u00B1   10 tzHH    11 tzmm\nconst isoReg = /^(\\d{4}|[+-]\\d{6})(?:-?(\\d{2})(?:-?(\\d{2}))?)?(?:[ T]?(\\d{2}):?(\\d{2})(?::?(\\d{2})(?:[,.](\\d{1,}))?)?(?:(Z)|([+-])(\\d{2})(?::?(\\d{2}))?)?)?$/;\nfunction parseIsoDate(date) {\n  const struct = parseDateStruct(date);\n  if (!struct) return Date.parse ? Date.parse(date) : Number.NaN;\n\n  // timestamps without timezone identifiers should be considered local time\n  if (struct.z === undefined && struct.plusMinus === undefined) {\n    return new Date(struct.year, struct.month, struct.day, struct.hour, struct.minute, struct.second, struct.millisecond).valueOf();\n  }\n  let totalMinutesOffset = 0;\n  if (struct.z !== 'Z' && struct.plusMinus !== undefined) {\n    totalMinutesOffset = struct.hourOffset * 60 + struct.minuteOffset;\n    if (struct.plusMinus === '+') totalMinutesOffset = 0 - totalMinutesOffset;\n  }\n  return Date.UTC(struct.year, struct.month, struct.day, struct.hour, struct.minute + totalMinutesOffset, struct.second, struct.millisecond);\n}\nfunction parseDateStruct(date) {\n  var _regexResult$7$length, _regexResult$;\n  const regexResult = isoReg.exec(date);\n  if (!regexResult) return null;\n\n  // use of toNumber() avoids NaN timestamps caused by \u201Cundefined\u201D\n  // values being passed to Date constructor\n  return {\n    year: toNumber(regexResult[1]),\n    month: toNumber(regexResult[2], 1) - 1,\n    day: toNumber(regexResult[3], 1),\n    hour: toNumber(regexResult[4]),\n    minute: toNumber(regexResult[5]),\n    second: toNumber(regexResult[6]),\n    millisecond: regexResult[7] ?\n    // allow arbitrary sub-second precision beyond milliseconds\n    toNumber(regexResult[7].substring(0, 3)) : 0,\n    precision: (_regexResult$7$length = (_regexResult$ = regexResult[7]) == null ? void 0 : _regexResult$.length) != null ? _regexResult$7$length : undefined,\n    z: regexResult[8] || undefined,\n    plusMinus: regexResult[9] || undefined,\n    hourOffset: toNumber(regexResult[10]),\n    minuteOffset: toNumber(regexResult[11])\n  };\n}\nfunction toNumber(str, defaultValue = 0) {\n  return Number(str) || defaultValue;\n}\n\n// Taken from HTML spec: https://html.spec.whatwg.org/multipage/input.html#valid-e-mail-address\nlet rEmail =\n// eslint-disable-next-line\n/^[a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\nlet rUrl =\n// eslint-disable-next-line\n/^((https?|ftp):)?\\/\\/(((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:)*@)?(((\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5]))|((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?)(:\\d*)?)(\\/((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)+(\\/(([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)*)*)?)?(\\?((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|[\\uE000-\\uF8FF]|\\/|\\?)*)?(\\#((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|\\/|\\?)*)?$/i;\n\n// eslint-disable-next-line\nlet rUUID = /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;\nlet yearMonthDay = '^\\\\d{4}-\\\\d{2}-\\\\d{2}';\nlet hourMinuteSecond = '\\\\d{2}:\\\\d{2}:\\\\d{2}';\nlet zOrOffset = '(([+-]\\\\d{2}(:?\\\\d{2})?)|Z)';\nlet rIsoDateTime = new RegExp(`${yearMonthDay}T${hourMinuteSecond}(\\\\.\\\\d+)?${zOrOffset}$`);\nlet isTrimmed = value => isAbsent(value) || value === value.trim();\nlet objStringTag = {}.toString();\nfunction create$6() {\n  return new StringSchema();\n}\nclass StringSchema extends Schema {\n  constructor() {\n    super({\n      type: 'string',\n      check(value) {\n        if (value instanceof String) value = value.valueOf();\n        return typeof value === 'string';\n      }\n    });\n    this.withMutation(() => {\n      this.transform((value, _raw, ctx) => {\n        if (!ctx.spec.coerce || ctx.isType(value)) return value;\n\n        // don't ever convert arrays\n        if (Array.isArray(value)) return value;\n        const strValue = value != null && value.toString ? value.toString() : value;\n\n        // no one wants plain objects converted to [Object object]\n        if (strValue === objStringTag) return value;\n        return strValue;\n      });\n    });\n  }\n  required(message) {\n    return super.required(message).withMutation(schema => schema.test({\n      message: message || mixed.required,\n      name: 'required',\n      skipAbsent: true,\n      test: value => !!value.length\n    }));\n  }\n  notRequired() {\n    return super.notRequired().withMutation(schema => {\n      schema.tests = schema.tests.filter(t => t.OPTIONS.name !== 'required');\n      return schema;\n    });\n  }\n  length(length, message = string.length) {\n    return this.test({\n      message,\n      name: 'length',\n      exclusive: true,\n      params: {\n        length\n      },\n      skipAbsent: true,\n      test(value) {\n        return value.length === this.resolve(length);\n      }\n    });\n  }\n  min(min, message = string.min) {\n    return this.test({\n      message,\n      name: 'min',\n      exclusive: true,\n      params: {\n        min\n      },\n      skipAbsent: true,\n      test(value) {\n        return value.length >= this.resolve(min);\n      }\n    });\n  }\n  max(max, message = string.max) {\n    return this.test({\n      name: 'max',\n      exclusive: true,\n      message,\n      params: {\n        max\n      },\n      skipAbsent: true,\n      test(value) {\n        return value.length <= this.resolve(max);\n      }\n    });\n  }\n  matches(regex, options) {\n    let excludeEmptyString = false;\n    let message;\n    let name;\n    if (options) {\n      if (typeof options === 'object') {\n        ({\n          excludeEmptyString = false,\n          message,\n          name\n        } = options);\n      } else {\n        message = options;\n      }\n    }\n    return this.test({\n      name: name || 'matches',\n      message: message || string.matches,\n      params: {\n        regex\n      },\n      skipAbsent: true,\n      test: value => value === '' && excludeEmptyString || value.search(regex) !== -1\n    });\n  }\n  email(message = string.email) {\n    return this.matches(rEmail, {\n      name: 'email',\n      message,\n      excludeEmptyString: true\n    });\n  }\n  url(message = string.url) {\n    return this.matches(rUrl, {\n      name: 'url',\n      message,\n      excludeEmptyString: true\n    });\n  }\n  uuid(message = string.uuid) {\n    return this.matches(rUUID, {\n      name: 'uuid',\n      message,\n      excludeEmptyString: false\n    });\n  }\n  datetime(options) {\n    let message = '';\n    let allowOffset;\n    let precision;\n    if (options) {\n      if (typeof options === 'object') {\n        ({\n          message = '',\n          allowOffset = false,\n          precision = undefined\n        } = options);\n      } else {\n        message = options;\n      }\n    }\n    return this.matches(rIsoDateTime, {\n      name: 'datetime',\n      message: message || string.datetime,\n      excludeEmptyString: true\n    }).test({\n      name: 'datetime_offset',\n      message: message || string.datetime_offset,\n      params: {\n        allowOffset\n      },\n      skipAbsent: true,\n      test: value => {\n        if (!value || allowOffset) return true;\n        const struct = parseDateStruct(value);\n        if (!struct) return false;\n        return !!struct.z;\n      }\n    }).test({\n      name: 'datetime_precision',\n      message: message || string.datetime_precision,\n      params: {\n        precision\n      },\n      skipAbsent: true,\n      test: value => {\n        if (!value || precision == undefined) return true;\n        const struct = parseDateStruct(value);\n        if (!struct) return false;\n        return struct.precision === precision;\n      }\n    });\n  }\n\n  //-- transforms --\n  ensure() {\n    return this.default('').transform(val => val === null ? '' : val);\n  }\n  trim(message = string.trim) {\n    return this.transform(val => val != null ? val.trim() : val).test({\n      message,\n      name: 'trim',\n      test: isTrimmed\n    });\n  }\n  lowercase(message = string.lowercase) {\n    return this.transform(value => !isAbsent(value) ? value.toLowerCase() : value).test({\n      message,\n      name: 'string_case',\n      exclusive: true,\n      skipAbsent: true,\n      test: value => isAbsent(value) || value === value.toLowerCase()\n    });\n  }\n  uppercase(message = string.uppercase) {\n    return this.transform(value => !isAbsent(value) ? value.toUpperCase() : value).test({\n      message,\n      name: 'string_case',\n      exclusive: true,\n      skipAbsent: true,\n      test: value => isAbsent(value) || value === value.toUpperCase()\n    });\n  }\n}\ncreate$6.prototype = StringSchema.prototype;\n\n//\n// String Interfaces\n//\n\nlet isNaN$1 = value => value != +value;\nfunction create$5() {\n  return new NumberSchema();\n}\nclass NumberSchema extends Schema {\n  constructor() {\n    super({\n      type: 'number',\n      check(value) {\n        if (value instanceof Number) value = value.valueOf();\n        return typeof value === 'number' && !isNaN$1(value);\n      }\n    });\n    this.withMutation(() => {\n      this.transform((value, _raw, ctx) => {\n        if (!ctx.spec.coerce) return value;\n        let parsed = value;\n        if (typeof parsed === 'string') {\n          parsed = parsed.replace(/\\s/g, '');\n          if (parsed === '') return NaN;\n          // don't use parseFloat to avoid positives on alpha-numeric strings\n          parsed = +parsed;\n        }\n\n        // null -> NaN isn't useful; treat all nulls as null and let it fail on\n        // nullability check vs TypeErrors\n        if (ctx.isType(parsed) || parsed === null) return parsed;\n        return parseFloat(parsed);\n      });\n    });\n  }\n  min(min, message = number.min) {\n    return this.test({\n      message,\n      name: 'min',\n      exclusive: true,\n      params: {\n        min\n      },\n      skipAbsent: true,\n      test(value) {\n        return value >= this.resolve(min);\n      }\n    });\n  }\n  max(max, message = number.max) {\n    return this.test({\n      message,\n      name: 'max',\n      exclusive: true,\n      params: {\n        max\n      },\n      skipAbsent: true,\n      test(value) {\n        return value <= this.resolve(max);\n      }\n    });\n  }\n  lessThan(less, message = number.lessThan) {\n    return this.test({\n      message,\n      name: 'max',\n      exclusive: true,\n      params: {\n        less\n      },\n      skipAbsent: true,\n      test(value) {\n        return value < this.resolve(less);\n      }\n    });\n  }\n  moreThan(more, message = number.moreThan) {\n    return this.test({\n      message,\n      name: 'min',\n      exclusive: true,\n      params: {\n        more\n      },\n      skipAbsent: true,\n      test(value) {\n        return value > this.resolve(more);\n      }\n    });\n  }\n  positive(msg = number.positive) {\n    return this.moreThan(0, msg);\n  }\n  negative(msg = number.negative) {\n    return this.lessThan(0, msg);\n  }\n  integer(message = number.integer) {\n    return this.test({\n      name: 'integer',\n      message,\n      skipAbsent: true,\n      test: val => Number.isInteger(val)\n    });\n  }\n  truncate() {\n    return this.transform(value => !isAbsent(value) ? value | 0 : value);\n  }\n  round(method) {\n    var _method;\n    let avail = ['ceil', 'floor', 'round', 'trunc'];\n    method = ((_method = method) == null ? void 0 : _method.toLowerCase()) || 'round';\n\n    // this exists for symemtry with the new Math.trunc\n    if (method === 'trunc') return this.truncate();\n    if (avail.indexOf(method.toLowerCase()) === -1) throw new TypeError('Only valid options for round() are: ' + avail.join(', '));\n    return this.transform(value => !isAbsent(value) ? Math[method](value) : value);\n  }\n}\ncreate$5.prototype = NumberSchema.prototype;\n\n//\n// Number Interfaces\n//\n\nlet invalidDate = new Date('');\nlet isDate = obj => Object.prototype.toString.call(obj) === '[object Date]';\nfunction create$4() {\n  return new DateSchema();\n}\nclass DateSchema extends Schema {\n  constructor() {\n    super({\n      type: 'date',\n      check(v) {\n        return isDate(v) && !isNaN(v.getTime());\n      }\n    });\n    this.withMutation(() => {\n      this.transform((value, _raw, ctx) => {\n        // null -> InvalidDate isn't useful; treat all nulls as null and let it fail on\n        // nullability check vs TypeErrors\n        if (!ctx.spec.coerce || ctx.isType(value) || value === null) return value;\n        value = parseIsoDate(value);\n\n        // 0 is a valid timestamp equivalent to 1970-01-01T00:00:00Z(unix epoch) or before.\n        return !isNaN(value) ? new Date(value) : DateSchema.INVALID_DATE;\n      });\n    });\n  }\n  prepareParam(ref, name) {\n    let param;\n    if (!Reference.isRef(ref)) {\n      let cast = this.cast(ref);\n      if (!this._typeCheck(cast)) throw new TypeError(`\\`${name}\\` must be a Date or a value that can be \\`cast()\\` to a Date`);\n      param = cast;\n    } else {\n      param = ref;\n    }\n    return param;\n  }\n  min(min, message = date.min) {\n    let limit = this.prepareParam(min, 'min');\n    return this.test({\n      message,\n      name: 'min',\n      exclusive: true,\n      params: {\n        min\n      },\n      skipAbsent: true,\n      test(value) {\n        return value >= this.resolve(limit);\n      }\n    });\n  }\n  max(max, message = date.max) {\n    let limit = this.prepareParam(max, 'max');\n    return this.test({\n      message,\n      name: 'max',\n      exclusive: true,\n      params: {\n        max\n      },\n      skipAbsent: true,\n      test(value) {\n        return value <= this.resolve(limit);\n      }\n    });\n  }\n}\nDateSchema.INVALID_DATE = invalidDate;\ncreate$4.prototype = DateSchema.prototype;\ncreate$4.INVALID_DATE = invalidDate;\n\n// @ts-expect-error\nfunction sortFields(fields, excludedEdges = []) {\n  let edges = [];\n  let nodes = new Set();\n  let excludes = new Set(excludedEdges.map(([a, b]) => `${a}-${b}`));\n  function addNode(depPath, key) {\n    let node = split(depPath)[0];\n    nodes.add(node);\n    if (!excludes.has(`${key}-${node}`)) edges.push([key, node]);\n  }\n  for (const key of Object.keys(fields)) {\n    let value = fields[key];\n    nodes.add(key);\n    if (Reference.isRef(value) && value.isSibling) addNode(value.path, key);else if (isSchema(value) && 'deps' in value) value.deps.forEach(path => addNode(path, key));\n  }\n  return toposort.array(Array.from(nodes), edges).reverse();\n}\n\nfunction findIndex(arr, err) {\n  let idx = Infinity;\n  arr.some((key, ii) => {\n    var _err$path;\n    if ((_err$path = err.path) != null && _err$path.includes(key)) {\n      idx = ii;\n      return true;\n    }\n  });\n  return idx;\n}\nfunction sortByKeyOrder(keys) {\n  return (a, b) => {\n    return findIndex(keys, a) - findIndex(keys, b);\n  };\n}\n\nconst parseJson = (value, _, ctx) => {\n  if (typeof value !== 'string') {\n    return value;\n  }\n  let parsed = value;\n  try {\n    parsed = JSON.parse(value);\n  } catch (err) {\n    /* */\n  }\n  return ctx.isType(parsed) ? parsed : value;\n};\n\n// @ts-ignore\nfunction deepPartial(schema) {\n  if ('fields' in schema) {\n    const partial = {};\n    for (const [key, fieldSchema] of Object.entries(schema.fields)) {\n      partial[key] = deepPartial(fieldSchema);\n    }\n    return schema.setFields(partial);\n  }\n  if (schema.type === 'array') {\n    const nextArray = schema.optional();\n    if (nextArray.innerType) nextArray.innerType = deepPartial(nextArray.innerType);\n    return nextArray;\n  }\n  if (schema.type === 'tuple') {\n    return schema.optional().clone({\n      types: schema.spec.types.map(deepPartial)\n    });\n  }\n  if ('optional' in schema) {\n    return schema.optional();\n  }\n  return schema;\n}\nconst deepHas = (obj, p) => {\n  const path = [...normalizePath(p)];\n  if (path.length === 1) return path[0] in obj;\n  let last = path.pop();\n  let parent = getter(join(path), true)(obj);\n  return !!(parent && last in parent);\n};\nlet isObject = obj => Object.prototype.toString.call(obj) === '[object Object]';\nfunction unknown(ctx, value) {\n  let known = Object.keys(ctx.fields);\n  return Object.keys(value).filter(key => known.indexOf(key) === -1);\n}\nconst defaultSort = sortByKeyOrder([]);\nfunction create$3(spec) {\n  return new ObjectSchema(spec);\n}\nclass ObjectSchema extends Schema {\n  constructor(spec) {\n    super({\n      type: 'object',\n      check(value) {\n        return isObject(value) || typeof value === 'function';\n      }\n    });\n    this.fields = Object.create(null);\n    this._sortErrors = defaultSort;\n    this._nodes = [];\n    this._excludedEdges = [];\n    this.withMutation(() => {\n      if (spec) {\n        this.shape(spec);\n      }\n    });\n  }\n  _cast(_value, options = {}) {\n    var _options$stripUnknown;\n    let value = super._cast(_value, options);\n\n    //should ignore nulls here\n    if (value === undefined) return this.getDefault(options);\n    if (!this._typeCheck(value)) return value;\n    let fields = this.fields;\n    let strip = (_options$stripUnknown = options.stripUnknown) != null ? _options$stripUnknown : this.spec.noUnknown;\n    let props = [].concat(this._nodes, Object.keys(value).filter(v => !this._nodes.includes(v)));\n    let intermediateValue = {}; // is filled during the transform below\n    let innerOptions = Object.assign({}, options, {\n      parent: intermediateValue,\n      __validating: options.__validating || false\n    });\n    let isChanged = false;\n    for (const prop of props) {\n      let field = fields[prop];\n      let exists = (prop in value);\n      if (field) {\n        let fieldValue;\n        let inputValue = value[prop];\n\n        // safe to mutate since this is fired in sequence\n        innerOptions.path = (options.path ? `${options.path}.` : '') + prop;\n        field = field.resolve({\n          value: inputValue,\n          context: options.context,\n          parent: intermediateValue\n        });\n        let fieldSpec = field instanceof Schema ? field.spec : undefined;\n        let strict = fieldSpec == null ? void 0 : fieldSpec.strict;\n        if (fieldSpec != null && fieldSpec.strip) {\n          isChanged = isChanged || prop in value;\n          continue;\n        }\n        fieldValue = !options.__validating || !strict ?\n        // TODO: use _cast, this is double resolving\n        field.cast(value[prop], innerOptions) : value[prop];\n        if (fieldValue !== undefined) {\n          intermediateValue[prop] = fieldValue;\n        }\n      } else if (exists && !strip) {\n        intermediateValue[prop] = value[prop];\n      }\n      if (exists !== prop in intermediateValue || intermediateValue[prop] !== value[prop]) {\n        isChanged = true;\n      }\n    }\n    return isChanged ? intermediateValue : value;\n  }\n  _validate(_value, options = {}, panic, next) {\n    let {\n      from = [],\n      originalValue = _value,\n      recursive = this.spec.recursive\n    } = options;\n    options.from = [{\n      schema: this,\n      value: originalValue\n    }, ...from];\n    // this flag is needed for handling `strict` correctly in the context of\n    // validation vs just casting. e.g strict() on a field is only used when validating\n    options.__validating = true;\n    options.originalValue = originalValue;\n    super._validate(_value, options, panic, (objectErrors, value) => {\n      if (!recursive || !isObject(value)) {\n        next(objectErrors, value);\n        return;\n      }\n      originalValue = originalValue || value;\n      let tests = [];\n      for (let key of this._nodes) {\n        let field = this.fields[key];\n        if (!field || Reference.isRef(field)) {\n          continue;\n        }\n        tests.push(field.asNestedTest({\n          options,\n          key,\n          parent: value,\n          parentPath: options.path,\n          originalParent: originalValue\n        }));\n      }\n      this.runTests({\n        tests,\n        value,\n        originalValue,\n        options\n      }, panic, fieldErrors => {\n        next(fieldErrors.sort(this._sortErrors).concat(objectErrors), value);\n      });\n    });\n  }\n  clone(spec) {\n    const next = super.clone(spec);\n    next.fields = Object.assign({}, this.fields);\n    next._nodes = this._nodes;\n    next._excludedEdges = this._excludedEdges;\n    next._sortErrors = this._sortErrors;\n    return next;\n  }\n  concat(schema) {\n    let next = super.concat(schema);\n    let nextFields = next.fields;\n    for (let [field, schemaOrRef] of Object.entries(this.fields)) {\n      const target = nextFields[field];\n      nextFields[field] = target === undefined ? schemaOrRef : target;\n    }\n    return next.withMutation(s =>\n    // XXX: excludes here is wrong\n    s.setFields(nextFields, [...this._excludedEdges, ...schema._excludedEdges]));\n  }\n  _getDefault(options) {\n    if ('default' in this.spec) {\n      return super._getDefault(options);\n    }\n\n    // if there is no default set invent one\n    if (!this._nodes.length) {\n      return undefined;\n    }\n    let dft = {};\n    this._nodes.forEach(key => {\n      var _innerOptions;\n      const field = this.fields[key];\n      let innerOptions = options;\n      if ((_innerOptions = innerOptions) != null && _innerOptions.value) {\n        innerOptions = Object.assign({}, innerOptions, {\n          parent: innerOptions.value,\n          value: innerOptions.value[key]\n        });\n      }\n      dft[key] = field && 'getDefault' in field ? field.getDefault(innerOptions) : undefined;\n    });\n    return dft;\n  }\n  setFields(shape, excludedEdges) {\n    let next = this.clone();\n    next.fields = shape;\n    next._nodes = sortFields(shape, excludedEdges);\n    next._sortErrors = sortByKeyOrder(Object.keys(shape));\n    // XXX: this carries over edges which may not be what you want\n    if (excludedEdges) next._excludedEdges = excludedEdges;\n    return next;\n  }\n  shape(additions, excludes = []) {\n    return this.clone().withMutation(next => {\n      let edges = next._excludedEdges;\n      if (excludes.length) {\n        if (!Array.isArray(excludes[0])) excludes = [excludes];\n        edges = [...next._excludedEdges, ...excludes];\n      }\n\n      // XXX: excludes here is wrong\n      return next.setFields(Object.assign(next.fields, additions), edges);\n    });\n  }\n  partial() {\n    const partial = {};\n    for (const [key, schema] of Object.entries(this.fields)) {\n      partial[key] = 'optional' in schema && schema.optional instanceof Function ? schema.optional() : schema;\n    }\n    return this.setFields(partial);\n  }\n  deepPartial() {\n    const next = deepPartial(this);\n    return next;\n  }\n  pick(keys) {\n    const picked = {};\n    for (const key of keys) {\n      if (this.fields[key]) picked[key] = this.fields[key];\n    }\n    return this.setFields(picked, this._excludedEdges.filter(([a, b]) => keys.includes(a) && keys.includes(b)));\n  }\n  omit(keys) {\n    const remaining = [];\n    for (const key of Object.keys(this.fields)) {\n      if (keys.includes(key)) continue;\n      remaining.push(key);\n    }\n    return this.pick(remaining);\n  }\n  from(from, to, alias) {\n    let fromGetter = getter(from, true);\n    return this.transform(obj => {\n      if (!obj) return obj;\n      let newObj = obj;\n      if (deepHas(obj, from)) {\n        newObj = Object.assign({}, obj);\n        if (!alias) delete newObj[from];\n        newObj[to] = fromGetter(obj);\n      }\n      return newObj;\n    });\n  }\n\n  /** Parse an input JSON string to an object */\n  json() {\n    return this.transform(parseJson);\n  }\n\n  /**\n   * Similar to `noUnknown` but only validates that an object is the right shape without stripping the unknown keys\n   */\n  exact(message) {\n    return this.test({\n      name: 'exact',\n      exclusive: true,\n      message: message || object.exact,\n      test(value) {\n        if (value == null) return true;\n        const unknownKeys = unknown(this.schema, value);\n        return unknownKeys.length === 0 || this.createError({\n          params: {\n            properties: unknownKeys.join(', ')\n          }\n        });\n      }\n    });\n  }\n  stripUnknown() {\n    return this.clone({\n      noUnknown: true\n    });\n  }\n  noUnknown(noAllow = true, message = object.noUnknown) {\n    if (typeof noAllow !== 'boolean') {\n      message = noAllow;\n      noAllow = true;\n    }\n    let next = this.test({\n      name: 'noUnknown',\n      exclusive: true,\n      message: message,\n      test(value) {\n        if (value == null) return true;\n        const unknownKeys = unknown(this.schema, value);\n        return !noAllow || unknownKeys.length === 0 || this.createError({\n          params: {\n            unknown: unknownKeys.join(', ')\n          }\n        });\n      }\n    });\n    next.spec.noUnknown = noAllow;\n    return next;\n  }\n  unknown(allow = true, message = object.noUnknown) {\n    return this.noUnknown(!allow, message);\n  }\n  transformKeys(fn) {\n    return this.transform(obj => {\n      if (!obj) return obj;\n      const result = {};\n      for (const key of Object.keys(obj)) result[fn(key)] = obj[key];\n      return result;\n    });\n  }\n  camelCase() {\n    return this.transformKeys(camelCase);\n  }\n  snakeCase() {\n    return this.transformKeys(snakeCase);\n  }\n  constantCase() {\n    return this.transformKeys(key => snakeCase(key).toUpperCase());\n  }\n  describe(options) {\n    const next = (options ? this.resolve(options) : this).clone();\n    const base = super.describe(options);\n    base.fields = {};\n    for (const [key, value] of Object.entries(next.fields)) {\n      var _innerOptions2;\n      let innerOptions = options;\n      if ((_innerOptions2 = innerOptions) != null && _innerOptions2.value) {\n        innerOptions = Object.assign({}, innerOptions, {\n          parent: innerOptions.value,\n          value: innerOptions.value[key]\n        });\n      }\n      base.fields[key] = value.describe(innerOptions);\n    }\n    return base;\n  }\n}\ncreate$3.prototype = ObjectSchema.prototype;\n\nfunction create$2(type) {\n  return new ArraySchema(type);\n}\nclass ArraySchema extends Schema {\n  constructor(type) {\n    super({\n      type: 'array',\n      spec: {\n        types: type\n      },\n      check(v) {\n        return Array.isArray(v);\n      }\n    });\n\n    // `undefined` specifically means uninitialized, as opposed to \"no subtype\"\n    this.innerType = void 0;\n    this.innerType = type;\n  }\n  _cast(_value, _opts) {\n    const value = super._cast(_value, _opts);\n\n    // should ignore nulls here\n    if (!this._typeCheck(value) || !this.innerType) {\n      return value;\n    }\n    let isChanged = false;\n    const castArray = value.map((v, idx) => {\n      const castElement = this.innerType.cast(v, Object.assign({}, _opts, {\n        path: `${_opts.path || ''}[${idx}]`\n      }));\n      if (castElement !== v) {\n        isChanged = true;\n      }\n      return castElement;\n    });\n    return isChanged ? castArray : value;\n  }\n  _validate(_value, options = {}, panic, next) {\n    var _options$recursive;\n    // let sync = options.sync;\n    // let path = options.path;\n    let innerType = this.innerType;\n    // let endEarly = options.abortEarly ?? this.spec.abortEarly;\n    let recursive = (_options$recursive = options.recursive) != null ? _options$recursive : this.spec.recursive;\n    options.originalValue != null ? options.originalValue : _value;\n    super._validate(_value, options, panic, (arrayErrors, value) => {\n      var _options$originalValu2;\n      if (!recursive || !innerType || !this._typeCheck(value)) {\n        next(arrayErrors, value);\n        return;\n      }\n\n      // #950 Ensure that sparse array empty slots are validated\n      let tests = new Array(value.length);\n      for (let index = 0; index < value.length; index++) {\n        var _options$originalValu;\n        tests[index] = innerType.asNestedTest({\n          options,\n          index,\n          parent: value,\n          parentPath: options.path,\n          originalParent: (_options$originalValu = options.originalValue) != null ? _options$originalValu : _value\n        });\n      }\n      this.runTests({\n        value,\n        tests,\n        originalValue: (_options$originalValu2 = options.originalValue) != null ? _options$originalValu2 : _value,\n        options\n      }, panic, innerTypeErrors => next(innerTypeErrors.concat(arrayErrors), value));\n    });\n  }\n  clone(spec) {\n    const next = super.clone(spec);\n    // @ts-expect-error readonly\n    next.innerType = this.innerType;\n    return next;\n  }\n\n  /** Parse an input JSON string to an object */\n  json() {\n    return this.transform(parseJson);\n  }\n  concat(schema) {\n    let next = super.concat(schema);\n\n    // @ts-expect-error readonly\n    next.innerType = this.innerType;\n    if (schema.innerType)\n      // @ts-expect-error readonly\n      next.innerType = next.innerType ?\n      // @ts-expect-error Lazy doesn't have concat and will break\n      next.innerType.concat(schema.innerType) : schema.innerType;\n    return next;\n  }\n  of(schema) {\n    // FIXME: this should return a new instance of array without the default to be\n    let next = this.clone();\n    if (!isSchema(schema)) throw new TypeError('`array.of()` sub-schema must be a valid yup schema not: ' + printValue(schema));\n\n    // @ts-expect-error readonly\n    next.innerType = schema;\n    next.spec = Object.assign({}, next.spec, {\n      types: schema\n    });\n    return next;\n  }\n  length(length, message = array.length) {\n    return this.test({\n      message,\n      name: 'length',\n      exclusive: true,\n      params: {\n        length\n      },\n      skipAbsent: true,\n      test(value) {\n        return value.length === this.resolve(length);\n      }\n    });\n  }\n  min(min, message) {\n    message = message || array.min;\n    return this.test({\n      message,\n      name: 'min',\n      exclusive: true,\n      params: {\n        min\n      },\n      skipAbsent: true,\n      // FIXME(ts): Array<typeof T>\n      test(value) {\n        return value.length >= this.resolve(min);\n      }\n    });\n  }\n  max(max, message) {\n    message = message || array.max;\n    return this.test({\n      message,\n      name: 'max',\n      exclusive: true,\n      params: {\n        max\n      },\n      skipAbsent: true,\n      test(value) {\n        return value.length <= this.resolve(max);\n      }\n    });\n  }\n  ensure() {\n    return this.default(() => []).transform((val, original) => {\n      // We don't want to return `null` for nullable schema\n      if (this._typeCheck(val)) return val;\n      return original == null ? [] : [].concat(original);\n    });\n  }\n  compact(rejector) {\n    let reject = !rejector ? v => !!v : (v, i, a) => !rejector(v, i, a);\n    return this.transform(values => values != null ? values.filter(reject) : values);\n  }\n  describe(options) {\n    const next = (options ? this.resolve(options) : this).clone();\n    const base = super.describe(options);\n    if (next.innerType) {\n      var _innerOptions;\n      let innerOptions = options;\n      if ((_innerOptions = innerOptions) != null && _innerOptions.value) {\n        innerOptions = Object.assign({}, innerOptions, {\n          parent: innerOptions.value,\n          value: innerOptions.value[0]\n        });\n      }\n      base.innerType = next.innerType.describe(innerOptions);\n    }\n    return base;\n  }\n}\ncreate$2.prototype = ArraySchema.prototype;\n\n// @ts-ignore\nfunction create$1(schemas) {\n  return new TupleSchema(schemas);\n}\nclass TupleSchema extends Schema {\n  constructor(schemas) {\n    super({\n      type: 'tuple',\n      spec: {\n        types: schemas\n      },\n      check(v) {\n        const types = this.spec.types;\n        return Array.isArray(v) && v.length === types.length;\n      }\n    });\n    this.withMutation(() => {\n      this.typeError(tuple.notType);\n    });\n  }\n  _cast(inputValue, options) {\n    const {\n      types\n    } = this.spec;\n    const value = super._cast(inputValue, options);\n    if (!this._typeCheck(value)) {\n      return value;\n    }\n    let isChanged = false;\n    const castArray = types.map((type, idx) => {\n      const castElement = type.cast(value[idx], Object.assign({}, options, {\n        path: `${options.path || ''}[${idx}]`\n      }));\n      if (castElement !== value[idx]) isChanged = true;\n      return castElement;\n    });\n    return isChanged ? castArray : value;\n  }\n  _validate(_value, options = {}, panic, next) {\n    let itemTypes = this.spec.types;\n    super._validate(_value, options, panic, (tupleErrors, value) => {\n      var _options$originalValu2;\n      // intentionally not respecting recursive\n      if (!this._typeCheck(value)) {\n        next(tupleErrors, value);\n        return;\n      }\n      let tests = [];\n      for (let [index, itemSchema] of itemTypes.entries()) {\n        var _options$originalValu;\n        tests[index] = itemSchema.asNestedTest({\n          options,\n          index,\n          parent: value,\n          parentPath: options.path,\n          originalParent: (_options$originalValu = options.originalValue) != null ? _options$originalValu : _value\n        });\n      }\n      this.runTests({\n        value,\n        tests,\n        originalValue: (_options$originalValu2 = options.originalValue) != null ? _options$originalValu2 : _value,\n        options\n      }, panic, innerTypeErrors => next(innerTypeErrors.concat(tupleErrors), value));\n    });\n  }\n  describe(options) {\n    const next = (options ? this.resolve(options) : this).clone();\n    const base = super.describe(options);\n    base.innerType = next.spec.types.map((schema, index) => {\n      var _innerOptions;\n      let innerOptions = options;\n      if ((_innerOptions = innerOptions) != null && _innerOptions.value) {\n        innerOptions = Object.assign({}, innerOptions, {\n          parent: innerOptions.value,\n          value: innerOptions.value[index]\n        });\n      }\n      return schema.describe(innerOptions);\n    });\n    return base;\n  }\n}\ncreate$1.prototype = TupleSchema.prototype;\n\nfunction create(builder) {\n  return new Lazy(builder);\n}\nfunction catchValidationError(fn) {\n  try {\n    return fn();\n  } catch (err) {\n    if (ValidationError.isError(err)) return Promise.reject(err);\n    throw err;\n  }\n}\nclass Lazy {\n  constructor(builder) {\n    this.type = 'lazy';\n    this.__isYupSchema__ = true;\n    this.spec = void 0;\n    this._resolve = (value, options = {}) => {\n      let schema = this.builder(value, options);\n      if (!isSchema(schema)) throw new TypeError('lazy() functions must return a valid schema');\n      if (this.spec.optional) schema = schema.optional();\n      return schema.resolve(options);\n    };\n    this.builder = builder;\n    this.spec = {\n      meta: undefined,\n      optional: false\n    };\n  }\n  clone(spec) {\n    const next = new Lazy(this.builder);\n    next.spec = Object.assign({}, this.spec, spec);\n    return next;\n  }\n  optionality(optional) {\n    const next = this.clone({\n      optional\n    });\n    return next;\n  }\n  optional() {\n    return this.optionality(true);\n  }\n  resolve(options) {\n    return this._resolve(options.value, options);\n  }\n  cast(value, options) {\n    return this._resolve(value, options).cast(value, options);\n  }\n  asNestedTest(config) {\n    let {\n      key,\n      index,\n      parent,\n      options\n    } = config;\n    let value = parent[index != null ? index : key];\n    return this._resolve(value, Object.assign({}, options, {\n      value,\n      parent\n    })).asNestedTest(config);\n  }\n  validate(value, options) {\n    return catchValidationError(() => this._resolve(value, options).validate(value, options));\n  }\n  validateSync(value, options) {\n    return this._resolve(value, options).validateSync(value, options);\n  }\n  validateAt(path, value, options) {\n    return catchValidationError(() => this._resolve(value, options).validateAt(path, value, options));\n  }\n  validateSyncAt(path, value, options) {\n    return this._resolve(value, options).validateSyncAt(path, value, options);\n  }\n  isValid(value, options) {\n    try {\n      return this._resolve(value, options).isValid(value, options);\n    } catch (err) {\n      if (ValidationError.isError(err)) {\n        return Promise.resolve(false);\n      }\n      throw err;\n    }\n  }\n  isValidSync(value, options) {\n    return this._resolve(value, options).isValidSync(value, options);\n  }\n  describe(options) {\n    return options ? this.resolve(options).describe(options) : {\n      type: 'lazy',\n      meta: this.spec.meta,\n      label: undefined\n    };\n  }\n  meta(...args) {\n    if (args.length === 0) return this.spec.meta;\n    let next = this.clone();\n    next.spec.meta = Object.assign(next.spec.meta || {}, args[0]);\n    return next;\n  }\n}\n\nfunction setLocale(custom) {\n  Object.keys(custom).forEach(type => {\n    // @ts-ignore\n    Object.keys(custom[type]).forEach(method => {\n      // @ts-ignore\n      locale[type][method] = custom[type][method];\n    });\n  });\n}\n\nfunction addMethod(schemaType, name, fn) {\n  if (!schemaType || !isSchema(schemaType.prototype)) throw new TypeError('You must provide a yup schema constructor function');\n  if (typeof name !== 'string') throw new TypeError('A Method name must be provided');\n  if (typeof fn !== 'function') throw new TypeError('Method function must be provided');\n  schemaType.prototype[name] = fn;\n}\n\nexport { ArraySchema, BooleanSchema, DateSchema, Lazy as LazySchema, MixedSchema, NumberSchema, ObjectSchema, Schema, StringSchema, TupleSchema, ValidationError, addMethod, create$2 as array, create$7 as bool, create$7 as boolean, create$4 as date, locale as defaultLocale, getIn, isSchema, create as lazy, create$8 as mixed, create$5 as number, create$3 as object, printValue, reach, create$9 as ref, setLocale, create$6 as string, create$1 as tuple };\n", "/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { Context } from 'hono';\nimport { inject, injectable } from 'inversify';\nimport { controller, httpDelete, httpGet, httpPost } from '../hono-inversify';\nimport { LoggedCheck } from '../middlewares/LoggedCheck';\nimport { IGameGiftService } from '../services/GameGiftService';\nimport { IGameService } from '../services/GameService';\nimport { ILogService } from '../services/LogService';\nimport { IUserService } from '../services/UserService';\n\n@injectable()\n@controller('/gifts')\nexport class GameGifts {\n  constructor(\n    @inject('GameGiftService') private giftService: IGameGiftService,\n    @inject('GameService') private gameService: IGameService,\n    @inject('UserService') private userService: IUserService,\n    @inject('LogService') private logService: ILogService\n  ) {}\n\n  private async createLog(c: Context, action: string, tableName?: string, statusCode?: number, userId?: string, metadata?: object) {\n    try {\n      const clientIP = c.req.header('cf-connecting-ip') ||\n        c.req.header('x-forwarded-for') ||\n        c.req.header('x-real-ip') ||\n        'unknown';\n      await this.logService.createLog({\n        ip_address: clientIP,\n        table_name: tableName,\n        controller: `GameGiftController.${action}`,\n        original_path: c.req.path,\n        http_method: c.req.method,\n        request_body: JSON.stringify(metadata || {}),\n        user_id: userId,\n        status_code: statusCode,\n      });\n    } catch (error) {\n      console.error('Error creating log:', error);\n    }\n  }\n\n  private sendError(c: Context, status: number, message: string, error?: any) {\n    return c.json({ message, error: error ? (error instanceof Error ? error.message : String(error)) : undefined }, status as any);\n  }\n\n  private getUserFromContext(c: Context) {\n    return c.get('user');\n  }\n\n  @httpPost('/:action', LoggedCheck)\n  public async handleGiftActions(c: Context) {\n    const action = c.req.param('action');\n    const user = this.getUserFromContext(c);\n    if (!user) return this.sendError(c, 401, 'Unauthorized');\n    const userId = user.user_id;\n    const body = await c.req.json();\n    try {\n      switch (action) {\n        case 'create': {\n          const { gameId, message } = body;\n          if (!gameId) {\n            await this.createLog(c, 'createGift', 'gifts', 400, userId);\n            return this.sendError(c, 400, 'Game ID is required');\n          }\n          const game = await this.gameService.getGame(gameId);\n          if (!game) {\n            await this.createLog(c, 'createGift', 'gifts', 404, userId);\n            return this.sendError(c, 404, 'Game not found');\n          }\n          const userObj = await this.userService.getUser(userId);\n          if (!userObj) {\n            await this.createLog(c, 'createGift', 'gifts', 404, userId);\n            return this.sendError(c, 404, 'User not found');\n          }\n          if (userObj.balance < game.price) {\n            await this.createLog(c, 'createGift', 'gifts', 400, userId);\n            return this.sendError(c, 400, `Insufficient balance. Required: ${game.price}, Available: ${userObj.balance}`);\n          }\n          if (userId !== game.owner_id) {\n            await this.userService.updateUserBalance(userId, userObj.balance - game.price);\n            const owner = await this.userService.getUser(game.owner_id);\n            if (owner) {\n              await this.userService.updateUserBalance(owner.user_id, owner.balance + game.price * 0.75);\n            }\n          }\n          const gift = await this.giftService.createGift(gameId, userId, message);\n          await this.createLog(c, 'createGift', 'gifts', 201, userId, { giftId: gift.id });\n          return c.json({\n            message: 'Gift created successfully',\n            gift: {\n              id: gift.id,\n              gameId: gift.gameId,\n              giftCode: gift.giftCode,\n              createdAt: gift.createdAt,\n              message: gift.message,\n            },\n          }, 201);\n        }\n        case 'claim': {\n          const { giftCode } = body;\n          if (!giftCode) {\n            await this.createLog(c, 'claimGift', 'gifts', 400, userId);\n            return this.sendError(c, 400, 'Gift code is required');\n          }\n          const gift = await this.giftService.getGift(giftCode);\n          if (!gift) {\n            await this.createLog(c, 'claimGift', 'gifts', 404, userId);\n            return this.sendError(c, 404, 'Invalid gift code');\n          }\n          const userOwnsGame = await this.gameService.userOwnsGame(gift.gameId, userId);\n          if (userOwnsGame) {\n            await this.createLog(c, 'claimGift', 'gifts', 400, userId);\n            return this.sendError(c, 400, 'You already own this game');\n          }\n          const claimedGift = await this.giftService.claimGift(giftCode, userId);\n          await this.gameService.addOwner(gift.gameId, userId);\n          await this.createLog(c, 'claimGift', 'gifts', 200, userId, { giftCode });\n          return c.json({\n            message: 'Gift claimed successfully',\n            gift: claimedGift,\n          });\n        }\n        default:\n          return this.sendError(c, 404, 'Unknown action');\n      }\n    } catch (error) {\n      await this.createLog(c, action, 'gifts', 500, userId);\n      return this.sendError(c, 500, `Error in ${action}`, error);\n    }\n  }\n\n  @httpGet('/sent', LoggedCheck)\n  public async getSentGifts(c: Context) {\n    const user = this.getUserFromContext(c);\n    if (!user) return this.sendError(c, 401, 'Unauthorized');\n    try {\n      const gifts = await this.giftService.getUserSentGifts(user.user_id);\n      const enrichedGifts = await Promise.all(\n        gifts.map(async gift => {\n          const game = await this.gameService.getGameForPublic(gift.gameId);\n          return {\n            ...gift,\n            game,\n          };\n        })\n      );\n      await this.createLog(c, 'getSentGifts', 'gifts', 200, user.user_id);\n      return c.json(enrichedGifts);\n    } catch (error) {\n      await this.createLog(c, 'getSentGifts', 'gifts', 500, user.user_id);\n      return this.sendError(c, 500, 'Error fetching sent gifts', error);\n    }\n  }\n\n  @httpGet('/received', LoggedCheck)\n  public async getReceivedGifts(c: Context) {\n    const user = this.getUserFromContext(c);\n    if (!user) return this.sendError(c, 401, 'Unauthorized');\n    try {\n      const gifts = await this.giftService.getUserReceivedGifts(user.user_id);\n      const enrichedGifts = await Promise.all(\n        gifts.map(async gift => {\n          const game = await this.gameService.getGameForPublic(gift.gameId);\n          const fromUser = await this.userService.getUser(gift.fromUserId);\n          return {\n            ...gift,\n            game,\n            fromUser: fromUser ? { id: fromUser.user_id, username: fromUser.username } : null,\n          };\n        })\n      );\n      await this.createLog(c, 'getReceivedGifts', 'gifts', 200, user.user_id);\n      return c.json(enrichedGifts);\n    } catch (error) {\n      await this.createLog(c, 'getReceivedGifts', 'gifts', 500, user.user_id);\n      return this.sendError(c, 500, 'Error fetching received gifts', error);\n    }\n  }\n\n  @httpGet('/:giftCode', LoggedCheck)\n  public async getGiftInfo(c: Context) {\n    const user = this.getUserFromContext(c);\n    if (!user) return this.sendError(c, 401, 'Unauthorized');\n    const giftCode = c.req.param('giftCode');\n    try {\n      const gift = await this.giftService.getGift(giftCode);\n      if (!gift) {\n        await this.createLog(c, 'getGiftInfo', 'gifts', 404, user.user_id);\n        return this.sendError(c, 404, 'Gift not found');\n      }\n      const game = await this.gameService.getGameForPublic(gift.gameId);\n      const fromUser = await this.userService.getUser(gift.fromUserId);\n      const userOwnsGame = await this.gameService.userOwnsGame(gift.gameId, user.user_id);\n      await this.createLog(c, 'getGiftInfo', 'gifts', 200, user.user_id);\n      return c.json({\n        gift: {\n          gameId: gift.gameId,\n          giftCode: gift.giftCode,\n          createdAt: gift.createdAt,\n          claimedAt: gift.claimedAt,\n          isActive: gift.isActive,\n          message: gift.message,\n        },\n        game,\n        fromUser: fromUser ? { id: fromUser.user_id, username: fromUser.username } : null,\n        userOwnsGame,\n      });\n    } catch (error) {\n      await this.createLog(c, 'getGiftInfo', 'gifts', 500, user.user_id);\n      return this.sendError(c, 500, 'Error fetching gift info', error);\n    }\n  }\n\n  @httpDelete('/:giftId', LoggedCheck)\n  public async revokeGift(c: Context) {\n    const user = this.getUserFromContext(c);\n    if (!user) return this.sendError(c, 401, 'Unauthorized');\n    const giftId = c.req.param('giftId');\n    const userId = user.user_id;\n    try {\n      const gifts = await this.giftService.getUserSentGifts(userId);\n      const gift = gifts.find(g => g.id === giftId);\n      if (!gift) {\n        await this.createLog(c, 'revokeGift', 'gifts', 404, userId);\n        return this.sendError(c, 404, 'Gift not found');\n      }\n      if (!gift.isActive) {\n        await this.createLog(c, 'revokeGift', 'gifts', 400, userId);\n        return this.sendError(c, 400, 'Gift is no longer active');\n      }\n      await this.giftService.revokeGift(giftId, userId);\n      const game = await this.gameService.getGame(gift.gameId);\n      if (game) {\n        const userObj = await this.userService.getUser(userId);\n        if (userObj) {\n          await this.userService.updateUserBalance(userId, userObj.balance + game.price);\n        }\n        const owner = await this.userService.getUser(game.owner_id);\n        if (owner) {\n          await this.userService.updateUserBalance(owner.user_id, owner.balance - game.price * 0.75);\n        }\n      }\n      await this.createLog(c, 'revokeGift', 'gifts', 200, userId);\n      return c.json({ message: 'Gift revoked successfully and refund processed' });\n    } catch (error) {\n      await this.createLog(c, 'revokeGift', 'gifts', 400, userId);\n      return this.sendError(c, 400, 'Error revoking gift', error);\n    }\n  }\n}\n", "/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { Context } from 'hono';\nimport { inject, injectable } from 'inversify';\nimport { controller, httpGet } from '../hono-inversify';\nimport { LoggedCheck } from '../middlewares/LoggedCheck';\nimport { IInventoryService } from '../services/InventoryService';\nimport { ILogService } from '../services/LogService';\n\n@injectable()\n@controller('/inventory')\nexport class Inventories {\n  constructor(\n    @inject('InventoryService') private inventoryService: IInventoryService,\n    @inject('LogService') private logService: ILogService\n  ) {}\n\n  private async createLog(c: Context, action: string, tableName?: string, statusCode?: number, userId?: string, metadata?: object) {\n    try {\n      const clientIP = c.req.header('cf-connecting-ip') ||\n        c.req.header('x-forwarded-for') ||\n        c.req.header('x-real-ip') ||\n        'unknown';\n      await this.logService.createLog({\n        ip_address: clientIP,\n        table_name: tableName,\n        controller: `InventoryController.${action}`,\n        original_path: c.req.path,\n        http_method: c.req.method,\n        request_body: JSON.stringify(metadata || {}),\n        user_id: userId,\n        status_code: statusCode,\n      });\n    } catch (error) {\n      console.error('Error creating log:', error);\n    }\n  }\n\n  private sendError(c: Context, status: number, message: string, error?: any) {\n    return c.json({ message, error: error ? (error instanceof Error ? error.message : String(error)) : undefined }, status as any);\n  }\n\n  private getUserFromContext(c: Context) {\n    return c.get('user');\n  }\n\n  @httpGet('/@me', LoggedCheck)\n  public async getMyInventory(c: Context) {\n    const user = this.getUserFromContext(c);\n    if (!user) {\n      await this.createLog(c, 'getMyInventory', 'inventory', 401);\n      return this.sendError(c, 401, 'Unauthorized');\n    }\n    try {\n      const inventory = await this.inventoryService.getInventory(user.user_id);\n      await this.createLog(c, 'getMyInventory', 'inventory', 200, user.user_id);\n      return c.json(inventory);\n    } catch (error) {\n      await this.createLog(c, 'getMyInventory', 'inventory', 500, user.user_id);\n      return this.sendError(c, 500, 'Error fetching inventory', error);\n    }\n  }\n\n  @httpGet('/:userId')\n  public async getInventory(c: Context) {\n    const userId = c.req.param('userId');\n    // Optionally validate userId here if needed\n    try {\n      const inventory = await this.inventoryService.getInventory(userId);\n      await this.createLog(c, 'getInventory', 'inventory', 200, userId);\n      return c.json(inventory);\n    } catch (error) {\n      await this.createLog(c, 'getInventory', 'inventory', 500, userId);\n      return this.sendError(c, 500, 'Error fetching inventory', error);\n    }\n  }\n\n  @httpGet('/:userId/item/:itemId/amount')\n  public async getItemAmount(c: Context) {\n    const userId = c.req.param('userId');\n    const itemId = c.req.param('itemId');\n    try {\n      const correctedUserId = await this.inventoryService.getCorrectedUserId(userId);\n      const repo = this.inventoryService.getInventoryRepository();\n      const amount = await repo.getItemAmount(correctedUserId, itemId);\n      return c.json({ userId, itemId, amount });\n    } catch (error) {\n      return this.sendError(c, 500, 'Error fetching item amount', error);\n    }\n  }\n\n  @httpGet('/')\n  public async getAllInventories(c: Context) {\n    await this.createLog(c, 'getAllInventories', 'inventory', 400);\n    return c.json({ message: 'Please specify /api/inventory/<userId>' });\n  }\n}\n", "\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { Context } from 'hono';\nimport { inject, injectable } from 'inversify';\nimport { v4 } from 'uuid';\nimport { controller, httpDelete, httpGet, httpPost, httpPut } from '../hono-inversify';\nimport { LoggedCheck } from '../middlewares/LoggedCheck';\nimport { OwnerCheck } from '../middlewares/OwnerCheck';\nimport { createRateLimit } from '../middlewares/hono/rateLimit';\nimport { IInventoryService } from '../services/InventoryService';\nimport { IItemService } from '../services/ItemService';\nimport { ILogService } from '../services/LogService';\nimport { IUserService } from '../services/UserService';\n\nconst createItemRateLimit = createRateLimit({ windowMs: 60 * 60 * 1000, max: 50, message: 'Too many item creations, please try again later.' });\nconst updateItemRateLimit = createRateLimit({ windowMs: 60 * 60 * 1000, max: 100, message: 'Too many item updates, please try again later.' });\nconst deleteItemRateLimit = createRateLimit({ windowMs: 60 * 60 * 1000, max: 50, message: 'Too many item deletions, please try again later.' });\nconst buyItemRateLimit = createRateLimit({ windowMs: 60 * 60 * 1000, max: 200, message: 'Too many item purchases, please try again later.' });\nconst sellItemRateLimit = createRateLimit({ windowMs: 60 * 60 * 1000, max: 200, message: 'Too many item sales, please try again later.' });\n// const consumeItemRateLimit = createRateLimit({ windowMs: 60 * 60 * 1000, max: 1000, message: 'Too many item consumptions, please try again later.' });\nconst dropItemRateLimit = createRateLimit({ windowMs: 60 * 60 * 1000, max: 1000, message: 'Too many item drops, please try again later.' });\nconst transferOwnershipRateLimit = createRateLimit({ windowMs: 60 * 60 * 1000, max: 500, message: 'Too many ownership transfers, please try again later.' });\n\n@injectable()\n@controller('/items')\nexport class Items {\n  constructor(\n    @inject('ItemService') private itemService: IItemService,\n    @inject('InventoryService') private inventoryService: IInventoryService,\n    @inject('UserService') private userService: IUserService,\n    @inject('LogService') private logService: ILogService\n  ) { }\n\n  @httpPost('/giveItem/:itemId', LoggedCheck, OwnerCheck)\n  public async giveItem(c: Context) {\n    const user = this.getUserFromContext(c);\n    if (!user) return this.sendError(c, 401, 'Unauthorized');\n    const itemId = c.req.param('itemId');\n    const { targetUserId, metadata, amount } = await c.req.json();\n    if (!itemId || !targetUserId) {\n      await this.createLog(c, 'giveItem', 'inventory', 400, user.user_id, { reason: 'missing_required_fields', itemId, targetUserId });\n      return this.sendError(c, 400, 'Invalid input: itemId and targetUserId are required');\n    }\n    try {\n      const targetUser = await this.userService.getUser(targetUserId);\n      if (!targetUser) {\n        await this.createLog(c, 'giveItem', 'inventory', 404, user.user_id, { itemId, targetUserId, reason: 'target_user_not_found' });\n        return this.sendError(c, 404, 'Target user not found');\n      }\n      const item = await this.itemService.getItem(itemId);\n      if (!item || item.deleted) {\n        await this.createLog(c, 'giveItem', 'inventory', 404, user.user_id, { itemId, targetUserId });\n        return this.sendError(c, 404, 'Item not found');\n      }\n      const repo = this.inventoryService.getInventoryRepository();\n      const correctedUserId = await this.inventoryService.getCorrectedUserId(targetUser.user_id);\n      await repo.addItem(correctedUserId, itemId, amount, metadata ?? {}, false, undefined, v4);\n      await this.createLog(c, 'giveItem', 'inventory', 200, user.user_id, { itemId, targetUserId, metadata, itemName: item.name });\n      return c.json({ message: 'Item given with metadata' });\n    } catch (error) {\n      await this.createLog(c, 'giveItem', 'inventory', 500, user.user_id, { itemId, targetUserId, metadata, error: error instanceof Error ? error.message : String(error) });\n      return this.sendError(c, 500, 'Error giving item');\n    }\n  }\n\n  private sendError(c: Context, status: number, message: string) {\n    return c.json({ message }, status as any);\n  }\n\n  private async createLog(c: Context, action: string, tableName: string, statusCode?: number, userId?: string, metadata?: object) {\n    try {\n      const clientIP = c.req.header('cf-connecting-ip') ||\n        c.req.header('x-forwarded-for') ||\n        c.req.header('x-real-ip') ||\n        'unknown';\n      await this.logService.createLog({\n        ip_address: clientIP,\n        table_name: tableName,\n        controller: `ItemController.${action}`,\n        original_path: c.req.path,\n        http_method: c.req.method,\n        request_body: JSON.stringify(metadata || {}),\n        user_id: userId,\n        status_code: statusCode,\n      });\n    } catch (error) {\n      console.error('Failed to log action:', error);\n    }\n  }\n\n  private getUserFromContext(c: Context) {\n    return c.get('user');\n  }\n\n  @httpGet('/')\n  public async getAllItems(c: Context) {\n    try {\n      const items = await this.itemService.getStoreItems();\n      await this.createLog(c, 'getAllItems', 'items', 200, undefined, { items_count: items.length });\n      return c.json(items);\n    } catch (error) {\n      await this.createLog(c, 'getAllItems', 'items', 500, undefined, { error: error instanceof Error ? error.message : String(error) });\n      return this.sendError(c, 500, 'Error fetching items');\n    }\n  }\n\n  @httpGet('/@mine', LoggedCheck)\n  public async getMyItems(c: Context) {\n    const user = this.getUserFromContext(c);\n    if (!user) {\n      await this.createLog(c, 'getMyItems', 'items', 401);\n      return this.sendError(c, 401, 'Unauthorized');\n    }\n    try {\n      const items = await this.itemService.getMyItems(user.user_id);\n      await this.createLog(c, 'getMyItems', 'items', 200, user.user_id, { owned_items_count: items.length });\n      return c.json(items);\n    } catch (error) {\n      await this.createLog(c, 'getMyItems', 'items', 500, user.user_id, { error: error instanceof Error ? error.message : String(error) });\n      return this.sendError(c, 500, 'Error fetching your items');\n    }\n  }\n\n  @httpGet('/search')\n  public async searchItems(c: Context) {\n    const query = c.req.query('q')?.trim();\n    if (!query) {\n      await this.createLog(c, 'searchItems', 'items', 400, undefined, { reason: 'missing_search_query' });\n      return this.sendError(c, 400, 'Missing search query');\n    }\n    try {\n      const items = await this.itemService.searchItemsByName(query);\n      await this.createLog(c, 'searchItems', 'items', 200, undefined, { search_query: query, results_count: items.length });\n      return c.json(items);\n    } catch (error) {\n      await this.createLog(c, 'searchItems', 'items', 500, undefined, { search_query: query, error: error instanceof Error ? error.message : String(error) });\n      return this.sendError(c, 500, 'Error searching items');\n    }\n  }\n\n  @httpGet('/:itemId')\n  public async getItem(c: Context) {\n    const itemId = c.req.param('itemId');\n    try {\n      const item = await this.itemService.getItem(itemId);\n      if (!item || item.deleted) {\n        await this.createLog(c, 'getItem', 'items', 404, undefined, { itemId });\n        return this.sendError(c, 404, 'Item not found');\n      }\n      await this.createLog(c, 'getItem', 'items', 200, undefined, { itemId, item_name: item.name, item_price: item.price });\n      return c.json(item);\n    } catch (error) {\n      await this.createLog(c, 'getItem', 'items', 500, undefined, { itemId, error: error instanceof Error ? error.message : String(error) });\n      return this.sendError(c, 500, 'Error fetching item');\n    }\n  }\n\n  @httpPost('/create', LoggedCheck, createItemRateLimit)\n  public async createItem(c: Context) {\n    const user = this.getUserFromContext(c);\n    if (!user) return this.sendError(c, 401, 'Unauthorized');\n    const body = await c.req.json();\n    // TODO: validate body with createItemValidator\n    const itemId = v4();\n    const { name, description, price, iconHash, showInStore } = body;\n    try {\n      await this.itemService.createItem({\n        itemId,\n        name: name ?? null,\n        description: description ?? null,\n        price: price ?? 0,\n        owner: user.user_id,\n        iconHash: iconHash ?? null,\n        showInStore: showInStore ?? false,\n        deleted: false,\n      });\n      await this.createLog(c, 'createItem', 'items', 201, user.user_id, { itemId, item_name: name, item_price: price, show_in_store: showInStore });\n      return c.json({ message: 'Item created' }, 201);\n    } catch (error) {\n      await this.createLog(c, 'createItem', 'items', 500, user.user_id, { item_name: name, error: error instanceof Error ? error.message : String(error) });\n      return this.sendError(c, 500, 'Error creating item');\n    }\n  }\n\n  @httpPut('/update/:itemId', LoggedCheck, OwnerCheck, updateItemRateLimit)\n  public async updateItem(c: Context) {\n    const user = this.getUserFromContext(c);\n    if (!user) return this.sendError(c, 401, 'Unauthorized');\n    const itemId = c.req.param('itemId');\n    const body = await c.req.json();\n    // TODO: validate body with updateItemValidator\n    const { name, description, price, iconHash, showInStore } = body;\n    try {\n      await this.itemService.updateItem(itemId, {\n        ...(name !== undefined && { name }),\n        ...(description !== undefined && { description }),\n        ...(price !== undefined && { price }),\n        ...(iconHash !== undefined && { iconHash }),\n        ...(showInStore !== undefined && { showInStore }),\n      });\n      await this.createLog(c, 'updateItem', 'items', 200, user.user_id, { itemId, updated_fields: body });\n      return c.json({ message: 'Item updated' });\n    } catch (error) {\n      await this.createLog(c, 'updateItem', 'items', 500, user.user_id, { itemId, error: error instanceof Error ? error.message : String(error) });\n      return this.sendError(c, 500, 'Error updating item');\n    }\n  }\n\n  @httpDelete('/delete/:itemId', LoggedCheck, OwnerCheck, deleteItemRateLimit)\n  public async deleteItem(c: Context) {\n    const user = this.getUserFromContext(c);\n    if (!user) return this.sendError(c, 401, 'Unauthorized');\n    const itemId = c.req.param('itemId');\n    try {\n      await this.itemService.deleteItem(itemId);\n      await this.createLog(c, 'deleteItem', 'items', 200, user.user_id, { itemId, action: 'deleted' });\n      return c.json({ message: 'Item deleted' });\n    } catch (error) {\n      await this.createLog(c, 'deleteItem', 'items', 500, user.user_id, { itemId, error: error instanceof Error ? error.message : String(error) });\n      return this.sendError(c, 500, 'Error deleting item');\n    }\n  }\n\n  @httpPost('/buy/:itemId', LoggedCheck, buyItemRateLimit)\n  public async buyItem(c: Context) {\n    const user = this.getUserFromContext(c);\n    if (!user) return this.sendError(c, 401, 'Unauthorized');\n    const itemId = c.req.param('itemId');\n    const { amount } = await c.req.json();\n    if (!itemId || isNaN(amount)) {\n      await this.createLog(c, 'buyItem', 'inventory', 400, user.user_id, { reason: 'invalid_input', itemId, amount });\n      return this.sendError(c, 400, 'Invalid input');\n    }\n    try {\n      const item = await this.itemService.getItem(itemId);\n      if (!item || item.deleted) {\n        await this.createLog(c, 'buyItem', 'inventory', 404, user.user_id, { itemId });\n        return this.sendError(c, 404, 'Item not found');\n      }\n      const owner = await this.userService.getUser(item.owner);\n      if (!owner) {\n        await this.createLog(c, 'buyItem', 'inventory', 404, user.user_id, { itemId, reason: 'owner_not_found' });\n        return this.sendError(c, 404, 'Owner not found');\n      }\n      const totalCost = item.price * amount;\n      const isOwner = user.user_id === item.owner;\n      if (!isOwner && user.balance < totalCost) {\n        await this.createLog(c, 'buyItem', 'inventory', 400, user.user_id, { itemId, reason: 'insufficient_balance', required: totalCost, available: user.balance });\n        return this.sendError(c, 400, 'Insufficient balance');\n      }\n      if (!isOwner) {\n        await this.userService.updateUserBalance(user.user_id, user.balance - totalCost);\n        await this.userService.updateUserBalance(owner.user_id, owner.balance + totalCost * 0.75);\n      }\n      await this.inventoryService.addItem(user.user_id, itemId, amount, undefined, user.user_id != owner.user_id, item.price);\n      await this.createLog(c, 'buyItem', 'inventory', 200, user.user_id, { itemId, amount, totalCost, isOwner, itemName: item.name });\n      return c.json({ message: 'Item bought' });\n    } catch (error) {\n      await this.createLog(c, 'buyItem', 'inventory', 500, user.user_id, { itemId, amount, error: error instanceof Error ? error.message : String(error) });\n      return this.sendError(c, 500, 'Error buying item');\n    }\n  }\n\n  @httpPost('/sell/:itemId', LoggedCheck, sellItemRateLimit)\n  public async sellItem(c: Context) {\n    const user = this.getUserFromContext(c);\n    if (!user) return this.sendError(c, 401, 'Unauthorized');\n    const itemId = c.req.param('itemId');\n    const { amount, purchasePrice, dataItemIndex } = await c.req.json();\n    if (!itemId || isNaN(amount)) {\n      await this.createLog(c, 'sellItem', 'inventory', 400, user.user_id, { reason: 'invalid_input', itemId, amount });\n      return this.sendError(c, 400, 'Invalid input');\n    }\n    try {\n      const item = await this.itemService.getItem(itemId);\n      if (!item || item.deleted) {\n        await this.createLog(c, 'sellItem', 'inventory', 404, user.user_id, { itemId });\n        return this.sendError(c, 404, 'Item not found');\n      }\n      const repo = this.inventoryService.getInventoryRepository();\n      const correctedUserId = await this.inventoryService.getCorrectedUserId(user.user_id);\n      if (purchasePrice !== undefined) {\n        const itemsWithPrice = (await repo.getInventory({ userId: correctedUserId, itemId, sellable: true, purchasePrice })).filter(invItem => invItem.purchasePrice === purchasePrice);\n        const totalAvailable = itemsWithPrice.reduce((sum, item) => sum + item.amount, 0);\n        if (totalAvailable < amount) {\n          await this.createLog(c, 'sellItem', 'inventory', 400, user.user_id, { itemId, reason: 'insufficient_items_with_price', requested: amount, available: totalAvailable, purchasePrice });\n          return this.sendError(c, 400, `Insufficient items with purchase price ${purchasePrice}. You have ${totalAvailable} but requested to sell ${amount}.`);\n        }\n        await repo.removeSellableItemWithPrice(correctedUserId, itemId, amount, purchasePrice, dataItemIndex);\n        const sellValue = purchasePrice * amount * 0.75;\n        const isOwner = user.user_id === item.owner;\n        if (!isOwner) await this.userService.updateUserBalance(user.user_id, user.balance + sellValue);\n        await this.createLog(c, 'sellItem', 'inventory', 200, user.user_id, { itemId, amount, purchasePrice, totalValue: sellValue, isOwner, itemName: item.name });\n        return c.json({ message: 'Item sold', totalValue: Math.round(sellValue), itemsSold: amount });\n      }\n      const items = await repo.getInventory({ userId: correctedUserId, itemId, sellable: true });\n      const totalAvailable = items.filter(i => !i.metadata).reduce((sum, i) => sum + i.amount, 0);\n      if (totalAvailable < amount) {\n        await this.createLog(c, 'sellItem', 'inventory', 400, user.user_id, { itemId, reason: 'insufficient_items', requested: amount, available: totalAvailable });\n        return this.sendError(c, 400, `Insufficient items to sell. You have ${totalAvailable} but requested to sell ${amount}.`);\n      }\n      await repo.removeSellableItem(correctedUserId, itemId, amount);\n      const sellValue = item.price * amount * 0.75;\n      const isOwner = user.user_id === item.owner;\n      if (!isOwner) await this.userService.updateUserBalance(user.user_id, user.balance + sellValue);\n      await this.createLog(c, 'sellItem', 'inventory', 200, user.user_id, { itemId, amount, totalValue: sellValue, isOwner, itemName: item.name });\n      return c.json({ message: 'Item sold', totalValue: Math.round(sellValue), itemsSold: amount });\n    } catch (error) {\n      await this.createLog(c, 'sellItem', 'inventory', 500, user.user_id, { itemId, amount, purchasePrice, error: error instanceof Error ? error.message : String(error) });\n      return this.sendError(c, 500, 'Error selling item');\n    }\n  }\n\n  @httpPost('/consume/:itemId', LoggedCheck, OwnerCheck)\n  public async consumeItem(c: Context) {\n    const user = this.getUserFromContext(c);\n    if (!user) return this.sendError(c, 401, 'Unauthorized');\n    const itemId = c.req.param('itemId');\n    const { amount, uniqueId, userId } = await c.req.json();\n    if (!itemId || !userId) {\n      await this.createLog(c, 'consumeItem', 'inventory', 400, user.user_id, { reason: 'missing_required_fields', itemId, userId });\n      return this.sendError(c, 400, 'Invalid input: itemId and userId are required');\n    }\n    if ((amount && uniqueId) || (!amount && !uniqueId)) {\n      await this.createLog(c, 'consumeItem', 'inventory', 400, user.user_id, { reason: 'invalid_parameters', itemId, userId, hasAmount: !!amount, hasUniqueId: !!uniqueId });\n      return this.sendError(c, 400, \"Invalid input: provide either 'amount' for items without metadata OR 'uniqueId' for items with metadata\");\n    }\n    if (amount && isNaN(amount)) {\n      await this.createLog(c, 'consumeItem', 'inventory', 400, user.user_id, { reason: 'invalid_amount', itemId, userId, amount });\n      return this.sendError(c, 400, 'Invalid input: amount must be a number');\n    }\n    try {\n      const targetUser = await this.userService.getUser(userId);\n      if (!targetUser) {\n        await this.createLog(c, 'consumeItem', 'inventory', 404, user.user_id, { itemId, userId, reason: 'target_user_not_found' });\n        return this.sendError(c, 404, 'Target user not found');\n      }\n      const item = await this.itemService.getItem(itemId);\n      if (!item || item.deleted) {\n        await this.createLog(c, 'consumeItem', 'inventory', 404, user.user_id, { itemId, userId });\n        return this.sendError(c, 404, 'Item not found');\n      }\n      const repo = this.inventoryService.getInventoryRepository();\n      const correctedUserId = await this.inventoryService.getCorrectedUserId(targetUser.user_id);\n      if (uniqueId) {\n        await repo.removeItemByUniqueId(correctedUserId, itemId, uniqueId);\n        await this.createLog(c, 'consumeItem', 'inventory', 200, user.user_id, { itemId, userId, uniqueId, itemName: item.name });\n        return c.json({ message: 'Item with metadata consumed' });\n      } else {\n        const hasEnoughItems = await repo.hasItemWithoutMetadataSellable(correctedUserId, itemId, amount);\n        if (!hasEnoughItems) {\n          await this.createLog(c, 'consumeItem', 'inventory', 400, user.user_id, { itemId, userId, amount, reason: 'insufficient_items' });\n          return this.sendError(c, 400, \"User doesn't have enough items without metadata\");\n        }\n        await repo.removeItem(correctedUserId, itemId, amount);\n        await this.createLog(c, 'consumeItem', 'inventory', 200, user.user_id, { itemId, amount, userId, itemName: item.name });\n        return c.json({ message: 'Items without metadata consumed' });\n      }\n    } catch (error) {\n      await this.createLog(c, 'consumeItem', 'inventory', 500, user.user_id, { itemId, amount, uniqueId, userId, error: error instanceof Error ? error.message : String(error) });\n      return this.sendError(c, 500, 'Error consuming item');\n    }\n  }\n\n  @httpPost('/drop/:itemId', LoggedCheck, dropItemRateLimit)\n  public async dropItem(c: Context) {\n    const user = this.getUserFromContext(c);\n    if (!user) return this.sendError(c, 401, 'Unauthorized');\n    const itemId = c.req.param('itemId');\n    const { amount, uniqueId, dataItemIndex } = await c.req.json();\n    if (!itemId) {\n      await this.createLog(c, 'dropItem', 'inventory', 400, user.user_id, { reason: 'missing_itemId' });\n      return this.sendError(c, 400, 'Invalid input: itemId is required');\n    }\n    if ((amount && uniqueId) || (!amount && !uniqueId)) {\n      await this.createLog(c, 'dropItem', 'inventory', 400, user.user_id, { reason: 'invalid_parameters', itemId, hasAmount: !!amount, hasUniqueId: !!uniqueId });\n      return this.sendError(c, 400, \"Invalid input: provide either 'amount' for items without metadata OR 'uniqueId' for items with metadata\");\n    }\n    if (amount && isNaN(amount)) {\n      await this.createLog(c, 'dropItem', 'inventory', 400, user.user_id, { reason: 'invalid_amount', itemId, amount });\n      return this.sendError(c, 400, 'Invalid input: amount must be a number');\n    }\n    try {\n      const repo = this.inventoryService.getInventoryRepository();\n      const correctedUserId = await this.inventoryService.getCorrectedUserId(user.user_id);\n      if (uniqueId) {\n        await repo.removeItemByUniqueId(correctedUserId, itemId, uniqueId);\n        await this.createLog(c, 'dropItem', 'inventory', 200, user.user_id, { itemId, uniqueId });\n        return c.json({ message: 'Item with metadata dropped' });\n      } else {\n        const hasEnoughItems = await repo.hasItemWithoutMetadata(correctedUserId, itemId, amount);\n        if (!hasEnoughItems) {\n          await this.createLog(c, 'dropItem', 'inventory', 400, user.user_id, { itemId, amount, reason: 'insufficient_items' });\n          return this.sendError(c, 400, \"You don't have enough items without metadata to drop\");\n        }\n        await repo.removeItem(correctedUserId, itemId, amount, dataItemIndex);\n        await this.createLog(c, 'dropItem', 'inventory', 200, user.user_id, { itemId, amount });\n        return c.json({ message: 'Items without metadata dropped' });\n      }\n    } catch (error) {\n      await this.createLog(c, 'dropItem', 'inventory', 500, user.user_id, { itemId, amount, uniqueId, error: error instanceof Error ? error.message : String(error) });\n      return this.sendError(c, 500, 'Error dropping item');\n    }\n  }\n\n\n  @httpPost('/transfer-ownership/:itemId', LoggedCheck, OwnerCheck, transferOwnershipRateLimit)\n  public async transferOwnership(c: Context) {\n    const user = this.getUserFromContext(c);\n    if (!user) return this.sendError(c, 401, 'Unauthorized');\n    const itemId = c.req.param('itemId');\n    const { newOwnerId } = await c.req.json();\n    if (!itemId || !newOwnerId) {\n      await this.createLog(c, 'transferOwnership', 'items', 400, user.user_id, { reason: 'invalid_input', itemId, newOwnerId });\n      return this.sendError(c, 400, 'Invalid input');\n    }\n    try {\n      const item = await this.itemService.getItem(itemId);\n      if (!item || item.deleted) {\n        await this.createLog(c, 'transferOwnership', 'items', 404, user.user_id, { itemId });\n        return this.sendError(c, 404, 'Item not found');\n      }\n      const newOwner = await this.userService.getUser(newOwnerId);\n      if (!newOwner) {\n        await this.createLog(c, 'transferOwnership', 'items', 404, user.user_id, { itemId, newOwnerId, reason: 'new_owner_not_found' });\n        return this.sendError(c, 404, 'New owner not found');\n      }\n      await this.itemService.transferOwnership(itemId, newOwnerId);\n      await this.createLog(c, 'transferOwnership', 'items', 200, user.user_id, { itemId, old_owner: item.owner, new_owner: newOwnerId, new_owner_username: newOwner.username, item_name: item.name });\n      return c.json({ message: 'Ownership transferred' });\n    } catch (error) {\n      await this.createLog(c, 'transferOwnership', 'items', 500, user.user_id, { itemId, newOwnerId, error: error instanceof Error ? error.message : String(error) });\n      return this.sendError(c, 500, 'Error transferring ownership');\n    }\n  }\n}\n\n\n", "import { Context, Next } from 'hono';\nimport { Studio } from 'interfaces/Studio';\nimport { IItemService } from 'services/ItemService';\nimport { IStudioService } from 'services/StudioService';\nimport { IUserService } from 'services/UserService';\nimport container from '../container';\n\nexport const OwnerCheck = async (c: Context, next: Next) => {\n  const authHeader = c.req.header('authorization') || 'Bearer ' + (c.req.header('cookie')?.split('token=')[1]?.split(';')[0] ?? '');\n  const token = authHeader && authHeader.startsWith('Bearer ') ? authHeader.slice(7) : null;\n  const roleCookie = c.req.header('cookie')?.split('role=')[1]?.split(';')[0];\n\n  const userService = container.get('UserService') as IUserService;\n  const itemService = container.get('ItemService') as IItemService;\n  const studioService = container.get('StudioService') as IStudioService;\n  if (!token) return c.json({ message: 'Unauthorized' }, 401);\n\n  const body = await c.req.json();\n  const userId = body.userId;\n  const itemId = body.itemId || c.req.param('itemId');\n  const item = await itemService.getItem(itemId);\n  const authedUser = await userService.authenticateUser(token);\n\n  if (!authedUser) return c.json({ message: 'Invalid token' }, 401);\n\n  const studios = await studioService.getUserStudios(authedUser.user_id);\n  let owner = null;\n  const roles = [authedUser.user_id, ...studios.map((s: Studio) => s.user_id)];\n  if (roleCookie && roles.includes(roleCookie)) {\n    owner = await userService.getUser(roleCookie);\n  } else {\n    owner = authedUser;\n  }\n\n  const user = await userService.getUser(userId);\n  if (!item || item.deleted) return c.json({ message: 'Item not found' }, 404);\n  if (!owner) return c.json({ message: 'Owner not found' }, 404);\n  if (owner.user_id !== item.owner) return c.json({ message: 'You are not the owner of this item' }, 403);\n\n  c.set('owner', owner);\n  c.set('originalUser', authedUser);\n  if (user) c.set('user', user);\n  await next();\n};\n", "/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { Context } from 'hono';\nimport { inject, injectable } from 'inversify';\nimport { LoggedCheck } from 'middlewares/LoggedCheck';\nimport { v4 } from 'uuid';\nimport { describe } from '../decorators/describe';\nimport { controller, httpGet, httpPost } from '../hono-inversify';\nimport { createRateLimit } from '../middlewares/hono/rateLimit';\nimport { ILobbyService } from '../services/LobbyService';\nimport { ILogService } from '../services/LogService';\n\nconst createLobbyRateLimit = createRateLimit({\n  windowMs: 60 * 60 * 1000,\n  max: 30,\n  message: 'Too many lobby creations, please try again later.',\n  standardHeaders: true,\n  legacyHeaders: false,\n});\n\nconst joinLobbyRateLimit = createRateLimit({\n  windowMs: 60 * 60 * 1000,\n  max: 100,\n  message: 'Too many lobby joins, please try again later.',\n  standardHeaders: true,\n  legacyHeaders: false,\n});\n\nconst leaveLobbyRateLimit = createRateLimit({\n  windowMs: 60 * 60 * 1000,\n  max: 100,\n  message: 'Too many lobby leaves, please try again later.',\n  standardHeaders: true,\n  legacyHeaders: false,\n});\n\n@injectable()\n@controller('/lobbies')\nexport class Lobbies {\n  constructor(\n    @inject('LobbyService') private lobbyService: ILobbyService,\n    @inject('LogService') private logService: ILogService\n  ) {}\n\n  private sendError(c: Context, status: number, message: string) {\n    return c.json({ message }, status as any);\n  }\n\n  private async createLog(c: Context, action: string, tableName?: string, statusCode?: number, userId?: string, body?: any) {\n    try {\n      const clientIP = c.req.header('cf-connecting-ip') ||\n        c.req.header('x-forwarded-for') ||\n        c.req.header('x-real-ip') ||\n        'unknown';\n      await this.logService.createLog({\n        ip_address: clientIP,\n        table_name: tableName,\n        controller: `LobbyController.${action}`,\n        original_path: c.req.path,\n        http_method: c.req.method,\n        request_body: JSON.stringify(body || {}),\n        user_id: userId,\n        status_code: statusCode,\n      });\n    } catch (error) {\n      console.error('Error creating log:', error);\n    }\n  }\n\n  private getUserFromContext(c: Context) {\n    return c.get('user');\n  }\n\n  @describe({\n    endpoint: '/lobbies',\n    method: 'POST',\n    description: 'Create a new lobby.',\n    responseType: { message: 'string' },\n    example: 'POST /api/lobbies',\n    requiresAuth: true,\n  })\n  @httpPost('/', LoggedCheck, createLobbyRateLimit)\n  public async createLobby(c: Context) {\n    try {\n      const user = this.getUserFromContext(c);\n      if (!user) return this.sendError(c, 401, 'Unauthorized');\n      const lobbyId = v4();\n      await this.lobbyService.createLobby(lobbyId, [user.user_id]);\n      await this.lobbyService.joinLobby(lobbyId, user.user_id);\n      await this.createLog(c, 'createLobby', 'lobbies', 201, user.user_id);\n      return c.json({ message: 'Lobby created' }, 201);\n    } catch (error) {\n      const user = this.getUserFromContext(c);\n      await this.createLog(c, 'createLobby', 'lobbies', 500, user?.user_id);\n      return this.sendError(c, 500, 'Error creating lobby');\n    }\n  }\n\n  @describe({\n    endpoint: '/lobbies/:lobbyId',\n    method: 'GET',\n    description: 'Get a lobby by lobbyId',\n    params: { lobbyId: 'The id of the lobby' },\n    responseType: {\n      lobbyId: 'string',\n      users: [\n        {\n          username: 'string',\n          user_id: 'string',\n          verified: 'boolean',\n          steam_username: 'string',\n          steam_avatar_url: 'string',\n          steam_id: 'string',\n        },\n      ],\n    },\n    example: 'GET /api/lobbies/123',\n  })\n  @httpGet('/:lobbyId')\n  public async getLobby(c: Context) {\n    const lobbyId = c.req.param('lobbyId');\n    // Optionally validate lobbyId with lobbyIdParamSchema here\n    try {\n      const lobby = await this.lobbyService.getLobby(lobbyId);\n      if (!lobby) {\n        await this.createLog(c, 'getLobby', 'lobbies', 404);\n        return this.sendError(c, 404, 'Lobby not found');\n      }\n      await this.createLog(c, 'getLobby', 'lobbies', 200);\n      return c.json(lobby);\n    } catch (error) {\n      await this.createLog(c, 'getLobby', 'lobbies', 500);\n      return this.sendError(c, 500, 'Error fetching lobby');\n    }\n  }\n\n  @describe({\n    endpoint: '/lobbies/user/@me',\n    method: 'GET',\n    description: 'Get the lobby the authenticated user is in.',\n    responseType: { success: 'boolean', lobbyId: 'string', users: ['string'] },\n    example: 'GET /api/lobbies/user/@me',\n    requiresAuth: true,\n  })\n  @httpGet('/user/@me', LoggedCheck)\n  public async getMyLobby(c: Context) {\n    try {\n      const user = this.getUserFromContext(c);\n      if (!user) return this.sendError(c, 401, 'Unauthorized');\n      const lobby = await this.lobbyService.getUserLobby(user.user_id);\n      if (!lobby) {\n        await this.createLog(c, 'getMyLobby', 'lobbies', 200, user.user_id);\n        return c.json({ success: false, message: 'User is not in any lobby' });\n      }\n      await this.createLog(c, 'getMyLobby', 'lobbies', 200, user.user_id);\n      return c.json({ success: true, ...lobby });\n    } catch (error) {\n      const user = this.getUserFromContext(c);\n      await this.createLog(c, 'getMyLobby', 'lobbies', 500, user?.user_id);\n      return this.sendError(c, 500, 'Error fetching user lobby');\n    }\n  }\n\n  @describe({\n    endpoint: '/lobbies/user/:userId',\n    method: 'GET',\n    description: 'Get the lobby a user is in',\n    params: { userId: 'The id of the user' },\n    responseType: { lobbyId: 'string', users: ['string'] },\n    example: 'GET /api/lobbies/user/123',\n  })\n  @httpGet('/user/:userId')\n  public async getUserLobby(c: Context) {\n    const userId = c.req.param('userId');\n    // Optionally validate userId with userIdParamSchema here\n    try {\n      const lobby = await this.lobbyService.getUserLobby(userId);\n      if (!lobby) {\n        await this.createLog(c, 'getUserLobby', 'lobbies', 404, userId);\n        return this.sendError(c, 404, 'User is not in any lobby');\n      }\n      await this.createLog(c, 'getUserLobby', 'lobbies', 200, userId);\n      return c.json(lobby);\n    } catch (error) {\n      await this.createLog(c, 'getUserLobby', 'lobbies', 500, userId);\n      return this.sendError(c, 500, 'Error fetching user lobby');\n    }\n  }\n\n  @describe({\n    endpoint: '/lobbies/:lobbyId/join',\n    method: 'POST',\n    description: 'Join a lobby. This will make the user leave all other lobbies first.',\n    params: { lobbyId: 'The id of the lobby' },\n    responseType: { message: 'string' },\n    example: 'POST /api/lobbies/123/join',\n    requiresAuth: true,\n  })\n  @httpPost('/:lobbyId/join', LoggedCheck, joinLobbyRateLimit)\n  public async joinLobby(c: Context) {\n    const user = this.getUserFromContext(c);\n    if (!user) return this.sendError(c, 401, 'Unauthorized');\n    const lobbyId = c.req.param('lobbyId');\n    // Optionally validate lobbyId with lobbyIdParamSchema here\n    try {\n      await this.lobbyService.leaveAllLobbies(user.user_id);\n      await this.lobbyService.joinLobby(lobbyId, user.user_id);\n      await this.createLog(c, 'joinLobby', 'lobbies', 200, user.user_id);\n      return c.json({ message: 'Joined lobby' });\n    } catch (error) {\n      await this.createLog(c, 'joinLobby', 'lobbies', 500, user.user_id);\n      return this.sendError(c, 500, 'Error joining lobby');\n    }\n  }\n\n  @describe({\n    endpoint: '/lobbies/:lobbyId/leave',\n    method: 'POST',\n    description: 'Leave a lobby.',\n    params: { lobbyId: 'The id of the lobby' },\n    responseType: { message: 'string' },\n    example: 'POST /api/lobbies/123/leave',\n    requiresAuth: true,\n  })\n  @httpPost('/:lobbyId/leave', LoggedCheck, leaveLobbyRateLimit)\n  public async leaveLobby(c: Context) {\n    const user = this.getUserFromContext(c);\n    if (!user) return this.sendError(c, 401, 'Unauthorized');\n    const lobbyId = c.req.param('lobbyId');\n    // Optionally validate lobbyId with lobbyIdParamSchema here\n    try {\n      await this.lobbyService.leaveLobby(lobbyId, user.user_id);\n      await this.createLog(c, 'leaveLobby', 'lobbies', 200, user.user_id);\n      return c.json({ message: 'Left lobby' });\n    } catch (error) {\n      await this.createLog(c, 'leaveLobby', 'lobbies', 500, user.user_id);\n      return this.sendError(c, 500, 'Error leaving lobby');\n    }\n  }\n}\n\n\n", "/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/no-unused-vars */\n\nimport { Context } from 'hono';\nimport { controller, httpGet } from '../hono-inversify';\nimport { inject, injectable } from 'inversify';\nimport { ILogService } from '../services/LogService';\n\n@injectable()\n@controller('/logs')\nexport class LogController {\n  constructor(@inject('LogService') private logService: ILogService) {}\n\n  private getUserFromContext(c: Context) {\n    return c.get('user');\n  }\n\n  private sendError(c: Context, status: number, message: string) {\n    return c.json({ message }, status as any);\n  }\n\n  @httpGet('/')\n  public async getAllLogs(c: Context) {\n    const user = this.getUserFromContext(c);\n    if (!user?.admin) {\n      return this.sendError(c, 403, 'Admin access required');\n    }\n    try {\n      const limit = parseInt(c.req.query('limit') || '100');\n      const offset = parseInt(c.req.query('offset') || '0');\n      const logs = await this.logService.getLogs(limit, offset);\n      return c.json(logs);\n    } catch (error) {\n      return this.sendError(c, 500, 'Error fetching logs');\n    }\n  }\n\n  @httpGet('/controller/:controller')\n  public async getLogsByController(c: Context) {\n    const user = this.getUserFromContext(c);\n    if (!user?.admin) {\n      return this.sendError(c, 403, 'Admin access required');\n    }\n    try {\n      const controller = c.req.param('controller');\n      const limit = parseInt(c.req.query('limit') || '100');\n      const logs = await this.logService.getLogsByController(controller, limit);\n      return c.json(logs);\n    } catch (error) {\n      return this.sendError(c, 500, 'Error fetching logs by controller');\n    }\n  }\n\n  @httpGet('/user/:userId')\n  public async getLogsByUser(c: Context) {\n    const user = this.getUserFromContext(c);\n    if (!user?.admin) {\n      return this.sendError(c, 403, 'Admin access required');\n    }\n    try {\n      const userId = c.req.param('userId');\n      const limit = parseInt(c.req.query('limit') || '100');\n      const logs = await this.logService.getLogsByUser(userId, limit);\n      return c.json(logs);\n    } catch (error) {\n      return this.sendError(c, 500, 'Error fetching logs by user');\n    }\n  }\n\n  @httpGet('/table/:tableName')\n  public async getLogsByTable(c: Context) {\n    const user = this.getUserFromContext(c);\n    if (!user?.admin) {\n      return this.sendError(c, 403, 'Admin access required');\n    }\n    try {\n      const tableName = c.req.param('tableName');\n      const limit = parseInt(c.req.query('limit') || '100');\n      const logs = await this.logService.getLogsByTable(tableName, limit);\n      return c.json(logs);\n    } catch (error) {\n      return this.sendError(c, 500, 'Error fetching logs by table');\n    }\n  }\n\n  @httpGet('/stats')\n  public async getLogStats(c: Context) {\n    const user = this.getUserFromContext(c);\n    if (!user?.admin) {\n      return this.sendError(c, 403, 'Admin access required');\n    }\n    try {\n      const stats = await this.logService.getLogStats();\n      return c.json(stats);\n    } catch (error) {\n      return this.sendError(c, 500, 'Error fetching log statistics');\n    }\n  }\n\n  @httpGet('/@me')\n  public async getMyLogs(c: Context) {\n    const user = this.getUserFromContext(c);\n    if (!user) {\n      return this.sendError(c, 401, 'Unauthorized');\n    }\n    try {\n      const limit = parseInt(c.req.query('limit') || '100');\n      const logs = await this.logService.getLogsByUser(user.user_id, limit);\n      return c.json(logs);\n    } catch (error) {\n      return this.sendError(c, 500, 'Error fetching user logs');\n    }\n  }\n}\n", "/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { Context } from 'hono';\nimport { inject, injectable } from 'inversify';\nimport { LoggedCheck } from 'middlewares/LoggedCheck';\nimport { controller, httpGet, httpPost, httpPut } from '../hono-inversify';\nimport { ILogService } from '../services/LogService';\nimport { IMarketListingService } from '../services/MarketListingService';\n\n@injectable()\n@controller('/market-listings')\nexport class MarketListingController {\n  constructor(\n    @inject('MarketListingService') private marketListingService: IMarketListingService,\n    @inject('LogService') private logService: ILogService\n  ) {}\n\n  private sendError(c: Context, status: number, message: string) {\n    return c.json({ message }, status as any);\n  }\n\n  private async createLog(c: Context, action: string, tableName?: string, statusCode?: number, userId?: string, body?: any) {\n    try {\n      const clientIP = c.req.header('cf-connecting-ip') ||\n        c.req.header('x-forwarded-for') ||\n        c.req.header('x-real-ip') ||\n        'unknown';\n      await this.logService.createLog({\n        ip_address: clientIP,\n        table_name: tableName,\n        controller: `MarketListingController.${action}`,\n        original_path: c.req.path,\n        http_method: c.req.method,\n        request_body: JSON.stringify(body || {}),\n        user_id: userId,\n        status_code: statusCode,\n      });\n    } catch (error) {\n      console.error('Failed to log action:', error);\n    }\n  }\n\n  private getUserFromContext(c: Context) {\n    return c.get('user');\n  }\n\n  @httpPost('/', LoggedCheck)\n  public async createMarketListing(c: Context) {\n    const user = this.getUserFromContext(c);\n    if (!user) return this.sendError(c, 401, 'Unauthorized');\n    const body = await c.req.json();\n    const { inventoryItem, sellingPrice } = body;\n    if (!inventoryItem || typeof sellingPrice !== 'number') {\n      await this.createLog(c, 'createMarketListing', 'market_listings', 400, user.user_id, body);\n      return this.sendError(c, 400, 'inventoryItem and sellingPrice are required');\n    }\n    try {\n      const listing = await this.marketListingService.createMarketListing(user.user_id, inventoryItem, sellingPrice);\n      await this.createLog(c, 'createMarketListing', 'market_listings', 201, user.user_id, body);\n      return c.json(listing, 201);\n    } catch (error) {\n      await this.createLog(c, 'createMarketListing', 'market_listings', 500, user.user_id, body);\n      return this.sendError(c, 500, 'Error while creating the market listing');\n    }\n  }\n\n  @httpPut('/:id/cancel', LoggedCheck)\n  public async cancelMarketListing(c: Context) {\n    const user = this.getUserFromContext(c);\n    if (!user) return this.sendError(c, 401, 'Unauthorized');\n    const listingId = c.req.param('id');\n    try {\n      await this.marketListingService.cancelMarketListing(listingId, user.user_id);\n      await this.createLog(c, 'cancelMarketListing', 'market_listings', 200, user.user_id);\n      return c.json({ message: 'Market listing cancelled' });\n    } catch (error) {\n      await this.createLog(c, 'cancelMarketListing', 'market_listings', 500, user.user_id);\n      return this.sendError(c, 500, 'Error while cancelling the market listing');\n    }\n  }\n\n  @httpGet('/user/:userId', LoggedCheck)\n  public async getMarketListingsByUser(c: Context) {\n    const user = this.getUserFromContext(c);\n    if (!user) return this.sendError(c, 401, 'Unauthorized');\n    const userId = c.req.param('userId');\n    if (userId !== user.user_id) {\n      await this.createLog(c, 'getMarketListingsByUser', 'market_listings', 403, user.user_id);\n      return this.sendError(c, 403, 'Forbidden');\n    }\n    try {\n      const listings = await this.marketListingService.getMarketListingsByUser(userId);\n      await this.createLog(c, 'getMarketListingsByUser', 'market_listings', 200, userId);\n      return c.json(listings);\n    } catch (error) {\n      await this.createLog(c, 'getMarketListingsByUser', 'market_listings', 500, userId);\n      return this.sendError(c, 500, 'Error while fetching market listings');\n    }\n  }\n\n  @httpGet('/item/:itemId')\n  public async getActiveListingsForItem(c: Context) {\n    const itemId = c.req.param('itemId');\n    try {\n      const listings = await this.marketListingService.getActiveListingsForItem(itemId);\n      await this.createLog(c, 'getActiveListingsForItem', 'market_listings', 200, undefined);\n      return c.json(listings);\n    } catch (error) {\n      await this.createLog(c, 'getActiveListingsForItem', 'market_listings', 500, undefined);\n      return this.sendError(c, 500, 'Error while fetching active market listings');\n    }\n  }\n\n  @httpGet('/:id')\n  public async getMarketListingById(c: Context) {\n    const listingId = c.req.param('id');\n    try {\n      const listing = await this.marketListingService.getMarketListingById(listingId);\n      if (!listing) {\n        await this.createLog(c, 'getMarketListingById', 'market_listings', 404, undefined);\n        return this.sendError(c, 404, 'Market listing not found');\n      }\n      await this.createLog(c, 'getMarketListingById', 'market_listings', 200, undefined);\n      return c.json(listing);\n    } catch (error) {\n      await this.createLog(c, 'getMarketListingById', 'market_listings', 500, undefined);\n      return this.sendError(c, 500, 'Error while fetching the market listing');\n    }\n  }\n\n  @httpGet('/')\n  public async getEnrichedMarketListings(c: Context) {\n    const limit = c.req.query('limit');\n    const offset = c.req.query('offset');\n    try {\n      const listings = await this.marketListingService.getEnrichedMarketListings(Number(limit) || 50, Number(offset) || 0);\n      await this.createLog(c, 'getEnrichedMarketListings', 'market_listings', 200, undefined);\n      return c.json(listings);\n    } catch (error) {\n      await this.createLog(c, 'getEnrichedMarketListings', 'market_listings', 500, undefined);\n      return this.sendError(c, 500, 'Error while fetching enriched market listings');\n    }\n  }\n\n  @httpGet('/search')\n  public async searchMarketListings(c: Context) {\n    const q = c.req.query('q');\n    const limit = c.req.query('limit');\n    if (!q) {\n      await this.createLog(c, 'searchMarketListings', 'market_listings', 400, undefined);\n      return this.sendError(c, 400, 'Parameter q is required');\n    }\n    try {\n      const listings = await this.marketListingService.searchMarketListings(String(q), Number(limit) || 50);\n      await this.createLog(c, 'searchMarketListings', 'market_listings', 200, undefined);\n      return c.json(listings);\n    } catch (error) {\n      await this.createLog(c, 'searchMarketListings', 'market_listings', 500, undefined);\n      return this.sendError(c, 500, 'Error while searching market listings');\n    }\n  }\n\n  @httpPost('/:id/buy', LoggedCheck)\n  public async buyMarketListing(c: Context) {\n    const user = this.getUserFromContext(c);\n    if (!user) return this.sendError(c, 401, 'Unauthorized');\n    const listingId = c.req.param('id');\n    try {\n      const listing = await this.marketListingService.getMarketListingById(listingId);\n      if (!listing) {\n        await this.createLog(c, 'buyMarketListing', 'market_listings', 404, user.user_id);\n        return this.sendError(c, 404, 'Market listing not found');\n      }\n      const result = await this.marketListingService.buyMarketListing(listing.id, user.user_id);\n      await this.createLog(c, 'buyMarketListing', 'market_listings', 200, user.user_id);\n      return c.json(result);\n    } catch (error) {\n      await this.createLog(c, 'buyMarketListing', 'market_listings', 500, user.user_id);\n      return this.sendError(c, 500, 'Error while buying market listing');\n    }\n  }\n}\n", "/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { Context } from 'hono';\nimport { controller, httpDelete, httpGet, httpPatch, httpPost } from 'hono-inversify';\nimport { inject, injectable } from 'inversify';\nimport { LoggedCheck } from 'middlewares/LoggedCheck';\nimport { describe } from '../decorators/describe';\nimport { createRateLimit } from '../middlewares/hono/rateLimit';\nimport { ILogService } from '../services/LogService';\nimport { IOAuth2Service } from '../services/OAuth2Service';\nimport { genVerificationKey } from '../utils/GenKey';\n\n// Rate limit configs\nconst createAppRateLimit = createRateLimit({\n  windowMs: 60 * 60 * 1000,\n  max: 5,\n  message: 'Too many OAuth2 app creations, please try again later.',\n  standardHeaders: true,\n  legacyHeaders: false,\n});\nconst updateAppRateLimit = createRateLimit({\n  windowMs: 60 * 60 * 1000,\n  max: 10,\n  message: 'Too many OAuth2 app updates, please try again later.',\n  standardHeaders: true,\n  legacyHeaders: false,\n});\nconst deleteAppRateLimit = createRateLimit({\n  windowMs: 60 * 60 * 1000,\n  max: 5,\n  message: 'Too many OAuth2 app deletions, please try again later.',\n  standardHeaders: true,\n  legacyHeaders: false,\n});\nconst authorizeRateLimit = createRateLimit({\n  windowMs: 60 * 60 * 1000,\n  max: 200,\n  message: 'Too many authorization requests, please try again later.',\n  standardHeaders: true,\n  legacyHeaders: false,\n});\n\nfunction sendError(c: Context, status: number, message: string, error?: unknown) {\n  const msg = error instanceof Error ? error.message : String(error);\n  return c.json({ message, error: msg }, status as any);\n}\n\n@injectable()\n@controller('/oauth2')\nexport class OAuth2Controller {\n  constructor(\n    @inject('OAuth2Service') private oauth2Service: IOAuth2Service,\n    @inject('LogService') private logService: ILogService\n  ) {}\n\n  private async createLog(c: Context, tableName: string, statusCode?: number, userId?: string, metadata?: object, body?: any) {\n    try {\n      let requestBody: any = body || {};\n      if (metadata) requestBody = { ...requestBody, metadata };\n      const clientIP = c.req.header('cf-connecting-ip') ||\n        c.req.header('x-forwarded-for') ||\n        c.req.header('x-real-ip') ||\n        'unknown';\n      await this.logService.createLog({\n        ip_address: clientIP,\n        table_name: tableName,\n        controller: 'OAuth2Controller',\n        original_path: c.req.path,\n        http_method: c.req.method,\n        request_body: JSON.stringify(requestBody),\n        user_id: userId,\n        status_code: statusCode,\n      });\n    } catch (error) {\n      console.error('Failed to log action:', error);\n    }\n  }\n\n  @describe({\n    endpoint: '/oauth2/app/:client_id',\n    method: 'GET',\n    description: 'Get an OAuth2 app by client_id',\n    params: { client_id: 'The client_id of the app' },\n    responseType: {\n      client_id: 'string',\n      client_secret: 'string',\n      name: 'string',\n      redirect_urls: ['string'],\n    },\n    example: 'GET /api/oauth2/app/123',\n  })\n  @httpGet('/app/:client_id')\n  async getAppByClientId(c: Context) {\n    const client_id = c.req.param('client_id');\n    try {\n      const app = await this.oauth2Service.getAppByClientId(client_id);\n      if (!app) {\n        await this.createLog(c, 'oauth2_apps', 404, undefined, { client_id });\n        return c.json({ message: 'App not found' }, 404);\n      }\n      await this.createLog(c, 'oauth2_apps', 200, undefined, { client_id, app_name: app.name });\n      return c.json(app, 200);\n    } catch (error) {\n      await this.createLog(c, 'oauth2_apps', 500, undefined, { client_id, error });\n      return sendError(c, 500, 'Error fetching app', error);\n    }\n  }\n\n  @describe({\n    endpoint: '/oauth2/app',\n    method: 'POST',\n    description: 'Create a new OAuth2 app',\n    body: {\n      name: 'Name of the app',\n      redirect_urls: 'Array of redirect URLs',\n    },\n    responseType: {\n      client_id: 'string',\n      client_secret: 'string',\n    },\n    example: 'POST /api/oauth2/app {\"name\": \"My App\", \"redirect_urls\": [\"https://example.com/callback\"]}',\n    requiresAuth: true,\n  })\n  @httpPost('/app', LoggedCheck, createAppRateLimit)\n  async createApp(c: Context) {\n    const user = c.get('user');\n    const { name, redirect_urls } = await c.req.json();\n    if (!user || !name || !redirect_urls || !Array.isArray(redirect_urls)) {\n      await this.createLog(c, 'oauth2_apps', 400, user?.user_id, { reason: 'invalid_request_body' });\n      return c.json({ message: 'Invalid request body' }, 400);\n    }\n    try {\n      const app = await this.oauth2Service.createApp(user.user_id, name, redirect_urls);\n      await this.createLog(c, 'oauth2_apps', 201, user.user_id, {\n        app_name: name,\n        client_id: app.client_id,\n        redirect_urls_count: redirect_urls.length,\n      });\n      return c.json({\n        client_id: app.client_id,\n        client_secret: app.client_secret,\n      }, 201);\n    } catch (error) {\n      await this.createLog(c, 'oauth2_apps', 500, user.user_id, { app_name: name, error });\n      return sendError(c, 500, 'Error creating app', error);\n    }\n  }\n\n  @describe({\n    endpoint: '/oauth2/apps',\n    method: 'GET',\n    description: 'Get all OAuth2 apps owned by the authenticated user',\n    responseType: [\n      {\n        client_id: 'string',\n        client_secret: 'string',\n        name: 'string',\n        redirect_urls: ['string'],\n      },\n    ],\n    example: 'GET /api/oauth2/apps',\n    requiresAuth: true,\n  })\n  @httpGet('/apps', LoggedCheck)\n  async getMyApps(c: Context) {\n    const user = c.get('user');\n    if (!user) {\n      return c.json({ message: 'Unauthorized' }, 401);\n    }\n    try {\n      const apps = await this.oauth2Service.getAppsByOwner(user.user_id);\n      await this.createLog(c, 'oauth2_apps', 200, user.user_id, { apps_count: apps.length });\n      return c.json(apps, 200);\n    } catch (error) {\n      await this.createLog(c, 'oauth2_apps', 500, user.user_id, { error });\n      return sendError(c, 500, 'Error fetching apps', error);\n    }\n  }\n\n  @describe({\n    endpoint: '/oauth2/app/:client_id',\n    method: 'PATCH',\n    description: 'Update an OAuth2 app',\n    params: { client_id: 'The client_id of the app' },\n    body: {\n      name: 'Name of the app (optional)',\n      redirect_urls: 'Array of redirect URLs (optional)',\n    },\n    responseType: { success: 'boolean' },\n    example: 'PATCH /api/oauth2/app/123 {\"name\": \"Updated App\"}',\n    requiresAuth: true,\n  })\n  @httpPatch('/app/:client_id', LoggedCheck, updateAppRateLimit)\n  async updateApp(c: Context) {\n    const user = c.get('user');\n    const client_id = c.req.param('client_id');\n    const { name, redirect_urls } = await c.req.json();\n    if (!user) {\n      return c.json({ message: 'Unauthorized' }, 401);\n    }\n    try {\n      await this.oauth2Service.updateApp(client_id, user.user_id, { name, redirect_urls });\n      await this.createLog(c, 'oauth2_apps', 200, user.user_id, {\n        client_id,\n        updated_fields: {\n          name: !!name,\n          redirect_urls: !!redirect_urls,\n        },\n      });\n      return c.json({ success: true }, 200);\n    } catch (error) {\n      await this.createLog(c, 'oauth2_apps', 500, user.user_id, { client_id, error });\n      return sendError(c, 500, 'Error updating app', error);\n    }\n  }\n\n  @describe({\n    endpoint: '/oauth2/app/:client_id',\n    method: 'DELETE',\n    description: 'Delete an OAuth2 app',\n    params: { client_id: 'The client_id of the app' },\n    responseType: { message: 'string' },\n    example: 'DELETE /api/oauth2/app/123',\n    requiresAuth: true,\n  })\n  @httpDelete('/app/:client_id', LoggedCheck, deleteAppRateLimit)\n  async deleteApp(c: Context) {\n    const user = c.get('user');\n    const client_id = c.req.param('client_id');\n    if (!user) {\n      return c.json({ message: 'Unauthorized' }, 401);\n    }\n    try {\n      await this.oauth2Service.deleteApp(client_id, user.user_id);\n      await this.createLog(c, 'oauth2_apps', 200, user.user_id, { client_id });\n      return c.json({ message: 'App deleted successfully' }, 200);\n    } catch (error) {\n      await this.createLog(c, 'oauth2_apps', 500, user.user_id, { client_id, error });\n      return sendError(c, 500, 'Error deleting app', error);\n    }\n  }\n\n  @describe({\n    endpoint: '/oauth2/authorize',\n    method: 'GET',\n    description: 'Authorize a user for an OAuth2 app',\n    query: {\n      client_id: 'The client_id of the app',\n      redirect_uri: 'The redirect URI',\n    },\n    responseType: { code: 'string' },\n    example: 'GET /api/oauth2/authorize?client_id=123&redirect_uri=https://example.com/callback',\n    requiresAuth: true,\n  })\n  @httpGet('/authorize', LoggedCheck, authorizeRateLimit)\n  async authorize(c: Context) {\n    const user = c.get('user');\n    const client_id = c.req.query('client_id');\n    const redirect_uri = c.req.query('redirect_uri');\n    if (!user) {\n      await this.createLog(c, 'oauth2_authorizations', 401, undefined, { reason: 'no_user_id' });\n      return c.json({ message: 'Unauthorized' }, 401);\n    }\n    if (!client_id || !redirect_uri) {\n      await this.createLog(c, 'oauth2_authorizations', 400, user.user_id, {\n        reason: 'missing_parameters',\n        has_client_id: !!client_id,\n        has_redirect_uri: !!redirect_uri,\n      });\n      return c.json({ message: 'Missing client_id or redirect_uri' }, 400);\n    }\n    try {\n      const code = await this.oauth2Service.generateAuthCode(client_id, redirect_uri, user.user_id);\n      await this.createLog(c, 'oauth2_authorizations', 200, user.user_id, {\n        client_id,\n        redirect_uri,\n        code_generated: true,\n      });\n      return c.json({ code }, 200);\n    } catch (error) {\n      await this.createLog(c, 'oauth2_authorizations', 500, user.user_id, { client_id, redirect_uri, error });\n      return sendError(c, 500, 'Error generating authorization code', error);\n    }\n  }\n\n  @describe({\n    endpoint: '/oauth2/user',\n    method: 'GET',\n    description: 'Get user information by authorization code',\n    query: {\n      code: 'The authorization code',\n      client_id: 'The client_id of the app',\n    },\n    responseType: {\n      username: 'string',\n      user_id: 'string',\n      email: 'string',\n      balance: 'number',\n      verified: 'boolean',\n      steam_username: 'string',\n      steam_avatar_url: 'string',\n      steam_id: 'string',\n      discord_id: 'string',\n      google_id: 'string',\n      verificationKey: 'string',\n    },\n    example: 'GET /api/oauth2/user?code=abc123&client_id=456',\n  })\n  @httpGet('/user')\n  async getUserByCode(c: Context) {\n    const code = c.req.query('code');\n    const client_id = c.req.query('client_id');\n    if (!code || !client_id) {\n      await this.createLog(c, 'oauth2_user_access', 400, undefined, {\n        reason: 'missing_parameters',\n        has_code: !!code,\n        has_client_id: !!client_id,\n      });\n      return c.json({ message: 'Missing code or client_id' }, 400);\n    }\n    try {\n      const user = await this.oauth2Service.getUserByCode(code, client_id);\n      if (!user) {\n        await this.createLog(c, 'oauth2_user_access', 404, undefined, { client_id, code_provided: true });\n        return c.json({ message: 'User not found' }, 404);\n      }\n      await this.createLog(c, 'oauth2_user_access', 200, user.user_id, { client_id, user_id: user.user_id, username: user.username });\n      return c.json({ ...user, verificationKey: genVerificationKey(user.user_id) }, 200);\n    } catch (error) {\n      await this.createLog(c, 'oauth2_user_access', 500, undefined, { client_id, error });\n      return sendError(c, 500, 'Error fetching user', error);\n    }\n  }\n}", "/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { Context } from 'hono';\nimport { controller, httpGet } from 'hono-inversify';\nimport { inject, injectable } from 'inversify';\nimport { LoggedCheck } from 'middlewares/LoggedCheck';\nimport { IGameService } from '../services/GameService';\nimport { IInventoryService } from '../services/InventoryService';\nimport { IItemService } from '../services/ItemService';\nimport { ILogService } from '../services/LogService';\nimport { IUserService } from '../services/UserService';\nimport { filterGame } from '../utils/helpers';\n\n@injectable()\n@controller('/search')\nexport class SearchController {\n  constructor(\n    @inject('UserService') private userService: IUserService,\n    @inject('ItemService') private itemService: IItemService,\n    @inject('GameService') private gameService: IGameService,\n    @inject('InventoryService') private inventoryService: IInventoryService,\n    @inject('LogService') private logService: ILogService\n  ) {}\n\n  private async createLog(c: Context, action: string, tableName?: string, statusCode?: number, userId?: string, metadata?: object, body?: any) {\n    try {\n      let requestBody: any = body || { note: 'Body not provided for logging' };\n      if (metadata) requestBody = { ...requestBody, metadata };\n      const clientIP = c.req.header('cf-connecting-ip') ||\n        c.req.header('x-forwarded-for') ||\n        c.req.header('x-real-ip') ||\n        'unknown';\n      await this.logService.createLog({\n        ip_address: clientIP,\n        table_name: tableName,\n        controller: `SearchController.${action}`,\n        original_path: c.req.path,\n        http_method: c.req.method,\n        request_body: JSON.stringify(requestBody),\n        user_id: userId,\n        status_code: statusCode,\n      });\n    } catch (error) {\n      console.error('Failed to log action:', error);\n    }\n  }\n\n  private async handleSearch(c: Context, { admin = false, userId }: { admin?: boolean; userId?: string } = {}) {\n    const query = (c.req.query('q') || '').trim();\n    if (!query) {\n      await this.createLog(c, admin ? 'adminSearch' : 'globalSearch', 'search', 400, userId, { reason: 'missing_query', ...(admin && { admin_search: true }) });\n      return c.json({ message: 'Missing search query' }, 400);\n    }\n\n    try {\n      const users = admin\n        ? await this.userService.adminSearchUsers(query)\n        : await this.userService.searchUsersByUsername(query);\n\n      const detailledUsers = await Promise.all(\n        users.map(async (user: any) => {\n          const publicProfile = admin\n            ? await this.userService.getUserWithCompleteProfile(user.user_id)\n            : await this.userService.getUserWithPublicProfile(user.user_id);\n          return { id: user.user_id, ...publicProfile };\n        })\n      );\n\n      const items = await this.itemService.searchItemsByName(query);\n      const games = (await this.gameService.listGames())\n        .filter(g => g.showInStore && [g.name, g.description, g.genre].some(v => v && v.toLowerCase().includes(query.toLowerCase())))\n        .map(game => filterGame(game));\n\n      await this.createLog(c, admin ? 'adminSearch' : 'globalSearch', 'search', 200, userId, {\n        query,\n        ...(admin && { admin_search: true }),\n        results_count: {\n          users: detailledUsers.length,\n          items: items.length,\n          games: games.length,\n        },\n      });\n\n      return c.json({ users: detailledUsers, items, games }, 200);\n    } catch (error) {\n      const msg = error instanceof Error ? error.message : String(error);\n      await this.createLog(c, admin ? 'adminSearch' : 'globalSearch', 'search', 500, userId, {\n        query,\n        ...(admin && { admin_search: true }),\n        error: msg,\n      });\n      return c.json({ message: 'Error searching', error: msg }, 500);\n    }\n  }\n\n  @httpGet('/', LoggedCheck)\n  async globalSearch(c: Context) {\n    const authHeader = c.req.header('authorization') ||\n      'Bearer ' + (c.req.header('cookie')?.split('token=')[1]?.split(';')[0] || '');\n\n    if (!authHeader || !authHeader.startsWith('Bearer ')) {\n      return c.json({ message: 'Unauthorized' }, 401);\n    }\n\n    const token = authHeader.split('Bearer ')[1];\n    if (!token) {\n      return c.json({ message: 'Unauthorized' }, 401);\n    }\n\n    const user: any = await this.userService.authenticateUser(token);\n    if (!user || !user.admin) {\n      return this.handleSearch(c);\n    } else {\n      return this.handleSearch(c, { admin: true, userId: user.user_id });\n    }\n  }\n}\n", "import { Response } from 'express';\nimport { Game } from '../interfaces/Game';\nimport { User } from '../interfaces/User';\nimport { IItemService } from '../services/ItemService';\n\nexport function sendError(res: Response, status: number, message: string, error?: unknown) {\n  return res.status(status).send({ message, error });\n}\n\nexport function findUserByResetToken(users: User[], reset_token: string): User | undefined {\n  return users.find(u => u.forgot_password_token === reset_token);\n}\n\nexport function requireFields(obj: object, fields: string[]): string | null {\n  for (const f of fields) if (!(f in obj)) return f;\n  return null;\n}\n\nexport function mapUser(user: User) {\n  return {\n    id: user.user_id,\n    userId: user.user_id,\n    username: user.username,\n    email: user.email,\n    balance: user.balance !== undefined ? Math.floor(user.balance) : undefined,\n    verified: !!user.verified,\n    steam_id: user.steam_id,\n    steam_username: user.steam_username,\n    steam_avatar_url: user.steam_avatar_url,\n    isStudio: !!user.isStudio,\n    admin: !!user.admin,\n    disabled: !!user.disabled,\n  };\n}\n\nexport function mapUserSearch(user: User) {\n  return {\n    id: user.user_id,\n    userId: user.user_id,\n    username: user.username,\n    verified: user.verified,\n    steam_id: user.steam_id,\n    steam_username: user.steam_username,\n    steam_avatar_url: user.steam_avatar_url,\n    isStudio: user.isStudio,\n    admin: !!user.admin,\n  };\n}\n\nexport function mapItem(item: { itemId: string; name: string; description: string; owner: string; price: number; iconHash?: string; showInStore?: boolean }) {\n  return {\n    itemId: item.itemId,\n    name: item.name,\n    description: item.description,\n    owner: item.owner,\n    price: item.price,\n    iconHash: item.iconHash,\n    ...(typeof item.showInStore !== 'undefined' && {\n      showInStore: item.showInStore,\n    }),\n  };\n}\n\nexport function filterGame(game: Game, userId?: string, myId?: string) {\n  return {\n    gameId: game.gameId,\n    name: game.name,\n    description: game.description,\n    price: game.price,\n    owner_id: game.owner_id,\n    showInStore: game.showInStore,\n    iconHash: game.iconHash,\n    splashHash: game.splashHash,\n    bannerHash: game.bannerHash,\n    genre: game.genre,\n    release_date: game.release_date,\n    developer: game.developer,\n    publisher: game.publisher,\n    platforms: game.platforms,\n    rating: game.rating,\n    website: game.website,\n    trailer_link: game.trailer_link,\n    multiplayer: game.multiplayer,\n    ...(userId && game.owner_id === myId ? { download_link: game.download_link } : {}),\n  };\n}\n\nexport async function formatInventory(inventory: Array<{ item_id: string; amount: number }>, itemService: IItemService) {\n  const seen = new Set<string>();\n  return (\n    await Promise.all(\n      inventory\n        .filter(item => {\n          if (seen.has(item.item_id)) return false;\n          seen.add(item.item_id);\n          return true;\n        })\n        .map(async item => {\n          const itemDetails = await itemService.getItem(item.item_id);\n          if (!itemDetails || itemDetails.deleted) return null;\n          return {\n            itemId: itemDetails.itemId,\n            name: itemDetails.name,\n            description: itemDetails.description,\n            amount: item.amount,\n            iconHash: itemDetails.iconHash,\n          };\n        })\n    )\n  ).filter(Boolean);\n}\n", "/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { Context } from 'hono';\nimport { controller, httpGet } from 'hono-inversify';\nimport { inject, injectable } from 'inversify';\nimport { LoggedCheck } from 'middlewares/LoggedCheck';\nimport Stripe from 'stripe';\nimport * as yup from 'yup';\nimport { ILogService } from '../services/LogService';\nimport { IUserService } from '../services/UserService';\n\nconst STRIPE_WEBHOOK_SECRET = process.env.STRIPE_WEBHOOK_SECRET;\nconst STRIPE_API_KEY = process.env.STRIPE_API_KEY;\n\nconst CREDIT_TIERS = [\n  {\n    id: 'tier1',\n    price: 99,\n    credits: 200,\n    name: '200 credits',\n    image: 'https://croissant-api.fr/assets/credits/tier1.png',\n  },\n  {\n    id: 'tier2',\n    price: 198,\n    credits: 400,\n    name: '400 credits',\n    image: 'https://croissant-api.fr/assets/credits/tier2.png',\n  },\n  {\n    id: 'tier3',\n    price: 495,\n    credits: 1000,\n    name: '1000 credits',\n    image: 'https://croissant-api.fr/assets/credits/tier3.png',\n  },\n  {\n    id: 'tier4',\n    price: 990,\n    credits: 2000,\n    name: '2000 credits',\n    image: 'https://croissant-api.fr/assets/credits/tier4.png',\n  },\n] as const;\n\nconst checkoutQuerySchema = yup.object({\n  tier: yup\n    .string()\n    .oneOf(CREDIT_TIERS.map(t => t.id))\n    .required(),\n});\n\nfunction sendError(c: Context, status: number, message: string, error?: unknown) {\n  return c.json({ message, error: error instanceof Error ? error.message : error }, status as any);\n}\n\n@injectable()\n@controller('/stripe')\nexport class StripeController {\n  private stripe: Stripe;\n\n  constructor(\n    @inject('UserService') private userService: IUserService,\n    @inject('LogService') private logService: ILogService\n  ) {\n    if (!STRIPE_API_KEY) {\n      throw new Error('Stripe API key is not set in environment variables');\n    }\n    this.stripe = new Stripe(STRIPE_API_KEY, {\n      apiVersion: '2025-06-30.basil',\n    });\n  }\n\n  private async createLog(c: Context, action: string, tableName?: string, statusCode?: number, userId?: string, metadata?: object, body?: any) {\n    try {\n      let requestBody: any = body || { note: 'Body not provided for logging' };\n      if (metadata) requestBody = { ...requestBody, metadata };\n      const clientIP = c.req.header('cf-connecting-ip') ||\n        c.req.header('x-forwarded-for') ||\n        c.req.header('x-real-ip') ||\n        'unknown';\n      await this.logService.createLog({\n        ip_address: clientIP,\n        table_name: tableName,\n        controller: `StripeController.${action}`,\n        original_path: c.req.path,\n        http_method: c.req.method,\n        request_body: JSON.stringify(requestBody),\n        user_id: userId,\n        status_code: statusCode,\n      });\n    } catch (error) {\n      console.error('Error creating log:', error);\n    }\n  }\n\n  async getTiers(c: Context) {\n    await this.createLog(c, 'getTiers', undefined, 200);\n    return c.json(CREDIT_TIERS, 200);\n  }\n\n  @httpGet('/checkout', LoggedCheck)\n  async checkout(c: Context) {\n    try {\n      const query = c.req.query();\n      try {\n        await checkoutQuerySchema.validate(query);\n      } catch (error) {\n        await this.createLog(c, 'checkout', 'stripe_sessions', 400, undefined, undefined, query);\n        return sendError(c, 400, 'Validation failed', error);\n      }\n\n      const user = c.get('user');\n      if (!user) {\n        await this.createLog(c, 'checkout', 'stripe_sessions', 401);\n        return sendError(c, 401, 'Unauthorized');\n      }\n\n      const selectedTier = CREDIT_TIERS.find(t => t.id === query.tier);\n      if (!selectedTier) {\n        await this.createLog(c, 'checkout', 'stripe_sessions', 400, user.user_id, { tier: query.tier, reason: 'invalid_tier' }, query);\n        return sendError(c, 400, 'Invalid tier selected');\n      }\n\n      const session = await this.createCheckoutSession(selectedTier, user.user_id);\n      if (!session.url) {\n        await this.createLog(c, 'checkout', 'stripe_sessions', 500, user.user_id, { tier: selectedTier.id, reason: 'no_session_url' }, query);\n        return sendError(c, 500, 'Failed to create checkout session');\n      }\n\n      await this.createLog(c, 'checkout', 'stripe_sessions', 200, user.user_id, {\n        tier: selectedTier.id,\n        credits: selectedTier.credits,\n        price: selectedTier.price,\n        session_id: session.id,\n      }, query);\n\n      return c.json({ url: session.url }, 200);\n    } catch (error) {\n      const user = c.get('user');\n      await this.createLog(c, 'checkout', 'stripe_sessions', 500, user?.user_id, { error: error instanceof Error ? error.message : String(error) });\n      return sendError(c, 500, 'Error creating checkout session', error);\n    }\n  }\n\n  async webhook(c: Context) {\n    try {\n      if (!STRIPE_WEBHOOK_SECRET) {\n        await this.createLog(c, 'webhook', 'stripe_webhooks', 500);\n        return sendError(c, 500, 'Stripe webhook secret is not set');\n      }\n\n      const sig = c.req.header('stripe-signature');\n      if (!sig) {\n        await this.createLog(c, 'webhook', 'stripe_webhooks', 400);\n        return sendError(c, 400, 'Missing Stripe signature');\n      }\n\n      let event: Stripe.Event;\n      try {\n        const body = await c.req.text();\n        event = this.stripe.webhooks.constructEvent(body, sig, STRIPE_WEBHOOK_SECRET);\n      } catch (err) {\n        await this.createLog(c, 'webhook', 'stripe_webhooks', 400, undefined, { error: 'signature_verification_failed' });\n        return sendError(c, 400, 'Webhook signature verification failed', err);\n      }\n\n      try {\n        await this.processWebhookEvent(event);\n        await this.createLog(c, 'webhook', 'stripe_webhooks', 200, undefined, {\n          event_type: event.type,\n          event_id: event.id,\n        });\n        return c.json({ received: true }, 200);\n      } catch (error) {\n        await this.createLog(c, 'webhook', 'stripe_webhooks', 500, undefined, {\n          event_type: event.type,\n          event_id: event.id,\n          error: error instanceof Error ? error.message : String(error),\n        });\n        return sendError(c, 500, 'Error processing webhook event', error);\n      }\n    } catch (error) {\n      await this.createLog(c, 'webhook', 'stripe_webhooks', 500);\n      return sendError(c, 500, 'Internal server error', error);\n    }\n  }\n\n  private async processWebhookEvent(event: Stripe.Event): Promise<void> {\n    switch (event.type) {\n      case 'checkout.session.completed':\n        await this.handleCheckoutCompleted(event.data.object as Stripe.Checkout.Session);\n        break;\n      case 'payment_intent.succeeded':\n        console.log('Payment succeeded:', event.data.object);\n        break;\n      case 'payment_intent.payment_failed':\n        console.log('Payment failed:', event.data.object);\n        break;\n      default:\n        console.log(`Unhandled event type: ${event.type}`);\n    }\n  }\n\n  private async handleCheckoutCompleted(session: Stripe.Checkout.Session): Promise<void> {\n    const { metadata } = session;\n    if (!metadata?.user_id || !metadata?.credits) {\n      throw new Error('Invalid session metadata: missing user_id or credits');\n    }\n    const user = await this.userService.getUser(metadata.user_id);\n    if (!user) {\n      throw new Error(`User not found: ${metadata.user_id}`);\n    }\n    const creditsToAdd = parseInt(metadata.credits, 10);\n    if (isNaN(creditsToAdd) || creditsToAdd <= 0) {\n      throw new Error(`Invalid credits amount: ${metadata.credits}`);\n    }\n    await this.userService.updateUserBalance(user.user_id, user.balance + creditsToAdd);\n    console.log(`Added ${creditsToAdd} credits to user ${user.user_id} (${user.username})`);\n  }\n\n  private async createCheckoutSession(tier: (typeof CREDIT_TIERS)[number], userId: string): Promise<Stripe.Checkout.Session> {\n    return await this.stripe.checkout.sessions.create({\n      payment_method_types: ['card', 'link', 'paypal'],\n      payment_method_options: {\n        card: {},\n        link: {},\n      },\n      line_items: [\n        {\n          quantity: 1,\n          price_data: {\n            currency: 'eur',\n            product_data: {\n              name: tier.name,\n              images: [tier.image],\n              description: `Add ${tier.credits} credits to your Croissant account`,\n            },\n            unit_amount: tier.price,\n          },\n        },\n      ],\n      mode: 'payment',\n      metadata: {\n        credits: tier.credits.toString(),\n        user_id: userId,\n        tier_id: tier.id,\n      },\n      success_url: `${process.env.FRONTEND_URL || 'https://croissant-api.fr'}/buy-credits/success?session_id={CHECKOUT_SESSION_ID}`,\n      cancel_url: `${process.env.FRONTEND_URL || 'https://croissant-api.fr'}/buy-credits`,\n      automatic_tax: { enabled: true },\n      billing_address_collection: 'auto',\n      customer_creation: 'if_required',\n    });\n  }\n}\n", "import { WebPlatformFunctions } from './platform/WebPlatformFunctions.js';\nimport { createStripe } from './stripe.core.js';\nexport const Stripe = createStripe(new WebPlatformFunctions());\nexport default Stripe;\n", "import { PlatformFunctions } from './PlatformFunctions.js';\nimport { StripeEmitter } from '../StripeEmitter.js';\n/**\n * Specializes WebPlatformFunctions using APIs available in Web workers.\n */\nexport class WebPlatformFunctions extends PlatformFunctions {\n    /** @override */\n    getUname() {\n        return Promise.resolve(null);\n    }\n    /** @override */\n    createEmitter() {\n        return new StripeEmitter();\n    }\n    /** @override */\n    tryBufferData(data) {\n        if (data.file.data instanceof ReadableStream) {\n            throw new Error('Uploading a file as a stream is not supported in non-Node environments. Please open or upvote an issue at github.com/stripe/stripe-node if you use this, detailing your use-case.');\n        }\n        return Promise.resolve(data);\n    }\n    /** @override */\n    createNodeHttpClient() {\n        throw new Error('Stripe: `createNodeHttpClient()` is not available in non-Node environments. Please use `createFetchHttpClient()` instead.');\n    }\n    /** @override */\n    createDefaultHttpClient() {\n        return super.createFetchHttpClient();\n    }\n    /** @override */\n    createNodeCryptoProvider() {\n        throw new Error('Stripe: `createNodeCryptoProvider()` is not available in non-Node environments. Please use `createSubtleCryptoProvider()` instead.');\n    }\n    /** @override */\n    createDefaultCryptoProvider() {\n        return this.createSubtleCryptoProvider();\n    }\n}\n", "import { FetchHttpClient } from '../net/FetchHttpClient.js';\nimport { SubtleCryptoProvider } from '../crypto/SubtleCryptoProvider.js';\n/**\n * Interface encapsulating various utility functions whose\n * implementations depend on the platform / JS runtime.\n */\nexport class PlatformFunctions {\n    constructor() {\n        this._fetchFn = null;\n        this._agent = null;\n    }\n    /**\n     * Gets uname with Node's built-in `exec` function, if available.\n     */\n    getUname() {\n        throw new Error('getUname not implemented.');\n    }\n    /**\n     * Generates a v4 UUID. See https://stackoverflow.com/a/2117523\n     */\n    uuid4() {\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\n            const r = (Math.random() * 16) | 0;\n            const v = c === 'x' ? r : (r & 0x3) | 0x8;\n            return v.toString(16);\n        });\n    }\n    /**\n     * Compares strings in constant time.\n     */\n    secureCompare(a, b) {\n        // return early here if buffer lengths are not equal\n        if (a.length !== b.length) {\n            return false;\n        }\n        const len = a.length;\n        let result = 0;\n        for (let i = 0; i < len; ++i) {\n            result |= a.charCodeAt(i) ^ b.charCodeAt(i);\n        }\n        return result === 0;\n    }\n    /**\n     * Creates an event emitter.\n     */\n    createEmitter() {\n        throw new Error('createEmitter not implemented.');\n    }\n    /**\n     * Checks if the request data is a stream. If so, read the entire stream\n     * to a buffer and return the buffer.\n     */\n    tryBufferData(data) {\n        throw new Error('tryBufferData not implemented.');\n    }\n    /**\n     * Creates an HTTP client which uses the Node `http` and `https` packages\n     * to issue requests.\n     */\n    createNodeHttpClient(agent) {\n        throw new Error('createNodeHttpClient not implemented.');\n    }\n    /**\n     * Creates an HTTP client for issuing Stripe API requests which uses the Web\n     * Fetch API.\n     *\n     * A fetch function can optionally be passed in as a parameter. If none is\n     * passed, will default to the default `fetch` function in the global scope.\n     */\n    createFetchHttpClient(fetchFn) {\n        return new FetchHttpClient(fetchFn);\n    }\n    /**\n     * Creates an HTTP client using runtime-specific APIs.\n     */\n    createDefaultHttpClient() {\n        throw new Error('createDefaultHttpClient not implemented.');\n    }\n    /**\n     * Creates a CryptoProvider which uses the Node `crypto` package for its computations.\n     */\n    createNodeCryptoProvider() {\n        throw new Error('createNodeCryptoProvider not implemented.');\n    }\n    /**\n     * Creates a CryptoProvider which uses the SubtleCrypto interface of the Web Crypto API.\n     */\n    createSubtleCryptoProvider(subtleCrypto) {\n        return new SubtleCryptoProvider(subtleCrypto);\n    }\n    createDefaultCryptoProvider() {\n        throw new Error('createDefaultCryptoProvider not implemented.');\n    }\n}\n", "import { parseHeadersForFetch } from '../utils.js';\nimport { HttpClient, HttpClientResponse, } from './HttpClient.js';\n/**\n * HTTP client which uses a `fetch` function to issue requests.\n *\n * By default relies on the global `fetch` function, but an optional function\n * can be passed in. If passing in a function, it is expected to match the Web\n * Fetch API. As an example, this could be the function provided by the\n * node-fetch package (https://github.com/node-fetch/node-fetch).\n */\nexport class FetchHttpClient extends HttpClient {\n    constructor(fetchFn) {\n        super();\n        // Default to global fetch if available\n        if (!fetchFn) {\n            if (!globalThis.fetch) {\n                throw new Error('fetch() function not provided and is not defined in the global scope. ' +\n                    'You must provide a fetch implementation.');\n            }\n            fetchFn = globalThis.fetch;\n        }\n        // Both timeout behaviors differs from Node:\n        // - Fetch uses a single timeout for the entire length of the request.\n        // - Node is more fine-grained and resets the timeout after each stage of the request.\n        if (globalThis.AbortController) {\n            // Utilise native AbortController if available\n            // AbortController was added in Node v15.0.0, v14.17.0\n            this._fetchFn = FetchHttpClient.makeFetchWithAbortTimeout(fetchFn);\n        }\n        else {\n            // Fall back to racing against a timeout promise if not available in the runtime\n            // This does not actually cancel the underlying fetch operation or resources\n            this._fetchFn = FetchHttpClient.makeFetchWithRaceTimeout(fetchFn);\n        }\n    }\n    static makeFetchWithRaceTimeout(fetchFn) {\n        return (url, init, timeout) => {\n            let pendingTimeoutId;\n            const timeoutPromise = new Promise((_, reject) => {\n                pendingTimeoutId = setTimeout(() => {\n                    pendingTimeoutId = null;\n                    reject(HttpClient.makeTimeoutError());\n                }, timeout);\n            });\n            const fetchPromise = fetchFn(url, init);\n            return Promise.race([fetchPromise, timeoutPromise]).finally(() => {\n                if (pendingTimeoutId) {\n                    clearTimeout(pendingTimeoutId);\n                }\n            });\n        };\n    }\n    static makeFetchWithAbortTimeout(fetchFn) {\n        return async (url, init, timeout) => {\n            // Use AbortController because AbortSignal.timeout() was added later in Node v17.3.0, v16.14.0\n            const abort = new AbortController();\n            let timeoutId = setTimeout(() => {\n                timeoutId = null;\n                abort.abort(HttpClient.makeTimeoutError());\n            }, timeout);\n            try {\n                return await fetchFn(url, Object.assign(Object.assign({}, init), { signal: abort.signal }));\n            }\n            catch (err) {\n                // Some implementations, like node-fetch, do not respect the reason passed to AbortController.abort()\n                // and instead it always throws an AbortError\n                // We catch this case to normalise all timeout errors\n                if (err.name === 'AbortError') {\n                    throw HttpClient.makeTimeoutError();\n                }\n                else {\n                    throw err;\n                }\n            }\n            finally {\n                if (timeoutId) {\n                    clearTimeout(timeoutId);\n                }\n            }\n        };\n    }\n    /** @override. */\n    getClientName() {\n        return 'fetch';\n    }\n    async makeRequest(host, port, path, method, headers, requestData, protocol, timeout) {\n        const isInsecureConnection = protocol === 'http';\n        const url = new URL(path, `${isInsecureConnection ? 'http' : 'https'}://${host}`);\n        url.port = port;\n        // For methods which expect payloads, we should always pass a body value\n        // even when it is empty. Without this, some JS runtimes (eg. Deno) will\n        // inject a second Content-Length header. See https://github.com/stripe/stripe-node/issues/1519\n        // for more details.\n        const methodHasPayload = method == 'POST' || method == 'PUT' || method == 'PATCH';\n        const body = requestData || (methodHasPayload ? '' : undefined);\n        const res = await this._fetchFn(url.toString(), {\n            method,\n            headers: parseHeadersForFetch(headers),\n            body: typeof body === 'object' ? JSON.stringify(body) : body,\n        }, timeout);\n        return new FetchHttpClientResponse(res);\n    }\n}\nexport class FetchHttpClientResponse extends HttpClientResponse {\n    constructor(res) {\n        super(res.status, FetchHttpClientResponse._transformHeadersToObject(res.headers));\n        this._res = res;\n    }\n    getRawResponse() {\n        return this._res;\n    }\n    toStream(streamCompleteCallback) {\n        // Unfortunately `fetch` does not have event handlers for when the stream is\n        // completely read. We therefore invoke the streamCompleteCallback right\n        // away. This callback emits a response event with metadata and completes\n        // metrics, so it's ok to do this without waiting for the stream to be\n        // completely read.\n        streamCompleteCallback();\n        // Fetch's `body` property is expected to be a readable stream of the body.\n        return this._res.body;\n    }\n    toJSON() {\n        return this._res.json();\n    }\n    static _transformHeadersToObject(headers) {\n        // Fetch uses a Headers instance so this must be converted to a barebones\n        // JS object to meet the HttpClient interface.\n        const headersObj = {};\n        for (const entry of headers) {\n            if (!Array.isArray(entry) || entry.length != 2) {\n                throw new Error('Response objects produced by the fetch function given to FetchHttpClient do not have an iterable headers map. Response#headers should be an iterable object.');\n            }\n            headersObj[entry[0]] = entry[1];\n        }\n        return headersObj;\n    }\n}\n", "import * as qs from 'qs';\nconst OPTIONS_KEYS = [\n    'apiKey',\n    'idempotencyKey',\n    'stripeAccount',\n    'apiVersion',\n    'maxNetworkRetries',\n    'timeout',\n    'host',\n    'authenticator',\n    'stripeContext',\n    'additionalHeaders',\n    'streaming',\n];\nexport function isOptionsHash(o) {\n    return (o &&\n        typeof o === 'object' &&\n        OPTIONS_KEYS.some((prop) => Object.prototype.hasOwnProperty.call(o, prop)));\n}\n/**\n * Stringifies an Object, accommodating nested objects\n * (forming the conventional key 'parent[child]=value')\n */\nexport function queryStringifyRequestData(data, apiMode) {\n    return (qs\n        .stringify(data, {\n        serializeDate: (d) => Math.floor(d.getTime() / 1000).toString(),\n        arrayFormat: apiMode == 'v2' ? 'repeat' : 'indices',\n    })\n        // Don't use strict form encoding by changing the square bracket control\n        // characters back to their literals. This is fine by the server, and\n        // makes these parameter strings easier to read.\n        .replace(/%5B/g, '[')\n        .replace(/%5D/g, ']'));\n}\n/**\n * Outputs a new function with interpolated object property values.\n * Use like so:\n *   const fn = makeURLInterpolator('some/url/{param1}/{param2}');\n *   fn({ param1: 123, param2: 456 }); // => 'some/url/123/456'\n */\nexport const makeURLInterpolator = (() => {\n    const rc = {\n        '\\n': '\\\\n',\n        '\"': '\\\\\"',\n        '\\u2028': '\\\\u2028',\n        '\\u2029': '\\\\u2029',\n    };\n    return (str) => {\n        const cleanString = str.replace(/[\"\\n\\r\\u2028\\u2029]/g, ($0) => rc[$0]);\n        return (outputs) => {\n            return cleanString.replace(/\\{([\\s\\S]+?)\\}/g, ($0, $1) => {\n                const output = outputs[$1];\n                if (isValidEncodeUriComponentType(output))\n                    return encodeURIComponent(output);\n                return '';\n            });\n        };\n    };\n})();\nfunction isValidEncodeUriComponentType(value) {\n    return ['number', 'string', 'boolean'].includes(typeof value);\n}\nexport function extractUrlParams(path) {\n    const params = path.match(/\\{\\w+\\}/g);\n    if (!params) {\n        return [];\n    }\n    return params.map((param) => param.replace(/[{}]/g, ''));\n}\n/**\n * Return the data argument from a list of arguments\n *\n * @param {object[]} args\n * @returns {object}\n */\nexport function getDataFromArgs(args) {\n    if (!Array.isArray(args) || !args[0] || typeof args[0] !== 'object') {\n        return {};\n    }\n    if (!isOptionsHash(args[0])) {\n        return args.shift();\n    }\n    const argKeys = Object.keys(args[0]);\n    const optionKeysInArgs = argKeys.filter((key) => OPTIONS_KEYS.includes(key));\n    // In some cases options may be the provided as the first argument.\n    // Here we're detecting a case where there are two distinct arguments\n    // (the first being args and the second options) and with known\n    // option keys in the first so that we can warn the user about it.\n    if (optionKeysInArgs.length > 0 &&\n        optionKeysInArgs.length !== argKeys.length) {\n        emitWarning(`Options found in arguments (${optionKeysInArgs.join(', ')}). Did you mean to pass an options object? See https://github.com/stripe/stripe-node/wiki/Passing-Options.`);\n    }\n    return {};\n}\n/**\n * Return the options hash from a list of arguments\n */\nexport function getOptionsFromArgs(args) {\n    const opts = {\n        host: null,\n        headers: {},\n        settings: {},\n        streaming: false,\n    };\n    if (args.length > 0) {\n        const arg = args[args.length - 1];\n        if (typeof arg === 'string') {\n            opts.authenticator = createApiKeyAuthenticator(args.pop());\n        }\n        else if (isOptionsHash(arg)) {\n            const params = Object.assign({}, args.pop());\n            const extraKeys = Object.keys(params).filter((key) => !OPTIONS_KEYS.includes(key));\n            if (extraKeys.length) {\n                emitWarning(`Invalid options found (${extraKeys.join(', ')}); ignoring.`);\n            }\n            if (params.apiKey) {\n                opts.authenticator = createApiKeyAuthenticator(params.apiKey);\n            }\n            if (params.idempotencyKey) {\n                opts.headers['Idempotency-Key'] = params.idempotencyKey;\n            }\n            if (params.stripeAccount) {\n                opts.headers['Stripe-Account'] = params.stripeAccount;\n            }\n            if (params.stripeContext) {\n                if (opts.headers['Stripe-Account']) {\n                    throw new Error(\"Can't specify both stripeAccount and stripeContext.\");\n                }\n                opts.headers['Stripe-Context'] = params.stripeContext;\n            }\n            if (params.apiVersion) {\n                opts.headers['Stripe-Version'] = params.apiVersion;\n            }\n            if (Number.isInteger(params.maxNetworkRetries)) {\n                opts.settings.maxNetworkRetries = params.maxNetworkRetries;\n            }\n            if (Number.isInteger(params.timeout)) {\n                opts.settings.timeout = params.timeout;\n            }\n            if (params.host) {\n                opts.host = params.host;\n            }\n            if (params.authenticator) {\n                if (params.apiKey) {\n                    throw new Error(\"Can't specify both apiKey and authenticator.\");\n                }\n                if (typeof params.authenticator !== 'function') {\n                    throw new Error('The authenticator must be a function ' +\n                        'receiving a request as the first parameter.');\n                }\n                opts.authenticator = params.authenticator;\n            }\n            if (params.additionalHeaders) {\n                opts.headers = params.additionalHeaders;\n            }\n            if (params.streaming) {\n                opts.streaming = true;\n            }\n        }\n    }\n    return opts;\n}\n/**\n * Provide simple \"Class\" extension mechanism.\n * <!-- Public API accessible via Stripe.StripeResource.extend -->\n */\nexport function protoExtend(sub) {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const Super = this;\n    const Constructor = Object.prototype.hasOwnProperty.call(sub, 'constructor')\n        ? sub.constructor\n        : function (...args) {\n            Super.apply(this, args);\n        };\n    // This initialization logic is somewhat sensitive to be compatible with\n    // divergent JS implementations like the one found in Qt. See here for more\n    // context:\n    //\n    // https://github.com/stripe/stripe-node/pull/334\n    Object.assign(Constructor, Super);\n    Constructor.prototype = Object.create(Super.prototype);\n    Object.assign(Constructor.prototype, sub);\n    return Constructor;\n}\n/**\n * Remove empty values from an object\n */\nexport function removeNullish(obj) {\n    if (typeof obj !== 'object') {\n        throw new Error('Argument must be an object');\n    }\n    return Object.keys(obj).reduce((result, key) => {\n        if (obj[key] != null) {\n            result[key] = obj[key];\n        }\n        return result;\n    }, {});\n}\n/**\n * Normalize standard HTTP Headers:\n * {'foo-bar': 'hi'}\n * becomes\n * {'Foo-Bar': 'hi'}\n */\nexport function normalizeHeaders(obj) {\n    if (!(obj && typeof obj === 'object')) {\n        return obj;\n    }\n    return Object.keys(obj).reduce((result, header) => {\n        result[normalizeHeader(header)] = obj[header];\n        return result;\n    }, {});\n}\n/**\n * Stolen from https://github.com/marten-de-vries/header-case-normalizer/blob/master/index.js#L36-L41\n * without the exceptions which are irrelevant to us.\n */\nexport function normalizeHeader(header) {\n    return header\n        .split('-')\n        .map((text) => text.charAt(0).toUpperCase() + text.substr(1).toLowerCase())\n        .join('-');\n}\nexport function callbackifyPromiseWithTimeout(promise, callback) {\n    if (callback) {\n        // Ensure callback is called outside of promise stack.\n        return promise.then((res) => {\n            setTimeout(() => {\n                callback(null, res);\n            }, 0);\n        }, (err) => {\n            setTimeout(() => {\n                callback(err, null);\n            }, 0);\n        });\n    }\n    return promise;\n}\n/**\n * Allow for special capitalization cases (such as OAuth)\n */\nexport function pascalToCamelCase(name) {\n    if (name === 'OAuth') {\n        return 'oauth';\n    }\n    else {\n        return name[0].toLowerCase() + name.substring(1);\n    }\n}\nexport function emitWarning(warning) {\n    if (typeof process.emitWarning !== 'function') {\n        return console.warn(`Stripe: ${warning}`); /* eslint-disable-line no-console */\n    }\n    return process.emitWarning(warning, 'Stripe');\n}\nexport function isObject(obj) {\n    const type = typeof obj;\n    return (type === 'function' || type === 'object') && !!obj;\n}\n// For use in multipart requests\nexport function flattenAndStringify(data) {\n    const result = {};\n    const step = (obj, prevKey) => {\n        Object.entries(obj).forEach(([key, value]) => {\n            const newKey = prevKey ? `${prevKey}[${key}]` : key;\n            if (isObject(value)) {\n                if (!(value instanceof Uint8Array) &&\n                    !Object.prototype.hasOwnProperty.call(value, 'data')) {\n                    // Non-buffer non-file Objects are recursively flattened\n                    return step(value, newKey);\n                }\n                else {\n                    // Buffers and file objects are stored without modification\n                    result[newKey] = value;\n                }\n            }\n            else {\n                // Primitives are converted to strings\n                result[newKey] = String(value);\n            }\n        });\n    };\n    step(data, null);\n    return result;\n}\nexport function validateInteger(name, n, defaultVal) {\n    if (!Number.isInteger(n)) {\n        if (defaultVal !== undefined) {\n            return defaultVal;\n        }\n        else {\n            throw new Error(`${name} must be an integer`);\n        }\n    }\n    return n;\n}\nexport function determineProcessUserAgentProperties() {\n    return typeof process === 'undefined'\n        ? {}\n        : {\n            lang_version: process.version,\n            platform: process.platform,\n        };\n}\nexport function createApiKeyAuthenticator(apiKey) {\n    const authenticator = (request) => {\n        request.headers.Authorization = 'Bearer ' + apiKey;\n        return Promise.resolve();\n    };\n    // For testing\n    authenticator._apiKey = apiKey;\n    return authenticator;\n}\n/**\n * Joins an array of Uint8Arrays into a single Uint8Array\n */\nexport function concat(arrays) {\n    const totalLength = arrays.reduce((len, array) => len + array.length, 0);\n    const merged = new Uint8Array(totalLength);\n    let offset = 0;\n    arrays.forEach((array) => {\n        merged.set(array, offset);\n        offset += array.length;\n    });\n    return merged;\n}\n/**\n * Replaces Date objects with Unix timestamps\n */\nfunction dateTimeReplacer(key, value) {\n    if (this[key] instanceof Date) {\n        return Math.floor(this[key].getTime() / 1000).toString();\n    }\n    return value;\n}\n/**\n * JSON stringifies an Object, replacing Date objects with Unix timestamps\n */\nexport function jsonStringifyRequestData(data) {\n    return JSON.stringify(data, dateTimeReplacer);\n}\n/**\n * Inspects the given path to determine if the endpoint is for v1 or v2 API\n */\nexport function getAPIMode(path) {\n    if (!path) {\n        return 'v1';\n    }\n    return path.startsWith('/v2') ? 'v2' : 'v1';\n}\nexport function parseHttpHeaderAsString(header) {\n    if (Array.isArray(header)) {\n        return header.join(', ');\n    }\n    return String(header);\n}\nexport function parseHttpHeaderAsNumber(header) {\n    const number = Array.isArray(header) ? header[0] : header;\n    return Number(number);\n}\nexport function parseHeadersForFetch(headers) {\n    return Object.entries(headers).map(([key, value]) => {\n        return [key, parseHttpHeaderAsString(value)];\n    });\n}\n", "/**\n * Encapsulates the logic for issuing a request to the Stripe API.\n *\n * A custom HTTP client should should implement:\n * 1. A response class which extends HttpClientResponse and wraps around their\n *    own internal representation of a response.\n * 2. A client class which extends HttpClient and implements all methods,\n *    returning their own response class when making requests.\n */\nexport class HttpClient {\n    /** The client name used for diagnostics. */\n    getClientName() {\n        throw new Error('getClientName not implemented.');\n    }\n    makeRequest(host, port, path, method, headers, requestData, protocol, timeout) {\n        throw new Error('makeRequest not implemented.');\n    }\n    /** Helper to make a consistent timeout error across implementations. */\n    static makeTimeoutError() {\n        const timeoutErr = new TypeError(HttpClient.TIMEOUT_ERROR_CODE);\n        timeoutErr.code = HttpClient.TIMEOUT_ERROR_CODE;\n        return timeoutErr;\n    }\n}\n// Public API accessible via Stripe.HttpClient\nHttpClient.CONNECTION_CLOSED_ERROR_CODES = ['ECONNRESET', 'EPIPE'];\nHttpClient.TIMEOUT_ERROR_CODE = 'ETIMEDOUT';\nexport class HttpClientResponse {\n    constructor(statusCode, headers) {\n        this._statusCode = statusCode;\n        this._headers = headers;\n    }\n    getStatusCode() {\n        return this._statusCode;\n    }\n    getHeaders() {\n        return this._headers;\n    }\n    getRawResponse() {\n        throw new Error('getRawResponse not implemented.');\n    }\n    toStream(streamCompleteCallback) {\n        throw new Error('toStream not implemented.');\n    }\n    toJSON() {\n        throw new Error('toJSON not implemented.');\n    }\n}\n", "import { CryptoProvider, CryptoProviderOnlySupportsAsyncError, } from './CryptoProvider.js';\n/**\n * `CryptoProvider which uses the SubtleCrypto interface of the Web Crypto API.\n *\n * This only supports asynchronous operations.\n */\nexport class SubtleCryptoProvider extends CryptoProvider {\n    constructor(subtleCrypto) {\n        super();\n        // If no subtle crypto is interface, default to the global namespace. This\n        // is to allow custom interfaces (eg. using the Node webcrypto interface in\n        // tests).\n        this.subtleCrypto = subtleCrypto || crypto.subtle;\n    }\n    /** @override */\n    computeHMACSignature(payload, secret) {\n        throw new CryptoProviderOnlySupportsAsyncError('SubtleCryptoProvider cannot be used in a synchronous context.');\n    }\n    /** @override */\n    async computeHMACSignatureAsync(payload, secret) {\n        const encoder = new TextEncoder();\n        const key = await this.subtleCrypto.importKey('raw', encoder.encode(secret), {\n            name: 'HMAC',\n            hash: { name: 'SHA-256' },\n        }, false, ['sign']);\n        const signatureBuffer = await this.subtleCrypto.sign('hmac', key, encoder.encode(payload));\n        // crypto.subtle returns the signature in base64 format. This must be\n        // encoded in hex to match the CryptoProvider contract. We map each byte in\n        // the buffer to its corresponding hex octet and then combine into a string.\n        const signatureBytes = new Uint8Array(signatureBuffer);\n        const signatureHexCodes = new Array(signatureBytes.length);\n        for (let i = 0; i < signatureBytes.length; i++) {\n            signatureHexCodes[i] = byteHexMapping[signatureBytes[i]];\n        }\n        return signatureHexCodes.join('');\n    }\n    /** @override */\n    async computeSHA256Async(data) {\n        return new Uint8Array(await this.subtleCrypto.digest('SHA-256', data));\n    }\n}\n// Cached mapping of byte to hex representation. We do this once to avoid re-\n// computing every time we need to convert the result of a signature to hex.\nconst byteHexMapping = new Array(256);\nfor (let i = 0; i < byteHexMapping.length; i++) {\n    byteHexMapping[i] = i.toString(16).padStart(2, '0');\n}\n", "/**\n * Interface encapsulating the various crypto computations used by the library,\n * allowing pluggable underlying crypto implementations.\n */\nexport class CryptoProvider {\n    /**\n     * Computes a SHA-256 HMAC given a secret and a payload (encoded in UTF-8).\n     * The output HMAC should be encoded in hexadecimal.\n     *\n     * Sample values for implementations:\n     * - computeHMACSignature('', 'test_secret') => 'f7f9bd47fb987337b5796fdc1fdb9ba221d0d5396814bfcaf9521f43fd8927fd'\n     * - computeHMACSignature('\\ud83d\\ude00', 'test_secret') => '837da296d05c4fe31f61d5d7ead035099d9585a5bcde87de952012a78f0b0c43\n     */\n    computeHMACSignature(payload, secret) {\n        throw new Error('computeHMACSignature not implemented.');\n    }\n    /**\n     * Asynchronous version of `computeHMACSignature`. Some implementations may\n     * only allow support async signature computation.\n     *\n     * Computes a SHA-256 HMAC given a secret and a payload (encoded in UTF-8).\n     * The output HMAC should be encoded in hexadecimal.\n     *\n     * Sample values for implementations:\n     * - computeHMACSignature('', 'test_secret') => 'f7f9bd47fb987337b5796fdc1fdb9ba221d0d5396814bfcaf9521f43fd8927fd'\n     * - computeHMACSignature('\\ud83d\\ude00', 'test_secret') => '837da296d05c4fe31f61d5d7ead035099d9585a5bcde87de952012a78f0b0c43\n     */\n    computeHMACSignatureAsync(payload, secret) {\n        throw new Error('computeHMACSignatureAsync not implemented.');\n    }\n    /**\n     * Computes a SHA-256 hash of the data.\n     */\n    computeSHA256Async(data) {\n        throw new Error('computeSHA256 not implemented.');\n    }\n}\n/**\n * If the crypto provider only supports asynchronous operations,\n * throw CryptoProviderOnlySupportsAsyncError instead of\n * a generic error so that the caller can choose to provide\n * a more helpful error message to direct the user to use\n * an asynchronous pathway.\n */\nexport class CryptoProviderOnlySupportsAsyncError extends Error {\n}\n", "/**\n * @private\n * (For internal use in stripe-node.)\n * Wrapper around the Event Web API.\n */\nclass _StripeEvent extends Event {\n    constructor(eventName, data) {\n        super(eventName);\n        this.data = data;\n    }\n}\n/** Minimal EventEmitter wrapper around EventTarget. */\nexport class StripeEmitter {\n    constructor() {\n        this.eventTarget = new EventTarget();\n        this.listenerMapping = new Map();\n    }\n    on(eventName, listener) {\n        const listenerWrapper = (event) => {\n            listener(event.data);\n        };\n        this.listenerMapping.set(listener, listenerWrapper);\n        return this.eventTarget.addEventListener(eventName, listenerWrapper);\n    }\n    removeListener(eventName, listener) {\n        const listenerWrapper = this.listenerMapping.get(listener);\n        this.listenerMapping.delete(listener);\n        return this.eventTarget.removeEventListener(eventName, listenerWrapper);\n    }\n    once(eventName, listener) {\n        const listenerWrapper = (event) => {\n            listener(event.data);\n        };\n        this.listenerMapping.set(listener, listenerWrapper);\n        return this.eventTarget.addEventListener(eventName, listenerWrapper, {\n            once: true,\n        });\n    }\n    emit(eventName, data) {\n        return this.eventTarget.dispatchEvent(new _StripeEvent(eventName, data));\n    }\n}\n", "import * as _Error from './Error.js';\nimport { RequestSender } from './RequestSender.js';\nimport { StripeResource } from './StripeResource.js';\nimport { createWebhooks } from './Webhooks.js';\nimport { ApiVersion } from './apiVersion.js';\nimport { CryptoProvider } from './crypto/CryptoProvider.js';\nimport { HttpClient, HttpClientResponse } from './net/HttpClient.js';\nimport * as resources from './resources.js';\nimport { createApiKeyAuthenticator, determineProcessUserAgentProperties, pascalToCamelCase, validateInteger, } from './utils.js';\nconst DEFAULT_HOST = 'api.stripe.com';\nconst DEFAULT_PORT = '443';\nconst DEFAULT_BASE_PATH = '/v1/';\nconst DEFAULT_API_VERSION = ApiVersion;\nconst DEFAULT_TIMEOUT = 80000;\nconst MAX_NETWORK_RETRY_DELAY_SEC = 5;\nconst INITIAL_NETWORK_RETRY_DELAY_SEC = 0.5;\nconst APP_INFO_PROPERTIES = ['name', 'version', 'url', 'partner_id'];\nconst ALLOWED_CONFIG_PROPERTIES = [\n    'authenticator',\n    'apiVersion',\n    'typescript',\n    'maxNetworkRetries',\n    'httpAgent',\n    'httpClient',\n    'timeout',\n    'host',\n    'port',\n    'protocol',\n    'telemetry',\n    'appInfo',\n    'stripeAccount',\n    'stripeContext',\n];\nconst defaultRequestSenderFactory = (stripe) => new RequestSender(stripe, StripeResource.MAX_BUFFERED_REQUEST_METRICS);\nexport function createStripe(platformFunctions, requestSender = defaultRequestSenderFactory) {\n    Stripe.PACKAGE_VERSION = '18.3.0';\n    Stripe.USER_AGENT = Object.assign({ bindings_version: Stripe.PACKAGE_VERSION, lang: 'node', publisher: 'stripe', uname: null, typescript: false }, determineProcessUserAgentProperties());\n    Stripe.StripeResource = StripeResource;\n    Stripe.resources = resources;\n    Stripe.HttpClient = HttpClient;\n    Stripe.HttpClientResponse = HttpClientResponse;\n    Stripe.CryptoProvider = CryptoProvider;\n    Stripe.webhooks = createWebhooks(platformFunctions);\n    function Stripe(key, config = {}) {\n        if (!(this instanceof Stripe)) {\n            return new Stripe(key, config);\n        }\n        const props = this._getPropsFromConfig(config);\n        this._platformFunctions = platformFunctions;\n        Object.defineProperty(this, '_emitter', {\n            value: this._platformFunctions.createEmitter(),\n            enumerable: false,\n            configurable: false,\n            writable: false,\n        });\n        this.VERSION = Stripe.PACKAGE_VERSION;\n        this.on = this._emitter.on.bind(this._emitter);\n        this.once = this._emitter.once.bind(this._emitter);\n        this.off = this._emitter.removeListener.bind(this._emitter);\n        const agent = props.httpAgent || null;\n        this._api = {\n            host: props.host || DEFAULT_HOST,\n            port: props.port || DEFAULT_PORT,\n            protocol: props.protocol || 'https',\n            basePath: DEFAULT_BASE_PATH,\n            version: props.apiVersion || DEFAULT_API_VERSION,\n            timeout: validateInteger('timeout', props.timeout, DEFAULT_TIMEOUT),\n            maxNetworkRetries: validateInteger('maxNetworkRetries', props.maxNetworkRetries, 2),\n            agent: agent,\n            httpClient: props.httpClient ||\n                (agent\n                    ? this._platformFunctions.createNodeHttpClient(agent)\n                    : this._platformFunctions.createDefaultHttpClient()),\n            dev: false,\n            stripeAccount: props.stripeAccount || null,\n            stripeContext: props.stripeContext || null,\n        };\n        const typescript = props.typescript || false;\n        if (typescript !== Stripe.USER_AGENT.typescript) {\n            // The mutation here is uncomfortable, but likely fastest;\n            // serializing the user agent involves shelling out to the system,\n            // and given some users may instantiate the library many times without switching between TS and non-TS,\n            // we only want to incur the performance hit when that actually happens.\n            Stripe.USER_AGENT.typescript = typescript;\n        }\n        if (props.appInfo) {\n            this._setAppInfo(props.appInfo);\n        }\n        this._prepResources();\n        this._setAuthenticator(key, props.authenticator);\n        this.errors = _Error;\n        this.webhooks = Stripe.webhooks;\n        this._prevRequestMetrics = [];\n        this._enableTelemetry = props.telemetry !== false;\n        this._requestSender = requestSender(this);\n        // Expose StripeResource on the instance too\n        // @ts-ignore\n        this.StripeResource = Stripe.StripeResource;\n    }\n    Stripe.errors = _Error;\n    Stripe.createNodeHttpClient = platformFunctions.createNodeHttpClient;\n    /**\n     * Creates an HTTP client for issuing Stripe API requests which uses the Web\n     * Fetch API.\n     *\n     * A fetch function can optionally be passed in as a parameter. If none is\n     * passed, will default to the default `fetch` function in the global scope.\n     */\n    Stripe.createFetchHttpClient = platformFunctions.createFetchHttpClient;\n    /**\n     * Create a CryptoProvider which uses the built-in Node crypto libraries for\n     * its crypto operations.\n     */\n    Stripe.createNodeCryptoProvider = platformFunctions.createNodeCryptoProvider;\n    /**\n     * Creates a CryptoProvider which uses the Subtle Crypto API from the Web\n     * Crypto API spec for its crypto operations.\n     *\n     * A SubtleCrypto interface can optionally be passed in as a parameter. If none\n     * is passed, will default to the default `crypto.subtle` object in the global\n     * scope.\n     */\n    Stripe.createSubtleCryptoProvider =\n        platformFunctions.createSubtleCryptoProvider;\n    Stripe.prototype = {\n        // Properties are set in the constructor above\n        _appInfo: undefined,\n        on: null,\n        off: null,\n        once: null,\n        VERSION: null,\n        StripeResource: null,\n        webhooks: null,\n        errors: null,\n        _api: null,\n        _prevRequestMetrics: null,\n        _emitter: null,\n        _enableTelemetry: null,\n        _requestSender: null,\n        _platformFunctions: null,\n        rawRequest(method, path, params, options) {\n            return this._requestSender._rawRequest(method, path, params, options);\n        },\n        /**\n         * @private\n         */\n        _setAuthenticator(key, authenticator) {\n            if (key && authenticator) {\n                throw new Error(\"Can't specify both apiKey and authenticator\");\n            }\n            if (!key && !authenticator) {\n                throw new Error('Neither apiKey nor config.authenticator provided');\n            }\n            this._authenticator = key\n                ? createApiKeyAuthenticator(key)\n                : authenticator;\n        },\n        /**\n         * @private\n         * This may be removed in the future.\n         */\n        _setAppInfo(info) {\n            if (info && typeof info !== 'object') {\n                throw new Error('AppInfo must be an object.');\n            }\n            if (info && !info.name) {\n                throw new Error('AppInfo.name is required');\n            }\n            info = info || {};\n            this._appInfo = APP_INFO_PROPERTIES.reduce((accum, prop) => {\n                if (typeof info[prop] == 'string') {\n                    accum = accum || {};\n                    accum[prop] = info[prop];\n                }\n                return accum;\n            }, {});\n        },\n        /**\n         * @private\n         * This may be removed in the future.\n         */\n        _setApiField(key, value) {\n            this._api[key] = value;\n        },\n        /**\n         * @private\n         * Please open or upvote an issue at github.com/stripe/stripe-node\n         * if you use this, detailing your use-case.\n         *\n         * It may be deprecated and removed in the future.\n         */\n        getApiField(key) {\n            return this._api[key];\n        },\n        setClientId(clientId) {\n            this._clientId = clientId;\n        },\n        getClientId() {\n            return this._clientId;\n        },\n        /**\n         * @private\n         * Please open or upvote an issue at github.com/stripe/stripe-node\n         * if you use this, detailing your use-case.\n         *\n         * It may be deprecated and removed in the future.\n         */\n        getConstant: (c) => {\n            switch (c) {\n                case 'DEFAULT_HOST':\n                    return DEFAULT_HOST;\n                case 'DEFAULT_PORT':\n                    return DEFAULT_PORT;\n                case 'DEFAULT_BASE_PATH':\n                    return DEFAULT_BASE_PATH;\n                case 'DEFAULT_API_VERSION':\n                    return DEFAULT_API_VERSION;\n                case 'DEFAULT_TIMEOUT':\n                    return DEFAULT_TIMEOUT;\n                case 'MAX_NETWORK_RETRY_DELAY_SEC':\n                    return MAX_NETWORK_RETRY_DELAY_SEC;\n                case 'INITIAL_NETWORK_RETRY_DELAY_SEC':\n                    return INITIAL_NETWORK_RETRY_DELAY_SEC;\n            }\n            return Stripe[c];\n        },\n        getMaxNetworkRetries() {\n            return this.getApiField('maxNetworkRetries');\n        },\n        /**\n         * @private\n         * This may be removed in the future.\n         */\n        _setApiNumberField(prop, n, defaultVal) {\n            const val = validateInteger(prop, n, defaultVal);\n            this._setApiField(prop, val);\n        },\n        getMaxNetworkRetryDelay() {\n            return MAX_NETWORK_RETRY_DELAY_SEC;\n        },\n        getInitialNetworkRetryDelay() {\n            return INITIAL_NETWORK_RETRY_DELAY_SEC;\n        },\n        /**\n         * @private\n         * Please open or upvote an issue at github.com/stripe/stripe-node\n         * if you use this, detailing your use-case.\n         *\n         * It may be deprecated and removed in the future.\n         *\n         * Gets a JSON version of a User-Agent and uses a cached version for a slight\n         * speed advantage.\n         */\n        getClientUserAgent(cb) {\n            return this.getClientUserAgentSeeded(Stripe.USER_AGENT, cb);\n        },\n        /**\n         * @private\n         * Please open or upvote an issue at github.com/stripe/stripe-node\n         * if you use this, detailing your use-case.\n         *\n         * It may be deprecated and removed in the future.\n         *\n         * Gets a JSON version of a User-Agent by encoding a seeded object and\n         * fetching a uname from the system.\n         */\n        getClientUserAgentSeeded(seed, cb) {\n            this._platformFunctions.getUname().then((uname) => {\n                var _a;\n                const userAgent = {};\n                for (const field in seed) {\n                    if (!Object.prototype.hasOwnProperty.call(seed, field)) {\n                        continue;\n                    }\n                    userAgent[field] = encodeURIComponent((_a = seed[field]) !== null && _a !== void 0 ? _a : 'null');\n                }\n                // URI-encode in case there are unusual characters in the system's uname.\n                userAgent.uname = encodeURIComponent(uname || 'UNKNOWN');\n                const client = this.getApiField('httpClient');\n                if (client) {\n                    userAgent.httplib = encodeURIComponent(client.getClientName());\n                }\n                if (this._appInfo) {\n                    userAgent.application = this._appInfo;\n                }\n                cb(JSON.stringify(userAgent));\n            });\n        },\n        /**\n         * @private\n         * Please open or upvote an issue at github.com/stripe/stripe-node\n         * if you use this, detailing your use-case.\n         *\n         * It may be deprecated and removed in the future.\n         */\n        getAppInfoAsString() {\n            if (!this._appInfo) {\n                return '';\n            }\n            let formatted = this._appInfo.name;\n            if (this._appInfo.version) {\n                formatted += `/${this._appInfo.version}`;\n            }\n            if (this._appInfo.url) {\n                formatted += ` (${this._appInfo.url})`;\n            }\n            return formatted;\n        },\n        getTelemetryEnabled() {\n            return this._enableTelemetry;\n        },\n        /**\n         * @private\n         * This may be removed in the future.\n         */\n        _prepResources() {\n            for (const name in resources) {\n                if (!Object.prototype.hasOwnProperty.call(resources, name)) {\n                    continue;\n                }\n                // @ts-ignore\n                this[pascalToCamelCase(name)] = new resources[name](this);\n            }\n        },\n        /**\n         * @private\n         * This may be removed in the future.\n         */\n        _getPropsFromConfig(config) {\n            // If config is null or undefined, just bail early with no props\n            if (!config) {\n                return {};\n            }\n            // config can be an object or a string\n            const isString = typeof config === 'string';\n            const isObject = config === Object(config) && !Array.isArray(config);\n            if (!isObject && !isString) {\n                throw new Error('Config must either be an object or a string');\n            }\n            // If config is a string, we assume the old behavior of passing in a string representation of the api version\n            if (isString) {\n                return {\n                    apiVersion: config,\n                };\n            }\n            // If config is an object, we assume the new behavior and make sure it doesn't contain any unexpected values\n            const values = Object.keys(config).filter((value) => !ALLOWED_CONFIG_PROPERTIES.includes(value));\n            if (values.length > 0) {\n                throw new Error(`Config object may only contain the following: ${ALLOWED_CONFIG_PROPERTIES.join(', ')}`);\n            }\n            return config;\n        },\n        parseThinEvent(payload, header, secret, tolerance, cryptoProvider, receivedAt) {\n            // parses and validates the event payload all in one go\n            return this.webhooks.constructEvent(payload, header, secret, tolerance, cryptoProvider, receivedAt);\n        },\n    };\n    return Stripe;\n}\n", "/* eslint-disable camelcase */\n/* eslint-disable no-warning-comments */\nexport const generateV1Error = (rawStripeError) => {\n    switch (rawStripeError.type) {\n        case 'card_error':\n            return new StripeCardError(rawStripeError);\n        case 'invalid_request_error':\n            return new StripeInvalidRequestError(rawStripeError);\n        case 'api_error':\n            return new StripeAPIError(rawStripeError);\n        case 'authentication_error':\n            return new StripeAuthenticationError(rawStripeError);\n        case 'rate_limit_error':\n            return new StripeRateLimitError(rawStripeError);\n        case 'idempotency_error':\n            return new StripeIdempotencyError(rawStripeError);\n        case 'invalid_grant':\n            return new StripeInvalidGrantError(rawStripeError);\n        default:\n            return new StripeUnknownError(rawStripeError);\n    }\n};\n// eslint-disable-next-line complexity\nexport const generateV2Error = (rawStripeError) => {\n    switch (rawStripeError.type) {\n        // switchCases: The beginning of the section generated from our OpenAPI spec\n        case 'temporary_session_expired':\n            return new TemporarySessionExpiredError(rawStripeError);\n        // switchCases: The end of the section generated from our OpenAPI spec\n    }\n    // Special handling for requests with missing required fields in V2 APIs.\n    // invalid_field response in V2 APIs returns the field 'code' instead of 'type'.\n    switch (rawStripeError.code) {\n        case 'invalid_fields':\n            return new StripeInvalidRequestError(rawStripeError);\n    }\n    return generateV1Error(rawStripeError);\n};\n/**\n * StripeError is the base error from which all other more specific Stripe errors derive.\n * Specifically for errors returned from Stripe's REST API.\n */\nexport class StripeError extends Error {\n    constructor(raw = {}, type = null) {\n        var _a;\n        super(raw.message);\n        this.type = type || this.constructor.name;\n        this.raw = raw;\n        this.rawType = raw.type;\n        this.code = raw.code;\n        this.doc_url = raw.doc_url;\n        this.param = raw.param;\n        this.detail = raw.detail;\n        this.headers = raw.headers;\n        this.requestId = raw.requestId;\n        this.statusCode = raw.statusCode;\n        this.message = (_a = raw.message) !== null && _a !== void 0 ? _a : '';\n        this.userMessage = raw.user_message;\n        this.charge = raw.charge;\n        this.decline_code = raw.decline_code;\n        this.payment_intent = raw.payment_intent;\n        this.payment_method = raw.payment_method;\n        this.payment_method_type = raw.payment_method_type;\n        this.setup_intent = raw.setup_intent;\n        this.source = raw.source;\n    }\n}\n/**\n * Helper factory which takes raw stripe errors and outputs wrapping instances\n */\nStripeError.generate = generateV1Error;\n// Specific Stripe Error types:\n/**\n * CardError is raised when a user enters a card that can't be charged for\n * some reason.\n */\nexport class StripeCardError extends StripeError {\n    constructor(raw = {}) {\n        super(raw, 'StripeCardError');\n    }\n}\n/**\n * InvalidRequestError is raised when a request is initiated with invalid\n * parameters.\n */\nexport class StripeInvalidRequestError extends StripeError {\n    constructor(raw = {}) {\n        super(raw, 'StripeInvalidRequestError');\n    }\n}\n/**\n * APIError is a generic error that may be raised in cases where none of the\n * other named errors cover the problem. It could also be raised in the case\n * that a new error has been introduced in the API, but this version of the\n * Node.JS SDK doesn't know how to handle it.\n */\nexport class StripeAPIError extends StripeError {\n    constructor(raw = {}) {\n        super(raw, 'StripeAPIError');\n    }\n}\n/**\n * AuthenticationError is raised when invalid credentials are used to connect\n * to Stripe's servers.\n */\nexport class StripeAuthenticationError extends StripeError {\n    constructor(raw = {}) {\n        super(raw, 'StripeAuthenticationError');\n    }\n}\n/**\n * PermissionError is raised in cases where access was attempted on a resource\n * that wasn't allowed.\n */\nexport class StripePermissionError extends StripeError {\n    constructor(raw = {}) {\n        super(raw, 'StripePermissionError');\n    }\n}\n/**\n * RateLimitError is raised in cases where an account is putting too much load\n * on Stripe's API servers (usually by performing too many requests). Please\n * back off on request rate.\n */\nexport class StripeRateLimitError extends StripeError {\n    constructor(raw = {}) {\n        super(raw, 'StripeRateLimitError');\n    }\n}\n/**\n * StripeConnectionError is raised in the event that the SDK can't connect to\n * Stripe's servers. That can be for a variety of different reasons from a\n * downed network to a bad TLS certificate.\n */\nexport class StripeConnectionError extends StripeError {\n    constructor(raw = {}) {\n        super(raw, 'StripeConnectionError');\n    }\n}\n/**\n * SignatureVerificationError is raised when the signature verification for a\n * webhook fails\n */\nexport class StripeSignatureVerificationError extends StripeError {\n    constructor(header, payload, raw = {}) {\n        super(raw, 'StripeSignatureVerificationError');\n        this.header = header;\n        this.payload = payload;\n    }\n}\n/**\n * IdempotencyError is raised in cases where an idempotency key was used\n * improperly.\n */\nexport class StripeIdempotencyError extends StripeError {\n    constructor(raw = {}) {\n        super(raw, 'StripeIdempotencyError');\n    }\n}\n/**\n * InvalidGrantError is raised when a specified code doesn't exist, is\n * expired, has been used, or doesn't belong to you; a refresh token doesn't\n * exist, or doesn't belong to you; or if an API key's mode (live or test)\n * doesn't match the mode of a code or refresh token.\n */\nexport class StripeInvalidGrantError extends StripeError {\n    constructor(raw = {}) {\n        super(raw, 'StripeInvalidGrantError');\n    }\n}\n/**\n * Any other error from Stripe not specifically captured above\n */\nexport class StripeUnknownError extends StripeError {\n    constructor(raw = {}) {\n        super(raw, 'StripeUnknownError');\n    }\n}\n// classDefinitions: The beginning of the section generated from our OpenAPI spec\nexport class TemporarySessionExpiredError extends StripeError {\n    constructor(rawStripeError = {}) {\n        super(rawStripeError, 'TemporarySessionExpiredError');\n    }\n}\n// classDefinitions: The end of the section generated from our OpenAPI spec\n", "import { StripeAPIError, StripeAuthenticationError, StripeConnectionError, StripeError, StripePermissionError, StripeRateLimitError, generateV1Error, generateV2Error, } from './Error.js';\nimport { HttpClient } from './net/HttpClient.js';\nimport { emitWarning, jsonStringifyRequestData, normalizeHeaders, queryStringifyRequestData, removeNullish, getAPIMode, getOptionsFromArgs, getDataFromArgs, parseHttpHeaderAsString, parseHttpHeaderAsNumber, } from './utils.js';\nconst MAX_RETRY_AFTER_WAIT = 60;\nexport class RequestSender {\n    constructor(stripe, maxBufferedRequestMetric) {\n        this._stripe = stripe;\n        this._maxBufferedRequestMetric = maxBufferedRequestMetric;\n    }\n    _addHeadersDirectlyToObject(obj, headers) {\n        // For convenience, make some headers easily accessible on\n        // lastResponse.\n        // NOTE: Stripe responds with lowercase header names/keys.\n        obj.requestId = headers['request-id'];\n        obj.stripeAccount = obj.stripeAccount || headers['stripe-account'];\n        obj.apiVersion = obj.apiVersion || headers['stripe-version'];\n        obj.idempotencyKey = obj.idempotencyKey || headers['idempotency-key'];\n    }\n    _makeResponseEvent(requestEvent, statusCode, headers) {\n        const requestEndTime = Date.now();\n        const requestDurationMs = requestEndTime - requestEvent.request_start_time;\n        return removeNullish({\n            api_version: headers['stripe-version'],\n            account: headers['stripe-account'],\n            idempotency_key: headers['idempotency-key'],\n            method: requestEvent.method,\n            path: requestEvent.path,\n            status: statusCode,\n            request_id: this._getRequestId(headers),\n            elapsed: requestDurationMs,\n            request_start_time: requestEvent.request_start_time,\n            request_end_time: requestEndTime,\n        });\n    }\n    _getRequestId(headers) {\n        return headers['request-id'];\n    }\n    /**\n     * Used by methods with spec.streaming === true. For these methods, we do not\n     * buffer successful responses into memory or do parse them into stripe\n     * objects, we delegate that all of that to the user and pass back the raw\n     * http.Response object to the callback.\n     *\n     * (Unsuccessful responses shouldn't make it here, they should\n     * still be buffered/parsed and handled by _jsonResponseHandler -- see\n     * makeRequest)\n     */\n    _streamingResponseHandler(requestEvent, usage, callback) {\n        return (res) => {\n            const headers = res.getHeaders();\n            const streamCompleteCallback = () => {\n                const responseEvent = this._makeResponseEvent(requestEvent, res.getStatusCode(), headers);\n                this._stripe._emitter.emit('response', responseEvent);\n                this._recordRequestMetrics(this._getRequestId(headers), responseEvent.elapsed, usage);\n            };\n            const stream = res.toStream(streamCompleteCallback);\n            // This is here for backwards compatibility, as the stream is a raw\n            // HTTP response in Node and the legacy behavior was to mutate this\n            // response.\n            this._addHeadersDirectlyToObject(stream, headers);\n            return callback(null, stream);\n        };\n    }\n    /**\n     * Default handler for Stripe responses. Buffers the response into memory,\n     * parses the JSON and returns it (i.e. passes it to the callback) if there\n     * is no \"error\" field. Otherwise constructs/passes an appropriate Error.\n     */\n    _jsonResponseHandler(requestEvent, apiMode, usage, callback) {\n        return (res) => {\n            const headers = res.getHeaders();\n            const requestId = this._getRequestId(headers);\n            const statusCode = res.getStatusCode();\n            const responseEvent = this._makeResponseEvent(requestEvent, statusCode, headers);\n            this._stripe._emitter.emit('response', responseEvent);\n            res\n                .toJSON()\n                .then((jsonResponse) => {\n                if (jsonResponse.error) {\n                    let err;\n                    // Convert OAuth error responses into a standard format\n                    // so that the rest of the error logic can be shared\n                    if (typeof jsonResponse.error === 'string') {\n                        jsonResponse.error = {\n                            type: jsonResponse.error,\n                            message: jsonResponse.error_description,\n                        };\n                    }\n                    jsonResponse.error.headers = headers;\n                    jsonResponse.error.statusCode = statusCode;\n                    jsonResponse.error.requestId = requestId;\n                    if (statusCode === 401) {\n                        err = new StripeAuthenticationError(jsonResponse.error);\n                    }\n                    else if (statusCode === 403) {\n                        err = new StripePermissionError(jsonResponse.error);\n                    }\n                    else if (statusCode === 429) {\n                        err = new StripeRateLimitError(jsonResponse.error);\n                    }\n                    else if (apiMode === 'v2') {\n                        err = generateV2Error(jsonResponse.error);\n                    }\n                    else {\n                        err = generateV1Error(jsonResponse.error);\n                    }\n                    throw err;\n                }\n                return jsonResponse;\n            }, (e) => {\n                throw new StripeAPIError({\n                    message: 'Invalid JSON received from the Stripe API',\n                    exception: e,\n                    requestId: headers['request-id'],\n                });\n            })\n                .then((jsonResponse) => {\n                this._recordRequestMetrics(requestId, responseEvent.elapsed, usage);\n                // Expose raw response object.\n                const rawResponse = res.getRawResponse();\n                this._addHeadersDirectlyToObject(rawResponse, headers);\n                Object.defineProperty(jsonResponse, 'lastResponse', {\n                    enumerable: false,\n                    writable: false,\n                    value: rawResponse,\n                });\n                callback(null, jsonResponse);\n            }, (e) => callback(e, null));\n        };\n    }\n    static _generateConnectionErrorMessage(requestRetries) {\n        return `An error occurred with our connection to Stripe.${requestRetries > 0 ? ` Request was retried ${requestRetries} times.` : ''}`;\n    }\n    // For more on when and how to retry API requests, see https://stripe.com/docs/error-handling#safely-retrying-requests-with-idempotency\n    static _shouldRetry(res, numRetries, maxRetries, error) {\n        if (error &&\n            numRetries === 0 &&\n            HttpClient.CONNECTION_CLOSED_ERROR_CODES.includes(error.code)) {\n            return true;\n        }\n        // Do not retry if we are out of retries.\n        if (numRetries >= maxRetries) {\n            return false;\n        }\n        // Retry on connection error.\n        if (!res) {\n            return true;\n        }\n        // The API may ask us not to retry (e.g., if doing so would be a no-op)\n        // or advise us to retry (e.g., in cases of lock timeouts); we defer to that.\n        if (res.getHeaders()['stripe-should-retry'] === 'false') {\n            return false;\n        }\n        if (res.getHeaders()['stripe-should-retry'] === 'true') {\n            return true;\n        }\n        // Retry on conflict errors.\n        if (res.getStatusCode() === 409) {\n            return true;\n        }\n        // Retry on 500, 503, and other internal errors.\n        //\n        // Note that we expect the stripe-should-retry header to be false\n        // in most cases when a 500 is returned, since our idempotency framework\n        // would typically replay it anyway.\n        if (res.getStatusCode() >= 500) {\n            return true;\n        }\n        return false;\n    }\n    _getSleepTimeInMS(numRetries, retryAfter = null) {\n        const initialNetworkRetryDelay = this._stripe.getInitialNetworkRetryDelay();\n        const maxNetworkRetryDelay = this._stripe.getMaxNetworkRetryDelay();\n        // Apply exponential backoff with initialNetworkRetryDelay on the\n        // number of numRetries so far as inputs. Do not allow the number to exceed\n        // maxNetworkRetryDelay.\n        let sleepSeconds = Math.min(initialNetworkRetryDelay * Math.pow(2, numRetries - 1), maxNetworkRetryDelay);\n        // Apply some jitter by randomizing the value in the range of\n        // (sleepSeconds / 2) to (sleepSeconds).\n        sleepSeconds *= 0.5 * (1 + Math.random());\n        // But never sleep less than the base sleep seconds.\n        sleepSeconds = Math.max(initialNetworkRetryDelay, sleepSeconds);\n        // And never sleep less than the time the API asks us to wait, assuming it's a reasonable ask.\n        if (Number.isInteger(retryAfter) && retryAfter <= MAX_RETRY_AFTER_WAIT) {\n            sleepSeconds = Math.max(sleepSeconds, retryAfter);\n        }\n        return sleepSeconds * 1000;\n    }\n    // Max retries can be set on a per request basis. Favor those over the global setting\n    _getMaxNetworkRetries(settings = {}) {\n        return settings.maxNetworkRetries !== undefined &&\n            Number.isInteger(settings.maxNetworkRetries)\n            ? settings.maxNetworkRetries\n            : this._stripe.getMaxNetworkRetries();\n    }\n    _defaultIdempotencyKey(method, settings, apiMode) {\n        // If this is a POST and we allow multiple retries, ensure an idempotency key.\n        const maxRetries = this._getMaxNetworkRetries(settings);\n        const genKey = () => `stripe-node-retry-${this._stripe._platformFunctions.uuid4()}`;\n        // more verbose than it needs to be, but gives clear separation between V1 and V2 behavior\n        if (apiMode === 'v2') {\n            if (method === 'POST' || method === 'DELETE') {\n                return genKey();\n            }\n        }\n        else if (apiMode === 'v1') {\n            if (method === 'POST' && maxRetries > 0) {\n                return genKey();\n            }\n        }\n        return null;\n    }\n    _makeHeaders({ contentType, contentLength, apiVersion, clientUserAgent, method, userSuppliedHeaders, userSuppliedSettings, stripeAccount, stripeContext, apiMode, }) {\n        const defaultHeaders = {\n            Accept: 'application/json',\n            'Content-Type': contentType,\n            'User-Agent': this._getUserAgentString(apiMode),\n            'X-Stripe-Client-User-Agent': clientUserAgent,\n            'X-Stripe-Client-Telemetry': this._getTelemetryHeader(),\n            'Stripe-Version': apiVersion,\n            'Stripe-Account': stripeAccount,\n            'Stripe-Context': stripeContext,\n            'Idempotency-Key': this._defaultIdempotencyKey(method, userSuppliedSettings, apiMode),\n        };\n        // As per https://datatracker.ietf.org/doc/html/rfc7230#section-3.3.2:\n        //   A user agent SHOULD send a Content-Length in a request message when\n        //   no Transfer-Encoding is sent and the request method defines a meaning\n        //   for an enclosed payload body.  For example, a Content-Length header\n        //   field is normally sent in a POST request even when the value is 0\n        //   (indicating an empty payload body).  A user agent SHOULD NOT send a\n        //   Content-Length header field when the request message does not contain\n        //   a payload body and the method semantics do not anticipate such a\n        //   body.\n        //\n        // These method types are expected to have bodies and so we should always\n        // include a Content-Length.\n        const methodHasPayload = method == 'POST' || method == 'PUT' || method == 'PATCH';\n        // If a content length was specified, we always include it regardless of\n        // whether the method semantics anticipate such a body. This keeps us\n        // consistent with historical behavior. We do however want to warn on this\n        // and fix these cases as they are semantically incorrect.\n        if (methodHasPayload || contentLength) {\n            if (!methodHasPayload) {\n                emitWarning(`${method} method had non-zero contentLength but no payload is expected for this verb`);\n            }\n            defaultHeaders['Content-Length'] = contentLength;\n        }\n        return Object.assign(removeNullish(defaultHeaders), \n        // If the user supplied, say 'idempotency-key', override instead of appending by ensuring caps are the same.\n        normalizeHeaders(userSuppliedHeaders));\n    }\n    _getUserAgentString(apiMode) {\n        const packageVersion = this._stripe.getConstant('PACKAGE_VERSION');\n        const appInfo = this._stripe._appInfo\n            ? this._stripe.getAppInfoAsString()\n            : '';\n        return `Stripe/${apiMode} NodeBindings/${packageVersion} ${appInfo}`.trim();\n    }\n    _getTelemetryHeader() {\n        if (this._stripe.getTelemetryEnabled() &&\n            this._stripe._prevRequestMetrics.length > 0) {\n            const metrics = this._stripe._prevRequestMetrics.shift();\n            return JSON.stringify({\n                last_request_metrics: metrics,\n            });\n        }\n    }\n    _recordRequestMetrics(requestId, requestDurationMs, usage) {\n        if (this._stripe.getTelemetryEnabled() && requestId) {\n            if (this._stripe._prevRequestMetrics.length > this._maxBufferedRequestMetric) {\n                emitWarning('Request metrics buffer is full, dropping telemetry message.');\n            }\n            else {\n                const m = {\n                    request_id: requestId,\n                    request_duration_ms: requestDurationMs,\n                };\n                if (usage && usage.length > 0) {\n                    m.usage = usage;\n                }\n                this._stripe._prevRequestMetrics.push(m);\n            }\n        }\n    }\n    _rawRequest(method, path, params, options) {\n        const requestPromise = new Promise((resolve, reject) => {\n            let opts;\n            try {\n                const requestMethod = method.toUpperCase();\n                if (requestMethod !== 'POST' &&\n                    params &&\n                    Object.keys(params).length !== 0) {\n                    throw new Error('rawRequest only supports params on POST requests. Please pass null and add your parameters to path.');\n                }\n                const args = [].slice.call([params, options]);\n                // Pull request data and options (headers, auth) from args.\n                const dataFromArgs = getDataFromArgs(args);\n                const data = requestMethod === 'POST' ? Object.assign({}, dataFromArgs) : null;\n                const calculatedOptions = getOptionsFromArgs(args);\n                const headers = calculatedOptions.headers;\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                const authenticator = calculatedOptions.authenticator;\n                opts = {\n                    requestMethod,\n                    requestPath: path,\n                    bodyData: data,\n                    queryData: {},\n                    authenticator,\n                    headers,\n                    host: calculatedOptions.host,\n                    streaming: !!calculatedOptions.streaming,\n                    settings: {},\n                    usage: ['raw_request'],\n                };\n            }\n            catch (err) {\n                reject(err);\n                return;\n            }\n            function requestCallback(err, response) {\n                if (err) {\n                    reject(err);\n                }\n                else {\n                    resolve(response);\n                }\n            }\n            const { headers, settings } = opts;\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            const authenticator = opts.authenticator;\n            this._request(opts.requestMethod, opts.host, path, opts.bodyData, authenticator, { headers, settings, streaming: opts.streaming }, opts.usage, requestCallback);\n        });\n        return requestPromise;\n    }\n    _request(method, host, path, data, authenticator, options, usage = [], callback, requestDataProcessor = null) {\n        var _a;\n        let requestData;\n        authenticator = (_a = authenticator !== null && authenticator !== void 0 ? authenticator : this._stripe._authenticator) !== null && _a !== void 0 ? _a : null;\n        const apiMode = getAPIMode(path);\n        const retryRequest = (requestFn, apiVersion, headers, requestRetries, retryAfter) => {\n            return setTimeout(requestFn, this._getSleepTimeInMS(requestRetries, retryAfter), apiVersion, headers, requestRetries + 1);\n        };\n        const makeRequest = (apiVersion, headers, numRetries) => {\n            // timeout can be set on a per-request basis. Favor that over the global setting\n            const timeout = options.settings &&\n                options.settings.timeout &&\n                Number.isInteger(options.settings.timeout) &&\n                options.settings.timeout >= 0\n                ? options.settings.timeout\n                : this._stripe.getApiField('timeout');\n            const request = {\n                host: host || this._stripe.getApiField('host'),\n                port: this._stripe.getApiField('port'),\n                path: path,\n                method: method,\n                headers: Object.assign({}, headers),\n                body: requestData,\n                protocol: this._stripe.getApiField('protocol'),\n            };\n            authenticator(request)\n                .then(() => {\n                const req = this._stripe\n                    .getApiField('httpClient')\n                    .makeRequest(request.host, request.port, request.path, request.method, request.headers, request.body, request.protocol, timeout);\n                const requestStartTime = Date.now();\n                const requestEvent = removeNullish({\n                    api_version: apiVersion,\n                    account: parseHttpHeaderAsString(headers['Stripe-Account']),\n                    idempotency_key: parseHttpHeaderAsString(headers['Idempotency-Key']),\n                    method,\n                    path,\n                    request_start_time: requestStartTime,\n                });\n                const requestRetries = numRetries || 0;\n                const maxRetries = this._getMaxNetworkRetries(options.settings || {});\n                this._stripe._emitter.emit('request', requestEvent);\n                req\n                    .then((res) => {\n                    if (RequestSender._shouldRetry(res, requestRetries, maxRetries)) {\n                        return retryRequest(makeRequest, apiVersion, headers, requestRetries, parseHttpHeaderAsNumber(res.getHeaders()['retry-after']));\n                    }\n                    else if (options.streaming && res.getStatusCode() < 400) {\n                        return this._streamingResponseHandler(requestEvent, usage, callback)(res);\n                    }\n                    else {\n                        return this._jsonResponseHandler(requestEvent, apiMode, usage, callback)(res);\n                    }\n                })\n                    .catch((error) => {\n                    if (RequestSender._shouldRetry(null, requestRetries, maxRetries, error)) {\n                        return retryRequest(makeRequest, apiVersion, headers, requestRetries, null);\n                    }\n                    else {\n                        const isTimeoutError = error.code && error.code === HttpClient.TIMEOUT_ERROR_CODE;\n                        return callback(new StripeConnectionError({\n                            message: isTimeoutError\n                                ? `Request aborted due to timeout being reached (${timeout}ms)`\n                                : RequestSender._generateConnectionErrorMessage(requestRetries),\n                            detail: error,\n                        }));\n                    }\n                });\n            })\n                .catch((e) => {\n                throw new StripeError({\n                    message: 'Unable to authenticate the request',\n                    exception: e,\n                });\n            });\n        };\n        const prepareAndMakeRequest = (error, data) => {\n            if (error) {\n                return callback(error);\n            }\n            requestData = data;\n            this._stripe.getClientUserAgent((clientUserAgent) => {\n                const apiVersion = this._stripe.getApiField('version');\n                const headers = this._makeHeaders({\n                    contentType: apiMode == 'v2'\n                        ? 'application/json'\n                        : 'application/x-www-form-urlencoded',\n                    contentLength: requestData.length,\n                    apiVersion: apiVersion,\n                    clientUserAgent,\n                    method,\n                    userSuppliedHeaders: options.headers,\n                    userSuppliedSettings: options.settings,\n                    stripeAccount: apiMode == 'v2' ? null : this._stripe.getApiField('stripeAccount'),\n                    stripeContext: apiMode == 'v2' ? this._stripe.getApiField('stripeContext') : null,\n                    apiMode: apiMode,\n                });\n                makeRequest(apiVersion, headers, 0);\n            });\n        };\n        if (requestDataProcessor) {\n            requestDataProcessor(method, data, options.headers, prepareAndMakeRequest);\n        }\n        else {\n            let stringifiedData;\n            if (apiMode == 'v2') {\n                stringifiedData = data ? jsonStringifyRequestData(data) : '';\n            }\n            else {\n                stringifiedData = queryStringifyRequestData(data || {}, apiMode);\n            }\n            prepareAndMakeRequest(null, stringifiedData);\n        }\n    }\n}\n", "import { getDataFromArgs, getOptionsFromArgs, makeURLInterpolator, protoExtend, queryStringifyRequestData, getAPIMode, } from './utils.js';\nimport { stripeMethod } from './StripeMethod.js';\n// Provide extension mechanism for Stripe Resource Sub-Classes\nStripeResource.extend = protoExtend;\n// Expose method-creator\nStripeResource.method = stripeMethod;\nStripeResource.MAX_BUFFERED_REQUEST_METRICS = 100;\n/**\n * Encapsulates request logic for a Stripe Resource\n */\nfunction StripeResource(stripe, deprecatedUrlData) {\n    this._stripe = stripe;\n    if (deprecatedUrlData) {\n        throw new Error('Support for curried url params was dropped in stripe-node v7.0.0. Instead, pass two ids.');\n    }\n    this.basePath = makeURLInterpolator(\n    // @ts-ignore changing type of basePath\n    this.basePath || stripe.getApiField('basePath'));\n    // @ts-ignore changing type of path\n    this.resourcePath = this.path;\n    // @ts-ignore changing type of path\n    this.path = makeURLInterpolator(this.path);\n    this.initialize(...arguments);\n}\nStripeResource.prototype = {\n    _stripe: null,\n    // @ts-ignore the type of path changes in ctor\n    path: '',\n    resourcePath: '',\n    // Methods that don't use the API's default '/v1' path can override it with this setting.\n    basePath: null,\n    initialize() { },\n    // Function to override the default data processor. This allows full control\n    // over how a StripeResource's request data will get converted into an HTTP\n    // body. This is useful for non-standard HTTP requests. The function should\n    // take method name, data, and headers as arguments.\n    requestDataProcessor: null,\n    // Function to add a validation checks before sending the request, errors should\n    // be thrown, and they will be passed to the callback/promise.\n    validateRequest: null,\n    createFullPath(commandPath, urlData) {\n        const urlParts = [this.basePath(urlData), this.path(urlData)];\n        if (typeof commandPath === 'function') {\n            const computedCommandPath = commandPath(urlData);\n            // If we have no actual command path, we just omit it to avoid adding a\n            // trailing slash. This is important for top-level listing requests, which\n            // do not have a command path.\n            if (computedCommandPath) {\n                urlParts.push(computedCommandPath);\n            }\n        }\n        else {\n            urlParts.push(commandPath);\n        }\n        return this._joinUrlParts(urlParts);\n    },\n    // Creates a relative resource path with symbols left in (unlike\n    // createFullPath which takes some data to replace them with). For example it\n    // might produce: /invoices/{id}\n    createResourcePathWithSymbols(pathWithSymbols) {\n        // If there is no path beyond the resource path, we want to produce just\n        // /<resource path> rather than /<resource path>/.\n        if (pathWithSymbols) {\n            return `/${this._joinUrlParts([this.resourcePath, pathWithSymbols])}`;\n        }\n        else {\n            return `/${this.resourcePath}`;\n        }\n    },\n    _joinUrlParts(parts) {\n        // Replace any accidentally doubled up slashes. This previously used\n        // path.join, which would do this as well. Unfortunately we need to do this\n        // as the functions for creating paths are technically part of the public\n        // interface and so we need to preserve backwards compatibility.\n        return parts.join('/').replace(/\\/{2,}/g, '/');\n    },\n    _getRequestOpts(requestArgs, spec, overrideData) {\n        var _a;\n        // Extract spec values with defaults.\n        const requestMethod = (spec.method || 'GET').toUpperCase();\n        const usage = spec.usage || [];\n        const urlParams = spec.urlParams || [];\n        const encode = spec.encode || ((data) => data);\n        const isUsingFullPath = !!spec.fullPath;\n        const commandPath = makeURLInterpolator(isUsingFullPath ? spec.fullPath : spec.path || '');\n        // When using fullPath, we ignore the resource path as it should already be\n        // fully qualified.\n        const path = isUsingFullPath\n            ? spec.fullPath\n            : this.createResourcePathWithSymbols(spec.path);\n        // Don't mutate args externally.\n        const args = [].slice.call(requestArgs);\n        // Generate and validate url params.\n        const urlData = urlParams.reduce((urlData, param) => {\n            const arg = args.shift();\n            if (typeof arg !== 'string') {\n                throw new Error(`Stripe: Argument \"${param}\" must be a string, but got: ${arg} (on API request to \\`${requestMethod} ${path}\\`)`);\n            }\n            urlData[param] = arg;\n            return urlData;\n        }, {});\n        // Pull request data and options (headers, auth) from args.\n        const dataFromArgs = getDataFromArgs(args);\n        const data = encode(Object.assign({}, dataFromArgs, overrideData));\n        const options = getOptionsFromArgs(args);\n        const host = options.host || spec.host;\n        const streaming = !!spec.streaming || !!options.streaming;\n        // Validate that there are no more args.\n        if (args.filter((x) => x != null).length) {\n            throw new Error(`Stripe: Unknown arguments (${args}). Did you mean to pass an options object? See https://github.com/stripe/stripe-node/wiki/Passing-Options. (on API request to ${requestMethod} \\`${path}\\`)`);\n        }\n        // When using full path, we can just invoke the URL interpolator directly\n        // as we don't need to use the resource to create a full path.\n        const requestPath = isUsingFullPath\n            ? commandPath(urlData)\n            : this.createFullPath(commandPath, urlData);\n        const headers = Object.assign(options.headers, spec.headers);\n        if (spec.validator) {\n            spec.validator(data, { headers });\n        }\n        const dataInQuery = spec.method === 'GET' || spec.method === 'DELETE';\n        const bodyData = dataInQuery ? null : data;\n        const queryData = dataInQuery ? data : {};\n        return {\n            requestMethod,\n            requestPath,\n            bodyData,\n            queryData,\n            authenticator: (_a = options.authenticator) !== null && _a !== void 0 ? _a : null,\n            headers,\n            host: host !== null && host !== void 0 ? host : null,\n            streaming,\n            settings: options.settings,\n            usage,\n        };\n    },\n    _makeRequest(requestArgs, spec, overrideData) {\n        return new Promise((resolve, reject) => {\n            var _a;\n            let opts;\n            try {\n                opts = this._getRequestOpts(requestArgs, spec, overrideData);\n            }\n            catch (err) {\n                reject(err);\n                return;\n            }\n            function requestCallback(err, response) {\n                if (err) {\n                    reject(err);\n                }\n                else {\n                    resolve(spec.transformResponseData\n                        ? spec.transformResponseData(response)\n                        : response);\n                }\n            }\n            const emptyQuery = Object.keys(opts.queryData).length === 0;\n            const path = [\n                opts.requestPath,\n                emptyQuery ? '' : '?',\n                queryStringifyRequestData(opts.queryData, getAPIMode(opts.requestPath)),\n            ].join('');\n            const { headers, settings } = opts;\n            this._stripe._requestSender._request(opts.requestMethod, opts.host, path, opts.bodyData, opts.authenticator, {\n                headers,\n                settings,\n                streaming: opts.streaming,\n            }, opts.usage, requestCallback, (_a = this.requestDataProcessor) === null || _a === void 0 ? void 0 : _a.bind(this));\n        });\n    },\n};\nexport { StripeResource };\n", "import { callbackifyPromiseWithTimeout, extractUrlParams } from './utils.js';\nimport { makeAutoPaginationMethods } from './autoPagination.js';\n/**\n * Create an API method from the declared spec.\n *\n * @param [spec.method='GET'] Request Method (POST, GET, DELETE, PUT)\n * @param [spec.path=''] Path to be appended to the API BASE_PATH, joined with\n *  the instance's path (e.g. 'charges' or 'customers')\n * @param [spec.fullPath=''] Fully qualified path to the method (eg. /v1/a/b/c).\n *  If this is specified, path should not be specified.\n * @param [spec.urlParams=[]] Array of required arguments in the order that they\n *  must be passed by the consumer of the API. Subsequent optional arguments are\n *  optionally passed through a hash (Object) as the penultimate argument\n *  (preceding the also-optional callback argument\n * @param [spec.encode] Function for mutating input parameters to a method.\n *  Usefully for applying transforms to data on a per-method basis.\n * @param [spec.host] Hostname for the request.\n *\n * <!-- Public API accessible via Stripe.StripeResource.method -->\n */\nexport function stripeMethod(spec) {\n    if (spec.path !== undefined && spec.fullPath !== undefined) {\n        throw new Error(`Method spec specified both a 'path' (${spec.path}) and a 'fullPath' (${spec.fullPath}).`);\n    }\n    return function (...args) {\n        const callback = typeof args[args.length - 1] == 'function' && args.pop();\n        spec.urlParams = extractUrlParams(spec.fullPath || this.createResourcePathWithSymbols(spec.path || ''));\n        const requestPromise = callbackifyPromiseWithTimeout(this._makeRequest(args, spec, {}), callback);\n        Object.assign(requestPromise, makeAutoPaginationMethods(this, args, spec, requestPromise));\n        return requestPromise;\n    };\n}\n", "import { callbackifyPromiseWithTimeout, getDataFromArgs, getAPIMode, } from './utils.js';\nclass V1Iterator {\n    constructor(firstPagePromise, requestArgs, spec, stripeResource) {\n        this.index = 0;\n        this.pagePromise = firstPagePromise;\n        this.promiseCache = { currentPromise: null };\n        this.requestArgs = requestArgs;\n        this.spec = spec;\n        this.stripeResource = stripeResource;\n    }\n    async iterate(pageResult) {\n        if (!(pageResult &&\n            pageResult.data &&\n            typeof pageResult.data.length === 'number')) {\n            throw Error('Unexpected: Stripe API response does not have a well-formed `data` array.');\n        }\n        const reverseIteration = isReverseIteration(this.requestArgs);\n        if (this.index < pageResult.data.length) {\n            const idx = reverseIteration\n                ? pageResult.data.length - 1 - this.index\n                : this.index;\n            const value = pageResult.data[idx];\n            this.index += 1;\n            return { value, done: false };\n        }\n        else if (pageResult.has_more) {\n            // Reset counter, request next page, and recurse.\n            this.index = 0;\n            this.pagePromise = this.getNextPage(pageResult);\n            const nextPageResult = await this.pagePromise;\n            return this.iterate(nextPageResult);\n        }\n        return { done: true, value: undefined };\n    }\n    /** @abstract */\n    getNextPage(_pageResult) {\n        throw new Error('Unimplemented');\n    }\n    async _next() {\n        return this.iterate(await this.pagePromise);\n    }\n    next() {\n        /**\n         * If a user calls `.next()` multiple times in parallel,\n         * return the same result until something has resolved\n         * to prevent page-turning race conditions.\n         */\n        if (this.promiseCache.currentPromise) {\n            return this.promiseCache.currentPromise;\n        }\n        const nextPromise = (async () => {\n            const ret = await this._next();\n            this.promiseCache.currentPromise = null;\n            return ret;\n        })();\n        this.promiseCache.currentPromise = nextPromise;\n        return nextPromise;\n    }\n}\nclass V1ListIterator extends V1Iterator {\n    getNextPage(pageResult) {\n        const reverseIteration = isReverseIteration(this.requestArgs);\n        const lastId = getLastId(pageResult, reverseIteration);\n        return this.stripeResource._makeRequest(this.requestArgs, this.spec, {\n            [reverseIteration ? 'ending_before' : 'starting_after']: lastId,\n        });\n    }\n}\nclass V1SearchIterator extends V1Iterator {\n    getNextPage(pageResult) {\n        if (!pageResult.next_page) {\n            throw Error('Unexpected: Stripe API response does not have a well-formed `next_page` field, but `has_more` was true.');\n        }\n        return this.stripeResource._makeRequest(this.requestArgs, this.spec, {\n            page: pageResult.next_page,\n        });\n    }\n}\nclass V2ListIterator {\n    constructor(firstPagePromise, requestArgs, spec, stripeResource) {\n        this.currentPageIterator = (async () => {\n            const page = await firstPagePromise;\n            return page.data[Symbol.iterator]();\n        })();\n        this.nextPageUrl = (async () => {\n            const page = await firstPagePromise;\n            return page.next_page_url || null;\n        })();\n        this.requestArgs = requestArgs;\n        this.spec = spec;\n        this.stripeResource = stripeResource;\n    }\n    async turnPage() {\n        const nextPageUrl = await this.nextPageUrl;\n        if (!nextPageUrl)\n            return null;\n        this.spec.fullPath = nextPageUrl;\n        const page = await this.stripeResource._makeRequest([], this.spec, {});\n        this.nextPageUrl = Promise.resolve(page.next_page_url);\n        this.currentPageIterator = Promise.resolve(page.data[Symbol.iterator]());\n        return this.currentPageIterator;\n    }\n    async next() {\n        {\n            const result = (await this.currentPageIterator).next();\n            if (!result.done)\n                return { done: false, value: result.value };\n        }\n        const nextPageIterator = await this.turnPage();\n        if (!nextPageIterator) {\n            return { done: true, value: undefined };\n        }\n        const result = nextPageIterator.next();\n        if (!result.done)\n            return { done: false, value: result.value };\n        return { done: true, value: undefined };\n    }\n}\nexport const makeAutoPaginationMethods = (stripeResource, requestArgs, spec, firstPagePromise) => {\n    const apiMode = getAPIMode(spec.fullPath || spec.path);\n    if (apiMode !== 'v2' && spec.methodType === 'search') {\n        return makeAutoPaginationMethodsFromIterator(new V1SearchIterator(firstPagePromise, requestArgs, spec, stripeResource));\n    }\n    if (apiMode !== 'v2' && spec.methodType === 'list') {\n        return makeAutoPaginationMethodsFromIterator(new V1ListIterator(firstPagePromise, requestArgs, spec, stripeResource));\n    }\n    if (apiMode === 'v2' && spec.methodType === 'list') {\n        return makeAutoPaginationMethodsFromIterator(new V2ListIterator(firstPagePromise, requestArgs, spec, stripeResource));\n    }\n    return null;\n};\nconst makeAutoPaginationMethodsFromIterator = (iterator) => {\n    const autoPagingEach = makeAutoPagingEach((...args) => iterator.next(...args));\n    const autoPagingToArray = makeAutoPagingToArray(autoPagingEach);\n    const autoPaginationMethods = {\n        autoPagingEach,\n        autoPagingToArray,\n        // Async iterator functions:\n        next: () => iterator.next(),\n        return: () => {\n            // This is required for `break`.\n            return {};\n        },\n        [getAsyncIteratorSymbol()]: () => {\n            return autoPaginationMethods;\n        },\n    };\n    return autoPaginationMethods;\n};\n/**\n * ----------------\n * Private Helpers:\n * ----------------\n */\nfunction getAsyncIteratorSymbol() {\n    if (typeof Symbol !== 'undefined' && Symbol.asyncIterator) {\n        return Symbol.asyncIterator;\n    }\n    // Follow the convention from libraries like iterall: https://github.com/leebyron/iterall#asynciterator-1\n    return '@@asyncIterator';\n}\nfunction getDoneCallback(args) {\n    if (args.length < 2) {\n        return null;\n    }\n    const onDone = args[1];\n    if (typeof onDone !== 'function') {\n        throw Error(`The second argument to autoPagingEach, if present, must be a callback function; received ${typeof onDone}`);\n    }\n    return onDone;\n}\n/**\n * We allow four forms of the `onItem` callback (the middle two being equivalent),\n *\n *   1. `.autoPagingEach((item) => { doSomething(item); return false; });`\n *   2. `.autoPagingEach(async (item) => { await doSomething(item); return false; });`\n *   3. `.autoPagingEach((item) => doSomething(item).then(() => false));`\n *   4. `.autoPagingEach((item, next) => { doSomething(item); next(false); });`\n *\n * In addition to standard validation, this helper\n * coalesces the former forms into the latter form.\n */\nfunction getItemCallback(args) {\n    if (args.length === 0) {\n        return undefined;\n    }\n    const onItem = args[0];\n    if (typeof onItem !== 'function') {\n        throw Error(`The first argument to autoPagingEach, if present, must be a callback function; received ${typeof onItem}`);\n    }\n    // 4. `.autoPagingEach((item, next) => { doSomething(item); next(false); });`\n    if (onItem.length === 2) {\n        return onItem;\n    }\n    if (onItem.length > 2) {\n        throw Error(`The \\`onItem\\` callback function passed to autoPagingEach must accept at most two arguments; got ${onItem}`);\n    }\n    // This magically handles all three of these usecases (the latter two being functionally identical):\n    // 1. `.autoPagingEach((item) => { doSomething(item); return false; });`\n    // 2. `.autoPagingEach(async (item) => { await doSomething(item); return false; });`\n    // 3. `.autoPagingEach((item) => doSomething(item).then(() => false));`\n    return function _onItem(item, next) {\n        const shouldContinue = onItem(item);\n        next(shouldContinue);\n    };\n}\nfunction getLastId(listResult, reverseIteration) {\n    const lastIdx = reverseIteration ? 0 : listResult.data.length - 1;\n    const lastItem = listResult.data[lastIdx];\n    const lastId = lastItem && lastItem.id;\n    if (!lastId) {\n        throw Error('Unexpected: No `id` found on the last item while auto-paging a list.');\n    }\n    return lastId;\n}\nfunction makeAutoPagingEach(asyncIteratorNext) {\n    return function autoPagingEach( /* onItem?, onDone? */) {\n        const args = [].slice.call(arguments);\n        const onItem = getItemCallback(args);\n        const onDone = getDoneCallback(args);\n        if (args.length > 2) {\n            throw Error(`autoPagingEach takes up to two arguments; received ${args}`);\n        }\n        const autoPagePromise = wrapAsyncIteratorWithCallback(asyncIteratorNext, \n        // @ts-ignore we might need a null check\n        onItem);\n        return callbackifyPromiseWithTimeout(autoPagePromise, onDone);\n    };\n}\nfunction makeAutoPagingToArray(autoPagingEach) {\n    return function autoPagingToArray(opts, onDone) {\n        const limit = opts && opts.limit;\n        if (!limit) {\n            throw Error('You must pass a `limit` option to autoPagingToArray, e.g., `autoPagingToArray({limit: 1000});`.');\n        }\n        if (limit > 10000) {\n            throw Error('You cannot specify a limit of more than 10,000 items to fetch in `autoPagingToArray`; use `autoPagingEach` to iterate through longer lists.');\n        }\n        const promise = new Promise((resolve, reject) => {\n            const items = [];\n            autoPagingEach((item) => {\n                items.push(item);\n                if (items.length >= limit) {\n                    return false;\n                }\n            })\n                .then(() => {\n                resolve(items);\n            })\n                .catch(reject);\n        });\n        // @ts-ignore\n        return callbackifyPromiseWithTimeout(promise, onDone);\n    };\n}\nfunction wrapAsyncIteratorWithCallback(asyncIteratorNext, onItem) {\n    return new Promise((resolve, reject) => {\n        function handleIteration(iterResult) {\n            if (iterResult.done) {\n                resolve();\n                return;\n            }\n            const item = iterResult.value;\n            return new Promise((next) => {\n                // Bit confusing, perhaps; we pass a `resolve` fn\n                // to the user, so they can decide when and if to continue.\n                // They can return false, or a promise which resolves to false, to break.\n                onItem(item, next);\n            }).then((shouldContinue) => {\n                if (shouldContinue === false) {\n                    return handleIteration({ done: true, value: undefined });\n                }\n                else {\n                    return asyncIteratorNext().then(handleIteration);\n                }\n            });\n        }\n        asyncIteratorNext()\n            .then(handleIteration)\n            .catch(reject);\n    });\n}\nfunction isReverseIteration(requestArgs) {\n    const args = [].slice.call(requestArgs);\n    const dataFromArgs = getDataFromArgs(args);\n    return !!dataFromArgs.ending_before;\n}\n", "import { StripeError, StripeSignatureVerificationError } from './Error.js';\nimport { CryptoProviderOnlySupportsAsyncError, } from './crypto/CryptoProvider.js';\nexport function createWebhooks(platformFunctions) {\n    const Webhook = {\n        DEFAULT_TOLERANCE: 300,\n        signature: null,\n        constructEvent(payload, header, secret, tolerance, cryptoProvider, receivedAt) {\n            try {\n                if (!this.signature) {\n                    throw new Error('ERR: missing signature helper, unable to verify');\n                }\n                this.signature.verifyHeader(payload, header, secret, tolerance || Webhook.DEFAULT_TOLERANCE, cryptoProvider, receivedAt);\n            }\n            catch (e) {\n                if (e instanceof CryptoProviderOnlySupportsAsyncError) {\n                    e.message +=\n                        '\\nUse `await constructEventAsync(...)` instead of `constructEvent(...)`';\n                }\n                throw e;\n            }\n            const jsonPayload = payload instanceof Uint8Array\n                ? JSON.parse(new TextDecoder('utf8').decode(payload))\n                : JSON.parse(payload);\n            return jsonPayload;\n        },\n        async constructEventAsync(payload, header, secret, tolerance, cryptoProvider, receivedAt) {\n            if (!this.signature) {\n                throw new Error('ERR: missing signature helper, unable to verify');\n            }\n            await this.signature.verifyHeaderAsync(payload, header, secret, tolerance || Webhook.DEFAULT_TOLERANCE, cryptoProvider, receivedAt);\n            const jsonPayload = payload instanceof Uint8Array\n                ? JSON.parse(new TextDecoder('utf8').decode(payload))\n                : JSON.parse(payload);\n            return jsonPayload;\n        },\n        /**\n         * Generates a header to be used for webhook mocking\n         *\n         * @typedef {object} opts\n         * @property {number} timestamp - Timestamp of the header. Defaults to Date.now()\n         * @property {string} payload - JSON stringified payload object, containing the 'id' and 'object' parameters\n         * @property {string} secret - Stripe webhook secret 'whsec_...'\n         * @property {string} scheme - Version of API to hit. Defaults to 'v1'.\n         * @property {string} signature - Computed webhook signature\n         * @property {CryptoProvider} cryptoProvider - Crypto provider to use for computing the signature if none was provided. Defaults to NodeCryptoProvider.\n         */\n        generateTestHeaderString: function (opts) {\n            const preparedOpts = prepareOptions(opts);\n            const signature = preparedOpts.signature ||\n                preparedOpts.cryptoProvider.computeHMACSignature(preparedOpts.payloadString, preparedOpts.secret);\n            return preparedOpts.generateHeaderString(signature);\n        },\n        generateTestHeaderStringAsync: async function (opts) {\n            const preparedOpts = prepareOptions(opts);\n            const signature = preparedOpts.signature ||\n                (await preparedOpts.cryptoProvider.computeHMACSignatureAsync(preparedOpts.payloadString, preparedOpts.secret));\n            return preparedOpts.generateHeaderString(signature);\n        },\n    };\n    const signature = {\n        EXPECTED_SCHEME: 'v1',\n        verifyHeader(encodedPayload, encodedHeader, secret, tolerance, cryptoProvider, receivedAt) {\n            const { decodedHeader: header, decodedPayload: payload, details, suspectPayloadType, } = parseEventDetails(encodedPayload, encodedHeader, this.EXPECTED_SCHEME);\n            const secretContainsWhitespace = /\\s/.test(secret);\n            cryptoProvider = cryptoProvider || getCryptoProvider();\n            const expectedSignature = cryptoProvider.computeHMACSignature(makeHMACContent(payload, details), secret);\n            validateComputedSignature(payload, header, details, expectedSignature, tolerance, suspectPayloadType, secretContainsWhitespace, receivedAt);\n            return true;\n        },\n        async verifyHeaderAsync(encodedPayload, encodedHeader, secret, tolerance, cryptoProvider, receivedAt) {\n            const { decodedHeader: header, decodedPayload: payload, details, suspectPayloadType, } = parseEventDetails(encodedPayload, encodedHeader, this.EXPECTED_SCHEME);\n            const secretContainsWhitespace = /\\s/.test(secret);\n            cryptoProvider = cryptoProvider || getCryptoProvider();\n            const expectedSignature = await cryptoProvider.computeHMACSignatureAsync(makeHMACContent(payload, details), secret);\n            return validateComputedSignature(payload, header, details, expectedSignature, tolerance, suspectPayloadType, secretContainsWhitespace, receivedAt);\n        },\n    };\n    function makeHMACContent(payload, details) {\n        return `${details.timestamp}.${payload}`;\n    }\n    function parseEventDetails(encodedPayload, encodedHeader, expectedScheme) {\n        if (!encodedPayload) {\n            throw new StripeSignatureVerificationError(encodedHeader, encodedPayload, {\n                message: 'No webhook payload was provided.',\n            });\n        }\n        const suspectPayloadType = typeof encodedPayload != 'string' &&\n            !(encodedPayload instanceof Uint8Array);\n        const textDecoder = new TextDecoder('utf8');\n        const decodedPayload = encodedPayload instanceof Uint8Array\n            ? textDecoder.decode(encodedPayload)\n            : encodedPayload;\n        // Express's type for `Request#headers` is `string | []string`\n        // which is because the `set-cookie` header is an array,\n        // but no other headers are an array (docs: https://nodejs.org/api/http.html#http_message_headers)\n        // (Express's Request class is an extension of http.IncomingMessage, and doesn't appear to be relevantly modified: https://github.com/expressjs/express/blob/master/lib/request.js#L31)\n        if (Array.isArray(encodedHeader)) {\n            throw new Error('Unexpected: An array was passed as a header, which should not be possible for the stripe-signature header.');\n        }\n        if (encodedHeader == null || encodedHeader == '') {\n            throw new StripeSignatureVerificationError(encodedHeader, encodedPayload, {\n                message: 'No stripe-signature header value was provided.',\n            });\n        }\n        const decodedHeader = encodedHeader instanceof Uint8Array\n            ? textDecoder.decode(encodedHeader)\n            : encodedHeader;\n        const details = parseHeader(decodedHeader, expectedScheme);\n        if (!details || details.timestamp === -1) {\n            throw new StripeSignatureVerificationError(decodedHeader, decodedPayload, {\n                message: 'Unable to extract timestamp and signatures from header',\n            });\n        }\n        if (!details.signatures.length) {\n            throw new StripeSignatureVerificationError(decodedHeader, decodedPayload, {\n                message: 'No signatures found with expected scheme',\n            });\n        }\n        return {\n            decodedPayload,\n            decodedHeader,\n            details,\n            suspectPayloadType,\n        };\n    }\n    function validateComputedSignature(payload, header, details, expectedSignature, tolerance, suspectPayloadType, secretContainsWhitespace, receivedAt) {\n        const signatureFound = !!details.signatures.filter(platformFunctions.secureCompare.bind(platformFunctions, expectedSignature)).length;\n        const docsLocation = '\\nLearn more about webhook signing and explore webhook integration examples for various frameworks at ' +\n            'https://docs.stripe.com/webhooks/signature';\n        const whitespaceMessage = secretContainsWhitespace\n            ? '\\n\\nNote: The provided signing secret contains whitespace. This often indicates an extra newline or space is in the value'\n            : '';\n        if (!signatureFound) {\n            if (suspectPayloadType) {\n                throw new StripeSignatureVerificationError(header, payload, {\n                    message: 'Webhook payload must be provided as a string or a Buffer (https://nodejs.org/api/buffer.html) instance representing the _raw_ request body.' +\n                        'Payload was provided as a parsed JavaScript object instead. \\n' +\n                        'Signature verification is impossible without access to the original signed material. \\n' +\n                        docsLocation +\n                        '\\n' +\n                        whitespaceMessage,\n                });\n            }\n            throw new StripeSignatureVerificationError(header, payload, {\n                message: 'No signatures found matching the expected signature for payload.' +\n                    ' Are you passing the raw request body you received from Stripe? \\n' +\n                    ' If a webhook request is being forwarded by a third-party tool,' +\n                    ' ensure that the exact request body, including JSON formatting and new line style, is preserved.\\n' +\n                    docsLocation +\n                    '\\n' +\n                    whitespaceMessage,\n            });\n        }\n        const timestampAge = Math.floor((typeof receivedAt === 'number' ? receivedAt : Date.now()) / 1000) - details.timestamp;\n        if (tolerance > 0 && timestampAge > tolerance) {\n            throw new StripeSignatureVerificationError(header, payload, {\n                message: 'Timestamp outside the tolerance zone',\n            });\n        }\n        return true;\n    }\n    function parseHeader(header, scheme) {\n        if (typeof header !== 'string') {\n            return null;\n        }\n        return header.split(',').reduce((accum, item) => {\n            const kv = item.split('=');\n            if (kv[0] === 't') {\n                accum.timestamp = parseInt(kv[1], 10);\n            }\n            if (kv[0] === scheme) {\n                accum.signatures.push(kv[1]);\n            }\n            return accum;\n        }, {\n            timestamp: -1,\n            signatures: [],\n        });\n    }\n    let webhooksCryptoProviderInstance = null;\n    /**\n     * Lazily instantiate a CryptoProvider instance. This is a stateless object\n     * so a singleton can be used here.\n     */\n    function getCryptoProvider() {\n        if (!webhooksCryptoProviderInstance) {\n            webhooksCryptoProviderInstance = platformFunctions.createDefaultCryptoProvider();\n        }\n        return webhooksCryptoProviderInstance;\n    }\n    function prepareOptions(opts) {\n        if (!opts) {\n            throw new StripeError({\n                message: 'Options are required',\n            });\n        }\n        const timestamp = Math.floor(opts.timestamp) || Math.floor(Date.now() / 1000);\n        const scheme = opts.scheme || signature.EXPECTED_SCHEME;\n        const cryptoProvider = opts.cryptoProvider || getCryptoProvider();\n        const payloadString = `${timestamp}.${opts.payload}`;\n        const generateHeaderString = (signature) => {\n            return `t=${timestamp},${scheme}=${signature}`;\n        };\n        return Object.assign(Object.assign({}, opts), { timestamp,\n            scheme,\n            cryptoProvider,\n            payloadString,\n            generateHeaderString });\n    }\n    Webhook.signature = signature;\n    return Webhook;\n}\n", "// File generated from our OpenAPI spec\nexport const ApiVersion = '2025-06-30.basil';\nexport const ApiMajorVersion = 'basil';\n", "// File generated from our OpenAPI spec\nimport { resourceNamespace } from './ResourceNamespace.js';\nimport { Accounts as FinancialConnectionsAccounts } from './resources/FinancialConnections/Accounts.js';\nimport { ActiveEntitlements as EntitlementsActiveEntitlements } from './resources/Entitlements/ActiveEntitlements.js';\nimport { Alerts as BillingAlerts } from './resources/Billing/Alerts.js';\nimport { Authorizations as TestHelpersIssuingAuthorizations } from './resources/TestHelpers/Issuing/Authorizations.js';\nimport { Authorizations as IssuingAuthorizations } from './resources/Issuing/Authorizations.js';\nimport { Calculations as TaxCalculations } from './resources/Tax/Calculations.js';\nimport { Cardholders as IssuingCardholders } from './resources/Issuing/Cardholders.js';\nimport { Cards as TestHelpersIssuingCards } from './resources/TestHelpers/Issuing/Cards.js';\nimport { Cards as IssuingCards } from './resources/Issuing/Cards.js';\nimport { Configurations as BillingPortalConfigurations } from './resources/BillingPortal/Configurations.js';\nimport { Configurations as TerminalConfigurations } from './resources/Terminal/Configurations.js';\nimport { ConfirmationTokens as TestHelpersConfirmationTokens } from './resources/TestHelpers/ConfirmationTokens.js';\nimport { ConnectionTokens as TerminalConnectionTokens } from './resources/Terminal/ConnectionTokens.js';\nimport { CreditBalanceSummary as BillingCreditBalanceSummary } from './resources/Billing/CreditBalanceSummary.js';\nimport { CreditBalanceTransactions as BillingCreditBalanceTransactions } from './resources/Billing/CreditBalanceTransactions.js';\nimport { CreditGrants as BillingCreditGrants } from './resources/Billing/CreditGrants.js';\nimport { CreditReversals as TreasuryCreditReversals } from './resources/Treasury/CreditReversals.js';\nimport { Customers as TestHelpersCustomers } from './resources/TestHelpers/Customers.js';\nimport { DebitReversals as TreasuryDebitReversals } from './resources/Treasury/DebitReversals.js';\nimport { Disputes as IssuingDisputes } from './resources/Issuing/Disputes.js';\nimport { EarlyFraudWarnings as RadarEarlyFraudWarnings } from './resources/Radar/EarlyFraudWarnings.js';\nimport { EventDestinations as V2CoreEventDestinations } from './resources/V2/Core/EventDestinations.js';\nimport { Events as V2CoreEvents } from './resources/V2/Core/Events.js';\nimport { Features as EntitlementsFeatures } from './resources/Entitlements/Features.js';\nimport { FinancialAccounts as TreasuryFinancialAccounts } from './resources/Treasury/FinancialAccounts.js';\nimport { InboundTransfers as TestHelpersTreasuryInboundTransfers } from './resources/TestHelpers/Treasury/InboundTransfers.js';\nimport { InboundTransfers as TreasuryInboundTransfers } from './resources/Treasury/InboundTransfers.js';\nimport { Locations as TerminalLocations } from './resources/Terminal/Locations.js';\nimport { MeterEventAdjustments as BillingMeterEventAdjustments } from './resources/Billing/MeterEventAdjustments.js';\nimport { MeterEventAdjustments as V2BillingMeterEventAdjustments } from './resources/V2/Billing/MeterEventAdjustments.js';\nimport { MeterEventSession as V2BillingMeterEventSession } from './resources/V2/Billing/MeterEventSession.js';\nimport { MeterEventStream as V2BillingMeterEventStream } from './resources/V2/Billing/MeterEventStream.js';\nimport { MeterEvents as BillingMeterEvents } from './resources/Billing/MeterEvents.js';\nimport { MeterEvents as V2BillingMeterEvents } from './resources/V2/Billing/MeterEvents.js';\nimport { Meters as BillingMeters } from './resources/Billing/Meters.js';\nimport { Orders as ClimateOrders } from './resources/Climate/Orders.js';\nimport { OutboundPayments as TestHelpersTreasuryOutboundPayments } from './resources/TestHelpers/Treasury/OutboundPayments.js';\nimport { OutboundPayments as TreasuryOutboundPayments } from './resources/Treasury/OutboundPayments.js';\nimport { OutboundTransfers as TestHelpersTreasuryOutboundTransfers } from './resources/TestHelpers/Treasury/OutboundTransfers.js';\nimport { OutboundTransfers as TreasuryOutboundTransfers } from './resources/Treasury/OutboundTransfers.js';\nimport { PersonalizationDesigns as TestHelpersIssuingPersonalizationDesigns } from './resources/TestHelpers/Issuing/PersonalizationDesigns.js';\nimport { PersonalizationDesigns as IssuingPersonalizationDesigns } from './resources/Issuing/PersonalizationDesigns.js';\nimport { PhysicalBundles as IssuingPhysicalBundles } from './resources/Issuing/PhysicalBundles.js';\nimport { Products as ClimateProducts } from './resources/Climate/Products.js';\nimport { Readers as TestHelpersTerminalReaders } from './resources/TestHelpers/Terminal/Readers.js';\nimport { Readers as TerminalReaders } from './resources/Terminal/Readers.js';\nimport { ReceivedCredits as TestHelpersTreasuryReceivedCredits } from './resources/TestHelpers/Treasury/ReceivedCredits.js';\nimport { ReceivedCredits as TreasuryReceivedCredits } from './resources/Treasury/ReceivedCredits.js';\nimport { ReceivedDebits as TestHelpersTreasuryReceivedDebits } from './resources/TestHelpers/Treasury/ReceivedDebits.js';\nimport { ReceivedDebits as TreasuryReceivedDebits } from './resources/Treasury/ReceivedDebits.js';\nimport { Refunds as TestHelpersRefunds } from './resources/TestHelpers/Refunds.js';\nimport { Registrations as TaxRegistrations } from './resources/Tax/Registrations.js';\nimport { ReportRuns as ReportingReportRuns } from './resources/Reporting/ReportRuns.js';\nimport { ReportTypes as ReportingReportTypes } from './resources/Reporting/ReportTypes.js';\nimport { Requests as ForwardingRequests } from './resources/Forwarding/Requests.js';\nimport { ScheduledQueryRuns as SigmaScheduledQueryRuns } from './resources/Sigma/ScheduledQueryRuns.js';\nimport { Secrets as AppsSecrets } from './resources/Apps/Secrets.js';\nimport { Sessions as BillingPortalSessions } from './resources/BillingPortal/Sessions.js';\nimport { Sessions as CheckoutSessions } from './resources/Checkout/Sessions.js';\nimport { Sessions as FinancialConnectionsSessions } from './resources/FinancialConnections/Sessions.js';\nimport { Settings as TaxSettings } from './resources/Tax/Settings.js';\nimport { Suppliers as ClimateSuppliers } from './resources/Climate/Suppliers.js';\nimport { TestClocks as TestHelpersTestClocks } from './resources/TestHelpers/TestClocks.js';\nimport { Tokens as IssuingTokens } from './resources/Issuing/Tokens.js';\nimport { TransactionEntries as TreasuryTransactionEntries } from './resources/Treasury/TransactionEntries.js';\nimport { Transactions as TestHelpersIssuingTransactions } from './resources/TestHelpers/Issuing/Transactions.js';\nimport { Transactions as FinancialConnectionsTransactions } from './resources/FinancialConnections/Transactions.js';\nimport { Transactions as IssuingTransactions } from './resources/Issuing/Transactions.js';\nimport { Transactions as TaxTransactions } from './resources/Tax/Transactions.js';\nimport { Transactions as TreasuryTransactions } from './resources/Treasury/Transactions.js';\nimport { ValueListItems as RadarValueListItems } from './resources/Radar/ValueListItems.js';\nimport { ValueLists as RadarValueLists } from './resources/Radar/ValueLists.js';\nimport { VerificationReports as IdentityVerificationReports } from './resources/Identity/VerificationReports.js';\nimport { VerificationSessions as IdentityVerificationSessions } from './resources/Identity/VerificationSessions.js';\nexport { Accounts as Account } from './resources/Accounts.js';\nexport { AccountLinks } from './resources/AccountLinks.js';\nexport { AccountSessions } from './resources/AccountSessions.js';\nexport { Accounts } from './resources/Accounts.js';\nexport { ApplePayDomains } from './resources/ApplePayDomains.js';\nexport { ApplicationFees } from './resources/ApplicationFees.js';\nexport { Balance } from './resources/Balance.js';\nexport { BalanceTransactions } from './resources/BalanceTransactions.js';\nexport { Charges } from './resources/Charges.js';\nexport { ConfirmationTokens } from './resources/ConfirmationTokens.js';\nexport { CountrySpecs } from './resources/CountrySpecs.js';\nexport { Coupons } from './resources/Coupons.js';\nexport { CreditNotes } from './resources/CreditNotes.js';\nexport { CustomerSessions } from './resources/CustomerSessions.js';\nexport { Customers } from './resources/Customers.js';\nexport { Disputes } from './resources/Disputes.js';\nexport { EphemeralKeys } from './resources/EphemeralKeys.js';\nexport { Events } from './resources/Events.js';\nexport { ExchangeRates } from './resources/ExchangeRates.js';\nexport { FileLinks } from './resources/FileLinks.js';\nexport { Files } from './resources/Files.js';\nexport { InvoiceItems } from './resources/InvoiceItems.js';\nexport { InvoicePayments } from './resources/InvoicePayments.js';\nexport { InvoiceRenderingTemplates } from './resources/InvoiceRenderingTemplates.js';\nexport { Invoices } from './resources/Invoices.js';\nexport { Mandates } from './resources/Mandates.js';\nexport { OAuth } from './resources/OAuth.js';\nexport { PaymentIntents } from './resources/PaymentIntents.js';\nexport { PaymentLinks } from './resources/PaymentLinks.js';\nexport { PaymentMethodConfigurations } from './resources/PaymentMethodConfigurations.js';\nexport { PaymentMethodDomains } from './resources/PaymentMethodDomains.js';\nexport { PaymentMethods } from './resources/PaymentMethods.js';\nexport { Payouts } from './resources/Payouts.js';\nexport { Plans } from './resources/Plans.js';\nexport { Prices } from './resources/Prices.js';\nexport { Products } from './resources/Products.js';\nexport { PromotionCodes } from './resources/PromotionCodes.js';\nexport { Quotes } from './resources/Quotes.js';\nexport { Refunds } from './resources/Refunds.js';\nexport { Reviews } from './resources/Reviews.js';\nexport { SetupAttempts } from './resources/SetupAttempts.js';\nexport { SetupIntents } from './resources/SetupIntents.js';\nexport { ShippingRates } from './resources/ShippingRates.js';\nexport { Sources } from './resources/Sources.js';\nexport { SubscriptionItems } from './resources/SubscriptionItems.js';\nexport { SubscriptionSchedules } from './resources/SubscriptionSchedules.js';\nexport { Subscriptions } from './resources/Subscriptions.js';\nexport { TaxCodes } from './resources/TaxCodes.js';\nexport { TaxIds } from './resources/TaxIds.js';\nexport { TaxRates } from './resources/TaxRates.js';\nexport { Tokens } from './resources/Tokens.js';\nexport { Topups } from './resources/Topups.js';\nexport { Transfers } from './resources/Transfers.js';\nexport { WebhookEndpoints } from './resources/WebhookEndpoints.js';\nexport const Apps = resourceNamespace('apps', { Secrets: AppsSecrets });\nexport const Billing = resourceNamespace('billing', {\n    Alerts: BillingAlerts,\n    CreditBalanceSummary: BillingCreditBalanceSummary,\n    CreditBalanceTransactions: BillingCreditBalanceTransactions,\n    CreditGrants: BillingCreditGrants,\n    MeterEventAdjustments: BillingMeterEventAdjustments,\n    MeterEvents: BillingMeterEvents,\n    Meters: BillingMeters,\n});\nexport const BillingPortal = resourceNamespace('billingPortal', {\n    Configurations: BillingPortalConfigurations,\n    Sessions: BillingPortalSessions,\n});\nexport const Checkout = resourceNamespace('checkout', {\n    Sessions: CheckoutSessions,\n});\nexport const Climate = resourceNamespace('climate', {\n    Orders: ClimateOrders,\n    Products: ClimateProducts,\n    Suppliers: ClimateSuppliers,\n});\nexport const Entitlements = resourceNamespace('entitlements', {\n    ActiveEntitlements: EntitlementsActiveEntitlements,\n    Features: EntitlementsFeatures,\n});\nexport const FinancialConnections = resourceNamespace('financialConnections', {\n    Accounts: FinancialConnectionsAccounts,\n    Sessions: FinancialConnectionsSessions,\n    Transactions: FinancialConnectionsTransactions,\n});\nexport const Forwarding = resourceNamespace('forwarding', {\n    Requests: ForwardingRequests,\n});\nexport const Identity = resourceNamespace('identity', {\n    VerificationReports: IdentityVerificationReports,\n    VerificationSessions: IdentityVerificationSessions,\n});\nexport const Issuing = resourceNamespace('issuing', {\n    Authorizations: IssuingAuthorizations,\n    Cardholders: IssuingCardholders,\n    Cards: IssuingCards,\n    Disputes: IssuingDisputes,\n    PersonalizationDesigns: IssuingPersonalizationDesigns,\n    PhysicalBundles: IssuingPhysicalBundles,\n    Tokens: IssuingTokens,\n    Transactions: IssuingTransactions,\n});\nexport const Radar = resourceNamespace('radar', {\n    EarlyFraudWarnings: RadarEarlyFraudWarnings,\n    ValueListItems: RadarValueListItems,\n    ValueLists: RadarValueLists,\n});\nexport const Reporting = resourceNamespace('reporting', {\n    ReportRuns: ReportingReportRuns,\n    ReportTypes: ReportingReportTypes,\n});\nexport const Sigma = resourceNamespace('sigma', {\n    ScheduledQueryRuns: SigmaScheduledQueryRuns,\n});\nexport const Tax = resourceNamespace('tax', {\n    Calculations: TaxCalculations,\n    Registrations: TaxRegistrations,\n    Settings: TaxSettings,\n    Transactions: TaxTransactions,\n});\nexport const Terminal = resourceNamespace('terminal', {\n    Configurations: TerminalConfigurations,\n    ConnectionTokens: TerminalConnectionTokens,\n    Locations: TerminalLocations,\n    Readers: TerminalReaders,\n});\nexport const TestHelpers = resourceNamespace('testHelpers', {\n    ConfirmationTokens: TestHelpersConfirmationTokens,\n    Customers: TestHelpersCustomers,\n    Refunds: TestHelpersRefunds,\n    TestClocks: TestHelpersTestClocks,\n    Issuing: resourceNamespace('issuing', {\n        Authorizations: TestHelpersIssuingAuthorizations,\n        Cards: TestHelpersIssuingCards,\n        PersonalizationDesigns: TestHelpersIssuingPersonalizationDesigns,\n        Transactions: TestHelpersIssuingTransactions,\n    }),\n    Terminal: resourceNamespace('terminal', {\n        Readers: TestHelpersTerminalReaders,\n    }),\n    Treasury: resourceNamespace('treasury', {\n        InboundTransfers: TestHelpersTreasuryInboundTransfers,\n        OutboundPayments: TestHelpersTreasuryOutboundPayments,\n        OutboundTransfers: TestHelpersTreasuryOutboundTransfers,\n        ReceivedCredits: TestHelpersTreasuryReceivedCredits,\n        ReceivedDebits: TestHelpersTreasuryReceivedDebits,\n    }),\n});\nexport const Treasury = resourceNamespace('treasury', {\n    CreditReversals: TreasuryCreditReversals,\n    DebitReversals: TreasuryDebitReversals,\n    FinancialAccounts: TreasuryFinancialAccounts,\n    InboundTransfers: TreasuryInboundTransfers,\n    OutboundPayments: TreasuryOutboundPayments,\n    OutboundTransfers: TreasuryOutboundTransfers,\n    ReceivedCredits: TreasuryReceivedCredits,\n    ReceivedDebits: TreasuryReceivedDebits,\n    TransactionEntries: TreasuryTransactionEntries,\n    Transactions: TreasuryTransactions,\n});\nexport const V2 = resourceNamespace('v2', {\n    Billing: resourceNamespace('billing', {\n        MeterEventAdjustments: V2BillingMeterEventAdjustments,\n        MeterEventSession: V2BillingMeterEventSession,\n        MeterEventStream: V2BillingMeterEventStream,\n        MeterEvents: V2BillingMeterEvents,\n    }),\n    Core: resourceNamespace('core', {\n        EventDestinations: V2CoreEventDestinations,\n        Events: V2CoreEvents,\n    }),\n});\n", "// ResourceNamespace allows you to create nested resources, i.e. `stripe.issuing.cards`.\n// It also works recursively, so you could do i.e. `stripe.billing.invoicing.pay`.\nfunction ResourceNamespace(stripe, resources) {\n    for (const name in resources) {\n        if (!Object.prototype.hasOwnProperty.call(resources, name)) {\n            continue;\n        }\n        const camelCaseName = name[0].toLowerCase() + name.substring(1);\n        const resource = new resources[name](stripe);\n        this[camelCaseName] = resource;\n    }\n}\nexport function resourceNamespace(namespace, resources) {\n    return function (stripe) {\n        return new ResourceNamespace(stripe, resources);\n    };\n}\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Accounts = StripeResource.extend({\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/financial_connections/accounts/{account}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/financial_connections/accounts',\n        methodType: 'list',\n    }),\n    disconnect: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/financial_connections/accounts/{account}/disconnect',\n    }),\n    listOwners: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/financial_connections/accounts/{account}/owners',\n        methodType: 'list',\n    }),\n    refresh: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/financial_connections/accounts/{account}/refresh',\n    }),\n    subscribe: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/financial_connections/accounts/{account}/subscribe',\n    }),\n    unsubscribe: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/financial_connections/accounts/{account}/unsubscribe',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const ActiveEntitlements = StripeResource.extend({\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/entitlements/active_entitlements/{id}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/entitlements/active_entitlements',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Alerts = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/billing/alerts' }),\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/billing/alerts/{id}' }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/billing/alerts',\n        methodType: 'list',\n    }),\n    activate: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/billing/alerts/{id}/activate',\n    }),\n    archive: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/billing/alerts/{id}/archive',\n    }),\n    deactivate: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/billing/alerts/{id}/deactivate',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Authorizations = StripeResource.extend({\n    create: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/issuing/authorizations',\n    }),\n    capture: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/issuing/authorizations/{authorization}/capture',\n    }),\n    expire: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/issuing/authorizations/{authorization}/expire',\n    }),\n    finalizeAmount: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/issuing/authorizations/{authorization}/finalize_amount',\n    }),\n    increment: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/issuing/authorizations/{authorization}/increment',\n    }),\n    respond: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/issuing/authorizations/{authorization}/fraud_challenges/respond',\n    }),\n    reverse: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/issuing/authorizations/{authorization}/reverse',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Authorizations = StripeResource.extend({\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/issuing/authorizations/{authorization}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/issuing/authorizations/{authorization}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/issuing/authorizations',\n        methodType: 'list',\n    }),\n    approve: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/issuing/authorizations/{authorization}/approve',\n    }),\n    decline: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/issuing/authorizations/{authorization}/decline',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Calculations = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/tax/calculations' }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/tax/calculations/{calculation}',\n    }),\n    listLineItems: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/tax/calculations/{calculation}/line_items',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Cardholders = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/issuing/cardholders' }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/issuing/cardholders/{cardholder}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/issuing/cardholders/{cardholder}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/issuing/cardholders',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Cards = StripeResource.extend({\n    deliverCard: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/issuing/cards/{card}/shipping/deliver',\n    }),\n    failCard: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/issuing/cards/{card}/shipping/fail',\n    }),\n    returnCard: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/issuing/cards/{card}/shipping/return',\n    }),\n    shipCard: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/issuing/cards/{card}/shipping/ship',\n    }),\n    submitCard: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/issuing/cards/{card}/shipping/submit',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Cards = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/issuing/cards' }),\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/issuing/cards/{card}' }),\n    update: stripeMethod({ method: 'POST', fullPath: '/v1/issuing/cards/{card}' }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/issuing/cards',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Configurations = StripeResource.extend({\n    create: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/billing_portal/configurations',\n    }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/billing_portal/configurations/{configuration}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/billing_portal/configurations/{configuration}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/billing_portal/configurations',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Configurations = StripeResource.extend({\n    create: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/terminal/configurations',\n    }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/terminal/configurations/{configuration}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/terminal/configurations/{configuration}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/terminal/configurations',\n        methodType: 'list',\n    }),\n    del: stripeMethod({\n        method: 'DELETE',\n        fullPath: '/v1/terminal/configurations/{configuration}',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const ConfirmationTokens = StripeResource.extend({\n    create: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/confirmation_tokens',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const ConnectionTokens = StripeResource.extend({\n    create: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/terminal/connection_tokens',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const CreditBalanceSummary = StripeResource.extend({\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/billing/credit_balance_summary',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const CreditBalanceTransactions = StripeResource.extend({\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/billing/credit_balance_transactions/{id}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/billing/credit_balance_transactions',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const CreditGrants = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/billing/credit_grants' }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/billing/credit_grants/{id}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/billing/credit_grants/{id}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/billing/credit_grants',\n        methodType: 'list',\n    }),\n    expire: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/billing/credit_grants/{id}/expire',\n    }),\n    voidGrant: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/billing/credit_grants/{id}/void',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const CreditReversals = StripeResource.extend({\n    create: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/treasury/credit_reversals',\n    }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/treasury/credit_reversals/{credit_reversal}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/treasury/credit_reversals',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Customers = StripeResource.extend({\n    fundCashBalance: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/customers/{customer}/fund_cash_balance',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const DebitReversals = StripeResource.extend({\n    create: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/treasury/debit_reversals',\n    }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/treasury/debit_reversals/{debit_reversal}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/treasury/debit_reversals',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Disputes = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/issuing/disputes' }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/issuing/disputes/{dispute}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/issuing/disputes/{dispute}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/issuing/disputes',\n        methodType: 'list',\n    }),\n    submit: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/issuing/disputes/{dispute}/submit',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const EarlyFraudWarnings = StripeResource.extend({\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/radar/early_fraud_warnings/{early_fraud_warning}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/radar/early_fraud_warnings',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const EventDestinations = StripeResource.extend({\n    create: stripeMethod({\n        method: 'POST',\n        fullPath: '/v2/core/event_destinations',\n    }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v2/core/event_destinations/{id}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v2/core/event_destinations/{id}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v2/core/event_destinations',\n        methodType: 'list',\n    }),\n    del: stripeMethod({\n        method: 'DELETE',\n        fullPath: '/v2/core/event_destinations/{id}',\n    }),\n    disable: stripeMethod({\n        method: 'POST',\n        fullPath: '/v2/core/event_destinations/{id}/disable',\n    }),\n    enable: stripeMethod({\n        method: 'POST',\n        fullPath: '/v2/core/event_destinations/{id}/enable',\n    }),\n    ping: stripeMethod({\n        method: 'POST',\n        fullPath: '/v2/core/event_destinations/{id}/ping',\n    }),\n});\n", "// This file is manually maintained\nimport { StripeResource } from '../../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Events = StripeResource.extend({\n    retrieve(...args) {\n        const transformResponseData = (response) => {\n            return this.addFetchRelatedObjectIfNeeded(response);\n        };\n        return stripeMethod({\n            method: 'GET',\n            fullPath: '/v2/core/events/{id}',\n            transformResponseData,\n        }).apply(this, args);\n    },\n    list(...args) {\n        const transformResponseData = (response) => {\n            return Object.assign(Object.assign({}, response), { data: response.data.map(this.addFetchRelatedObjectIfNeeded.bind(this)) });\n        };\n        return stripeMethod({\n            method: 'GET',\n            fullPath: '/v2/core/events',\n            methodType: 'list',\n            transformResponseData,\n        }).apply(this, args);\n    },\n    /**\n     * @private\n     *\n     * For internal use in stripe-node.\n     *\n     * @param pulledEvent The retrieved event object\n     * @returns The retrieved event object with a fetchRelatedObject method,\n     * if pulledEvent.related_object is valid (non-null and has a url)\n     */\n    addFetchRelatedObjectIfNeeded(pulledEvent) {\n        if (!pulledEvent.related_object || !pulledEvent.related_object.url) {\n            return pulledEvent;\n        }\n        return Object.assign(Object.assign({}, pulledEvent), { fetchRelatedObject: () => \n            // call stripeMethod with 'this' resource to fetch\n            // the related object. 'this' is needed to construct\n            // and send the request, but the method spec controls\n            // the url endpoint and method, so it doesn't matter\n            // that 'this' is an Events resource object here\n            stripeMethod({\n                method: 'GET',\n                fullPath: pulledEvent.related_object.url,\n            }).apply(this, [\n                {\n                    stripeAccount: pulledEvent.context,\n                },\n            ]) });\n    },\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Features = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/entitlements/features' }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/entitlements/features/{id}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/entitlements/features/{id}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/entitlements/features',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const FinancialAccounts = StripeResource.extend({\n    create: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/treasury/financial_accounts',\n    }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/treasury/financial_accounts/{financial_account}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/treasury/financial_accounts/{financial_account}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/treasury/financial_accounts',\n        methodType: 'list',\n    }),\n    close: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/treasury/financial_accounts/{financial_account}/close',\n    }),\n    retrieveFeatures: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/treasury/financial_accounts/{financial_account}/features',\n    }),\n    updateFeatures: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/treasury/financial_accounts/{financial_account}/features',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const InboundTransfers = StripeResource.extend({\n    fail: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/treasury/inbound_transfers/{id}/fail',\n    }),\n    returnInboundTransfer: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/treasury/inbound_transfers/{id}/return',\n    }),\n    succeed: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/treasury/inbound_transfers/{id}/succeed',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const InboundTransfers = StripeResource.extend({\n    create: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/treasury/inbound_transfers',\n    }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/treasury/inbound_transfers/{id}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/treasury/inbound_transfers',\n        methodType: 'list',\n    }),\n    cancel: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/treasury/inbound_transfers/{inbound_transfer}/cancel',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Locations = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/terminal/locations' }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/terminal/locations/{location}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/terminal/locations/{location}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/terminal/locations',\n        methodType: 'list',\n    }),\n    del: stripeMethod({\n        method: 'DELETE',\n        fullPath: '/v1/terminal/locations/{location}',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const MeterEventAdjustments = StripeResource.extend({\n    create: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/billing/meter_event_adjustments',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const MeterEventAdjustments = StripeResource.extend({\n    create: stripeMethod({\n        method: 'POST',\n        fullPath: '/v2/billing/meter_event_adjustments',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const MeterEventSession = StripeResource.extend({\n    create: stripeMethod({\n        method: 'POST',\n        fullPath: '/v2/billing/meter_event_session',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const MeterEventStream = StripeResource.extend({\n    create: stripeMethod({\n        method: 'POST',\n        fullPath: '/v2/billing/meter_event_stream',\n        host: 'meter-events.stripe.com',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const MeterEvents = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/billing/meter_events' }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const MeterEvents = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v2/billing/meter_events' }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Meters = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/billing/meters' }),\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/billing/meters/{id}' }),\n    update: stripeMethod({ method: 'POST', fullPath: '/v1/billing/meters/{id}' }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/billing/meters',\n        methodType: 'list',\n    }),\n    deactivate: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/billing/meters/{id}/deactivate',\n    }),\n    listEventSummaries: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/billing/meters/{id}/event_summaries',\n        methodType: 'list',\n    }),\n    reactivate: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/billing/meters/{id}/reactivate',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Orders = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/climate/orders' }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/climate/orders/{order}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/climate/orders/{order}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/climate/orders',\n        methodType: 'list',\n    }),\n    cancel: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/climate/orders/{order}/cancel',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const OutboundPayments = StripeResource.extend({\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/treasury/outbound_payments/{id}',\n    }),\n    fail: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/treasury/outbound_payments/{id}/fail',\n    }),\n    post: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/treasury/outbound_payments/{id}/post',\n    }),\n    returnOutboundPayment: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/treasury/outbound_payments/{id}/return',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const OutboundPayments = StripeResource.extend({\n    create: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/treasury/outbound_payments',\n    }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/treasury/outbound_payments/{id}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/treasury/outbound_payments',\n        methodType: 'list',\n    }),\n    cancel: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/treasury/outbound_payments/{id}/cancel',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const OutboundTransfers = StripeResource.extend({\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/treasury/outbound_transfers/{outbound_transfer}',\n    }),\n    fail: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/treasury/outbound_transfers/{outbound_transfer}/fail',\n    }),\n    post: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/treasury/outbound_transfers/{outbound_transfer}/post',\n    }),\n    returnOutboundTransfer: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/treasury/outbound_transfers/{outbound_transfer}/return',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const OutboundTransfers = StripeResource.extend({\n    create: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/treasury/outbound_transfers',\n    }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/treasury/outbound_transfers/{outbound_transfer}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/treasury/outbound_transfers',\n        methodType: 'list',\n    }),\n    cancel: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/treasury/outbound_transfers/{outbound_transfer}/cancel',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const PersonalizationDesigns = StripeResource.extend({\n    activate: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/issuing/personalization_designs/{personalization_design}/activate',\n    }),\n    deactivate: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/issuing/personalization_designs/{personalization_design}/deactivate',\n    }),\n    reject: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/issuing/personalization_designs/{personalization_design}/reject',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const PersonalizationDesigns = StripeResource.extend({\n    create: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/issuing/personalization_designs',\n    }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/issuing/personalization_designs/{personalization_design}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/issuing/personalization_designs/{personalization_design}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/issuing/personalization_designs',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const PhysicalBundles = StripeResource.extend({\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/issuing/physical_bundles/{physical_bundle}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/issuing/physical_bundles',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Products = StripeResource.extend({\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/climate/products/{product}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/climate/products',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Readers = StripeResource.extend({\n    presentPaymentMethod: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/terminal/readers/{reader}/present_payment_method',\n    }),\n    succeedInputCollection: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/terminal/readers/{reader}/succeed_input_collection',\n    }),\n    timeoutInputCollection: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/terminal/readers/{reader}/timeout_input_collection',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Readers = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/terminal/readers' }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/terminal/readers/{reader}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/terminal/readers/{reader}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/terminal/readers',\n        methodType: 'list',\n    }),\n    del: stripeMethod({\n        method: 'DELETE',\n        fullPath: '/v1/terminal/readers/{reader}',\n    }),\n    cancelAction: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/terminal/readers/{reader}/cancel_action',\n    }),\n    collectInputs: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/terminal/readers/{reader}/collect_inputs',\n    }),\n    collectPaymentMethod: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/terminal/readers/{reader}/collect_payment_method',\n    }),\n    confirmPaymentIntent: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/terminal/readers/{reader}/confirm_payment_intent',\n    }),\n    processPaymentIntent: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/terminal/readers/{reader}/process_payment_intent',\n    }),\n    processSetupIntent: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/terminal/readers/{reader}/process_setup_intent',\n    }),\n    refundPayment: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/terminal/readers/{reader}/refund_payment',\n    }),\n    setReaderDisplay: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/terminal/readers/{reader}/set_reader_display',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const ReceivedCredits = StripeResource.extend({\n    create: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/treasury/received_credits',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const ReceivedCredits = StripeResource.extend({\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/treasury/received_credits/{id}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/treasury/received_credits',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const ReceivedDebits = StripeResource.extend({\n    create: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/treasury/received_debits',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const ReceivedDebits = StripeResource.extend({\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/treasury/received_debits/{id}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/treasury/received_debits',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Refunds = StripeResource.extend({\n    expire: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/refunds/{refund}/expire',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Registrations = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/tax/registrations' }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/tax/registrations/{id}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/tax/registrations/{id}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/tax/registrations',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const ReportRuns = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/reporting/report_runs' }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/reporting/report_runs/{report_run}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/reporting/report_runs',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const ReportTypes = StripeResource.extend({\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/reporting/report_types/{report_type}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/reporting/report_types',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Requests = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/forwarding/requests' }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/forwarding/requests/{id}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/forwarding/requests',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const ScheduledQueryRuns = StripeResource.extend({\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/sigma/scheduled_query_runs/{scheduled_query_run}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/sigma/scheduled_query_runs',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Secrets = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/apps/secrets' }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/apps/secrets',\n        methodType: 'list',\n    }),\n    deleteWhere: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/apps/secrets/delete',\n    }),\n    find: stripeMethod({ method: 'GET', fullPath: '/v1/apps/secrets/find' }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Sessions = StripeResource.extend({\n    create: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/billing_portal/sessions',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Sessions = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/checkout/sessions' }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/checkout/sessions/{session}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/checkout/sessions/{session}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/checkout/sessions',\n        methodType: 'list',\n    }),\n    expire: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/checkout/sessions/{session}/expire',\n    }),\n    listLineItems: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/checkout/sessions/{session}/line_items',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Sessions = StripeResource.extend({\n    create: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/financial_connections/sessions',\n    }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/financial_connections/sessions/{session}',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Settings = StripeResource.extend({\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/tax/settings' }),\n    update: stripeMethod({ method: 'POST', fullPath: '/v1/tax/settings' }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Suppliers = StripeResource.extend({\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/climate/suppliers/{supplier}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/climate/suppliers',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const TestClocks = StripeResource.extend({\n    create: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/test_clocks',\n    }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/test_helpers/test_clocks/{test_clock}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/test_helpers/test_clocks',\n        methodType: 'list',\n    }),\n    del: stripeMethod({\n        method: 'DELETE',\n        fullPath: '/v1/test_helpers/test_clocks/{test_clock}',\n    }),\n    advance: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/test_clocks/{test_clock}/advance',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Tokens = StripeResource.extend({\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/issuing/tokens/{token}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/issuing/tokens/{token}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/issuing/tokens',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const TransactionEntries = StripeResource.extend({\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/treasury/transaction_entries/{id}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/treasury/transaction_entries',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Transactions = StripeResource.extend({\n    createForceCapture: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/issuing/transactions/create_force_capture',\n    }),\n    createUnlinkedRefund: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/issuing/transactions/create_unlinked_refund',\n    }),\n    refund: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/issuing/transactions/{transaction}/refund',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Transactions = StripeResource.extend({\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/financial_connections/transactions/{transaction}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/financial_connections/transactions',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Transactions = StripeResource.extend({\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/issuing/transactions/{transaction}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/issuing/transactions/{transaction}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/issuing/transactions',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Transactions = StripeResource.extend({\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/tax/transactions/{transaction}',\n    }),\n    createFromCalculation: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/tax/transactions/create_from_calculation',\n    }),\n    createReversal: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/tax/transactions/create_reversal',\n    }),\n    listLineItems: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/tax/transactions/{transaction}/line_items',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Transactions = StripeResource.extend({\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/treasury/transactions/{id}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/treasury/transactions',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const ValueListItems = StripeResource.extend({\n    create: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/radar/value_list_items',\n    }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/radar/value_list_items/{item}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/radar/value_list_items',\n        methodType: 'list',\n    }),\n    del: stripeMethod({\n        method: 'DELETE',\n        fullPath: '/v1/radar/value_list_items/{item}',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const ValueLists = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/radar/value_lists' }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/radar/value_lists/{value_list}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/radar/value_lists/{value_list}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/radar/value_lists',\n        methodType: 'list',\n    }),\n    del: stripeMethod({\n        method: 'DELETE',\n        fullPath: '/v1/radar/value_lists/{value_list}',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const VerificationReports = StripeResource.extend({\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/identity/verification_reports/{report}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/identity/verification_reports',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const VerificationSessions = StripeResource.extend({\n    create: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/identity/verification_sessions',\n    }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/identity/verification_sessions/{session}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/identity/verification_sessions/{session}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/identity/verification_sessions',\n        methodType: 'list',\n    }),\n    cancel: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/identity/verification_sessions/{session}/cancel',\n    }),\n    redact: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/identity/verification_sessions/{session}/redact',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\n// Since path can either be `account` or `accounts`, support both through stripeMethod path\nexport const Accounts = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/accounts' }),\n    retrieve(id, ...args) {\n        // No longer allow an api key to be passed as the first string to this function due to ambiguity between\n        // old account ids and api keys. To request the account for an api key, send null as the id\n        if (typeof id === 'string') {\n            return stripeMethod({\n                method: 'GET',\n                fullPath: '/v1/accounts/{id}',\n            }).apply(this, [id, ...args]);\n        }\n        else {\n            if (id === null || id === undefined) {\n                // Remove id as stripeMethod would complain of unexpected argument\n                [].shift.apply([id, ...args]);\n            }\n            return stripeMethod({\n                method: 'GET',\n                fullPath: '/v1/account',\n            }).apply(this, [id, ...args]);\n        }\n    },\n    update: stripeMethod({ method: 'POST', fullPath: '/v1/accounts/{account}' }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/accounts',\n        methodType: 'list',\n    }),\n    del: stripeMethod({ method: 'DELETE', fullPath: '/v1/accounts/{account}' }),\n    createExternalAccount: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/accounts/{account}/external_accounts',\n    }),\n    createLoginLink: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/accounts/{account}/login_links',\n    }),\n    createPerson: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/accounts/{account}/persons',\n    }),\n    deleteExternalAccount: stripeMethod({\n        method: 'DELETE',\n        fullPath: '/v1/accounts/{account}/external_accounts/{id}',\n    }),\n    deletePerson: stripeMethod({\n        method: 'DELETE',\n        fullPath: '/v1/accounts/{account}/persons/{person}',\n    }),\n    listCapabilities: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/accounts/{account}/capabilities',\n        methodType: 'list',\n    }),\n    listExternalAccounts: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/accounts/{account}/external_accounts',\n        methodType: 'list',\n    }),\n    listPersons: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/accounts/{account}/persons',\n        methodType: 'list',\n    }),\n    reject: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/accounts/{account}/reject',\n    }),\n    retrieveCurrent: stripeMethod({ method: 'GET', fullPath: '/v1/account' }),\n    retrieveCapability: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/accounts/{account}/capabilities/{capability}',\n    }),\n    retrieveExternalAccount: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/accounts/{account}/external_accounts/{id}',\n    }),\n    retrievePerson: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/accounts/{account}/persons/{person}',\n    }),\n    updateCapability: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/accounts/{account}/capabilities/{capability}',\n    }),\n    updateExternalAccount: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/accounts/{account}/external_accounts/{id}',\n    }),\n    updatePerson: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/accounts/{account}/persons/{person}',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const AccountLinks = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/account_links' }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const AccountSessions = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/account_sessions' }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const ApplePayDomains = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/apple_pay/domains' }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/apple_pay/domains/{domain}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/apple_pay/domains',\n        methodType: 'list',\n    }),\n    del: stripeMethod({\n        method: 'DELETE',\n        fullPath: '/v1/apple_pay/domains/{domain}',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const ApplicationFees = StripeResource.extend({\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/application_fees/{id}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/application_fees',\n        methodType: 'list',\n    }),\n    createRefund: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/application_fees/{id}/refunds',\n    }),\n    listRefunds: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/application_fees/{id}/refunds',\n        methodType: 'list',\n    }),\n    retrieveRefund: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/application_fees/{fee}/refunds/{id}',\n    }),\n    updateRefund: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/application_fees/{fee}/refunds/{id}',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Balance = StripeResource.extend({\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/balance' }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const BalanceTransactions = StripeResource.extend({\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/balance_transactions/{id}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/balance_transactions',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Charges = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/charges' }),\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/charges/{charge}' }),\n    update: stripeMethod({ method: 'POST', fullPath: '/v1/charges/{charge}' }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/charges',\n        methodType: 'list',\n    }),\n    capture: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/charges/{charge}/capture',\n    }),\n    search: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/charges/search',\n        methodType: 'search',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const ConfirmationTokens = StripeResource.extend({\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/confirmation_tokens/{confirmation_token}',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const CountrySpecs = StripeResource.extend({\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/country_specs/{country}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/country_specs',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Coupons = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/coupons' }),\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/coupons/{coupon}' }),\n    update: stripeMethod({ method: 'POST', fullPath: '/v1/coupons/{coupon}' }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/coupons',\n        methodType: 'list',\n    }),\n    del: stripeMethod({ method: 'DELETE', fullPath: '/v1/coupons/{coupon}' }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const CreditNotes = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/credit_notes' }),\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/credit_notes/{id}' }),\n    update: stripeMethod({ method: 'POST', fullPath: '/v1/credit_notes/{id}' }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/credit_notes',\n        methodType: 'list',\n    }),\n    listLineItems: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/credit_notes/{credit_note}/lines',\n        methodType: 'list',\n    }),\n    listPreviewLineItems: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/credit_notes/preview/lines',\n        methodType: 'list',\n    }),\n    preview: stripeMethod({ method: 'GET', fullPath: '/v1/credit_notes/preview' }),\n    voidCreditNote: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/credit_notes/{id}/void',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const CustomerSessions = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/customer_sessions' }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Customers = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/customers' }),\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/customers/{customer}' }),\n    update: stripeMethod({ method: 'POST', fullPath: '/v1/customers/{customer}' }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/customers',\n        methodType: 'list',\n    }),\n    del: stripeMethod({ method: 'DELETE', fullPath: '/v1/customers/{customer}' }),\n    createBalanceTransaction: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/customers/{customer}/balance_transactions',\n    }),\n    createFundingInstructions: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/customers/{customer}/funding_instructions',\n    }),\n    createSource: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/customers/{customer}/sources',\n    }),\n    createTaxId: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/customers/{customer}/tax_ids',\n    }),\n    deleteDiscount: stripeMethod({\n        method: 'DELETE',\n        fullPath: '/v1/customers/{customer}/discount',\n    }),\n    deleteSource: stripeMethod({\n        method: 'DELETE',\n        fullPath: '/v1/customers/{customer}/sources/{id}',\n    }),\n    deleteTaxId: stripeMethod({\n        method: 'DELETE',\n        fullPath: '/v1/customers/{customer}/tax_ids/{id}',\n    }),\n    listBalanceTransactions: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/customers/{customer}/balance_transactions',\n        methodType: 'list',\n    }),\n    listCashBalanceTransactions: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/customers/{customer}/cash_balance_transactions',\n        methodType: 'list',\n    }),\n    listPaymentMethods: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/customers/{customer}/payment_methods',\n        methodType: 'list',\n    }),\n    listSources: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/customers/{customer}/sources',\n        methodType: 'list',\n    }),\n    listTaxIds: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/customers/{customer}/tax_ids',\n        methodType: 'list',\n    }),\n    retrieveBalanceTransaction: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/customers/{customer}/balance_transactions/{transaction}',\n    }),\n    retrieveCashBalance: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/customers/{customer}/cash_balance',\n    }),\n    retrieveCashBalanceTransaction: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/customers/{customer}/cash_balance_transactions/{transaction}',\n    }),\n    retrievePaymentMethod: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/customers/{customer}/payment_methods/{payment_method}',\n    }),\n    retrieveSource: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/customers/{customer}/sources/{id}',\n    }),\n    retrieveTaxId: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/customers/{customer}/tax_ids/{id}',\n    }),\n    search: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/customers/search',\n        methodType: 'search',\n    }),\n    updateBalanceTransaction: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/customers/{customer}/balance_transactions/{transaction}',\n    }),\n    updateCashBalance: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/customers/{customer}/cash_balance',\n    }),\n    updateSource: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/customers/{customer}/sources/{id}',\n    }),\n    verifySource: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/customers/{customer}/sources/{id}/verify',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Disputes = StripeResource.extend({\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/disputes/{dispute}' }),\n    update: stripeMethod({ method: 'POST', fullPath: '/v1/disputes/{dispute}' }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/disputes',\n        methodType: 'list',\n    }),\n    close: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/disputes/{dispute}/close',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const EphemeralKeys = StripeResource.extend({\n    create: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/ephemeral_keys',\n        validator: (data, options) => {\n            if (!options.headers || !options.headers['Stripe-Version']) {\n                throw new Error('Passing apiVersion in a separate options hash is required to create an ephemeral key. See https://stripe.com/docs/api/versioning?lang=node');\n            }\n        },\n    }),\n    del: stripeMethod({ method: 'DELETE', fullPath: '/v1/ephemeral_keys/{key}' }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Events = StripeResource.extend({\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/events/{id}' }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/events',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const ExchangeRates = StripeResource.extend({\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/exchange_rates/{rate_id}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/exchange_rates',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const FileLinks = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/file_links' }),\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/file_links/{link}' }),\n    update: stripeMethod({ method: 'POST', fullPath: '/v1/file_links/{link}' }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/file_links',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { multipartRequestDataProcessor } from '../multipart.js';\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Files = StripeResource.extend({\n    create: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/files',\n        headers: {\n            'Content-Type': 'multipart/form-data',\n        },\n        host: 'files.stripe.com',\n    }),\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/files/{file}' }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/files',\n        methodType: 'list',\n    }),\n    requestDataProcessor: multipartRequestDataProcessor,\n});\n", "import { flattenAndStringify, queryStringifyRequestData } from './utils.js';\n// Method for formatting HTTP body for the multipart/form-data specification\n// Mostly taken from Fermata.js\n// https://github.com/natevw/fermata/blob/5d9732a33d776ce925013a265935facd1626cc88/fermata.js#L315-L343\nconst multipartDataGenerator = (method, data, headers) => {\n    const segno = (Math.round(Math.random() * 1e16) + Math.round(Math.random() * 1e16)).toString();\n    headers['Content-Type'] = `multipart/form-data; boundary=${segno}`;\n    const textEncoder = new TextEncoder();\n    let buffer = new Uint8Array(0);\n    const endBuffer = textEncoder.encode('\\r\\n');\n    function push(l) {\n        const prevBuffer = buffer;\n        const newBuffer = l instanceof Uint8Array ? l : new Uint8Array(textEncoder.encode(l));\n        buffer = new Uint8Array(prevBuffer.length + newBuffer.length + 2);\n        buffer.set(prevBuffer);\n        buffer.set(newBuffer, prevBuffer.length);\n        buffer.set(endBuffer, buffer.length - 2);\n    }\n    function q(s) {\n        return `\"${s.replace(/\"|\"/g, '%22').replace(/\\r\\n|\\r|\\n/g, ' ')}\"`;\n    }\n    const flattenedData = flattenAndStringify(data);\n    for (const k in flattenedData) {\n        if (!Object.prototype.hasOwnProperty.call(flattenedData, k)) {\n            continue;\n        }\n        const v = flattenedData[k];\n        push(`--${segno}`);\n        if (Object.prototype.hasOwnProperty.call(v, 'data')) {\n            const typedEntry = v;\n            push(`Content-Disposition: form-data; name=${q(k)}; filename=${q(typedEntry.name || 'blob')}`);\n            push(`Content-Type: ${typedEntry.type || 'application/octet-stream'}`);\n            push('');\n            push(typedEntry.data);\n        }\n        else {\n            push(`Content-Disposition: form-data; name=${q(k)}`);\n            push('');\n            push(v);\n        }\n    }\n    push(`--${segno}--`);\n    return buffer;\n};\nexport function multipartRequestDataProcessor(method, data, headers, callback) {\n    data = data || {};\n    if (method !== 'POST') {\n        return callback(null, queryStringifyRequestData(data));\n    }\n    this._stripe._platformFunctions\n        .tryBufferData(data)\n        .then((bufferedData) => {\n        const buffer = multipartDataGenerator(method, bufferedData, headers);\n        return callback(null, buffer);\n    })\n        .catch((err) => callback(err, null));\n}\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const InvoiceItems = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/invoiceitems' }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/invoiceitems/{invoiceitem}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/invoiceitems/{invoiceitem}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/invoiceitems',\n        methodType: 'list',\n    }),\n    del: stripeMethod({\n        method: 'DELETE',\n        fullPath: '/v1/invoiceitems/{invoiceitem}',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const InvoicePayments = StripeResource.extend({\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/invoice_payments/{invoice_payment}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/invoice_payments',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const InvoiceRenderingTemplates = StripeResource.extend({\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/invoice_rendering_templates/{template}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/invoice_rendering_templates',\n        methodType: 'list',\n    }),\n    archive: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/invoice_rendering_templates/{template}/archive',\n    }),\n    unarchive: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/invoice_rendering_templates/{template}/unarchive',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Invoices = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/invoices' }),\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/invoices/{invoice}' }),\n    update: stripeMethod({ method: 'POST', fullPath: '/v1/invoices/{invoice}' }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/invoices',\n        methodType: 'list',\n    }),\n    del: stripeMethod({ method: 'DELETE', fullPath: '/v1/invoices/{invoice}' }),\n    addLines: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/invoices/{invoice}/add_lines',\n    }),\n    attachPayment: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/invoices/{invoice}/attach_payment',\n    }),\n    createPreview: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/invoices/create_preview',\n    }),\n    finalizeInvoice: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/invoices/{invoice}/finalize',\n    }),\n    listLineItems: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/invoices/{invoice}/lines',\n        methodType: 'list',\n    }),\n    markUncollectible: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/invoices/{invoice}/mark_uncollectible',\n    }),\n    pay: stripeMethod({ method: 'POST', fullPath: '/v1/invoices/{invoice}/pay' }),\n    removeLines: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/invoices/{invoice}/remove_lines',\n    }),\n    search: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/invoices/search',\n        methodType: 'search',\n    }),\n    sendInvoice: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/invoices/{invoice}/send',\n    }),\n    updateLines: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/invoices/{invoice}/update_lines',\n    }),\n    updateLineItem: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/invoices/{invoice}/lines/{line_item_id}',\n    }),\n    voidInvoice: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/invoices/{invoice}/void',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Mandates = StripeResource.extend({\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/mandates/{mandate}' }),\n});\n", "'use strict';\nimport { StripeResource } from '../StripeResource.js';\nimport { queryStringifyRequestData } from '../utils.js';\nconst stripeMethod = StripeResource.method;\nconst oAuthHost = 'connect.stripe.com';\nexport const OAuth = StripeResource.extend({\n    basePath: '/',\n    authorizeUrl(params, options) {\n        params = params || {};\n        options = options || {};\n        let path = 'oauth/authorize';\n        // For Express accounts, the path changes\n        if (options.express) {\n            path = `express/${path}`;\n        }\n        if (!params.response_type) {\n            params.response_type = 'code';\n        }\n        if (!params.client_id) {\n            params.client_id = this._stripe.getClientId();\n        }\n        if (!params.scope) {\n            params.scope = 'read_write';\n        }\n        return `https://${oAuthHost}/${path}?${queryStringifyRequestData(params)}`;\n    },\n    token: stripeMethod({\n        method: 'POST',\n        path: 'oauth/token',\n        host: oAuthHost,\n    }),\n    deauthorize(spec, ...args) {\n        if (!spec.client_id) {\n            spec.client_id = this._stripe.getClientId();\n        }\n        return stripeMethod({\n            method: 'POST',\n            path: 'oauth/deauthorize',\n            host: oAuthHost,\n        }).apply(this, [spec, ...args]);\n    },\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const PaymentIntents = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/payment_intents' }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/payment_intents/{intent}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/payment_intents/{intent}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/payment_intents',\n        methodType: 'list',\n    }),\n    applyCustomerBalance: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/payment_intents/{intent}/apply_customer_balance',\n    }),\n    cancel: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/payment_intents/{intent}/cancel',\n    }),\n    capture: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/payment_intents/{intent}/capture',\n    }),\n    confirm: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/payment_intents/{intent}/confirm',\n    }),\n    incrementAuthorization: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/payment_intents/{intent}/increment_authorization',\n    }),\n    search: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/payment_intents/search',\n        methodType: 'search',\n    }),\n    verifyMicrodeposits: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/payment_intents/{intent}/verify_microdeposits',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const PaymentLinks = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/payment_links' }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/payment_links/{payment_link}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/payment_links/{payment_link}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/payment_links',\n        methodType: 'list',\n    }),\n    listLineItems: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/payment_links/{payment_link}/line_items',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const PaymentMethodConfigurations = StripeResource.extend({\n    create: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/payment_method_configurations',\n    }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/payment_method_configurations/{configuration}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/payment_method_configurations/{configuration}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/payment_method_configurations',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const PaymentMethodDomains = StripeResource.extend({\n    create: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/payment_method_domains',\n    }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/payment_method_domains/{payment_method_domain}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/payment_method_domains/{payment_method_domain}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/payment_method_domains',\n        methodType: 'list',\n    }),\n    validate: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/payment_method_domains/{payment_method_domain}/validate',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const PaymentMethods = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/payment_methods' }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/payment_methods/{payment_method}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/payment_methods/{payment_method}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/payment_methods',\n        methodType: 'list',\n    }),\n    attach: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/payment_methods/{payment_method}/attach',\n    }),\n    detach: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/payment_methods/{payment_method}/detach',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Payouts = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/payouts' }),\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/payouts/{payout}' }),\n    update: stripeMethod({ method: 'POST', fullPath: '/v1/payouts/{payout}' }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/payouts',\n        methodType: 'list',\n    }),\n    cancel: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/payouts/{payout}/cancel',\n    }),\n    reverse: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/payouts/{payout}/reverse',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Plans = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/plans' }),\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/plans/{plan}' }),\n    update: stripeMethod({ method: 'POST', fullPath: '/v1/plans/{plan}' }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/plans',\n        methodType: 'list',\n    }),\n    del: stripeMethod({ method: 'DELETE', fullPath: '/v1/plans/{plan}' }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Prices = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/prices' }),\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/prices/{price}' }),\n    update: stripeMethod({ method: 'POST', fullPath: '/v1/prices/{price}' }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/prices',\n        methodType: 'list',\n    }),\n    search: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/prices/search',\n        methodType: 'search',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Products = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/products' }),\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/products/{id}' }),\n    update: stripeMethod({ method: 'POST', fullPath: '/v1/products/{id}' }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/products',\n        methodType: 'list',\n    }),\n    del: stripeMethod({ method: 'DELETE', fullPath: '/v1/products/{id}' }),\n    createFeature: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/products/{product}/features',\n    }),\n    deleteFeature: stripeMethod({\n        method: 'DELETE',\n        fullPath: '/v1/products/{product}/features/{id}',\n    }),\n    listFeatures: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/products/{product}/features',\n        methodType: 'list',\n    }),\n    retrieveFeature: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/products/{product}/features/{id}',\n    }),\n    search: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/products/search',\n        methodType: 'search',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const PromotionCodes = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/promotion_codes' }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/promotion_codes/{promotion_code}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/promotion_codes/{promotion_code}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/promotion_codes',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Quotes = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/quotes' }),\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/quotes/{quote}' }),\n    update: stripeMethod({ method: 'POST', fullPath: '/v1/quotes/{quote}' }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/quotes',\n        methodType: 'list',\n    }),\n    accept: stripeMethod({ method: 'POST', fullPath: '/v1/quotes/{quote}/accept' }),\n    cancel: stripeMethod({ method: 'POST', fullPath: '/v1/quotes/{quote}/cancel' }),\n    finalizeQuote: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/quotes/{quote}/finalize',\n    }),\n    listComputedUpfrontLineItems: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/quotes/{quote}/computed_upfront_line_items',\n        methodType: 'list',\n    }),\n    listLineItems: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/quotes/{quote}/line_items',\n        methodType: 'list',\n    }),\n    pdf: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/quotes/{quote}/pdf',\n        host: 'files.stripe.com',\n        streaming: true,\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Refunds = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/refunds' }),\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/refunds/{refund}' }),\n    update: stripeMethod({ method: 'POST', fullPath: '/v1/refunds/{refund}' }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/refunds',\n        methodType: 'list',\n    }),\n    cancel: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/refunds/{refund}/cancel',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Reviews = StripeResource.extend({\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/reviews/{review}' }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/reviews',\n        methodType: 'list',\n    }),\n    approve: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/reviews/{review}/approve',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const SetupAttempts = StripeResource.extend({\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/setup_attempts',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const SetupIntents = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/setup_intents' }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/setup_intents/{intent}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/setup_intents/{intent}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/setup_intents',\n        methodType: 'list',\n    }),\n    cancel: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/setup_intents/{intent}/cancel',\n    }),\n    confirm: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/setup_intents/{intent}/confirm',\n    }),\n    verifyMicrodeposits: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/setup_intents/{intent}/verify_microdeposits',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const ShippingRates = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/shipping_rates' }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/shipping_rates/{shipping_rate_token}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/shipping_rates/{shipping_rate_token}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/shipping_rates',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Sources = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/sources' }),\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/sources/{source}' }),\n    update: stripeMethod({ method: 'POST', fullPath: '/v1/sources/{source}' }),\n    listSourceTransactions: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/sources/{source}/source_transactions',\n        methodType: 'list',\n    }),\n    verify: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/sources/{source}/verify',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const SubscriptionItems = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/subscription_items' }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/subscription_items/{item}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/subscription_items/{item}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/subscription_items',\n        methodType: 'list',\n    }),\n    del: stripeMethod({\n        method: 'DELETE',\n        fullPath: '/v1/subscription_items/{item}',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const SubscriptionSchedules = StripeResource.extend({\n    create: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/subscription_schedules',\n    }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/subscription_schedules/{schedule}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/subscription_schedules/{schedule}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/subscription_schedules',\n        methodType: 'list',\n    }),\n    cancel: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/subscription_schedules/{schedule}/cancel',\n    }),\n    release: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/subscription_schedules/{schedule}/release',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Subscriptions = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/subscriptions' }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/subscriptions/{subscription_exposed_id}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/subscriptions/{subscription_exposed_id}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/subscriptions',\n        methodType: 'list',\n    }),\n    cancel: stripeMethod({\n        method: 'DELETE',\n        fullPath: '/v1/subscriptions/{subscription_exposed_id}',\n    }),\n    deleteDiscount: stripeMethod({\n        method: 'DELETE',\n        fullPath: '/v1/subscriptions/{subscription_exposed_id}/discount',\n    }),\n    migrate: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/subscriptions/{subscription}/migrate',\n    }),\n    resume: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/subscriptions/{subscription}/resume',\n    }),\n    search: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/subscriptions/search',\n        methodType: 'search',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const TaxCodes = StripeResource.extend({\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/tax_codes/{id}' }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/tax_codes',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const TaxIds = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/tax_ids' }),\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/tax_ids/{id}' }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/tax_ids',\n        methodType: 'list',\n    }),\n    del: stripeMethod({ method: 'DELETE', fullPath: '/v1/tax_ids/{id}' }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const TaxRates = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/tax_rates' }),\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/tax_rates/{tax_rate}' }),\n    update: stripeMethod({ method: 'POST', fullPath: '/v1/tax_rates/{tax_rate}' }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/tax_rates',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Tokens = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/tokens' }),\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/tokens/{token}' }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Topups = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/topups' }),\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/topups/{topup}' }),\n    update: stripeMethod({ method: 'POST', fullPath: '/v1/topups/{topup}' }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/topups',\n        methodType: 'list',\n    }),\n    cancel: stripeMethod({ method: 'POST', fullPath: '/v1/topups/{topup}/cancel' }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Transfers = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/transfers' }),\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/transfers/{transfer}' }),\n    update: stripeMethod({ method: 'POST', fullPath: '/v1/transfers/{transfer}' }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/transfers',\n        methodType: 'list',\n    }),\n    createReversal: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/transfers/{id}/reversals',\n    }),\n    listReversals: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/transfers/{id}/reversals',\n        methodType: 'list',\n    }),\n    retrieveReversal: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/transfers/{transfer}/reversals/{id}',\n    }),\n    updateReversal: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/transfers/{transfer}/reversals/{id}',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const WebhookEndpoints = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/webhook_endpoints' }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/webhook_endpoints/{webhook_endpoint}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/webhook_endpoints/{webhook_endpoint}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/webhook_endpoints',\n        methodType: 'list',\n    }),\n    del: stripeMethod({\n        method: 'DELETE',\n        fullPath: '/v1/webhook_endpoints/{webhook_endpoint}',\n    }),\n});\n", "/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { Context } from 'hono';\nimport { inject, injectable } from 'inversify';\nimport { LoggedCheck } from 'middlewares/LoggedCheck';\nimport { describe } from '../decorators/describe';\nimport { controller, httpGet, httpPost } from '../hono-inversify';\nimport { User } from '../interfaces/User';\nimport { createRateLimit } from '../middlewares/hono/rateLimit';\nimport { ILogService } from '../services/LogService';\nimport { IStudioService } from '../services/StudioService';\n\nconst createStudioRateLimit = createRateLimit({\n  windowMs: 60 * 60 * 1000, \n  max: 3, \n  message: 'Too many studio creations, please try again later.',\n  standardHeaders: true,\n  legacyHeaders: false,\n});\n\nconst addUserToStudioRateLimit = createRateLimit({\n  windowMs: 60 * 60 * 1000, \n  max: 10, \n  message: 'Too many add user requests, please try again later.',\n  standardHeaders: true,\n  legacyHeaders: false,\n});\n\nconst removeUserFromStudioRateLimit = createRateLimit({\n  windowMs: 60 * 60 * 1000, \n  max: 10, \n  message: 'Too many remove user requests, please try again later.',\n  standardHeaders: true,\n  legacyHeaders: false,\n});\n\n@injectable()\n@controller('/studios')\nexport class Studios {\n  constructor(\n    @inject('StudioService') private studioService: IStudioService,\n    @inject('LogService') private logService: ILogService\n  ) {}\n\n  private sendError(c: Context, status: number, message: string, error?: string) {\n    const response: any = { message };\n    if (error) {\n      response.error = error;\n    }\n    return c.json(response, status as any);\n  }\n\n  private async createLog(c: Context, action: string, tableName?: string, statusCode?: number, userId?: string, metadata?: object, body?: any) {\n    try {\n      let requestBody: any = body || { note: 'Body not provided for logging' };\n      \n      if (metadata) {\n        requestBody = { ...requestBody, metadata };\n      }\n      \n      const clientIP = c.req.header('cf-connecting-ip') || \n                      c.req.header('x-forwarded-for') || \n                      c.req.header('x-real-ip') || \n                      'unknown';\n      \n      await this.logService.createLog({\n        ip_address: clientIP,\n        table_name: tableName,\n        controller: `StudioController.${action}`,\n        original_path: c.req.path,\n        http_method: c.req.method,\n        request_body: JSON.stringify(requestBody),\n        user_id: userId,\n        status_code: statusCode,\n      });\n    } catch (error) {\n      console.error('Error creating log:', error);\n    }\n  }\n\n  // Helper pour r\u00E9cup\u00E9rer l'utilisateur authentifi\u00E9 depuis le context\n  private getUserFromContext(c: Context) {\n    return c.get('user') as User | undefined;\n  }\n\n  private async getStudioOrError(studioId: string, c: Context, userId?: string) {\n    const studio = await this.studioService.getStudio(studioId);\n    if (!studio) {\n      await this.createLog(c, 'getStudioOrError', 'studios', 404, userId, { studio_id: studioId });\n      return null;\n    }\n    return studio;\n  }\n\n  @describe({\n    endpoint: '/studios',\n    method: 'POST',\n    description: 'Create a new studio.',\n    body: { studioName: 'Name of the studio' },\n    responseType: { message: 'string' },\n    example: 'POST /api/studios {\"studioName\": \"My Studio\"}',\n    requiresAuth: true,\n  })\n  @httpPost('/', LoggedCheck, createStudioRateLimit)\n  async createStudio(c: Context) {\n    try {\n      const user = this.getUserFromContext(c);\n      \n      if (!user) {\n        await this.createLog(c, 'createStudio', 'studios', 401);\n        return this.sendError(c, 401, 'Unauthorized');\n      }\n\n      if (user.isStudio) {\n        await this.createLog(c, 'createStudio', 'studios', 403, user.user_id, {\n          reason: 'studio_cannot_create_studio',\n        });\n        return this.sendError(c, 403, \"A studio can't create another studio\");\n      }\n\n      const body = await c.req.json();\n      const { studioName } = body;\n      \n      if (!studioName) {\n        await this.createLog(c, 'createStudio', 'studios', 400, user.user_id, undefined, body);\n        return this.sendError(c, 400, 'Missing required fields');\n      }\n\n      await this.studioService.createStudio(studioName, user.user_id);\n      await this.createLog(c, 'createStudio', 'studios', 201, user.user_id, {\n        studio_name: studioName,\n      }, body);\n      \n      return c.json({ message: 'Studio created' }, 201);\n    } catch (error) {\n      console.error('Error creating studio:', error);\n      const user = this.getUserFromContext(c);\n      const body = await c.req.json().catch(() => ({}));\n      await this.createLog(c, 'createStudio', 'studios', 500, user?.user_id, {\n        error: error instanceof Error ? error.message : String(error),\n      }, body);\n      return this.sendError(c, 500, 'Error creating studio', error instanceof Error ? error.message : String(error));\n    }\n  }\n\n  @describe({\n    endpoint: '/studios/:studioId',\n    method: 'GET',\n    description: 'Get a studio by studioId',\n    params: { studioId: 'The ID of the studio to retrieve' },\n    responseType: {\n      user_id: 'string',\n      username: 'string',\n      verified: 'boolean',\n      admin_id: 'string',\n      users: [\n        {\n          user_id: 'string',\n          username: 'string',\n          verified: 'boolean',\n          admin: 'boolean',\n        },\n      ],\n    },\n    example: 'GET /api/studios/studio123',\n  })\n  @httpGet('/:studioId')\n  async getStudio(c: Context) {\n    try {\n      const { studioId } = c.req.param();\n      const studio = await this.getStudioOrError(studioId, c);\n      \n      if (!studio) {\n        return this.sendError(c, 404, 'Studio not found');\n      }\n\n      await this.createLog(c, 'getStudio', 'studios', 200, undefined, {\n        studio_id: studioId,\n        users_count: studio.users?.length || 0,\n      });\n      \n      return c.json(studio, 200);\n    } catch (error) {\n      console.error('Error fetching studio:', error);\n      const { studioId } = c.req.param();\n      await this.createLog(c, 'getStudio', 'studios', 500, undefined, {\n        studio_id: studioId,\n        error: error instanceof Error ? error.message : String(error),\n      });\n      return this.sendError(c, 500, 'Error fetching studio', error instanceof Error ? error.message : String(error));\n    }\n  }\n\n  @describe({\n    endpoint: '/studios/user/@me',\n    method: 'GET',\n    description: 'Get all studios the authenticated user is part of.',\n    responseType: [\n      {\n        user_id: 'string',\n        username: 'string',\n        verified: 'boolean',\n        admin_id: 'string',\n        isAdmin: 'boolean',\n        apiKey: 'string',\n        users: [\n          {\n            user_id: 'string',\n            username: 'string',\n            verified: 'boolean',\n            admin: 'boolean',\n          },\n        ],\n      },\n    ],\n    example: 'GET /api/studios/user/@me',\n    requiresAuth: true,\n  })\n  @httpGet('/user/@me')\n  async getMyStudios(c: Context) {\n    try {\n      const user = this.getUserFromContext(c);\n      \n      if (!user) {\n        await this.createLog(c, 'getMyStudios', 'studios', 401);\n        return this.sendError(c, 401, 'Unauthorized');\n      }\n\n      const studios = await this.studioService.getUserStudios(user.user_id);\n      await this.createLog(c, 'getMyStudios', 'studios', 200, user.user_id, {\n        studios_count: studios.length,\n        user_studios: studios.map(s => ({ id: s.user_id, isAdmin: s.isAdmin })),\n      });\n      \n      return c.json(studios, 200);\n    } catch (error) {\n      console.error('Error fetching user studios:', error);\n      const user = this.getUserFromContext(c);\n      await this.createLog(c, 'getMyStudios', 'studios', 500, user?.user_id, {\n        error: error instanceof Error ? error.message : String(error),\n      });\n      return this.sendError(c, 500, 'Error fetching user studios', error instanceof Error ? error.message : String(error));\n    }\n  }\n\n  private async checkStudioAdmin(c: Context, user: User, studioId: string) {\n    const studio = await this.getStudioOrError(studioId, c, user.user_id);\n    if (!studio) return null;\n    \n    if (studio.admin_id !== user.user_id) {\n      await this.createLog(c, 'checkStudioAdmin', 'studio_users', 403, user.user_id, {\n        studio_id: studioId,\n        reason: 'not_admin',\n        studio_admin_id: studio.admin_id,\n      });\n      return null;\n    }\n    return studio;\n  }\n\n  @describe({\n    endpoint: '/studios/:studioId/add-user',\n    method: 'POST',\n    description: 'Add a user to a studio.',\n    params: { studioId: 'The ID of the studio' },\n    body: { userId: 'The ID of the user to add' },\n    responseType: { message: 'string' },\n    example: 'POST /api/studios/studio123/add-user {\"userId\": \"user456\"}',\n    requiresAuth: true,\n  })\n  @httpPost('/:studioId/add-user', LoggedCheck, addUserToStudioRateLimit)\n  async addUserToStudio(c: Context) {\n    try {\n      const user = this.getUserFromContext(c);\n      \n      if (!user) {\n        await this.createLog(c, 'addUserToStudio', 'studio_users', 401);\n        return this.sendError(c, 401, 'Unauthorized');\n      }\n\n      const { studioId } = c.req.param();\n      const body = await c.req.json();\n      const { userId } = body;\n      \n      if (!userId) {\n        await this.createLog(c, 'addUserToStudio', 'studio_users', 400, user.user_id, {\n          studio_id: studioId,\n          reason: 'missing_user_id',\n        }, body);\n        return this.sendError(c, 400, 'Missing userId');\n      }\n\n      const targetUser = await this.studioService.getUser(userId);\n      if (!targetUser) {\n        await this.createLog(c, 'addUserToStudio', 'studio_users', 404, user.user_id, {\n          studio_id: studioId,\n          target_user_id: userId,\n          reason: 'user_not_found',\n        }, body);\n        return this.sendError(c, 404, 'User not found');\n      }\n\n      const studio = await this.checkStudioAdmin(c, user, studioId);\n      if (!studio) {\n        return this.sendError(c, 403, 'Only the studio admin can modify users');\n      }\n\n      await this.studioService.addUserToStudio(studioId, targetUser);\n      await this.createLog(c, 'addUserToStudio', 'studio_users', 200, user.user_id, {\n        studio_id: studioId,\n        target_user_id: userId,\n        target_username: targetUser.username,\n      }, body);\n      \n      return c.json({ message: 'User added to studio' }, 200);\n    } catch (error) {\n      console.error('Error adding user to studio:', error);\n      const user = this.getUserFromContext(c);\n      const { studioId } = c.req.param();\n      const body = await c.req.json().catch(() => ({}));\n      await this.createLog(c, 'addUserToStudio', 'studio_users', 500, user?.user_id, {\n        studio_id: studioId,\n        error: error instanceof Error ? error.message : String(error),\n      }, body);\n      return this.sendError(c, 500, 'Error adding user to studio', error instanceof Error ? error.message : String(error));\n    }\n  }\n\n  @describe({\n    endpoint: '/studios/:studioId/remove-user',\n    method: 'POST',\n    description: 'Remove a user from a studio.',\n    params: { studioId: 'The ID of the studio' },\n    body: { userId: 'The ID of the user to remove' },\n    responseType: { message: 'string' },\n    example: 'POST /api/studios/studio123/remove-user {\"userId\": \"user456\"}',\n    requiresAuth: true,\n  })\n  @httpPost('/:studioId/remove-user', LoggedCheck, removeUserFromStudioRateLimit)\n  async removeUserFromStudio(c: Context) {\n    try {\n      const user = this.getUserFromContext(c);\n      \n      if (!user) {\n        await this.createLog(c, 'removeUserFromStudio', 'studio_users', 401);\n        return this.sendError(c, 401, 'Unauthorized');\n      }\n\n      const { studioId } = c.req.param();\n      const body = await c.req.json();\n      const { userId } = body;\n      \n      if (!userId) {\n        await this.createLog(c, 'removeUserFromStudio', 'studio_users', 400, user.user_id, {\n          studio_id: studioId,\n          reason: 'missing_user_id',\n        }, body);\n        return this.sendError(c, 400, 'Missing userId');\n      }\n\n      const studio = await this.checkStudioAdmin(c, user, studioId);\n      if (!studio) {\n        return this.sendError(c, 403, 'Only the studio admin can modify users');\n      }\n\n      if (studio.admin_id === userId) {\n        await this.createLog(c, 'removeUserFromStudio', 'studio_users', 403, user.user_id, {\n          studio_id: studioId,\n          target_user_id: userId,\n          reason: 'cannot_remove_admin',\n        }, body);\n        return this.sendError(c, 403, 'Cannot remove the studio admin');\n      }\n\n      await this.studioService.removeUserFromStudio(studioId, userId);\n      await this.createLog(c, 'removeUserFromStudio', 'studio_users', 200, user.user_id, {\n        studio_id: studioId,\n        target_user_id: userId,\n      }, body);\n      \n      return c.json({ message: 'User removed from studio' }, 200);\n    } catch (error) {\n      console.error('Error removing user from studio:', error);\n      const user = this.getUserFromContext(c);\n      const { studioId } = c.req.param();\n      const body = await c.req.json().catch(() => ({}));\n      await this.createLog(c, 'removeUserFromStudio', 'studio_users', 500, user?.user_id, {\n        studio_id: studioId,\n        error: error instanceof Error ? error.message : String(error),\n      }, body);\n      return this.sendError(c, 500, 'Error removing user from studio', error instanceof Error ? error.message : String(error));\n    }\n  }\n}\n\n\n", "/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { Context } from 'hono';\nimport { inject, injectable } from 'inversify';\nimport { LoggedCheck } from 'middlewares/LoggedCheck';\nimport { describe } from '../decorators/describe';\nimport { controller, httpGet, httpPost, httpPut } from '../hono-inversify';\nimport { TradeItem } from '../interfaces/Trade';\nimport { User } from '../interfaces/User';\nimport { ILogService } from '../services/LogService';\nimport { ITradeService } from '../services/TradeService';\n\n@injectable()\n@controller('/trades')\nexport class Trades {\n  constructor(\n    @inject('TradeService') private tradeService: ITradeService,\n    @inject('LogService') private logService: ILogService\n  ) {}\n\n  private sendError(c: Context, status: number, message: string, error?: string) {\n    const response: any = { message };\n    if (error) {\n      response.error = error;\n    }\n    return c.json(response, status as any);\n  }\n\n  private async createLog(c: Context, action: string, tableName?: string, statusCode?: number, userId?: string, metadata?: object, body?: any) {\n    try {\n      let requestBody: any = body || { note: 'Body not provided for logging' };\n      \n      if (metadata) {\n        requestBody = { ...requestBody, metadata };\n      }\n      \n      const clientIP = c.req.header('cf-connecting-ip') || \n                      c.req.header('x-forwarded-for') || \n                      c.req.header('x-real-ip') || \n                      'unknown';\n      \n      await this.logService.createLog({\n        ip_address: clientIP,\n        table_name: tableName,\n        controller: `TradeController.${action}`,\n        original_path: c.req.path,\n        http_method: c.req.method,\n        request_body: JSON.stringify(requestBody),\n        user_id: userId,\n        status_code: statusCode,\n      });\n    } catch (error) {\n      console.error('Error creating log:', error);\n    }\n  }\n\n  // Helper pour r\u00E9cup\u00E9rer l'utilisateur authentifi\u00E9 depuis le context\n  private getUserFromContext(c: Context) {\n    return c.get('user') as User | undefined;\n  }\n\n  @describe({\n    endpoint: '/trades/start-or-latest/:userId',\n    method: 'POST',\n    description: 'Start a new trade or get the latest pending trade with a user',\n    params: { userId: 'The ID of the user to trade with' },\n    responseType: {\n      id: 'string',\n      fromUserId: 'string',\n      toUserId: 'string',\n      fromUserItems: ['object'],\n      toUserItems: ['object'],\n      approvedFromUser: 'boolean',\n      approvedToUser: 'boolean',\n      status: 'string',\n      createdAt: 'string',\n      updatedAt: 'string',\n    },\n    example: 'POST /api/trades/start-or-latest/user123',\n    requiresAuth: true,\n  })\n  @httpPost('/start-or-latest/:userId', LoggedCheck)\n  public async startOrGetPendingTrade(c: Context) {\n    try {\n      const user = this.getUserFromContext(c);\n      \n      if (!user) {\n        await this.createLog(c, 'startOrGetPendingTrade', 'trades', 401);\n        return this.sendError(c, 401, 'Unauthorized');\n      }\n\n      const { userId } = c.req.param();\n      const fromUserId = user.user_id;\n      const toUserId = userId;\n\n      if (fromUserId === toUserId) {\n        await this.createLog(c, 'startOrGetPendingTrade', 'trades', 400, fromUserId, {\n          reason: 'self_trade_attempt',\n          target_user_id: toUserId,\n        });\n        return this.sendError(c, 400, 'Cannot trade with yourself');\n      }\n\n      const trade = await this.tradeService.startOrGetPendingTrade(fromUserId, toUserId);\n      await this.createLog(c, 'startOrGetPendingTrade', 'trades', 200, fromUserId, {\n        trade_id: trade.id,\n        target_user_id: toUserId,\n        trade_status: trade.status,\n        is_new_trade: trade.createdAt === trade.updatedAt,\n      });\n      \n      return c.json(trade, 200);\n    } catch (error) {\n      console.error('Error starting or getting trade:', error);\n      const user = this.getUserFromContext(c);\n      const { userId } = c.req.param();\n      await this.createLog(c, 'startOrGetPendingTrade', 'trades', 500, user?.user_id, {\n        target_user_id: userId,\n        error: error instanceof Error ? error.message : String(error),\n      });\n      return this.sendError(c, 500, 'Error starting or getting trade', error instanceof Error ? error.message : String(error));\n    }\n  }\n\n  @describe({\n    endpoint: '/trades/:id',\n    method: 'GET',\n    description: 'Get a trade by ID with enriched item information',\n    params: { id: 'The ID of the trade' },\n    responseType: {\n      id: 'string',\n      fromUserId: 'string',\n      toUserId: 'string',\n      fromUserItems: [\n        {\n          itemId: 'string',\n          name: 'string',\n          description: 'string',\n          iconHash: 'string',\n          amount: 'number',\n        },\n      ],\n      toUserItems: [\n        {\n          itemId: 'string',\n          name: 'string',\n          description: 'string',\n          iconHash: 'string',\n          amount: 'number',\n        },\n      ],\n      approvedFromUser: 'boolean',\n      approvedToUser: 'boolean',\n      status: 'string',\n      createdAt: 'string',\n      updatedAt: 'string',\n    },\n    example: 'GET /api/trades/trade123',\n    requiresAuth: true,\n  })\n  @httpGet('/:id', LoggedCheck)\n  public async getTradeById(c: Context) {\n    try {\n      const user = this.getUserFromContext(c);\n      \n      if (!user) {\n        await this.createLog(c, 'getTradeById', 'trades', 401);\n        return this.sendError(c, 401, 'Unauthorized');\n      }\n\n      const { id } = c.req.param();\n      const trade = await this.tradeService.getFormattedTradeById(id);\n\n      if (!trade) {\n        await this.createLog(c, 'getTradeById', 'trades', 404, user.user_id, { trade_id: id });\n        return this.sendError(c, 404, 'Trade not found');\n      }\n\n      if (trade.fromUserId !== user.user_id && trade.toUserId !== user.user_id) {\n        await this.createLog(c, 'getTradeById', 'trades', 403, user.user_id, {\n          trade_id: id,\n          reason: 'not_participant',\n          from_user_id: trade.fromUserId,\n          to_user_id: trade.toUserId,\n        });\n        return this.sendError(c, 403, 'Forbidden');\n      }\n\n      await this.createLog(c, 'getTradeById', 'trades', 200, user.user_id, {\n        trade_id: id,\n        trade_status: trade.status,\n        from_user_id: trade.fromUserId,\n        to_user_id: trade.toUserId,\n        items_count: {\n          from_user: trade.fromUserItems.length,\n          to_user: trade.toUserItems.length,\n        },\n      });\n      \n      return c.json(trade, 200);\n    } catch (error) {\n      console.error('Error fetching trade:', error);\n      const user = this.getUserFromContext(c);\n      const { id } = c.req.param();\n      await this.createLog(c, 'getTradeById', 'trades', 500, user?.user_id, {\n        trade_id: id,\n        error: error instanceof Error ? error.message : String(error),\n      });\n      return this.sendError(c, 500, 'Error fetching trade', error instanceof Error ? error.message : String(error));\n    }\n  }\n\n  @describe({\n    endpoint: '/trades/user/:userId',\n    method: 'GET',\n    description: 'Get all trades for a user with enriched item information',\n    params: { userId: 'The ID of the user' },\n    responseType: [\n      {\n        id: 'string',\n        fromUserId: 'string',\n        toUserId: 'string',\n        fromUserItems: [\n          {\n            itemId: 'string',\n            name: 'string',\n            description: 'string',\n            iconHash: 'string',\n            amount: 'number',\n          },\n        ],\n        toUserItems: [\n          {\n            itemId: 'string',\n            name: 'string',\n            description: 'string',\n            iconHash: 'string',\n            amount: 'number',\n          },\n        ],\n        approvedFromUser: 'boolean',\n        approvedToUser: 'boolean',\n        status: 'string',\n        createdAt: 'string',\n        updatedAt: 'string',\n      },\n    ],\n    example: 'GET /api/trades/user/user123',\n    requiresAuth: true,\n  })\n  @httpGet('/user/:userId', LoggedCheck)\n  public async getTradesByUser(c: Context) {\n    try {\n      const user = this.getUserFromContext(c);\n      \n      if (!user) {\n        await this.createLog(c, 'getTradesByUser', 'trades', 401);\n        return this.sendError(c, 401, 'Unauthorized');\n      }\n\n      const { userId } = c.req.param();\n\n      if (userId !== user.user_id) {\n        await this.createLog(c, 'getTradesByUser', 'trades', 403, user.user_id, {\n          reason: 'unauthorized_user_access',\n          requested_user_id: userId,\n        });\n        return this.sendError(c, 403, 'Forbidden');\n      }\n\n      const trades = await this.tradeService.getFormattedTradesByUser(userId);\n      await this.createLog(c, 'getTradesByUser', 'trades', 200, user.user_id, {\n        user_id: userId,\n        trades_count: trades.length,\n        trades_by_status: trades.reduce(\n          (acc, trade) => {\n            acc[trade.status] = (acc[trade.status] || 0) + 1;\n            return acc;\n          },\n          {} as Record<string, number>\n        ),\n      });\n      \n      return c.json(trades, 200);\n    } catch (error) {\n      console.error('Error fetching trades:', error);\n      const user = this.getUserFromContext(c);\n      const { userId } = c.req.param();\n      await this.createLog(c, 'getTradesByUser', 'trades', 500, user?.user_id, {\n        user_id: userId,\n        error: error instanceof Error ? error.message : String(error),\n      });\n      return this.sendError(c, 500, 'Error fetching trades', error instanceof Error ? error.message : String(error));\n    }\n  }\n\n  @describe({\n    endpoint: '/trades/:id/add-item',\n    method: 'POST',\n    description: 'Add an item to a trade',\n    params: { id: 'The ID of the trade' },\n    body: {\n      tradeItem: {\n        itemId: 'The ID of the item to add',\n        amount: 'The amount of the item to add',\n        metadata: 'Metadata object including _unique_id for unique items (optional)',\n      },\n    },\n    responseType: { message: 'string' },\n    example: 'POST /api/trades/trade123/add-item {\"tradeItem\": {\"itemId\": \"item456\", \"amount\": 5}} or {\"tradeItem\": {\"itemId\": \"item456\", \"amount\": 1, \"metadata\": {\"level\": 5, \"_unique_id\": \"abc-123\"}}}',\n    requiresAuth: true,\n  })\n  @httpPost('/:id/add-item', LoggedCheck)\n  public async addItemToTrade(c: Context) {\n    try {\n      const user = this.getUserFromContext(c);\n      \n      if (!user) {\n        await this.createLog(c, 'addItemToTrade', 'trade_items', 401);\n        return this.sendError(c, 401, 'Unauthorized');\n      }\n\n      const { id } = c.req.param();\n      const tradeId = id;\n      const body = await c.req.json();\n      const { tradeItem } = body as { tradeItem: TradeItem };\n\n      if (!tradeItem.itemId || !tradeItem.amount || tradeItem.amount <= 0) {\n        await this.createLog(c, 'addItemToTrade', 'trade_items', 400, user.user_id, {\n          trade_id: tradeId,\n          action: 'add_item',\n          reason: 'invalid_trade_item_format',\n          trade_item: tradeItem,\n        }, body);\n        return this.sendError(c, 400, 'Invalid tradeItem format');\n      }\n\n      await this.tradeService.addItemToTrade(tradeId, user.user_id, tradeItem);\n      await this.createLog(c, 'addItemToTrade', 'trade_items', 200, user.user_id, {\n        trade_id: tradeId,\n        action: 'add_item',\n        item_id: tradeItem.itemId,\n        amount: tradeItem.amount,\n        has_metadata: !!tradeItem.metadata,\n        has_unique_id: !!tradeItem.metadata?._unique_id,\n      }, body);\n      \n      return c.json({ message: 'Item added to trade' }, 200);\n    } catch (error) {\n      console.error('Error adding item to trade:', error);\n      const user = this.getUserFromContext(c);\n      const { id } = c.req.param();\n      const body = await c.req.json().catch(() => ({}));\n      const { tradeItem } = body as { tradeItem?: TradeItem };\n      \n      await this.createLog(c, 'addItemToTrade', 'trade_items', 500, user?.user_id, {\n        trade_id: id,\n        action: 'add_item',\n        item_id: tradeItem?.itemId,\n        amount: tradeItem?.amount,\n        error: error instanceof Error ? error.message : String(error),\n      }, body);\n      return this.sendError(c, 500, 'Error adding item to trade', error instanceof Error ? error.message : String(error));\n    }\n  }\n\n  @describe({\n    endpoint: '/trades/:id/remove-item',\n    method: 'POST',\n    description: 'Remove an item from a trade',\n    params: { id: 'The ID of the trade' },\n    body: {\n      tradeItem: {\n        itemId: 'The ID of the item to remove',\n        amount: 'The amount of the item to remove',\n        metadata: 'Metadata object including _unique_id for unique items (optional)',\n      },\n    },\n    responseType: { message: 'string' },\n    example: 'POST /api/trades/trade123/remove-item {\"tradeItem\": {\"itemId\": \"item456\", \"amount\": 2}} or {\"tradeItem\": {\"itemId\": \"item456\", \"metadata\": {\"_unique_id\": \"abc-123\"}}}',\n    requiresAuth: true,\n  })\n  @httpPost('/:id/remove-item', LoggedCheck)\n  public async removeItemFromTrade(c: Context) {\n    try {\n      const user = this.getUserFromContext(c);\n      \n      if (!user) {\n        await this.createLog(c, 'removeItemFromTrade', 'trade_items', 401);\n        return this.sendError(c, 401, 'Unauthorized');\n      }\n\n      const { id } = c.req.param();\n      const tradeId = id;\n      const body = await c.req.json();\n      const { tradeItem } = body as { tradeItem: TradeItem };\n\n      if (!tradeItem.itemId) {\n        await this.createLog(c, 'removeItemFromTrade', 'trade_items', 400, user.user_id, {\n          trade_id: tradeId,\n          action: 'remove_item',\n          reason: 'missing_item_id',\n        }, body);\n        return this.sendError(c, 400, 'Invalid tradeItem format');\n      }\n\n      if (!tradeItem.metadata?._unique_id && (!tradeItem.amount || tradeItem.amount <= 0)) {\n        await this.createLog(c, 'removeItemFromTrade', 'trade_items', 400, user.user_id, {\n          trade_id: tradeId,\n          action: 'remove_item',\n          reason: 'amount_required_for_non_unique_items',\n          item_id: tradeItem.itemId,\n        }, body);\n        return this.sendError(c, 400, 'Amount is required for items without _unique_id');\n      }\n\n      await this.tradeService.removeItemFromTrade(tradeId, user.user_id, tradeItem);\n      await this.createLog(c, 'removeItemFromTrade', 'trade_items', 200, user.user_id, {\n        trade_id: tradeId,\n        action: 'remove_item',\n        item_id: tradeItem.itemId,\n        amount: tradeItem.amount,\n        has_metadata: !!tradeItem.metadata,\n        has_unique_id: !!tradeItem.metadata?._unique_id,\n      }, body);\n      \n      return c.json({ message: 'Item removed from trade' }, 200);\n    } catch (error) {\n      console.error('Error removing item from trade:', error);\n      const user = this.getUserFromContext(c);\n      const { id } = c.req.param();\n      const body = await c.req.json().catch(() => ({}));\n      const { tradeItem } = body as { tradeItem?: TradeItem };\n      \n      await this.createLog(c, 'removeItemFromTrade', 'trade_items', 500, user?.user_id, {\n        trade_id: id,\n        action: 'remove_item',\n        item_id: tradeItem?.itemId,\n        amount: tradeItem?.amount,\n        error: error instanceof Error ? error.message : String(error),\n      }, body);\n      return this.sendError(c, 500, 'Error removing item from trade', error instanceof Error ? error.message : String(error));\n    }\n  }\n\n  @describe({\n    endpoint: '/trades/:id/approve',\n    method: 'PUT',\n    description: 'Approve a trade',\n    params: { id: 'The ID of the trade' },\n    responseType: { message: 'string' },\n    example: 'PUT /api/trades/trade123/approve',\n    requiresAuth: true,\n  })\n  @httpPut('/:id/approve', LoggedCheck)\n  public async approveTrade(c: Context) {\n    try {\n      const user = this.getUserFromContext(c);\n      \n      if (!user) {\n        await this.createLog(c, 'approveTrade', 'trades', 401);\n        return this.sendError(c, 401, 'Unauthorized');\n      }\n\n      const { id } = c.req.param();\n      const tradeId = id;\n\n      await this.tradeService.approveTrade(tradeId, user.user_id);\n      await this.createLog(c, 'approveTrade', 'trades', 200, user.user_id, {\n        trade_id: tradeId,\n        action: 'approve',\n      });\n      \n      return c.json({ message: 'Trade approved' }, 200);\n    } catch (error) {\n      console.error('Error approving trade:', error);\n      const user = this.getUserFromContext(c);\n      const { id } = c.req.param();\n      \n      await this.createLog(c, 'approveTrade', 'trades', 500, user?.user_id, {\n        trade_id: id,\n        action: 'approve',\n        error: error instanceof Error ? error.message : String(error),\n      });\n      return this.sendError(c, 500, 'Error approving trade', error instanceof Error ? error.message : String(error));\n    }\n  }\n\n  @describe({\n    endpoint: '/trades/:id/cancel',\n    method: 'PUT',\n    description: 'Cancel a trade',\n    params: { id: 'The ID of the trade' },\n    responseType: { message: 'string' },\n    example: 'PUT /api/trades/trade123/cancel',\n    requiresAuth: true,\n  })\n  @httpPut('/:id/cancel', LoggedCheck)\n  public async cancelTrade(c: Context) {\n    try {\n      const user = this.getUserFromContext(c);\n      \n      if (!user) {\n        await this.createLog(c, 'cancelTrade', 'trades', 401);\n        return this.sendError(c, 401, 'Unauthorized');\n      }\n\n      const { id } = c.req.param();\n      const tradeId = id;\n\n      await this.tradeService.cancelTrade(tradeId, user.user_id);\n      await this.createLog(c, 'cancelTrade', 'trades', 200, user.user_id, {\n        trade_id: tradeId,\n        action: 'cancel',\n      });\n      \n      return c.json({ message: 'Trade canceled' }, 200);\n    } catch (error) {\n      console.error('Error canceling trade:', error);\n      const user = this.getUserFromContext(c);\n      const { id } = c.req.param();\n      \n      await this.createLog(c, 'cancelTrade', 'trades', 500, user?.user_id, {\n        trade_id: id,\n        action: 'cancel',\n        error: error instanceof Error ? error.message : String(error),\n      });\n      return this.sendError(c, 500, 'Error canceling trade', error instanceof Error ? error.message : String(error));\n    }\n  }\n}\n", "/* eslint-disable @typescript-eslint/no-explicit-any */\nimport bcrypt from 'bcryptjs';\nimport crypto from 'crypto';\nimport { Context } from 'hono';\nimport { inject, injectable } from 'inversify';\nimport { LoggedCheck } from 'middlewares/LoggedCheck';\nimport { describe } from '../decorators/describe';\nimport { controller, httpGet, httpPost } from '../hono-inversify';\nimport { PublicUser, PublicUserAsAdmin, User } from '../interfaces/User';\nimport { createRateLimit } from '../middlewares/hono/rateLimit';\nimport { ILogService } from '../services/LogService';\nimport { MailService } from '../services/MailService';\nimport { SteamOAuthService } from '../services/SteamOAuthService';\nimport { StudioService } from '../services/StudioService';\nimport { IUserService } from '../services/UserService';\nimport { genKey, genVerificationKey } from '../utils/GenKey';\nimport { requireFields } from '../utils/helpers';\nimport { generateUserJwt } from '../utils/Jwt';\nimport { userIdParamValidator } from '../validators/UserValidator';\n\nconst registerRateLimit = createRateLimit({\n  windowMs: 60 * 60 * 1000, \n  max: 5, \n  message: 'Too many registration attempts from this IP, please try again later.',\n  standardHeaders: true, \n  legacyHeaders: false, \n});\n\nconst changeUsernameRateLimit = createRateLimit({\n  windowMs: 60 * 60 * 1000, \n  max: 10, \n  message: 'Too many username changes, please try again later.',\n  standardHeaders: true,\n  legacyHeaders: false,\n});\n\nconst changePasswordRateLimit = createRateLimit({\n  windowMs: 60 * 60 * 1000, \n  max: 20, \n  message: 'Too many password changes, please try again later.',\n  standardHeaders: true,\n  legacyHeaders: false,\n});\n\nconst transferCreditsRateLimit = createRateLimit({\n  windowMs: 60 * 60 * 1000, \n  max: 10, \n  message: 'Too many credit transfers, please try again later.',\n  standardHeaders: true,\n  legacyHeaders: false,\n});\n\nconst forgotPasswordRateLimit = createRateLimit({\n  windowMs: 60 * 60 * 1000, \n  max: 5, \n  message: 'Too many password reset requests, please try again later.',\n  standardHeaders: true,\n  legacyHeaders: false,\n});\n\nconst resetPasswordRateLimit = createRateLimit({\n  windowMs: 60 * 60 * 1000, \n  max: 5, \n  message: 'Too many password reset attempts, please try again later.',\n  standardHeaders: true,\n  legacyHeaders: false,\n});\n\nconst loginRateLimit = createRateLimit({\n  windowMs: 15 * 60 * 1000, \n  max: 100, \n  message: 'Too many login attempts, please try again later.',\n  standardHeaders: true,\n  legacyHeaders: false,\n});\n\nconst loginOAuthRateLimit = createRateLimit({\n  windowMs: 60 * 60 * 1000, \n  max: 100, \n  message: 'Too many OAuth login attempts, please try again later.',\n  standardHeaders: true,\n  legacyHeaders: false,\n});\n\nconst changeRoleRateLimit = createRateLimit({\n  windowMs: 60 * 60 * 1000, \n  max: 500, \n  message: 'Too many role changes, please try again later.',\n  standardHeaders: true,\n  legacyHeaders: false,\n});\n\nconst unlinkSteamRateLimit = createRateLimit({\n  windowMs: 60 * 60 * 1000, \n  max: 30, \n  message: 'Too many unlink steam requests, please try again later.',\n  standardHeaders: true,\n  legacyHeaders: false,\n});\n\n@injectable()\n@controller('/users')\nexport class Users {\n  constructor(\n    @inject('UserService') private userService: IUserService,\n    @inject('LogService') private logService: ILogService,\n    @inject('MailService') private mailService: MailService,\n    @inject('StudioService') private studioService: StudioService,\n    @inject('SteamOAuthService') private steamOAuthService: SteamOAuthService\n  ) {\n\n    console.log('UserController initialized');\n    console.log(userService)\n  }\n\n  private sendError(c: Context, status: number, message: string) {\n    return c.json({ message }, status as any);\n  }\n\n  private async createLog(c: Context, action: string, tableName?: string, statusCode?: number, userId?: string, metadata?: object, body?: any) {\n    try {\n      let requestBody: any = body || { note: 'Body not provided for logging' };\n      \n      if (metadata) {\n        requestBody = { ...requestBody, metadata };\n      }\n      \n      const clientIP = c.req.header('cf-connecting-ip') || \n                      c.req.header('x-forwarded-for') || \n                      c.req.header('x-real-ip') || \n                      'unknown';\n      \n      await this.logService.createLog({\n        ip_address: clientIP,\n        table_name: tableName,\n        controller: `UserController.${action}`,\n        original_path: c.req.path,\n        http_method: c.req.method,\n        request_body: JSON.stringify(requestBody),\n        user_id: userId,\n        status_code: statusCode,\n      });\n    } catch (error) {\n      console.error('Error creating log:', error);\n    }\n  }\n\n  private mapUser(user: User) {\n    return {\n      id: user.user_id,\n      userId: user.user_id,\n      username: user.username,\n      email: user.email,\n      balance: user.balance !== undefined ? Math.floor(user.balance) : undefined,\n      verified: !!user.verified,\n      steam_id: user.steam_id,\n      steam_username: user.steam_username,\n      steam_avatar_url: user.steam_avatar_url,\n      isStudio: !!user.isStudio,\n      admin: !!user.admin,\n      disabled: !!user.disabled,\n      badges: user.badges || [],\n      created_at: user.created_at,\n    };\n  }\n\n  private mapUserSearch(user: PublicUserAsAdmin) {\n    return {\n      id: user.user_id,\n      userId: user.user_id,\n      username: user.username,\n      verified: user.verified,\n      isStudio: user.isStudio,\n      admin: !!user.admin,\n      badges: user.badges || [],\n      disabled: !!user.disabled,\n      created_at: user.created_at,\n    };\n  }\n\n  // Helper pour r\u00E9cup\u00E9rer l'utilisateur authentifi\u00E9 depuis le context\n  private getUserFromContext(c: Context) {\n    return c.get('user') as User | undefined;\n  }\n\n  // Helper pour r\u00E9cup\u00E9rer l'utilisateur original depuis le context\n  private getOriginalUserFromContext(c: Context) {\n    return c.get('originalUser') as User | undefined;\n  }\n\n  @httpPost('/login-oauth', loginOAuthRateLimit)\n  public async loginOAuth(c: Context) {\n    try {\n      const body = await c.req.json();\n      const { provider, code } = body;\n      \n      if (!provider || !code) {\n        await this.createLog(c, 'loginOAuth', 'users', 400, undefined, undefined, body);\n        return this.sendError(c, 400, 'Missing provider or code');\n      }\n\n      let accessToken: string | undefined;\n      let verifiedUser: { id: string; email: string; username: string };\n\n      if (provider === 'discord') {\n        const redirectUri = process.env.DISCORD_CALLBACK_URL!;\n        if (!redirectUri) {\n          await this.createLog(c, 'loginOAuth', 'users', 500, undefined, undefined, body);\n          return this.sendError(c, 500, 'Discord redirect_uri is not set in environment variables');\n        }\n\n        const params = new URLSearchParams({\n          client_id: process.env.DISCORD_CLIENT_ID!,\n          client_secret: process.env.DISCORD_CLIENT_SECRET!,\n          grant_type: 'authorization_code',\n          code: code,\n          redirect_uri: redirectUri,\n        });\n        \n        const tokenRes = await fetch('https://discord.com/api/oauth2/token', {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n          body: params.toString(),\n        });\n        \n        if (!tokenRes.ok) {\n          const errorText = await tokenRes.text();\n          console.error('Discord token error:', errorText);\n          console.error('Params sent to Discord:', params.toString());\n          await this.createLog(c, 'loginOAuth', 'users', 500, undefined, undefined, body);\n          return this.sendError(c, 500, 'Failed to fetch Discord access token: ' + errorText);\n        }\n        \n        const tokenData: any = await tokenRes.json();\n        accessToken = tokenData.access_token;\n        verifiedUser = await this.verifyDiscordToken(accessToken!);\n      } else if (provider === 'google') {\n        const params = new URLSearchParams({\n          client_id: process.env.GOOGLE_CLIENT_ID!,\n          client_secret: process.env.GOOGLE_CLIENT_SECRET!,\n          grant_type: 'authorization_code',\n          code,\n          redirect_uri: process.env.GOOGLE_CALLBACK_URL!,\n        });\n        \n        const tokenRes = await fetch('https://oauth2.googleapis.com/token', {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n          body: params.toString(),\n        });\n        \n        if (!tokenRes.ok) {\n          await this.createLog(c, 'loginOAuth', 'users', 500, undefined, undefined, body);\n          return this.sendError(c, 500, 'Failed to fetch Google access token');\n        }\n        \n        const tokenData: any = await tokenRes.json();\n        accessToken = tokenData.access_token;\n        verifiedUser = await this.verifyGoogleToken(accessToken!);\n      } else {\n        await this.createLog(c, 'loginOAuth', 'users', 400, undefined, undefined, body);\n        return this.sendError(c, 400, 'Unsupported OAuth provider');\n      }\n\n      const users = await this.userService.getAllUsersWithDisabled();\n      const cookieHeader = c.req.header('cookie');\n      const token = cookieHeader?.split('token=')[1]?.split(';')[0];\n      let user = await this.userService.authenticateUser(token as string);\n\n      if (!verifiedUser) {\n        await this.createLog(c, 'loginOAuth', 'users', 500, undefined, undefined, body);\n        return this.sendError(c, 500, 'Failed to verify OAuth user');\n      }\n\n      if (!user) {\n        user = users.find(u => (provider === 'discord' && u.discord_id == verifiedUser.id) || (provider === 'google' && u.google_id == verifiedUser.id)) || null;\n      }\n\n      if (!user) {\n        const userId = crypto.randomUUID();\n        user = await this.userService.createUser(userId, verifiedUser.username, verifiedUser.email, null, provider, verifiedUser.id);\n        await this.createLog(c, 'loginOAuth', 'users', 201, userId, undefined, body);\n      } else {\n        if ((provider === 'discord' && !user.discord_id) || (provider === 'google' && !user.google_id)) {\n          await this.userService.associateOAuth(user.user_id, provider, verifiedUser.id);\n        }\n        if ((provider === 'discord' && user.discord_id && user.discord_id != verifiedUser.id) || (provider === 'google' && user.google_id && user.google_id != verifiedUser.id)) {\n          await this.createLog(c, 'loginOAuth', 'users', 401, user.user_id, undefined, body);\n          return this.sendError(c, 401, 'OAuth providerId mismatch');\n        }\n      }\n\n      if (user.disabled) {\n        await this.createLog(c, 'loginOAuth', 'users', 403, user.user_id, undefined, body);\n        return this.sendError(c, 403, 'Account is disabled');\n      }\n\n      await this.createLog(c, 'loginOAuth', 'users', 200, user.user_id, undefined, body);\n      const apiKey = genKey(user.user_id);\n      const jwtToken = generateUserJwt(user, apiKey);\n      \n      return c.json({\n        message: 'Login successful',\n        token: jwtToken,\n        user: {\n          userId: user.user_id,\n          username: user.username,\n          email: user.email,\n        },\n      }, 200);\n    } catch (error) {\n      console.error('Error during OAuth login:', error);\n      await this.createLog(c, 'loginOAuth', 'users', 500);\n      return this.sendError(c, 500, 'Internal server error');\n    }\n  }\n\n  @httpPost('/register', registerRateLimit)\n  public async register(c: Context) {\n    try {\n      const body = await c.req.json();\n      \n      const missing = requireFields(body, ['username', 'email']);\n      if (missing || (!body.password && !body.provider)) {\n        await this.createLog(c, 'register', 'users', 400, undefined, undefined, body);\n        return this.sendError(c, 400, 'Missing required fields');\n      }\n\n      const users = await this.userService.getAllUsersWithDisabled();\n      if (users.find(u => u.email === body.email)) {\n        await this.createLog(c, 'register', 'users', 400, undefined, undefined, body);\n        return this.sendError(c, 400, 'Email already exists');\n      }\n\n      let userId = body.userId;\n      if (!userId) {\n        userId = crypto.randomUUID();\n      }\n      \n      const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n      if (!emailRegex.test(body.email)) {\n        await this.createLog(c, 'register', 'users', 400, undefined, undefined, body);\n        return this.sendError(c, 400, 'Invalid email address');\n      }\n      \n      let hashedPassword = null;\n      if (body.password) {\n        if (typeof body.password !== 'string') {\n          await this.createLog(c, 'register', 'users', 400, undefined, undefined, body);\n          return this.sendError(c, 400, 'Invalid password');\n        }\n        hashedPassword = await bcrypt.hash(body.password, 10);\n      }\n\n      const user = await this.userService.createUser(\n        userId, \n        body.username, \n        body.email, \n        hashedPassword, \n        body.provider, \n        body.providerId\n      );\n      \n      await this.mailService.sendAccountConfirmationMail(user.email);\n      await this.createLog(c, 'register', 'users', 201, userId, undefined, body);\n      \n      const apiKey = genKey(user.user_id);\n      const jwtToken = generateUserJwt(user, apiKey);\n      \n      return c.json({ message: 'User registered', token: jwtToken }, 201);\n    } catch (error) {\n      console.error('Error registering user', error);\n      await this.createLog(c, 'register', 'users', 500);\n      return this.sendError(c, 500, 'Error registering user');\n    }\n  }\n\n  @httpPost('/login', loginRateLimit)\n  public async login(c: Context) {\n    try {\n      const body = await c.req.json();\n      \n      if (!body.email || !body.password) {\n        await this.createLog(c, 'login', 'users', 400, undefined, undefined, body);\n        return this.sendError(c, 400, 'Missing email or password');\n      }\n\n      const allUsers = await this.userService.getAllUsersWithDisabled();\n      const user = allUsers.find(u => u.email === body.email);\n      \n      if (!user || !user.password) {\n        await this.createLog(c, 'login', 'users', 401, undefined, undefined, body);\n        return this.sendError(c, 401, 'Invalid credentials');\n      }\n      \n      const valid = await bcrypt.compare(body.password, user.password);\n      if (!valid) {\n        await this.createLog(c, 'login', 'users', 401, user.user_id, undefined, body);\n        return this.sendError(c, 401, 'Invalid credentials');\n      }\n      \n      if (user.disabled) {\n        await this.createLog(c, 'login', 'users', 403, user.user_id, undefined, body);\n        return this.sendError(c, 403, 'Account is disabled');\n      }\n      \n      // Send connection notification email asynchronously\n      this.mailService.sendConnectionNotificationMail(user.email, user.username).catch(err => {\n        console.error('Error sending connection notification email', err);\n      });\n\n      await this.createLog(c, 'login', 'users', 200, user.user_id, undefined, body);\n      \n      if (!user.authenticator_secret) {\n        const apiKey = genKey(user.user_id);\n        const jwtToken = generateUserJwt(user, apiKey);\n        return c.json({\n          message: 'Login successful',\n          token: jwtToken,\n        }, 200);\n      } else {\n        return c.json({\n          message: 'Login successful',\n          user: {\n            userId: user.user_id,\n            username: user.username,\n            email: user.email,\n          },\n        }, 200);\n      }\n    } catch (error) {\n      console.error('Error during login:', error);\n      await this.createLog(c, 'login', 'users', 500);\n      return this.sendError(c, 500, 'Internal server error');\n    }\n  }\n\n  @describe({\n    endpoint: '/users/@me',\n    method: 'GET',\n    description: \"Get the current authenticated user's profile, including studios, roles, inventory, owned items, and created games.\",\n    responseType: {\n      userId: 'string',\n      username: 'string',\n      email: 'string',\n      verified: 'boolean',\n      studios: 'array',\n      roles: 'array',\n      inventory: 'array',\n      ownedItems: 'array',\n      createdGames: 'array',\n      verificationKey: 'string',\n    },\n    example: 'GET /api/users/@me',\n  })\n  @httpGet('/@me', LoggedCheck)\n  async getMe(c: Context) {\n    try {\n      const user = this.getUserFromContext(c);\n      const originalUser = this.getOriginalUserFromContext(c);\n      \n      if (!user) {\n        await this.createLog(c, 'getMe', 'users', 401);\n        return this.sendError(c, 401, 'Unauthorized');\n      }\n\n      const userId = user.user_id;\n      const userWithData = await this.userService.getUserWithCompleteProfile(userId);\n      \n      if (!userWithData) {\n        await this.createLog(c, 'getMe', 'users', 404, userId);\n        return this.sendError(c, 404, 'User not found');\n      }\n      \n      const studios = await this.studioService.getUserStudios(originalUser?.user_id || userId);\n      const roles = [originalUser?.user_id as string, ...studios.map(s => s.user_id)];\n      \n      await this.createLog(c, 'getMe', 'users', 200, userId);\n      \n      return c.json({\n        ...this.mapUser(userWithData),\n        verificationKey: genVerificationKey(userWithData.user_id),\n        google_id: userWithData.google_id,\n        discord_id: userWithData.discord_id,\n        studios: studios.map(s => {\n          return {\n            ...s,\n            id: s.user_id,\n            name: s.me.username,\n            verified: s.me.verified,\n          };\n        }),\n        roles,\n        inventory: userWithData.inventory || [],\n        ownedItems: userWithData.ownedItems || [],\n        createdGames: userWithData.createdGames || [],\n        haveAuthenticator: !!userWithData.authenticator_secret,\n      }, 200);\n    } catch (error) {\n      console.error('Error getting user profile:', error);\n      await this.createLog(c, 'getMe', 'users', 500);\n      return this.sendError(c, 500, 'Internal server error');\n    }\n  }\n\n  @httpPost('/change-username', LoggedCheck, changeUsernameRateLimit)\n  public async changeUsername(c: Context) {\n    try {\n      const user = this.getUserFromContext(c);\n      \n      if (!user) {\n        await this.createLog(c, 'changeUsername', 'users', 401);\n        return this.sendError(c, 401, 'Unauthorized');\n      }\n\n      const body = await c.req.json();\n      const { username } = body;\n      const userId = user.user_id;\n      \n      if (!username || typeof username !== 'string' || username.trim().length < 3) {\n        await this.createLog(c, 'changeUsername', 'users', 400, userId, undefined, body);\n        return this.sendError(c, 400, 'Invalid username (min 3 characters)');\n      }\n      \n      await this.userService.updateUser(userId, username.trim());\n      await this.createLog(c, 'changeUsername', 'users', 200, userId, undefined, body);\n      \n      return c.json({ message: 'Username updated' }, 200);\n    } catch (error) {\n      console.error('Error changing username:', error);\n      const user = this.getUserFromContext(c);\n      await this.createLog(c, 'changeUsername', 'users', 500, user?.user_id);\n      return this.sendError(c, 500, 'Error updating username');\n    }\n  }\n\n  @httpPost('/change-password', LoggedCheck, changePasswordRateLimit)\n  public async changePassword(c: Context) {\n    try {\n      const user = this.getUserFromContext(c);\n      \n      if (!user) {\n        await this.createLog(c, 'changePassword', 'users', 401);\n        return this.sendError(c, 401, 'Unauthorized');\n      }\n\n      const body = await c.req.json();\n      const { oldPassword, newPassword, confirmPassword } = body;\n      const userId = user.user_id;\n      \n      if (!newPassword || !confirmPassword) {\n        await this.createLog(c, 'changePassword', 'users', 400, userId, undefined, body);\n        return this.sendError(c, 400, 'Missing newPassword or confirmPassword');\n      }\n      \n      if (newPassword !== confirmPassword) {\n        await this.createLog(c, 'changePassword', 'users', 400, userId, undefined, body);\n        return this.sendError(c, 400, 'New password and confirm password do not match');\n      }\n\n      const fullUser = await this.userService.getUser(userId);\n      if (!fullUser) {\n        await this.createLog(c, 'changePassword', 'users', 404, userId, undefined, body);\n        return this.sendError(c, 404, 'User not found');\n      }\n      \n      let valid = true;\n      if (fullUser.password) {\n        valid = await bcrypt.compare(oldPassword, fullUser.password);\n      }\n      \n      if (!valid) {\n        await this.createLog(c, 'changePassword', 'users', 401, userId, undefined, body);\n        return this.sendError(c, 401, 'Invalid current password');\n      }\n      \n      const hashedPassword = await bcrypt.hash(newPassword, 10);\n      await this.userService.updateUserPassword(userId, hashedPassword);\n      await this.createLog(c, 'changePassword', 'users', 200, userId, undefined, body);\n      \n      return c.json({ message: 'Password changed successfully' }, 200);\n    } catch (error) {\n      console.error('Error changing password:', error);\n      const user = this.getUserFromContext(c);\n      await this.createLog(c, 'changePassword', 'users', 500, user?.user_id);\n      return this.sendError(c, 500, 'Error changing password');\n    }\n  }\n\n  @httpPost('/forgot-password', forgotPasswordRateLimit)\n  public async forgotPassword(c: Context) {\n    try {\n      const body = await c.req.json();\n      const { email } = body;\n      \n      if (!email) {\n        await this.createLog(c, 'forgotPassword', 'users', 400, undefined, undefined, body);\n        return this.sendError(c, 400, 'Email is required');\n      }\n      \n      const user = await this.userService.findByEmail(email);\n      if (!user) {\n        await this.createLog(c, 'forgotPassword', 'users', 404, undefined, undefined, body);\n        return this.sendError(c, 404, 'Invalid email');\n      }\n      \n      const passwordResetToken = await this.userService.generatePasswordResetToken(email);\n      await this.mailService.sendPasswordResetMail(email, passwordResetToken);\n      await this.createLog(c, 'forgotPassword', 'users', 200, user.user_id, undefined, body);\n      \n      return c.json({ message: 'Password reset email sent' }, 200);\n    } catch (error) {\n      console.error('Error in forgot password:', error);\n      await this.createLog(c, 'forgotPassword', 'users', 500);\n      return this.sendError(c, 500, 'Internal server error');\n    }\n  }\n\n  @httpPost('/reset-password', resetPasswordRateLimit)\n  public async resetPassword(c: Context) {\n    try {\n      const body = await c.req.json();\n      const { new_password, confirm_password, reset_token } = body;\n      \n      if (!new_password || !reset_token || !confirm_password) {\n        await this.createLog(c, 'resetPassword', 'users', 400, undefined, undefined, body);\n        return this.sendError(c, 400, 'Missing required fields');\n      }\n      \n      if (new_password !== confirm_password) {\n        await this.createLog(c, 'resetPassword', 'users', 400, undefined, undefined, body);\n        return this.sendError(c, 400, 'New password and confirm password do not match');\n      }\n      \n      const user = await this.userService.findByResetToken(reset_token);\n      if (!user) {\n        await this.createLog(c, 'resetPassword', 'users', 404, undefined, undefined, body);\n        return this.sendError(c, 404, 'Invalid user');\n      }\n      \n      const hashedPassword = await bcrypt.hash(new_password, 10);\n      await this.userService.updateUserPassword(user.user_id, hashedPassword);\n      await this.createLog(c, 'resetPassword', 'users', 200, user.user_id, undefined, body);\n      \n      const apiKey = genKey(user.user_id);\n      const jwtToken = generateUserJwt(user, apiKey);\n      \n      return c.json({ message: 'Password reset successfully', token: jwtToken }, 200);\n    } catch (error) {\n      console.error('Error resetting password:', error);\n      await this.createLog(c, 'resetPassword', 'users', 500);\n      return this.sendError(c, 500, 'Error resetting password');\n    }\n  }\n\n  @httpGet('/validate-reset-token')\n  public async isValidResetToken(c: Context) {\n    try {\n      const { reset_token } = c.req.query();\n      \n      if (!reset_token) {\n        await this.createLog(c, 'isValidResetToken', 'users', 400);\n        return this.sendError(c, 400, 'Missing required fields');\n      }\n      \n      const user = await this.userService.findByResetToken(reset_token as string);\n      if (!user) {\n        await this.createLog(c, 'isValidResetToken', 'users', 404);\n        return this.sendError(c, 404, 'Invalid reset token');\n      }\n      \n      await this.createLog(c, 'isValidResetToken', 'users', 200, user.user_id);\n      return c.json({ message: 'Valid reset token', user }, 200);\n    } catch (error) {\n      console.error('Error validating reset token:', error);\n      await this.createLog(c, 'isValidResetToken', 'users', 500);\n      return this.sendError(c, 500, 'Internal server error');\n    }\n  }\n\n  @httpGet('/steam-redirect')\n  public async steamRedirect(c: Context) {\n    try {\n      const url = this.steamOAuthService.getAuthUrl();\n      await this.createLog(c, 'steamRedirect', 'users', 200);\n      return c.json(url, 200);\n    } catch (error) {\n      console.error('Error getting Steam redirect URL:', error);\n      await this.createLog(c, 'steamRedirect', 'users', 500);\n      return this.sendError(c, 500, 'Internal server error');\n    }\n  }\n\n  @httpGet('/steam-associate', LoggedCheck)\n  public async steamAssociate(c: Context) {\n    try {\n      const user = this.getUserFromContext(c);\n      \n      if (!user) {\n        await this.createLog(c, 'steamAssociate', 'users', 401);\n        return this.sendError(c, 401, 'Unauthorized');\n      }\n\n      const query = c.req.query();\n      const steamId = await this.steamOAuthService.verifySteamOpenId(query as Record<string, string | string[]>);\n      \n      if (!steamId) {\n        await this.createLog(c, 'steamAssociate', 'users', 400, user.user_id);\n        return this.sendError(c, 400, 'Steam authentication failed');\n      }\n      \n      const profile = await this.steamOAuthService.getSteamProfile(steamId);\n      if (!profile) {\n        await this.createLog(c, 'steamAssociate', 'users', 400, user.user_id);\n        return this.sendError(c, 400, 'Unable to fetch Steam profile');\n      }\n      \n      await this.userService.updateSteamFields(user.user_id, profile.steamid, profile.personaname, profile.avatarfull);\n      await this.createLog(c, 'steamAssociate', 'users', 200, user.user_id);\n      \n      // Retourner du HTML pour la redirection\n      const html = `<html><head><meta http-equiv=\"refresh\" content=\"0;url=/settings\"></head><body>Redirecting to <a href=\"/settings\">/settings</a>...</body></html>`;\n      return c.html(html);\n    } catch (error) {\n      console.error('Error associating Steam account', error);\n      const user = this.getUserFromContext(c);\n      await this.createLog(c, 'steamAssociate', 'users', 500, user?.user_id);\n      return this.sendError(c, 500, 'Internal server error');\n    }\n  }\n\n  @httpPost('/unlink-steam', LoggedCheck, unlinkSteamRateLimit)\n  public async unlinkSteam(c: Context) {\n    try {\n      const user = this.getUserFromContext(c);\n      \n      if (!user) {\n        await this.createLog(c, 'unlinkSteam', 'users', 401);\n        return this.sendError(c, 401, 'Unauthorized');\n      }\n\n      const userId = user.user_id;\n      await this.userService.updateSteamFields(userId, null, null, null);\n      await this.createLog(c, 'unlinkSteam', 'users', 200, userId);\n      \n      return c.json({ message: 'Steam account unlinked' }, 200);\n    } catch (error) {\n      console.error('Error unlinking Steam account', error);\n      const user = this.getUserFromContext(c);\n      await this.createLog(c, 'unlinkSteam', 'users', 500, user?.user_id);\n      return this.sendError(c, 500, 'Error unlinking Steam account');\n    }\n  }\n\n  @describe({\n    endpoint: '/users/search',\n    method: 'GET',\n    description: 'Search for users by username',\n    query: { q: 'The search query' },\n    responseType: [\n      {\n        userId: 'string',\n        username: 'string',\n        verified: 'boolean',\n        steam_id: 'string',\n        steam_username: 'string',\n        steam_avatar_url: 'string',\n        isStudio: 'boolean',\n        admin: 'boolean',\n        inventory: 'array',\n        ownedItems: 'array',\n        createdGames: 'array',\n      },\n    ],\n    example: 'GET /api/users/search?q=John',\n  })\n  @httpGet('/search')\n  public async searchUsers(c: Context) {\n    try {\n      const { q } = c.req.query();\n      const query = (q as string)?.trim();\n      \n      if (!query) {\n        await this.createLog(c, 'searchUsers', 'users', 400);\n        return this.sendError(c, 400, 'Missing search query');\n      }\n      \n      const usersRaw = await this.userService.searchUsersByUsername(query);\n      const users = usersRaw.filter(user => {\n        return !('disabled' in user) || !user['disabled'];\n      });\n      \n      await this.createLog(c, 'searchUsers', 'users', 200);\n      return c.json(users.map(user => this.mapUserSearch(user)), 200);\n    } catch (error) {\n      console.error('Error searching users:', error);\n      await this.createLog(c, 'searchUsers', 'users', 500);\n      return this.sendError(c, 500, 'Error searching users');\n    }\n  }\n\n  @describe({\n    endpoint: '/users/:userId',\n    method: 'GET',\n    description: 'Get a user by userId, userId can be a Croissant ID, Discord ID, Google ID or Steam ID',\n    params: { userId: 'The id of the user' },\n    responseType: {\n      userId: 'string',\n      username: 'string',\n      verified: 'boolean',\n      steam_id: 'string',\n      steam_username: 'string',\n      steam_avatar_url: 'string',\n      isStudio: 'boolean',\n      studios: 'array',\n      admin: 'boolean',\n      inventory: 'array',\n      ownedItems: 'array',\n      createdGames: 'array',\n    },\n    example: 'GET /api/users/123',\n  })\n  @httpGet('/:userId')\n  public async getUser(c: Context) {\n    try {\n      const { userId } = c.req.param();\n      \n      try {\n        await userIdParamValidator.validate({ userId });\n      } catch {\n        await this.createLog(c, 'getUser', 'users', 400);\n        return this.sendError(c, 400, 'Invalid userId');\n      }\n\n      const userWithData = await this.userService.getUserWithPublicProfile(userId);\n\n      if (!userWithData || ('disabled' in userWithData && userWithData['disabled'])) {\n        await this.createLog(c, 'getUser', 'users', 404);\n        return this.sendError(c, 404, 'User not found');\n      }\n      \n      await this.createLog(c, 'getUser', 'users', 200);\n      const studios = await this.studioService.getUserStudios(userId);\n      \n      return c.json({\n        ...this.mapUserSearch(userWithData),\n        studios: studios.map(s => {\n          return {\n            id: s.user_id,\n            name: s.me.username,\n            verified: s.me.verified,\n          };\n        }),\n        inventory: userWithData.inventory || [],\n        ownedItems: userWithData.ownedItems || [],\n        createdGames: userWithData.createdGames || [],\n      }, 200);\n    } catch (error) {\n      console.error('Error getting user:', error);\n      await this.createLog(c, 'getUser', 'users', 500);\n      return this.sendError(c, 500, error instanceof Error ? error.message : 'Error getting user');\n    }\n  }\n\n  @httpGet('/admin/search', LoggedCheck)\n  public async adminSearchUsers(c: Context) {\n    try {\n      const user = this.getUserFromContext(c);\n      \n      if (!user?.admin) {\n        await this.createLog(c, 'adminSearchUsers', 'users', 403, user?.user_id);\n        return this.sendError(c, 403, 'Forbidden');\n      }\n\n      const { q } = c.req.query();\n      const query = (q as string)?.trim();\n      \n      if (!query) {\n        await this.createLog(c, 'adminSearchUsers', 'users', 400, user.user_id);\n        return this.sendError(c, 400, 'Missing search query');\n      }\n      \n      const users: PublicUser[] = await this.userService.adminSearchUsers(query);\n      await this.createLog(c, 'adminSearchUsers', 'users', 200, user.user_id);\n      \n      return c.json(users.map(user => this.mapUserSearch(user)), 200);\n    } catch (error) {\n      console.error('Error in admin search users:', error);\n      const user = this.getUserFromContext(c);\n      await this.createLog(c, 'adminSearchUsers', 'users', 500, user?.user_id);\n      return this.sendError(c, 500, 'Error searching users');\n    }\n  }\n\n  @httpPost('/admin/disable/:userId', LoggedCheck)\n  public async disableAccount(c: Context) {\n    try {\n      const user = this.getUserFromContext(c);\n      \n      if (!user?.admin) {\n        await this.createLog(c, 'disableAccount', 'users', 403, user?.user_id);\n        return this.sendError(c, 403, 'Forbidden');\n      }\n\n      const { userId } = c.req.param();\n      const adminUserId = user.user_id;\n      \n      if (adminUserId === userId) {\n        await this.createLog(c, 'disableAccount', 'users', 400, adminUserId);\n        return this.sendError(c, 400, 'Vous ne pouvez pas d\u00E9sactiver votre propre compte.');\n      }\n      \n      await this.userService.disableAccount(userId, adminUserId);\n      await this.createLog(c, 'disableAccount', 'users', 200, adminUserId);\n      \n      return c.json({ message: 'Account disabled' }, 200);\n    } catch (error) {\n      console.error('Error disabling account:', error);\n      const user = this.getUserFromContext(c);\n      await this.createLog(c, 'disableAccount', 'users', 403, user?.user_id);\n      return this.sendError(c, 403, error instanceof Error ? error.message : String(error));\n    }\n  }\n\n  @httpPost('/admin/enable/:userId', LoggedCheck)\n  public async reenableAccount(c: Context) {\n    try {\n      const user = this.getUserFromContext(c);\n      \n      if (!user?.admin) {\n        await this.createLog(c, 'reenableAccount', 'users', 403, user?.user_id);\n        return this.sendError(c, 403, 'Forbidden');\n      }\n\n      const { userId } = c.req.param();\n      const adminUserId = user.user_id;\n      \n      if (adminUserId === userId) {\n        await this.createLog(c, 'reenableAccount', 'users', 400, adminUserId);\n        return this.sendError(c, 400, 'Vous ne pouvez pas r\u00E9activer votre propre compte.');\n      }\n      \n      await this.userService.reenableAccount(userId, adminUserId);\n      await this.createLog(c, 'reenableAccount', 'users', 200, adminUserId);\n      \n      return c.json({ message: 'Account re-enabled' }, 200);\n    } catch (error) {\n      console.error('Error re-enabling account:', error);\n      const user = this.getUserFromContext(c);\n      await this.createLog(c, 'reenableAccount', 'users', 403, user?.user_id);\n      return this.sendError(c, 403, error instanceof Error ? error.message : String(error));\n    }\n  }\n\n  @httpGet('/admin/:userId', LoggedCheck)\n  public async adminGetUser(c: Context) {\n    try {\n      const user = this.getUserFromContext(c);\n      \n      if (!user?.admin) {\n        await this.createLog(c, 'adminGetUser', 'users', 403, user?.user_id);\n        return this.sendError(c, 403, 'Forbidden');\n      }\n\n      const { userId } = c.req.param();\n      \n      try {\n        await userIdParamValidator.validate({ userId });\n      } catch {\n        await this.createLog(c, 'adminGetUser', 'users', 400, user?.user_id);\n        return this.sendError(c, 400, 'Invalid userId');\n      }\n\n      const userWithData = await this.userService.adminGetUserWithProfile(userId);\n      if (!userWithData) {\n        await this.createLog(c, 'adminGetUser', 'users', 404, user?.user_id);\n        return this.sendError(c, 404, 'User not found');\n      }\n      \n      await this.createLog(c, 'adminGetUser', 'users', 200, user?.user_id);\n      \n      return c.json({\n        ...this.mapUserSearch(userWithData),\n        disabled: userWithData.disabled,\n        inventory: userWithData.inventory || [],\n        ownedItems: userWithData.ownedItems || [],\n        createdGames: userWithData.createdGames || [],\n      }, 200);\n    } catch (error) {\n      console.error('Error in admin get user:', error);\n      const user = this.getUserFromContext(c);\n      await this.createLog(c, 'adminGetUser', 'users', 500, user?.user_id);\n      return this.sendError(c, 500, 'Internal server error');\n    }\n  }\n\n  @describe({\n    endpoint: '/users/transfer-credits',\n    method: 'POST',\n    description: 'Transfer credits from one user to another',\n    body: {\n      targetUserId: 'The id of the recipient',\n      amount: 'The amount to transfer',\n    },\n    responseType: { message: 'string' },\n    example: \"POST /api/users/transfer-credits { targetUserId: '456', amount: 50 }\",\n    requiresAuth: true,\n  })\n  @httpPost('/transfer-credits', LoggedCheck, transferCreditsRateLimit)\n  public async transferCredits(c: Context) {\n    try {\n      const user = this.getUserFromContext(c);\n      \n      if (!user) {\n        await this.createLog(c, 'transferCredits', 'users', 401);\n        return this.sendError(c, 401, 'Unauthorized');\n      }\n\n      const body = await c.req.json();\n      const { targetUserId, amount } = body;\n      const transferAmount = Number(amount);\n      \n      if (!targetUserId || isNaN(transferAmount) || transferAmount <= 0) {\n        await this.createLog(c, 'transferCredits', 'users', 400, user.user_id, undefined, body);\n        return this.sendError(c, 400, 'Invalid input');\n      }\n\n      const sender = user;\n      if (sender.user_id === targetUserId) {\n        await this.createLog(c, 'transferCredits', 'users', 400, sender.user_id, undefined, body);\n        return this.sendError(c, 400, 'Cannot transfer credits to yourself');\n      }\n      \n      const recipient = await this.userService.getUser(targetUserId);\n      if (!recipient) {\n        await this.createLog(c, 'transferCredits', 'users', 404, sender.user_id, undefined, body);\n        return this.sendError(c, 404, 'Recipient not found');\n      }\n      \n      if (sender.balance < transferAmount) {\n        await this.createLog(c, 'transferCredits', 'users', 400, sender.user_id, undefined, body);\n        return this.sendError(c, 400, 'Insufficient balance');\n      }\n      \n      await this.userService.updateUserBalance(sender.user_id, sender.balance - transferAmount);\n      await this.userService.updateUserBalance(recipient.user_id, recipient.balance + transferAmount);\n      await this.createLog(c, 'transferCredits', 'users', 200, sender.user_id, undefined, body);\n      \n      return c.json({ message: 'Credits transferred' }, 200);\n    } catch (error) {\n      console.error('Error transferring credits:', error);\n      const user = this.getUserFromContext(c);\n      await this.createLog(c, 'transferCredits', 'users', 500, user?.user_id);\n      return this.sendError(c, 500, 'Error transferring credits');\n    }\n  }\n\n  @describe({\n    endpoint: '/users/auth-verification',\n    method: 'POST',\n    description: 'Check the verification key for the user',\n    responseType: { success: 'boolean' },\n    query: {\n      userId: 'The id of the user',\n      verificationKey: 'The verification key',\n    },\n    example: 'POST /api/users/auth-verification?userId=123&verificationKey=abc123',\n  })\n  @httpPost('/auth-verification')\n  async checkVerificationKey(c: Context) {\n    try {\n      const body = await c.req.json();\n      const { userId, verificationKey } = body;\n      \n      if (!userId || !verificationKey) {\n        await this.createLog(c, 'checkVerificationKey', 'users', 400, undefined, undefined, body);\n        return this.sendError(c, 400, 'Missing userId or verificationKey');\n      }\n      \n      const user = await this.userService.getUser(userId);\n      if (!user) {\n        await this.createLog(c, 'checkVerificationKey', 'users', 404, userId, undefined, body);\n        return this.sendError(c, 404, 'User not found');\n      }\n      \n      const expectedKey = genVerificationKey(user.user_id);\n      const isValid = verificationKey === expectedKey;\n      await this.createLog(c, 'checkVerificationKey', 'users', isValid ? 200 : 401, userId, undefined, body);\n      \n      return c.json({ success: isValid }, isValid ? 200 : 401);\n    } catch (error) {\n      console.error('Error checking verification key:', error);\n      await this.createLog(c, 'checkVerificationKey', 'users', 500);\n      return this.sendError(c, 500, 'Internal server error');\n    }\n  }\n\n  @httpPost('/change-role', LoggedCheck, changeRoleRateLimit)\n  async changeRole(c: Context) {\n    try {\n      const originalUser = this.getOriginalUserFromContext(c);\n      \n      if (!originalUser) {\n        await this.createLog(c, 'changeRole', 'users', 401);\n        return this.sendError(c, 401, 'Unauthorized');\n      }\n\n      const body = await c.req.json();\n      const { role } = body;\n      const userId = originalUser.user_id;\n      \n      if (!role || typeof role !== 'string') {\n        await this.createLog(c, 'changeRole', 'users', 400, userId, undefined, body);\n        return this.sendError(c, 400, 'Invalid role');\n      }\n      \n      const studios = await this.studioService.getUserStudios(userId);\n      const roles = [userId, ...studios.map(s => s.user_id)];\n      \n      if (!roles.includes(role)) {\n        await this.createLog(c, 'changeRole', 'users', 403, userId, undefined, body);\n        return this.sendError(c, 403, 'Forbidden: Invalid role');\n      }\n      \n      // Dans Hono pour Cloudflare Workers, nous ne pouvons pas directement d\u00E9finir des cookies HTTP\n      // Nous renvoyons simplement la confirmation\n      await this.createLog(c, 'changeRole', 'users', 200, userId, undefined, body);\n      \n      return c.json({ \n        message: 'Role updated successfully',\n        role: role \n      }, 200);\n    } catch (error) {\n      console.error('Error changing role:', error);\n      const originalUser = this.getOriginalUserFromContext(c);\n      await this.createLog(c, 'changeRole', 'users', 500, originalUser?.user_id);\n      return this.sendError(c, 500, 'Error setting role');\n    }\n  }\n\n  private async verifyDiscordToken(accessToken: string) {\n    try {\n      const response = await fetch('https://discord.com/api/users/@me', {\n        headers: {\n          Authorization: `Bearer ${accessToken}`,\n        },\n      });\n\n      if (!response.ok) {\n        throw new Error('Invalid Discord token');\n      }\n\n      const userData: {id: string, email: string, username: string} = await response.json();\n      return {\n        id: userData.id,\n        email: userData.email,\n        username: userData.username,\n      };\n    } catch {\n      throw new Error('Failed to verify Discord token');\n    }\n  }\n\n  private async verifyGoogleToken(accessToken: string) {\n    try {\n      const response = await fetch(`https://www.googleapis.com/oauth2/v2/userinfo?access_token=${accessToken}`);\n\n      if (!response.ok) {\n        throw new Error('Invalid Google token');\n      }\n\n      const userData: {id: string, email: string, name: string} = await response.json();\n      return {\n        id: userData.id,\n        email: userData.email,\n        username: userData.name,\n      };\n    } catch {\n      throw new Error('Failed to verify Google token');\n    }\n  }\n}\n\n\n", "/*\n Copyright (c) 2012 Nevins Bartolomeo <nevins.bartolomeo@gmail.com>\n Copyright (c) 2012 Shane Girish <shaneGirish@gmail.com>\n Copyright (c) 2025 Daniel Wirtz <dcode@dcode.io>\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions\n are met:\n 1. Redistributions of source code must retain the above copyright\n notice, this list of conditions and the following disclaimer.\n 2. Redistributions in binary form must reproduce the above copyright\n notice, this list of conditions and the following disclaimer in the\n documentation and/or other materials provided with the distribution.\n 3. The name of the author may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR\n IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n// The Node.js crypto module is used as a fallback for the Web Crypto API. When\n// building for the browser, inclusion of the crypto module should be disabled,\n// which the package hints at in its package.json for bundlers that support it.\nimport nodeCrypto from \"crypto\";\n\n/**\n * The random implementation to use as a fallback.\n * @type {?function(number):!Array.<number>}\n * @inner\n */\nvar randomFallback = null;\n\n/**\n * Generates cryptographically secure random bytes.\n * @function\n * @param {number} len Bytes length\n * @returns {!Array.<number>} Random bytes\n * @throws {Error} If no random implementation is available\n * @inner\n */\nfunction randomBytes(len) {\n  // Web Crypto API. Globally available in the browser and in Node.js >=23.\n  try {\n    return crypto.getRandomValues(new Uint8Array(len));\n  } catch {}\n  // Node.js crypto module for non-browser environments.\n  try {\n    return nodeCrypto.randomBytes(len);\n  } catch {}\n  // Custom fallback specified with `setRandomFallback`.\n  if (!randomFallback) {\n    throw Error(\n      \"Neither WebCryptoAPI nor a crypto module is available. Use bcrypt.setRandomFallback to set an alternative\",\n    );\n  }\n  return randomFallback(len);\n}\n\n/**\n * Sets the pseudo random number generator to use as a fallback if neither node's `crypto` module nor the Web Crypto\n *  API is available. Please note: It is highly important that the PRNG used is cryptographically secure and that it\n *  is seeded properly!\n * @param {?function(number):!Array.<number>} random Function taking the number of bytes to generate as its\n *  sole argument, returning the corresponding array of cryptographically secure random byte values.\n * @see http://nodejs.org/api/crypto.html\n * @see http://www.w3.org/TR/WebCryptoAPI/\n */\nexport function setRandomFallback(random) {\n  randomFallback = random;\n}\n\n/**\n * Synchronously generates a salt.\n * @param {number=} rounds Number of rounds to use, defaults to 10 if omitted\n * @param {number=} seed_length Not supported.\n * @returns {string} Resulting salt\n * @throws {Error} If a random fallback is required but not set\n */\nexport function genSaltSync(rounds, seed_length) {\n  rounds = rounds || GENSALT_DEFAULT_LOG2_ROUNDS;\n  if (typeof rounds !== \"number\")\n    throw Error(\n      \"Illegal arguments: \" + typeof rounds + \", \" + typeof seed_length,\n    );\n  if (rounds < 4) rounds = 4;\n  else if (rounds > 31) rounds = 31;\n  var salt = [];\n  salt.push(\"$2b$\");\n  if (rounds < 10) salt.push(\"0\");\n  salt.push(rounds.toString());\n  salt.push(\"$\");\n  salt.push(base64_encode(randomBytes(BCRYPT_SALT_LEN), BCRYPT_SALT_LEN)); // May throw\n  return salt.join(\"\");\n}\n\n/**\n * Asynchronously generates a salt.\n * @param {(number|function(Error, string=))=} rounds Number of rounds to use, defaults to 10 if omitted\n * @param {(number|function(Error, string=))=} seed_length Not supported.\n * @param {function(Error, string=)=} callback Callback receiving the error, if any, and the resulting salt\n * @returns {!Promise} If `callback` has been omitted\n * @throws {Error} If `callback` is present but not a function\n */\nexport function genSalt(rounds, seed_length, callback) {\n  if (typeof seed_length === \"function\")\n    (callback = seed_length), (seed_length = undefined); // Not supported.\n  if (typeof rounds === \"function\") (callback = rounds), (rounds = undefined);\n  if (typeof rounds === \"undefined\") rounds = GENSALT_DEFAULT_LOG2_ROUNDS;\n  else if (typeof rounds !== \"number\")\n    throw Error(\"illegal arguments: \" + typeof rounds);\n\n  function _async(callback) {\n    nextTick(function () {\n      // Pretty thin, but salting is fast enough\n      try {\n        callback(null, genSaltSync(rounds));\n      } catch (err) {\n        callback(err);\n      }\n    });\n  }\n\n  if (callback) {\n    if (typeof callback !== \"function\")\n      throw Error(\"Illegal callback: \" + typeof callback);\n    _async(callback);\n  } else\n    return new Promise(function (resolve, reject) {\n      _async(function (err, res) {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve(res);\n      });\n    });\n}\n\n/**\n * Synchronously generates a hash for the given password.\n * @param {string} password Password to hash\n * @param {(number|string)=} salt Salt length to generate or salt to use, default to 10\n * @returns {string} Resulting hash\n */\nexport function hashSync(password, salt) {\n  if (typeof salt === \"undefined\") salt = GENSALT_DEFAULT_LOG2_ROUNDS;\n  if (typeof salt === \"number\") salt = genSaltSync(salt);\n  if (typeof password !== \"string\" || typeof salt !== \"string\")\n    throw Error(\"Illegal arguments: \" + typeof password + \", \" + typeof salt);\n  return _hash(password, salt);\n}\n\n/**\n * Asynchronously generates a hash for the given password.\n * @param {string} password Password to hash\n * @param {number|string} salt Salt length to generate or salt to use\n * @param {function(Error, string=)=} callback Callback receiving the error, if any, and the resulting hash\n * @param {function(number)=} progressCallback Callback successively called with the percentage of rounds completed\n *  (0.0 - 1.0), maximally once per `MAX_EXECUTION_TIME = 100` ms.\n * @returns {!Promise} If `callback` has been omitted\n * @throws {Error} If `callback` is present but not a function\n */\nexport function hash(password, salt, callback, progressCallback) {\n  function _async(callback) {\n    if (typeof password === \"string\" && typeof salt === \"number\")\n      genSalt(salt, function (err, salt) {\n        _hash(password, salt, callback, progressCallback);\n      });\n    else if (typeof password === \"string\" && typeof salt === \"string\")\n      _hash(password, salt, callback, progressCallback);\n    else\n      nextTick(\n        callback.bind(\n          this,\n          Error(\"Illegal arguments: \" + typeof password + \", \" + typeof salt),\n        ),\n      );\n  }\n\n  if (callback) {\n    if (typeof callback !== \"function\")\n      throw Error(\"Illegal callback: \" + typeof callback);\n    _async(callback);\n  } else\n    return new Promise(function (resolve, reject) {\n      _async(function (err, res) {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve(res);\n      });\n    });\n}\n\n/**\n * Compares two strings of the same length in constant time.\n * @param {string} known Must be of the correct length\n * @param {string} unknown Must be the same length as `known`\n * @returns {boolean}\n * @inner\n */\nfunction safeStringCompare(known, unknown) {\n  var diff = known.length ^ unknown.length;\n  for (var i = 0; i < known.length; ++i) {\n    diff |= known.charCodeAt(i) ^ unknown.charCodeAt(i);\n  }\n  return diff === 0;\n}\n\n/**\n * Synchronously tests a password against a hash.\n * @param {string} password Password to compare\n * @param {string} hash Hash to test against\n * @returns {boolean} true if matching, otherwise false\n * @throws {Error} If an argument is illegal\n */\nexport function compareSync(password, hash) {\n  if (typeof password !== \"string\" || typeof hash !== \"string\")\n    throw Error(\"Illegal arguments: \" + typeof password + \", \" + typeof hash);\n  if (hash.length !== 60) return false;\n  return safeStringCompare(\n    hashSync(password, hash.substring(0, hash.length - 31)),\n    hash,\n  );\n}\n\n/**\n * Asynchronously tests a password against a hash.\n * @param {string} password Password to compare\n * @param {string} hashValue Hash to test against\n * @param {function(Error, boolean)=} callback Callback receiving the error, if any, otherwise the result\n * @param {function(number)=} progressCallback Callback successively called with the percentage of rounds completed\n *  (0.0 - 1.0), maximally once per `MAX_EXECUTION_TIME = 100` ms.\n * @returns {!Promise} If `callback` has been omitted\n * @throws {Error} If `callback` is present but not a function\n */\nexport function compare(password, hashValue, callback, progressCallback) {\n  function _async(callback) {\n    if (typeof password !== \"string\" || typeof hashValue !== \"string\") {\n      nextTick(\n        callback.bind(\n          this,\n          Error(\n            \"Illegal arguments: \" + typeof password + \", \" + typeof hashValue,\n          ),\n        ),\n      );\n      return;\n    }\n    if (hashValue.length !== 60) {\n      nextTick(callback.bind(this, null, false));\n      return;\n    }\n    hash(\n      password,\n      hashValue.substring(0, 29),\n      function (err, comp) {\n        if (err) callback(err);\n        else callback(null, safeStringCompare(comp, hashValue));\n      },\n      progressCallback,\n    );\n  }\n\n  if (callback) {\n    if (typeof callback !== \"function\")\n      throw Error(\"Illegal callback: \" + typeof callback);\n    _async(callback);\n  } else\n    return new Promise(function (resolve, reject) {\n      _async(function (err, res) {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve(res);\n      });\n    });\n}\n\n/**\n * Gets the number of rounds used to encrypt the specified hash.\n * @param {string} hash Hash to extract the used number of rounds from\n * @returns {number} Number of rounds used\n * @throws {Error} If `hash` is not a string\n */\nexport function getRounds(hash) {\n  if (typeof hash !== \"string\")\n    throw Error(\"Illegal arguments: \" + typeof hash);\n  return parseInt(hash.split(\"$\")[2], 10);\n}\n\n/**\n * Gets the salt portion from a hash. Does not validate the hash.\n * @param {string} hash Hash to extract the salt from\n * @returns {string} Extracted salt part\n * @throws {Error} If `hash` is not a string or otherwise invalid\n */\nexport function getSalt(hash) {\n  if (typeof hash !== \"string\")\n    throw Error(\"Illegal arguments: \" + typeof hash);\n  if (hash.length !== 60)\n    throw Error(\"Illegal hash length: \" + hash.length + \" != 60\");\n  return hash.substring(0, 29);\n}\n\n/**\n * Tests if a password will be truncated when hashed, that is its length is\n * greater than 72 bytes when converted to UTF-8.\n * @param {string} password The password to test\n * @returns {boolean} `true` if truncated, otherwise `false`\n */\nexport function truncates(password) {\n  if (typeof password !== \"string\")\n    throw Error(\"Illegal arguments: \" + typeof password);\n  return utf8Length(password) > 72;\n}\n\n/**\n * Continues with the callback on the next tick.\n * @function\n * @param {function(...[*])} callback Callback to execute\n * @inner\n */\nvar nextTick =\n  typeof process !== \"undefined\" &&\n  process &&\n  typeof process.nextTick === \"function\"\n    ? typeof setImmediate === \"function\"\n      ? setImmediate\n      : process.nextTick\n    : setTimeout;\n\n/** Calculates the byte length of a string encoded as UTF8. */\nfunction utf8Length(string) {\n  var len = 0,\n    c = 0;\n  for (var i = 0; i < string.length; ++i) {\n    c = string.charCodeAt(i);\n    if (c < 128) len += 1;\n    else if (c < 2048) len += 2;\n    else if (\n      (c & 0xfc00) === 0xd800 &&\n      (string.charCodeAt(i + 1) & 0xfc00) === 0xdc00\n    ) {\n      ++i;\n      len += 4;\n    } else len += 3;\n  }\n  return len;\n}\n\n/** Converts a string to an array of UTF8 bytes. */\nfunction utf8Array(string) {\n  var offset = 0,\n    c1,\n    c2;\n  var buffer = new Array(utf8Length(string));\n  for (var i = 0, k = string.length; i < k; ++i) {\n    c1 = string.charCodeAt(i);\n    if (c1 < 128) {\n      buffer[offset++] = c1;\n    } else if (c1 < 2048) {\n      buffer[offset++] = (c1 >> 6) | 192;\n      buffer[offset++] = (c1 & 63) | 128;\n    } else if (\n      (c1 & 0xfc00) === 0xd800 &&\n      ((c2 = string.charCodeAt(i + 1)) & 0xfc00) === 0xdc00\n    ) {\n      c1 = 0x10000 + ((c1 & 0x03ff) << 10) + (c2 & 0x03ff);\n      ++i;\n      buffer[offset++] = (c1 >> 18) | 240;\n      buffer[offset++] = ((c1 >> 12) & 63) | 128;\n      buffer[offset++] = ((c1 >> 6) & 63) | 128;\n      buffer[offset++] = (c1 & 63) | 128;\n    } else {\n      buffer[offset++] = (c1 >> 12) | 224;\n      buffer[offset++] = ((c1 >> 6) & 63) | 128;\n      buffer[offset++] = (c1 & 63) | 128;\n    }\n  }\n  return buffer;\n}\n\n// A base64 implementation for the bcrypt algorithm. This is partly non-standard.\n\n/**\n * bcrypt's own non-standard base64 dictionary.\n * @type {!Array.<string>}\n * @const\n * @inner\n **/\nvar BASE64_CODE =\n  \"./ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\".split(\"\");\n\n/**\n * @type {!Array.<number>}\n * @const\n * @inner\n **/\nvar BASE64_INDEX = [\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  -1, -1, -1, -1, -1, -1, -1, -1, 0, 1, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63,\n  -1, -1, -1, -1, -1, -1, -1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, -1, -1, -1, -1, -1, -1, 28,\n  29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47,\n  48, 49, 50, 51, 52, 53, -1, -1, -1, -1, -1,\n];\n\n/**\n * Encodes a byte array to base64 with up to len bytes of input.\n * @param {!Array.<number>} b Byte array\n * @param {number} len Maximum input length\n * @returns {string}\n * @inner\n */\nfunction base64_encode(b, len) {\n  var off = 0,\n    rs = [],\n    c1,\n    c2;\n  if (len <= 0 || len > b.length) throw Error(\"Illegal len: \" + len);\n  while (off < len) {\n    c1 = b[off++] & 0xff;\n    rs.push(BASE64_CODE[(c1 >> 2) & 0x3f]);\n    c1 = (c1 & 0x03) << 4;\n    if (off >= len) {\n      rs.push(BASE64_CODE[c1 & 0x3f]);\n      break;\n    }\n    c2 = b[off++] & 0xff;\n    c1 |= (c2 >> 4) & 0x0f;\n    rs.push(BASE64_CODE[c1 & 0x3f]);\n    c1 = (c2 & 0x0f) << 2;\n    if (off >= len) {\n      rs.push(BASE64_CODE[c1 & 0x3f]);\n      break;\n    }\n    c2 = b[off++] & 0xff;\n    c1 |= (c2 >> 6) & 0x03;\n    rs.push(BASE64_CODE[c1 & 0x3f]);\n    rs.push(BASE64_CODE[c2 & 0x3f]);\n  }\n  return rs.join(\"\");\n}\n\n/**\n * Decodes a base64 encoded string to up to len bytes of output.\n * @param {string} s String to decode\n * @param {number} len Maximum output length\n * @returns {!Array.<number>}\n * @inner\n */\nfunction base64_decode(s, len) {\n  var off = 0,\n    slen = s.length,\n    olen = 0,\n    rs = [],\n    c1,\n    c2,\n    c3,\n    c4,\n    o,\n    code;\n  if (len <= 0) throw Error(\"Illegal len: \" + len);\n  while (off < slen - 1 && olen < len) {\n    code = s.charCodeAt(off++);\n    c1 = code < BASE64_INDEX.length ? BASE64_INDEX[code] : -1;\n    code = s.charCodeAt(off++);\n    c2 = code < BASE64_INDEX.length ? BASE64_INDEX[code] : -1;\n    if (c1 == -1 || c2 == -1) break;\n    o = (c1 << 2) >>> 0;\n    o |= (c2 & 0x30) >> 4;\n    rs.push(String.fromCharCode(o));\n    if (++olen >= len || off >= slen) break;\n    code = s.charCodeAt(off++);\n    c3 = code < BASE64_INDEX.length ? BASE64_INDEX[code] : -1;\n    if (c3 == -1) break;\n    o = ((c2 & 0x0f) << 4) >>> 0;\n    o |= (c3 & 0x3c) >> 2;\n    rs.push(String.fromCharCode(o));\n    if (++olen >= len || off >= slen) break;\n    code = s.charCodeAt(off++);\n    c4 = code < BASE64_INDEX.length ? BASE64_INDEX[code] : -1;\n    o = ((c3 & 0x03) << 6) >>> 0;\n    o |= c4;\n    rs.push(String.fromCharCode(o));\n    ++olen;\n  }\n  var res = [];\n  for (off = 0; off < olen; off++) res.push(rs[off].charCodeAt(0));\n  return res;\n}\n\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar BCRYPT_SALT_LEN = 16;\n\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar GENSALT_DEFAULT_LOG2_ROUNDS = 10;\n\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar BLOWFISH_NUM_ROUNDS = 16;\n\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar MAX_EXECUTION_TIME = 100;\n\n/**\n * @type {Array.<number>}\n * @const\n * @inner\n */\nvar P_ORIG = [\n  0x243f6a88, 0x85a308d3, 0x13198a2e, 0x03707344, 0xa4093822, 0x299f31d0,\n  0x082efa98, 0xec4e6c89, 0x452821e6, 0x38d01377, 0xbe5466cf, 0x34e90c6c,\n  0xc0ac29b7, 0xc97c50dd, 0x3f84d5b5, 0xb5470917, 0x9216d5d9, 0x8979fb1b,\n];\n\n/**\n * @type {Array.<number>}\n * @const\n * @inner\n */\nvar S_ORIG = [\n  0xd1310ba6, 0x98dfb5ac, 0x2ffd72db, 0xd01adfb7, 0xb8e1afed, 0x6a267e96,\n  0xba7c9045, 0xf12c7f99, 0x24a19947, 0xb3916cf7, 0x0801f2e2, 0x858efc16,\n  0x636920d8, 0x71574e69, 0xa458fea3, 0xf4933d7e, 0x0d95748f, 0x728eb658,\n  0x718bcd58, 0x82154aee, 0x7b54a41d, 0xc25a59b5, 0x9c30d539, 0x2af26013,\n  0xc5d1b023, 0x286085f0, 0xca417918, 0xb8db38ef, 0x8e79dcb0, 0x603a180e,\n  0x6c9e0e8b, 0xb01e8a3e, 0xd71577c1, 0xbd314b27, 0x78af2fda, 0x55605c60,\n  0xe65525f3, 0xaa55ab94, 0x57489862, 0x63e81440, 0x55ca396a, 0x2aab10b6,\n  0xb4cc5c34, 0x1141e8ce, 0xa15486af, 0x7c72e993, 0xb3ee1411, 0x636fbc2a,\n  0x2ba9c55d, 0x741831f6, 0xce5c3e16, 0x9b87931e, 0xafd6ba33, 0x6c24cf5c,\n  0x7a325381, 0x28958677, 0x3b8f4898, 0x6b4bb9af, 0xc4bfe81b, 0x66282193,\n  0x61d809cc, 0xfb21a991, 0x487cac60, 0x5dec8032, 0xef845d5d, 0xe98575b1,\n  0xdc262302, 0xeb651b88, 0x23893e81, 0xd396acc5, 0x0f6d6ff3, 0x83f44239,\n  0x2e0b4482, 0xa4842004, 0x69c8f04a, 0x9e1f9b5e, 0x21c66842, 0xf6e96c9a,\n  0x670c9c61, 0xabd388f0, 0x6a51a0d2, 0xd8542f68, 0x960fa728, 0xab5133a3,\n  0x6eef0b6c, 0x137a3be4, 0xba3bf050, 0x7efb2a98, 0xa1f1651d, 0x39af0176,\n  0x66ca593e, 0x82430e88, 0x8cee8619, 0x456f9fb4, 0x7d84a5c3, 0x3b8b5ebe,\n  0xe06f75d8, 0x85c12073, 0x401a449f, 0x56c16aa6, 0x4ed3aa62, 0x363f7706,\n  0x1bfedf72, 0x429b023d, 0x37d0d724, 0xd00a1248, 0xdb0fead3, 0x49f1c09b,\n  0x075372c9, 0x80991b7b, 0x25d479d8, 0xf6e8def7, 0xe3fe501a, 0xb6794c3b,\n  0x976ce0bd, 0x04c006ba, 0xc1a94fb6, 0x409f60c4, 0x5e5c9ec2, 0x196a2463,\n  0x68fb6faf, 0x3e6c53b5, 0x1339b2eb, 0x3b52ec6f, 0x6dfc511f, 0x9b30952c,\n  0xcc814544, 0xaf5ebd09, 0xbee3d004, 0xde334afd, 0x660f2807, 0x192e4bb3,\n  0xc0cba857, 0x45c8740f, 0xd20b5f39, 0xb9d3fbdb, 0x5579c0bd, 0x1a60320a,\n  0xd6a100c6, 0x402c7279, 0x679f25fe, 0xfb1fa3cc, 0x8ea5e9f8, 0xdb3222f8,\n  0x3c7516df, 0xfd616b15, 0x2f501ec8, 0xad0552ab, 0x323db5fa, 0xfd238760,\n  0x53317b48, 0x3e00df82, 0x9e5c57bb, 0xca6f8ca0, 0x1a87562e, 0xdf1769db,\n  0xd542a8f6, 0x287effc3, 0xac6732c6, 0x8c4f5573, 0x695b27b0, 0xbbca58c8,\n  0xe1ffa35d, 0xb8f011a0, 0x10fa3d98, 0xfd2183b8, 0x4afcb56c, 0x2dd1d35b,\n  0x9a53e479, 0xb6f84565, 0xd28e49bc, 0x4bfb9790, 0xe1ddf2da, 0xa4cb7e33,\n  0x62fb1341, 0xcee4c6e8, 0xef20cada, 0x36774c01, 0xd07e9efe, 0x2bf11fb4,\n  0x95dbda4d, 0xae909198, 0xeaad8e71, 0x6b93d5a0, 0xd08ed1d0, 0xafc725e0,\n  0x8e3c5b2f, 0x8e7594b7, 0x8ff6e2fb, 0xf2122b64, 0x8888b812, 0x900df01c,\n  0x4fad5ea0, 0x688fc31c, 0xd1cff191, 0xb3a8c1ad, 0x2f2f2218, 0xbe0e1777,\n  0xea752dfe, 0x8b021fa1, 0xe5a0cc0f, 0xb56f74e8, 0x18acf3d6, 0xce89e299,\n  0xb4a84fe0, 0xfd13e0b7, 0x7cc43b81, 0xd2ada8d9, 0x165fa266, 0x80957705,\n  0x93cc7314, 0x211a1477, 0xe6ad2065, 0x77b5fa86, 0xc75442f5, 0xfb9d35cf,\n  0xebcdaf0c, 0x7b3e89a0, 0xd6411bd3, 0xae1e7e49, 0x00250e2d, 0x2071b35e,\n  0x226800bb, 0x57b8e0af, 0x2464369b, 0xf009b91e, 0x5563911d, 0x59dfa6aa,\n  0x78c14389, 0xd95a537f, 0x207d5ba2, 0x02e5b9c5, 0x83260376, 0x6295cfa9,\n  0x11c81968, 0x4e734a41, 0xb3472dca, 0x7b14a94a, 0x1b510052, 0x9a532915,\n  0xd60f573f, 0xbc9bc6e4, 0x2b60a476, 0x81e67400, 0x08ba6fb5, 0x571be91f,\n  0xf296ec6b, 0x2a0dd915, 0xb6636521, 0xe7b9f9b6, 0xff34052e, 0xc5855664,\n  0x53b02d5d, 0xa99f8fa1, 0x08ba4799, 0x6e85076a, 0x4b7a70e9, 0xb5b32944,\n  0xdb75092e, 0xc4192623, 0xad6ea6b0, 0x49a7df7d, 0x9cee60b8, 0x8fedb266,\n  0xecaa8c71, 0x699a17ff, 0x5664526c, 0xc2b19ee1, 0x193602a5, 0x75094c29,\n  0xa0591340, 0xe4183a3e, 0x3f54989a, 0x5b429d65, 0x6b8fe4d6, 0x99f73fd6,\n  0xa1d29c07, 0xefe830f5, 0x4d2d38e6, 0xf0255dc1, 0x4cdd2086, 0x8470eb26,\n  0x6382e9c6, 0x021ecc5e, 0x09686b3f, 0x3ebaefc9, 0x3c971814, 0x6b6a70a1,\n  0x687f3584, 0x52a0e286, 0xb79c5305, 0xaa500737, 0x3e07841c, 0x7fdeae5c,\n  0x8e7d44ec, 0x5716f2b8, 0xb03ada37, 0xf0500c0d, 0xf01c1f04, 0x0200b3ff,\n  0xae0cf51a, 0x3cb574b2, 0x25837a58, 0xdc0921bd, 0xd19113f9, 0x7ca92ff6,\n  0x94324773, 0x22f54701, 0x3ae5e581, 0x37c2dadc, 0xc8b57634, 0x9af3dda7,\n  0xa9446146, 0x0fd0030e, 0xecc8c73e, 0xa4751e41, 0xe238cd99, 0x3bea0e2f,\n  0x3280bba1, 0x183eb331, 0x4e548b38, 0x4f6db908, 0x6f420d03, 0xf60a04bf,\n  0x2cb81290, 0x24977c79, 0x5679b072, 0xbcaf89af, 0xde9a771f, 0xd9930810,\n  0xb38bae12, 0xdccf3f2e, 0x5512721f, 0x2e6b7124, 0x501adde6, 0x9f84cd87,\n  0x7a584718, 0x7408da17, 0xbc9f9abc, 0xe94b7d8c, 0xec7aec3a, 0xdb851dfa,\n  0x63094366, 0xc464c3d2, 0xef1c1847, 0x3215d908, 0xdd433b37, 0x24c2ba16,\n  0x12a14d43, 0x2a65c451, 0x50940002, 0x133ae4dd, 0x71dff89e, 0x10314e55,\n  0x81ac77d6, 0x5f11199b, 0x043556f1, 0xd7a3c76b, 0x3c11183b, 0x5924a509,\n  0xf28fe6ed, 0x97f1fbfa, 0x9ebabf2c, 0x1e153c6e, 0x86e34570, 0xeae96fb1,\n  0x860e5e0a, 0x5a3e2ab3, 0x771fe71c, 0x4e3d06fa, 0x2965dcb9, 0x99e71d0f,\n  0x803e89d6, 0x5266c825, 0x2e4cc978, 0x9c10b36a, 0xc6150eba, 0x94e2ea78,\n  0xa5fc3c53, 0x1e0a2df4, 0xf2f74ea7, 0x361d2b3d, 0x1939260f, 0x19c27960,\n  0x5223a708, 0xf71312b6, 0xebadfe6e, 0xeac31f66, 0xe3bc4595, 0xa67bc883,\n  0xb17f37d1, 0x018cff28, 0xc332ddef, 0xbe6c5aa5, 0x65582185, 0x68ab9802,\n  0xeecea50f, 0xdb2f953b, 0x2aef7dad, 0x5b6e2f84, 0x1521b628, 0x29076170,\n  0xecdd4775, 0x619f1510, 0x13cca830, 0xeb61bd96, 0x0334fe1e, 0xaa0363cf,\n  0xb5735c90, 0x4c70a239, 0xd59e9e0b, 0xcbaade14, 0xeecc86bc, 0x60622ca7,\n  0x9cab5cab, 0xb2f3846e, 0x648b1eaf, 0x19bdf0ca, 0xa02369b9, 0x655abb50,\n  0x40685a32, 0x3c2ab4b3, 0x319ee9d5, 0xc021b8f7, 0x9b540b19, 0x875fa099,\n  0x95f7997e, 0x623d7da8, 0xf837889a, 0x97e32d77, 0x11ed935f, 0x16681281,\n  0x0e358829, 0xc7e61fd6, 0x96dedfa1, 0x7858ba99, 0x57f584a5, 0x1b227263,\n  0x9b83c3ff, 0x1ac24696, 0xcdb30aeb, 0x532e3054, 0x8fd948e4, 0x6dbc3128,\n  0x58ebf2ef, 0x34c6ffea, 0xfe28ed61, 0xee7c3c73, 0x5d4a14d9, 0xe864b7e3,\n  0x42105d14, 0x203e13e0, 0x45eee2b6, 0xa3aaabea, 0xdb6c4f15, 0xfacb4fd0,\n  0xc742f442, 0xef6abbb5, 0x654f3b1d, 0x41cd2105, 0xd81e799e, 0x86854dc7,\n  0xe44b476a, 0x3d816250, 0xcf62a1f2, 0x5b8d2646, 0xfc8883a0, 0xc1c7b6a3,\n  0x7f1524c3, 0x69cb7492, 0x47848a0b, 0x5692b285, 0x095bbf00, 0xad19489d,\n  0x1462b174, 0x23820e00, 0x58428d2a, 0x0c55f5ea, 0x1dadf43e, 0x233f7061,\n  0x3372f092, 0x8d937e41, 0xd65fecf1, 0x6c223bdb, 0x7cde3759, 0xcbee7460,\n  0x4085f2a7, 0xce77326e, 0xa6078084, 0x19f8509e, 0xe8efd855, 0x61d99735,\n  0xa969a7aa, 0xc50c06c2, 0x5a04abfc, 0x800bcadc, 0x9e447a2e, 0xc3453484,\n  0xfdd56705, 0x0e1e9ec9, 0xdb73dbd3, 0x105588cd, 0x675fda79, 0xe3674340,\n  0xc5c43465, 0x713e38d8, 0x3d28f89e, 0xf16dff20, 0x153e21e7, 0x8fb03d4a,\n  0xe6e39f2b, 0xdb83adf7, 0xe93d5a68, 0x948140f7, 0xf64c261c, 0x94692934,\n  0x411520f7, 0x7602d4f7, 0xbcf46b2e, 0xd4a20068, 0xd4082471, 0x3320f46a,\n  0x43b7d4b7, 0x500061af, 0x1e39f62e, 0x97244546, 0x14214f74, 0xbf8b8840,\n  0x4d95fc1d, 0x96b591af, 0x70f4ddd3, 0x66a02f45, 0xbfbc09ec, 0x03bd9785,\n  0x7fac6dd0, 0x31cb8504, 0x96eb27b3, 0x55fd3941, 0xda2547e6, 0xabca0a9a,\n  0x28507825, 0x530429f4, 0x0a2c86da, 0xe9b66dfb, 0x68dc1462, 0xd7486900,\n  0x680ec0a4, 0x27a18dee, 0x4f3ffea2, 0xe887ad8c, 0xb58ce006, 0x7af4d6b6,\n  0xaace1e7c, 0xd3375fec, 0xce78a399, 0x406b2a42, 0x20fe9e35, 0xd9f385b9,\n  0xee39d7ab, 0x3b124e8b, 0x1dc9faf7, 0x4b6d1856, 0x26a36631, 0xeae397b2,\n  0x3a6efa74, 0xdd5b4332, 0x6841e7f7, 0xca7820fb, 0xfb0af54e, 0xd8feb397,\n  0x454056ac, 0xba489527, 0x55533a3a, 0x20838d87, 0xfe6ba9b7, 0xd096954b,\n  0x55a867bc, 0xa1159a58, 0xcca92963, 0x99e1db33, 0xa62a4a56, 0x3f3125f9,\n  0x5ef47e1c, 0x9029317c, 0xfdf8e802, 0x04272f70, 0x80bb155c, 0x05282ce3,\n  0x95c11548, 0xe4c66d22, 0x48c1133f, 0xc70f86dc, 0x07f9c9ee, 0x41041f0f,\n  0x404779a4, 0x5d886e17, 0x325f51eb, 0xd59bc0d1, 0xf2bcc18f, 0x41113564,\n  0x257b7834, 0x602a9c60, 0xdff8e8a3, 0x1f636c1b, 0x0e12b4c2, 0x02e1329e,\n  0xaf664fd1, 0xcad18115, 0x6b2395e0, 0x333e92e1, 0x3b240b62, 0xeebeb922,\n  0x85b2a20e, 0xe6ba0d99, 0xde720c8c, 0x2da2f728, 0xd0127845, 0x95b794fd,\n  0x647d0862, 0xe7ccf5f0, 0x5449a36f, 0x877d48fa, 0xc39dfd27, 0xf33e8d1e,\n  0x0a476341, 0x992eff74, 0x3a6f6eab, 0xf4f8fd37, 0xa812dc60, 0xa1ebddf8,\n  0x991be14c, 0xdb6e6b0d, 0xc67b5510, 0x6d672c37, 0x2765d43b, 0xdcd0e804,\n  0xf1290dc7, 0xcc00ffa3, 0xb5390f92, 0x690fed0b, 0x667b9ffb, 0xcedb7d9c,\n  0xa091cf0b, 0xd9155ea3, 0xbb132f88, 0x515bad24, 0x7b9479bf, 0x763bd6eb,\n  0x37392eb3, 0xcc115979, 0x8026e297, 0xf42e312d, 0x6842ada7, 0xc66a2b3b,\n  0x12754ccc, 0x782ef11c, 0x6a124237, 0xb79251e7, 0x06a1bbe6, 0x4bfb6350,\n  0x1a6b1018, 0x11caedfa, 0x3d25bdd8, 0xe2e1c3c9, 0x44421659, 0x0a121386,\n  0xd90cec6e, 0xd5abea2a, 0x64af674e, 0xda86a85f, 0xbebfe988, 0x64e4c3fe,\n  0x9dbc8057, 0xf0f7c086, 0x60787bf8, 0x6003604d, 0xd1fd8346, 0xf6381fb0,\n  0x7745ae04, 0xd736fccc, 0x83426b33, 0xf01eab71, 0xb0804187, 0x3c005e5f,\n  0x77a057be, 0xbde8ae24, 0x55464299, 0xbf582e61, 0x4e58f48f, 0xf2ddfda2,\n  0xf474ef38, 0x8789bdc2, 0x5366f9c3, 0xc8b38e74, 0xb475f255, 0x46fcd9b9,\n  0x7aeb2661, 0x8b1ddf84, 0x846a0e79, 0x915f95e2, 0x466e598e, 0x20b45770,\n  0x8cd55591, 0xc902de4c, 0xb90bace1, 0xbb8205d0, 0x11a86248, 0x7574a99e,\n  0xb77f19b6, 0xe0a9dc09, 0x662d09a1, 0xc4324633, 0xe85a1f02, 0x09f0be8c,\n  0x4a99a025, 0x1d6efe10, 0x1ab93d1d, 0x0ba5a4df, 0xa186f20f, 0x2868f169,\n  0xdcb7da83, 0x573906fe, 0xa1e2ce9b, 0x4fcd7f52, 0x50115e01, 0xa70683fa,\n  0xa002b5c4, 0x0de6d027, 0x9af88c27, 0x773f8641, 0xc3604c06, 0x61a806b5,\n  0xf0177a28, 0xc0f586e0, 0x006058aa, 0x30dc7d62, 0x11e69ed7, 0x2338ea63,\n  0x53c2dd94, 0xc2c21634, 0xbbcbee56, 0x90bcb6de, 0xebfc7da1, 0xce591d76,\n  0x6f05e409, 0x4b7c0188, 0x39720a3d, 0x7c927c24, 0x86e3725f, 0x724d9db9,\n  0x1ac15bb4, 0xd39eb8fc, 0xed545578, 0x08fca5b5, 0xd83d7cd3, 0x4dad0fc4,\n  0x1e50ef5e, 0xb161e6f8, 0xa28514d9, 0x6c51133c, 0x6fd5c7e7, 0x56e14ec4,\n  0x362abfce, 0xddc6c837, 0xd79a3234, 0x92638212, 0x670efa8e, 0x406000e0,\n  0x3a39ce37, 0xd3faf5cf, 0xabc27737, 0x5ac52d1b, 0x5cb0679e, 0x4fa33742,\n  0xd3822740, 0x99bc9bbe, 0xd5118e9d, 0xbf0f7315, 0xd62d1c7e, 0xc700c47b,\n  0xb78c1b6b, 0x21a19045, 0xb26eb1be, 0x6a366eb4, 0x5748ab2f, 0xbc946e79,\n  0xc6a376d2, 0x6549c2c8, 0x530ff8ee, 0x468dde7d, 0xd5730a1d, 0x4cd04dc6,\n  0x2939bbdb, 0xa9ba4650, 0xac9526e8, 0xbe5ee304, 0xa1fad5f0, 0x6a2d519a,\n  0x63ef8ce2, 0x9a86ee22, 0xc089c2b8, 0x43242ef6, 0xa51e03aa, 0x9cf2d0a4,\n  0x83c061ba, 0x9be96a4d, 0x8fe51550, 0xba645bd6, 0x2826a2f9, 0xa73a3ae1,\n  0x4ba99586, 0xef5562e9, 0xc72fefd3, 0xf752f7da, 0x3f046f69, 0x77fa0a59,\n  0x80e4a915, 0x87b08601, 0x9b09e6ad, 0x3b3ee593, 0xe990fd5a, 0x9e34d797,\n  0x2cf0b7d9, 0x022b8b51, 0x96d5ac3a, 0x017da67d, 0xd1cf3ed6, 0x7c7d2d28,\n  0x1f9f25cf, 0xadf2b89b, 0x5ad6b472, 0x5a88f54c, 0xe029ac71, 0xe019a5e6,\n  0x47b0acfd, 0xed93fa9b, 0xe8d3c48d, 0x283b57cc, 0xf8d56629, 0x79132e28,\n  0x785f0191, 0xed756055, 0xf7960e44, 0xe3d35e8c, 0x15056dd4, 0x88f46dba,\n  0x03a16125, 0x0564f0bd, 0xc3eb9e15, 0x3c9057a2, 0x97271aec, 0xa93a072a,\n  0x1b3f6d9b, 0x1e6321f5, 0xf59c66fb, 0x26dcf319, 0x7533d928, 0xb155fdf5,\n  0x03563482, 0x8aba3cbb, 0x28517711, 0xc20ad9f8, 0xabcc5167, 0xccad925f,\n  0x4de81751, 0x3830dc8e, 0x379d5862, 0x9320f991, 0xea7a90c2, 0xfb3e7bce,\n  0x5121ce64, 0x774fbe32, 0xa8b6e37e, 0xc3293d46, 0x48de5369, 0x6413e680,\n  0xa2ae0810, 0xdd6db224, 0x69852dfd, 0x09072166, 0xb39a460a, 0x6445c0dd,\n  0x586cdecf, 0x1c20c8ae, 0x5bbef7dd, 0x1b588d40, 0xccd2017f, 0x6bb4e3bb,\n  0xdda26a7e, 0x3a59ff45, 0x3e350a44, 0xbcb4cdd5, 0x72eacea8, 0xfa6484bb,\n  0x8d6612ae, 0xbf3c6f47, 0xd29be463, 0x542f5d9e, 0xaec2771b, 0xf64e6370,\n  0x740e0d8d, 0xe75b1357, 0xf8721671, 0xaf537d5d, 0x4040cb08, 0x4eb4e2cc,\n  0x34d2466a, 0x0115af84, 0xe1b00428, 0x95983a1d, 0x06b89fb4, 0xce6ea048,\n  0x6f3f3b82, 0x3520ab82, 0x011a1d4b, 0x277227f8, 0x611560b1, 0xe7933fdc,\n  0xbb3a792b, 0x344525bd, 0xa08839e1, 0x51ce794b, 0x2f32c9b7, 0xa01fbac9,\n  0xe01cc87e, 0xbcc7d1f6, 0xcf0111c3, 0xa1e8aac7, 0x1a908749, 0xd44fbd9a,\n  0xd0dadecb, 0xd50ada38, 0x0339c32a, 0xc6913667, 0x8df9317c, 0xe0b12b4f,\n  0xf79e59b7, 0x43f5bb3a, 0xf2d519ff, 0x27d9459c, 0xbf97222c, 0x15e6fc2a,\n  0x0f91fc71, 0x9b941525, 0xfae59361, 0xceb69ceb, 0xc2a86459, 0x12baa8d1,\n  0xb6c1075e, 0xe3056a0c, 0x10d25065, 0xcb03a442, 0xe0ec6e0e, 0x1698db3b,\n  0x4c98a0be, 0x3278e964, 0x9f1f9532, 0xe0d392df, 0xd3a0342b, 0x8971f21e,\n  0x1b0a7441, 0x4ba3348c, 0xc5be7120, 0xc37632d8, 0xdf359f8d, 0x9b992f2e,\n  0xe60b6f47, 0x0fe3f11d, 0xe54cda54, 0x1edad891, 0xce6279cf, 0xcd3e7e6f,\n  0x1618b166, 0xfd2c1d05, 0x848fd2c5, 0xf6fb2299, 0xf523f357, 0xa6327623,\n  0x93a83531, 0x56cccd02, 0xacf08162, 0x5a75ebb5, 0x6e163697, 0x88d273cc,\n  0xde966292, 0x81b949d0, 0x4c50901b, 0x71c65614, 0xe6c6c7bd, 0x327a140a,\n  0x45e1d006, 0xc3f27b9a, 0xc9aa53fd, 0x62a80f00, 0xbb25bfe2, 0x35bdd2f6,\n  0x71126905, 0xb2040222, 0xb6cbcf7c, 0xcd769c2b, 0x53113ec0, 0x1640e3d3,\n  0x38abbd60, 0x2547adf0, 0xba38209c, 0xf746ce76, 0x77afa1c5, 0x20756060,\n  0x85cbfe4e, 0x8ae88dd8, 0x7aaaf9b0, 0x4cf9aa7e, 0x1948c25c, 0x02fb8a8c,\n  0x01c36ae4, 0xd6ebe1f9, 0x90d4f869, 0xa65cdea0, 0x3f09252d, 0xc208e69f,\n  0xb74e6132, 0xce77e25b, 0x578fdfe3, 0x3ac372e6,\n];\n\n/**\n * @type {Array.<number>}\n * @const\n * @inner\n */\nvar C_ORIG = [\n  0x4f727068, 0x65616e42, 0x65686f6c, 0x64657253, 0x63727944, 0x6f756274,\n];\n\n/**\n * @param {Array.<number>} lr\n * @param {number} off\n * @param {Array.<number>} P\n * @param {Array.<number>} S\n * @returns {Array.<number>}\n * @inner\n */\nfunction _encipher(lr, off, P, S) {\n  // This is our bottleneck: 1714/1905 ticks / 90% - see profile.txt\n  var n,\n    l = lr[off],\n    r = lr[off + 1];\n\n  l ^= P[0];\n\n  /*\n    for (var i=0, k=BLOWFISH_NUM_ROUNDS-2; i<=k;)\n        // Feistel substitution on left word\n        n  = S[l >>> 24],\n        n += S[0x100 | ((l >> 16) & 0xff)],\n        n ^= S[0x200 | ((l >> 8) & 0xff)],\n        n += S[0x300 | (l & 0xff)],\n        r ^= n ^ P[++i],\n        // Feistel substitution on right word\n        n  = S[r >>> 24],\n        n += S[0x100 | ((r >> 16) & 0xff)],\n        n ^= S[0x200 | ((r >> 8) & 0xff)],\n        n += S[0x300 | (r & 0xff)],\n        l ^= n ^ P[++i];\n    */\n\n  //The following is an unrolled version of the above loop.\n  //Iteration 0\n  n = S[l >>> 24];\n  n += S[0x100 | ((l >> 16) & 0xff)];\n  n ^= S[0x200 | ((l >> 8) & 0xff)];\n  n += S[0x300 | (l & 0xff)];\n  r ^= n ^ P[1];\n  n = S[r >>> 24];\n  n += S[0x100 | ((r >> 16) & 0xff)];\n  n ^= S[0x200 | ((r >> 8) & 0xff)];\n  n += S[0x300 | (r & 0xff)];\n  l ^= n ^ P[2];\n  //Iteration 1\n  n = S[l >>> 24];\n  n += S[0x100 | ((l >> 16) & 0xff)];\n  n ^= S[0x200 | ((l >> 8) & 0xff)];\n  n += S[0x300 | (l & 0xff)];\n  r ^= n ^ P[3];\n  n = S[r >>> 24];\n  n += S[0x100 | ((r >> 16) & 0xff)];\n  n ^= S[0x200 | ((r >> 8) & 0xff)];\n  n += S[0x300 | (r & 0xff)];\n  l ^= n ^ P[4];\n  //Iteration 2\n  n = S[l >>> 24];\n  n += S[0x100 | ((l >> 16) & 0xff)];\n  n ^= S[0x200 | ((l >> 8) & 0xff)];\n  n += S[0x300 | (l & 0xff)];\n  r ^= n ^ P[5];\n  n = S[r >>> 24];\n  n += S[0x100 | ((r >> 16) & 0xff)];\n  n ^= S[0x200 | ((r >> 8) & 0xff)];\n  n += S[0x300 | (r & 0xff)];\n  l ^= n ^ P[6];\n  //Iteration 3\n  n = S[l >>> 24];\n  n += S[0x100 | ((l >> 16) & 0xff)];\n  n ^= S[0x200 | ((l >> 8) & 0xff)];\n  n += S[0x300 | (l & 0xff)];\n  r ^= n ^ P[7];\n  n = S[r >>> 24];\n  n += S[0x100 | ((r >> 16) & 0xff)];\n  n ^= S[0x200 | ((r >> 8) & 0xff)];\n  n += S[0x300 | (r & 0xff)];\n  l ^= n ^ P[8];\n  //Iteration 4\n  n = S[l >>> 24];\n  n += S[0x100 | ((l >> 16) & 0xff)];\n  n ^= S[0x200 | ((l >> 8) & 0xff)];\n  n += S[0x300 | (l & 0xff)];\n  r ^= n ^ P[9];\n  n = S[r >>> 24];\n  n += S[0x100 | ((r >> 16) & 0xff)];\n  n ^= S[0x200 | ((r >> 8) & 0xff)];\n  n += S[0x300 | (r & 0xff)];\n  l ^= n ^ P[10];\n  //Iteration 5\n  n = S[l >>> 24];\n  n += S[0x100 | ((l >> 16) & 0xff)];\n  n ^= S[0x200 | ((l >> 8) & 0xff)];\n  n += S[0x300 | (l & 0xff)];\n  r ^= n ^ P[11];\n  n = S[r >>> 24];\n  n += S[0x100 | ((r >> 16) & 0xff)];\n  n ^= S[0x200 | ((r >> 8) & 0xff)];\n  n += S[0x300 | (r & 0xff)];\n  l ^= n ^ P[12];\n  //Iteration 6\n  n = S[l >>> 24];\n  n += S[0x100 | ((l >> 16) & 0xff)];\n  n ^= S[0x200 | ((l >> 8) & 0xff)];\n  n += S[0x300 | (l & 0xff)];\n  r ^= n ^ P[13];\n  n = S[r >>> 24];\n  n += S[0x100 | ((r >> 16) & 0xff)];\n  n ^= S[0x200 | ((r >> 8) & 0xff)];\n  n += S[0x300 | (r & 0xff)];\n  l ^= n ^ P[14];\n  //Iteration 7\n  n = S[l >>> 24];\n  n += S[0x100 | ((l >> 16) & 0xff)];\n  n ^= S[0x200 | ((l >> 8) & 0xff)];\n  n += S[0x300 | (l & 0xff)];\n  r ^= n ^ P[15];\n  n = S[r >>> 24];\n  n += S[0x100 | ((r >> 16) & 0xff)];\n  n ^= S[0x200 | ((r >> 8) & 0xff)];\n  n += S[0x300 | (r & 0xff)];\n  l ^= n ^ P[16];\n\n  lr[off] = r ^ P[BLOWFISH_NUM_ROUNDS + 1];\n  lr[off + 1] = l;\n  return lr;\n}\n\n/**\n * @param {Array.<number>} data\n * @param {number} offp\n * @returns {{key: number, offp: number}}\n * @inner\n */\nfunction _streamtoword(data, offp) {\n  for (var i = 0, word = 0; i < 4; ++i)\n    (word = (word << 8) | (data[offp] & 0xff)),\n      (offp = (offp + 1) % data.length);\n  return { key: word, offp: offp };\n}\n\n/**\n * @param {Array.<number>} key\n * @param {Array.<number>} P\n * @param {Array.<number>} S\n * @inner\n */\nfunction _key(key, P, S) {\n  var offset = 0,\n    lr = [0, 0],\n    plen = P.length,\n    slen = S.length,\n    sw;\n  for (var i = 0; i < plen; i++)\n    (sw = _streamtoword(key, offset)),\n      (offset = sw.offp),\n      (P[i] = P[i] ^ sw.key);\n  for (i = 0; i < plen; i += 2)\n    (lr = _encipher(lr, 0, P, S)), (P[i] = lr[0]), (P[i + 1] = lr[1]);\n  for (i = 0; i < slen; i += 2)\n    (lr = _encipher(lr, 0, P, S)), (S[i] = lr[0]), (S[i + 1] = lr[1]);\n}\n\n/**\n * Expensive key schedule Blowfish.\n * @param {Array.<number>} data\n * @param {Array.<number>} key\n * @param {Array.<number>} P\n * @param {Array.<number>} S\n * @inner\n */\nfunction _ekskey(data, key, P, S) {\n  var offp = 0,\n    lr = [0, 0],\n    plen = P.length,\n    slen = S.length,\n    sw;\n  for (var i = 0; i < plen; i++)\n    (sw = _streamtoword(key, offp)), (offp = sw.offp), (P[i] = P[i] ^ sw.key);\n  offp = 0;\n  for (i = 0; i < plen; i += 2)\n    (sw = _streamtoword(data, offp)),\n      (offp = sw.offp),\n      (lr[0] ^= sw.key),\n      (sw = _streamtoword(data, offp)),\n      (offp = sw.offp),\n      (lr[1] ^= sw.key),\n      (lr = _encipher(lr, 0, P, S)),\n      (P[i] = lr[0]),\n      (P[i + 1] = lr[1]);\n  for (i = 0; i < slen; i += 2)\n    (sw = _streamtoword(data, offp)),\n      (offp = sw.offp),\n      (lr[0] ^= sw.key),\n      (sw = _streamtoword(data, offp)),\n      (offp = sw.offp),\n      (lr[1] ^= sw.key),\n      (lr = _encipher(lr, 0, P, S)),\n      (S[i] = lr[0]),\n      (S[i + 1] = lr[1]);\n}\n\n/**\n * Internaly crypts a string.\n * @param {Array.<number>} b Bytes to crypt\n * @param {Array.<number>} salt Salt bytes to use\n * @param {number} rounds Number of rounds\n * @param {function(Error, Array.<number>=)=} callback Callback receiving the error, if any, and the resulting bytes. If\n *  omitted, the operation will be performed synchronously.\n *  @param {function(number)=} progressCallback Callback called with the current progress\n * @returns {!Array.<number>|undefined} Resulting bytes if callback has been omitted, otherwise `undefined`\n * @inner\n */\nfunction _crypt(b, salt, rounds, callback, progressCallback) {\n  var cdata = C_ORIG.slice(),\n    clen = cdata.length,\n    err;\n\n  // Validate\n  if (rounds < 4 || rounds > 31) {\n    err = Error(\"Illegal number of rounds (4-31): \" + rounds);\n    if (callback) {\n      nextTick(callback.bind(this, err));\n      return;\n    } else throw err;\n  }\n  if (salt.length !== BCRYPT_SALT_LEN) {\n    err = Error(\n      \"Illegal salt length: \" + salt.length + \" != \" + BCRYPT_SALT_LEN,\n    );\n    if (callback) {\n      nextTick(callback.bind(this, err));\n      return;\n    } else throw err;\n  }\n  rounds = (1 << rounds) >>> 0;\n\n  var P,\n    S,\n    i = 0,\n    j;\n\n  //Use typed arrays when available - huge speedup!\n  if (typeof Int32Array === \"function\") {\n    P = new Int32Array(P_ORIG);\n    S = new Int32Array(S_ORIG);\n  } else {\n    P = P_ORIG.slice();\n    S = S_ORIG.slice();\n  }\n\n  _ekskey(salt, b, P, S);\n\n  /**\n   * Calcualtes the next round.\n   * @returns {Array.<number>|undefined} Resulting array if callback has been omitted, otherwise `undefined`\n   * @inner\n   */\n  function next() {\n    if (progressCallback) progressCallback(i / rounds);\n    if (i < rounds) {\n      var start = Date.now();\n      for (; i < rounds; ) {\n        i = i + 1;\n        _key(b, P, S);\n        _key(salt, P, S);\n        if (Date.now() - start > MAX_EXECUTION_TIME) break;\n      }\n    } else {\n      for (i = 0; i < 64; i++)\n        for (j = 0; j < clen >> 1; j++) _encipher(cdata, j << 1, P, S);\n      var ret = [];\n      for (i = 0; i < clen; i++)\n        ret.push(((cdata[i] >> 24) & 0xff) >>> 0),\n          ret.push(((cdata[i] >> 16) & 0xff) >>> 0),\n          ret.push(((cdata[i] >> 8) & 0xff) >>> 0),\n          ret.push((cdata[i] & 0xff) >>> 0);\n      if (callback) {\n        callback(null, ret);\n        return;\n      } else return ret;\n    }\n    if (callback) nextTick(next);\n  }\n\n  // Async\n  if (typeof callback !== \"undefined\") {\n    next();\n\n    // Sync\n  } else {\n    var res;\n    while (true) if (typeof (res = next()) !== \"undefined\") return res || [];\n  }\n}\n\n/**\n * Internally hashes a password.\n * @param {string} password Password to hash\n * @param {?string} salt Salt to use, actually never null\n * @param {function(Error, string=)=} callback Callback receiving the error, if any, and the resulting hash. If omitted,\n *  hashing is performed synchronously.\n *  @param {function(number)=} progressCallback Callback called with the current progress\n * @returns {string|undefined} Resulting hash if callback has been omitted, otherwise `undefined`\n * @inner\n */\nfunction _hash(password, salt, callback, progressCallback) {\n  var err;\n  if (typeof password !== \"string\" || typeof salt !== \"string\") {\n    err = Error(\"Invalid string / salt: Not a string\");\n    if (callback) {\n      nextTick(callback.bind(this, err));\n      return;\n    } else throw err;\n  }\n\n  // Validate the salt\n  var minor, offset;\n  if (salt.charAt(0) !== \"$\" || salt.charAt(1) !== \"2\") {\n    err = Error(\"Invalid salt version: \" + salt.substring(0, 2));\n    if (callback) {\n      nextTick(callback.bind(this, err));\n      return;\n    } else throw err;\n  }\n  if (salt.charAt(2) === \"$\") (minor = String.fromCharCode(0)), (offset = 3);\n  else {\n    minor = salt.charAt(2);\n    if (\n      (minor !== \"a\" && minor !== \"b\" && minor !== \"y\") ||\n      salt.charAt(3) !== \"$\"\n    ) {\n      err = Error(\"Invalid salt revision: \" + salt.substring(2, 4));\n      if (callback) {\n        nextTick(callback.bind(this, err));\n        return;\n      } else throw err;\n    }\n    offset = 4;\n  }\n\n  // Extract number of rounds\n  if (salt.charAt(offset + 2) > \"$\") {\n    err = Error(\"Missing salt rounds\");\n    if (callback) {\n      nextTick(callback.bind(this, err));\n      return;\n    } else throw err;\n  }\n  var r1 = parseInt(salt.substring(offset, offset + 1), 10) * 10,\n    r2 = parseInt(salt.substring(offset + 1, offset + 2), 10),\n    rounds = r1 + r2,\n    real_salt = salt.substring(offset + 3, offset + 25);\n  password += minor >= \"a\" ? \"\\x00\" : \"\";\n\n  var passwordb = utf8Array(password),\n    saltb = base64_decode(real_salt, BCRYPT_SALT_LEN);\n\n  /**\n   * Finishes hashing.\n   * @param {Array.<number>} bytes Byte array\n   * @returns {string}\n   * @inner\n   */\n  function finish(bytes) {\n    var res = [];\n    res.push(\"$2\");\n    if (minor >= \"a\") res.push(minor);\n    res.push(\"$\");\n    if (rounds < 10) res.push(\"0\");\n    res.push(rounds.toString());\n    res.push(\"$\");\n    res.push(base64_encode(saltb, saltb.length));\n    res.push(base64_encode(bytes, C_ORIG.length * 4 - 1));\n    return res.join(\"\");\n  }\n\n  // Sync\n  if (typeof callback == \"undefined\")\n    return finish(_crypt(passwordb, saltb, rounds));\n  // Async\n  else {\n    _crypt(\n      passwordb,\n      saltb,\n      rounds,\n      function (err, bytes) {\n        if (err) callback(err, null);\n        else callback(null, finish(bytes));\n      },\n      progressCallback,\n    );\n  }\n}\n\n/**\n * Encodes a byte array to base64 with up to len bytes of input, using the custom bcrypt alphabet.\n * @function\n * @param {!Array.<number>} bytes Byte array\n * @param {number} length Maximum input length\n * @returns {string}\n */\nexport function encodeBase64(bytes, length) {\n  return base64_encode(bytes, length);\n}\n\n/**\n * Decodes a base64 encoded string to up to len bytes of output, using the custom bcrypt alphabet.\n * @function\n * @param {string} string String to decode\n * @param {number} length Maximum output length\n * @returns {!Array.<number>}\n */\nexport function decodeBase64(string, length) {\n  return base64_decode(string, length);\n}\n\nexport default {\n  setRandomFallback,\n  genSaltSync,\n  genSalt,\n  hashSync,\n  hash,\n  compareSync,\n  compare,\n  getRounds,\n  getSalt,\n  truncates,\n  encodeBase64,\n  decodeBase64,\n};\n", "import * as yup from 'yup';\n\n// Validator for creating a user\nexport const createUserValidator = yup.object().shape({\n  userId: yup.string().required(),\n  username: yup.string().required(),\n  balance: yup.number().required(),\n});\n\n// Validator for updating a user\nexport const updateUserValidator = yup.object().shape({\n  username: yup.string().optional(),\n  balance: yup.number().optional(),\n});\n\n// Validator for userId param\nexport const userIdParamValidator = yup.object().shape({\n  userId: yup.string().required(),\n});\n", "/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { WebAuthnCredential } from '@simplewebauthn/server/script/types';\nimport { Context } from 'hono';\nimport { inject, injectable } from 'inversify';\nimport { controller, httpPost } from '../hono-inversify';\nimport { getAuthenticationOptions, getRegistrationOptions, verifyRegistration } from '../lib/webauthnService';\nimport { ILogService } from '../services/LogService';\nimport { IUserService } from '../services/UserService';\nimport { genKey } from '../utils/GenKey';\nimport { generateUserJwt } from '../utils/Jwt';\n\n@injectable()\n@controller('/webauthn')\nexport class WebAuthns {\n  constructor(\n    @inject('UserService') private userService: IUserService,\n    @inject('LogService') private logService: ILogService\n  ) {}\n\n  private sendError(c: Context, status: number, message: string) {\n    return c.json({ message }, status as any);\n  }\n\n  private async createLog(c: Context, action: string, tableName?: string, statusCode?: number, userId?: string, metadata?: object, body?: any) {\n    try {\n      let requestBody: any = body || { note: 'Body not provided for logging' };\n      \n      if (metadata) {\n        requestBody = { ...requestBody, metadata };\n      }\n      \n      const clientIP = c.req.header('cf-connecting-ip') || \n                      c.req.header('x-forwarded-for') || \n                      c.req.header('x-real-ip') || \n                      'unknown';\n      \n      await this.logService.createLog({\n        ip_address: clientIP,\n        table_name: tableName,\n        controller: `WebAuthnController.${action}`,\n        original_path: c.req.path,\n        http_method: c.req.method,\n        request_body: JSON.stringify(requestBody),\n        user_id: userId,\n        status_code: statusCode,\n      });\n    } catch (error) {\n      console.error('Error creating log:', error);\n    }\n  }\n\n  @httpPost('/register/options')\n  async getRegistrationOptions(c: Context) {\n    try {\n      const body = await c.req.json();\n      const { userId } = body;\n      \n      if (!userId) {\n        await this.createLog(c, 'getRegistrationOptions', 'users', 400, undefined, undefined, body);\n        return this.sendError(c, 400, 'User ID is required');\n      }\n      \n      const options = await getRegistrationOptions(userId);\n\n      const challengeBase64 = Buffer.from(options.challenge).toString('base64');\n      await this.userService.updateWebauthnChallenge(userId, challengeBase64);\n      options.challenge = challengeBase64;\n      options.user.id = Buffer.from(options.user.id).toString('base64');\n      \n      await this.createLog(c, 'getRegistrationOptions', 'users', 200, userId, undefined, body);\n      return c.json(options, 200);\n    } catch (e: unknown) {\n      console.error('Error generating registration options:', e);\n      await this.createLog(c, 'getRegistrationOptions', 'users', 500, undefined, { error: (e as Error).message });\n      return this.sendError(c, 500, 'Error generating registration options');\n    }\n  }\n\n  @httpPost('/register/verify')\n  async verifyRegistration(c: Context) {\n    try {\n      const body = await c.req.json();\n      const { credential, userId } = body;\n      \n      if (!credential) {\n        await this.createLog(c, 'verifyRegistration', 'users', 400, userId, undefined, body);\n        return this.sendError(c, 400, 'Credential is required');\n      }\n      \n      const user = await this.userService.getUser(userId);\n      const expectedChallenge = user?.webauthn_challenge;\n      if (!expectedChallenge) {\n        await this.createLog(c, 'verifyRegistration', 'users', 400, userId, undefined, body);\n        return this.sendError(c, 400, 'No challenge found');\n      }\n\n      function base64ToBase64url(str: string) {\n        return str.replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=+$/, '');\n      }\n      const expectedChallengeBase64url = base64ToBase64url(expectedChallenge);\n\n      const verification = await verifyRegistration({ credential }, expectedChallengeBase64url);\n      if (verification) {\n        await this.userService.updateWebauthnChallenge(credential.id, null);\n        await this.userService.addWebauthnCredential(userId, {\n          id: credential.id,\n          name: credential.name || 'Default Name',\n          created_at: new Date(),\n        });\n        await this.createLog(c, 'verifyRegistration', 'users', 200, userId, undefined, body);\n        return c.json({ message: 'Registration successful' }, 200);\n      } else {\n        await this.createLog(c, 'verifyRegistration', 'users', 400, userId, undefined, body);\n        return this.sendError(c, 400, 'Registration verification failed');\n      }\n    } catch (error: unknown) {\n      console.error('Error verifying registration:', error);\n      await this.createLog(c, 'verifyRegistration', 'users', 500, undefined, { error: (error as Error).message });\n      return this.sendError(c, 500, 'Error verifying registration');\n    }\n  }\n\n  @httpPost('/authenticate/options')\n  async getAuthenticationOptionsHandler(c: Context) {\n    try {\n      const body = await c.req.json();\n      const { userId } = body;\n      \n      let credentials: WebAuthnCredential[] = [];\n      \n      if (userId) {\n        const user = await this.userService.getUser(userId);\n        credentials = JSON.parse(user?.webauthn_credentials || '[]');\n      } else {\n        credentials = [];\n      }\n      \n      const options = await getAuthenticationOptions(credentials);\n      const challengeBase64 = Buffer.from(options.challenge).toString('base64');\n      \n      if (userId) {\n        await this.userService.updateWebauthnChallenge(userId, challengeBase64);\n      }\n      \n      options.challenge = challengeBase64;\n      await this.createLog(c, 'getAuthenticationOptionsHandler', 'users', 200, userId, undefined, body);\n      return c.json(options, 200);\n    } catch (error: unknown) {\n      console.error('Error generating authentication options:', error);\n      await this.createLog(c, 'getAuthenticationOptionsHandler', 'users', 500, undefined, { error: (error as Error).message });\n      return this.sendError(c, 500, 'Error generating authentication options');\n    }\n  }\n\n  @httpPost('/authenticate/verify')\n  async verifyAuthenticationHandler(c: Context) {\n    try {\n      const body = await c.req.json();\n      const { credential, userId } = body;\n      \n      if (!credential) {\n        await this.createLog(c, 'verifyAuthenticationHandler', 'users', 400, userId, undefined, body);\n        return this.sendError(c, 400, 'Credential is required');\n      }\n      \n      credential.id = credential.id.replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=+$/, '');\n\n      let user;\n      if (userId) {\n        user = await this.userService.getUser(userId);\n      } else if (credential.id) {\n        user = await this.userService.getUserByCredentialId(credential.id);\n      }\n      \n      if (!user) {\n        await this.createLog(c, 'verifyAuthenticationHandler', 'users', 404, userId, undefined, body);\n        return this.sendError(c, 404, 'User not found');\n      }\n\n      const apiKey = genKey(user.user_id);\n      const jwtToken = generateUserJwt(user, apiKey);\n\n      await this.createLog(c, 'verifyAuthenticationHandler', 'users', 200, user.user_id, undefined, body);\n      return c.json({ message: 'Authentication successful', token: jwtToken }, 200);\n    } catch (error: unknown) {\n      console.error('Error verifying authentication:', error);\n      await this.createLog(c, 'verifyAuthenticationHandler', 'users', 500, undefined, { error: (error as Error).message });\n      return this.sendError(c, 500, 'Error verifying authentication');\n    }\n  }\n}\n", " \n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { Crypto } from '@peculiar/webcrypto';\nimport { generateAuthenticationOptions, generateRegistrationOptions, verifyAuthenticationResponse, verifyRegistrationResponse } from '@simplewebauthn/server';\nif (!globalThis.crypto) {\n  globalThis.crypto = new Crypto();\n}\n\nexport function getRegistrationOptions(user: any) {\n  console.log('Generating registration options for user:', user);\n  return generateRegistrationOptions({\n    rpName: 'Croissant',\n    rpID: 'croissant-api.fr',\n    userID: user.id,\n    userName: user.username,\n    attestationType: 'none',\n    authenticatorSelection: { residentKey: 'preferred', userVerification: 'required' },\n  });\n}\n\nexport async function verifyRegistration(body: any, expectedChallenge: string) {\n  return verifyRegistrationResponse({\n    response: body.credential,\n    expectedChallenge,\n    expectedOrigin: 'https://croissant-api.fr',\n    expectedRPID: 'croissant-api.fr',\n  });\n}\n\nexport function getAuthenticationOptions(credentials: any[]) {\n  return generateAuthenticationOptions({\n    rpID: 'croissant-api.fr',\n    userVerification: 'preferred',\n    allowCredentials: credentials.map(c => ({\n      id: c.credentialID,\n      type: 'public-key',\n      transports: c.transports,\n    })),\n  });\n}\n\nexport async function verifyAuthentication(body: any, expectedChallenge: string, credentials: any[]) {\n  const authenticator = credentials.find(c => c.credentialID === body.credential.rawId);\n  if (!authenticator) {\n    throw new Error('Authenticator not found');\n  }\n  return verifyAuthenticationResponse({\n    response: body.credential,\n    expectedChallenge,\n    expectedOrigin: 'https://croissant-api.fr',\n    expectedRPID: 'croissant-api.fr',\n    credential: {\n      id: authenticator.credentialID,\n      publicKey: authenticator.credentialPublicKey,\n      counter: authenticator.counter,\n      transports: authenticator.transports,\n    },\n  });\n}\n", "/*!\n Copyright (c) Peculiar Ventures, LLC\n*/\n\nimport * as core from 'webcrypto-core';\nimport { BufferSourceConverter as BufferSourceConverter$1 } from 'webcrypto-core';\nexport { CryptoKey } from 'webcrypto-core';\nimport { Buffer as Buffer$1 } from 'buffer';\nimport crypto from 'crypto';\nimport * as process from 'process';\nimport { __decorate } from 'tslib';\nimport { JsonProp, JsonPropTypes, JsonSerializer, JsonParser } from '@peculiar/json-schema';\nimport { Convert, BufferSourceConverter } from 'pvtsutils';\nimport { AsnParser, AsnSerializer, AsnConvert } from '@peculiar/asn1-schema';\n\nconst JsonBase64UrlConverter = {\n    fromJSON: (value) => Buffer$1.from(Convert.FromBase64Url(value)),\n    toJSON: (value) => Convert.ToBase64Url(value),\n};\n\nclass CryptoKey extends core.CryptoKey {\n    constructor() {\n        super(...arguments);\n        this.data = Buffer$1.alloc(0);\n        this.algorithm = { name: \"\" };\n        this.extractable = false;\n        this.type = \"secret\";\n        this.usages = [];\n        this.kty = \"oct\";\n        this.alg = \"\";\n    }\n}\n__decorate([\n    JsonProp({ name: \"ext\", type: JsonPropTypes.Boolean, optional: true })\n], CryptoKey.prototype, \"extractable\", void 0);\n__decorate([\n    JsonProp({ name: \"key_ops\", type: JsonPropTypes.String, repeated: true, optional: true })\n], CryptoKey.prototype, \"usages\", void 0);\n__decorate([\n    JsonProp({ type: JsonPropTypes.String })\n], CryptoKey.prototype, \"kty\", void 0);\n__decorate([\n    JsonProp({ type: JsonPropTypes.String, optional: true })\n], CryptoKey.prototype, \"alg\", void 0);\n\nclass SymmetricKey extends CryptoKey {\n    constructor() {\n        super(...arguments);\n        this.kty = \"oct\";\n        this.type = \"secret\";\n    }\n}\n\nclass AsymmetricKey extends CryptoKey {\n}\n\nclass AesCryptoKey extends SymmetricKey {\n    get alg() {\n        switch (this.algorithm.name.toUpperCase()) {\n            case \"AES-CBC\":\n                return `A${this.algorithm.length}CBC`;\n            case \"AES-CTR\":\n                return `A${this.algorithm.length}CTR`;\n            case \"AES-GCM\":\n                return `A${this.algorithm.length}GCM`;\n            case \"AES-KW\":\n                return `A${this.algorithm.length}KW`;\n            case \"AES-CMAC\":\n                return `A${this.algorithm.length}CMAC`;\n            case \"AES-ECB\":\n                return `A${this.algorithm.length}ECB`;\n            default:\n                throw new core.AlgorithmError(\"Unsupported algorithm name\");\n        }\n    }\n    set alg(value) {\n    }\n}\n__decorate([\n    JsonProp({ name: \"k\", converter: JsonBase64UrlConverter })\n], AesCryptoKey.prototype, \"data\", void 0);\n\nclass AesCrypto {\n    static async generateKey(algorithm, extractable, keyUsages) {\n        const key = new AesCryptoKey();\n        key.algorithm = algorithm;\n        key.extractable = extractable;\n        key.usages = keyUsages;\n        key.data = crypto.randomBytes(algorithm.length >> 3);\n        return key;\n    }\n    static async exportKey(format, key) {\n        if (!(key instanceof AesCryptoKey)) {\n            throw new Error(\"key: Is not AesCryptoKey\");\n        }\n        switch (format.toLowerCase()) {\n            case \"jwk\":\n                return JsonSerializer.toJSON(key);\n            case \"raw\":\n                return new Uint8Array(key.data).buffer;\n            default:\n                throw new core.OperationError(\"format: Must be 'jwk' or 'raw'\");\n        }\n    }\n    static async importKey(format, keyData, algorithm, extractable, keyUsages) {\n        let key;\n        switch (format.toLowerCase()) {\n            case \"jwk\":\n                key = JsonParser.fromJSON(keyData, { targetSchema: AesCryptoKey });\n                break;\n            case \"raw\":\n                key = new AesCryptoKey();\n                key.data = Buffer$1.from(keyData);\n                break;\n            default:\n                throw new core.OperationError(\"format: Must be 'jwk' or 'raw'\");\n        }\n        key.algorithm = algorithm;\n        key.algorithm.length = key.data.length << 3;\n        key.extractable = extractable;\n        key.usages = keyUsages;\n        switch (key.algorithm.length) {\n            case 128:\n            case 192:\n            case 256:\n                break;\n            default:\n                throw new core.OperationError(\"keyData: Is wrong key length\");\n        }\n        return key;\n    }\n    static async encrypt(algorithm, key, data) {\n        switch (algorithm.name.toUpperCase()) {\n            case \"AES-CBC\":\n                return this.encryptAesCBC(algorithm, key, Buffer$1.from(data));\n            case \"AES-CTR\":\n                return this.encryptAesCTR(algorithm, key, Buffer$1.from(data));\n            case \"AES-GCM\":\n                return this.encryptAesGCM(algorithm, key, Buffer$1.from(data));\n            case \"AES-KW\":\n                return this.encryptAesKW(algorithm, key, Buffer$1.from(data));\n            case \"AES-ECB\":\n                return this.encryptAesECB(algorithm, key, Buffer$1.from(data));\n            default:\n                throw new core.OperationError(\"algorithm: Is not recognized\");\n        }\n    }\n    static async decrypt(algorithm, key, data) {\n        if (!(key instanceof AesCryptoKey)) {\n            throw new Error(\"key: Is not AesCryptoKey\");\n        }\n        switch (algorithm.name.toUpperCase()) {\n            case \"AES-CBC\":\n                return this.decryptAesCBC(algorithm, key, Buffer$1.from(data));\n            case \"AES-CTR\":\n                return this.decryptAesCTR(algorithm, key, Buffer$1.from(data));\n            case \"AES-GCM\":\n                return this.decryptAesGCM(algorithm, key, Buffer$1.from(data));\n            case \"AES-KW\":\n                return this.decryptAesKW(algorithm, key, Buffer$1.from(data));\n            case \"AES-ECB\":\n                return this.decryptAesECB(algorithm, key, Buffer$1.from(data));\n            default:\n                throw new core.OperationError(\"algorithm: Is not recognized\");\n        }\n    }\n    static async encryptAesCBC(algorithm, key, data) {\n        const cipher = crypto.createCipheriv(`aes-${key.algorithm.length}-cbc`, key.data, new Uint8Array(algorithm.iv));\n        let enc = cipher.update(data);\n        enc = Buffer$1.concat([enc, cipher.final()]);\n        const res = new Uint8Array(enc).buffer;\n        return res;\n    }\n    static async decryptAesCBC(algorithm, key, data) {\n        const decipher = crypto.createDecipheriv(`aes-${key.algorithm.length}-cbc`, key.data, new Uint8Array(algorithm.iv));\n        let dec = decipher.update(data);\n        dec = Buffer$1.concat([dec, decipher.final()]);\n        return new Uint8Array(dec).buffer;\n    }\n    static async encryptAesCTR(algorithm, key, data) {\n        const cipher = crypto.createCipheriv(`aes-${key.algorithm.length}-ctr`, key.data, Buffer$1.from(algorithm.counter));\n        let enc = cipher.update(data);\n        enc = Buffer$1.concat([enc, cipher.final()]);\n        const res = new Uint8Array(enc).buffer;\n        return res;\n    }\n    static async decryptAesCTR(algorithm, key, data) {\n        const decipher = crypto.createDecipheriv(`aes-${key.algorithm.length}-ctr`, key.data, new Uint8Array(algorithm.counter));\n        let dec = decipher.update(data);\n        dec = Buffer$1.concat([dec, decipher.final()]);\n        return new Uint8Array(dec).buffer;\n    }\n    static async encryptAesGCM(algorithm, key, data) {\n        const cipher = crypto.createCipheriv(`aes-${key.algorithm.length}-gcm`, key.data, Buffer$1.from(algorithm.iv), {\n            authTagLength: (algorithm.tagLength || 128) >> 3,\n        });\n        if (algorithm.additionalData) {\n            cipher.setAAD(Buffer$1.from(algorithm.additionalData));\n        }\n        let enc = cipher.update(data);\n        enc = Buffer$1.concat([enc, cipher.final(), cipher.getAuthTag()]);\n        const res = new Uint8Array(enc).buffer;\n        return res;\n    }\n    static async decryptAesGCM(algorithm, key, data) {\n        const tagLength = (algorithm.tagLength || 128) >> 3;\n        const decipher = crypto.createDecipheriv(`aes-${key.algorithm.length}-gcm`, key.data, new Uint8Array(algorithm.iv), {\n            authTagLength: tagLength,\n        });\n        const enc = data.slice(0, data.length - tagLength);\n        const tag = data.slice(data.length - tagLength);\n        if (algorithm.additionalData) {\n            decipher.setAAD(Buffer$1.from(algorithm.additionalData));\n        }\n        decipher.setAuthTag(tag);\n        let dec = decipher.update(enc);\n        dec = Buffer$1.concat([dec, decipher.final()]);\n        return new Uint8Array(dec).buffer;\n    }\n    static async encryptAesKW(algorithm, key, data) {\n        const cipher = crypto.createCipheriv(`id-aes${key.algorithm.length}-wrap`, key.data, this.AES_KW_IV);\n        let enc = cipher.update(data);\n        enc = Buffer$1.concat([enc, cipher.final()]);\n        return new Uint8Array(enc).buffer;\n    }\n    static async decryptAesKW(algorithm, key, data) {\n        const decipher = crypto.createDecipheriv(`id-aes${key.algorithm.length}-wrap`, key.data, this.AES_KW_IV);\n        let dec = decipher.update(data);\n        dec = Buffer$1.concat([dec, decipher.final()]);\n        return new Uint8Array(dec).buffer;\n    }\n    static async encryptAesECB(algorithm, key, data) {\n        const cipher = crypto.createCipheriv(`aes-${key.algorithm.length}-ecb`, key.data, new Uint8Array(0));\n        let enc = cipher.update(data);\n        enc = Buffer$1.concat([enc, cipher.final()]);\n        const res = new Uint8Array(enc).buffer;\n        return res;\n    }\n    static async decryptAesECB(algorithm, key, data) {\n        const decipher = crypto.createDecipheriv(`aes-${key.algorithm.length}-ecb`, key.data, new Uint8Array(0));\n        let dec = decipher.update(data);\n        dec = Buffer$1.concat([dec, decipher.final()]);\n        return new Uint8Array(dec).buffer;\n    }\n}\nAesCrypto.AES_KW_IV = Buffer$1.from(\"A6A6A6A6A6A6A6A6\", \"hex\");\n\nconst keyStorage = new WeakMap();\nfunction getCryptoKey(key) {\n    const res = keyStorage.get(key);\n    if (!res) {\n        throw new core.OperationError(\"Cannot get CryptoKey from secure storage\");\n    }\n    return res;\n}\nfunction setCryptoKey(value) {\n    const key = core.CryptoKey.create(value.algorithm, value.type, value.extractable, value.usages);\n    Object.freeze(key);\n    keyStorage.set(key, value);\n    return key;\n}\n\nclass AesCbcProvider extends core.AesCbcProvider {\n    async onGenerateKey(algorithm, extractable, keyUsages) {\n        const key = await AesCrypto.generateKey({\n            name: this.name,\n            length: algorithm.length,\n        }, extractable, keyUsages);\n        return setCryptoKey(key);\n    }\n    async onEncrypt(algorithm, key, data) {\n        return AesCrypto.encrypt(algorithm, getCryptoKey(key), new Uint8Array(data));\n    }\n    async onDecrypt(algorithm, key, data) {\n        return AesCrypto.decrypt(algorithm, getCryptoKey(key), new Uint8Array(data));\n    }\n    async onExportKey(format, key) {\n        return AesCrypto.exportKey(format, getCryptoKey(key));\n    }\n    async onImportKey(format, keyData, algorithm, extractable, keyUsages) {\n        const key = await AesCrypto.importKey(format, keyData, { name: algorithm.name }, extractable, keyUsages);\n        return setCryptoKey(key);\n    }\n    checkCryptoKey(key, keyUsage) {\n        super.checkCryptoKey(key, keyUsage);\n        if (!(getCryptoKey(key) instanceof AesCryptoKey)) {\n            throw new TypeError(\"key: Is not a AesCryptoKey\");\n        }\n    }\n}\n\nconst zero = Buffer$1.from([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);\nconst rb = Buffer$1.from([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 135]);\nconst blockSize = 16;\nfunction bitShiftLeft(buffer) {\n    const shifted = Buffer$1.alloc(buffer.length);\n    const last = buffer.length - 1;\n    for (let index = 0; index < last; index++) {\n        shifted[index] = buffer[index] << 1;\n        if (buffer[index + 1] & 0x80) {\n            shifted[index] += 0x01;\n        }\n    }\n    shifted[last] = buffer[last] << 1;\n    return shifted;\n}\nfunction xor(a, b) {\n    const length = Math.min(a.length, b.length);\n    const output = Buffer$1.alloc(length);\n    for (let index = 0; index < length; index++) {\n        output[index] = a[index] ^ b[index];\n    }\n    return output;\n}\nfunction aes(key, message) {\n    const cipher = crypto.createCipheriv(`aes${key.length << 3}`, key, zero);\n    const result = cipher.update(message);\n    cipher.final();\n    return result;\n}\nfunction getMessageBlock(message, blockIndex) {\n    const block = Buffer$1.alloc(blockSize);\n    const start = blockIndex * blockSize;\n    const end = start + blockSize;\n    message.copy(block, 0, start, end);\n    return block;\n}\nfunction getPaddedMessageBlock(message, blockIndex) {\n    const block = Buffer$1.alloc(blockSize);\n    const start = blockIndex * blockSize;\n    const end = message.length;\n    block.fill(0);\n    message.copy(block, 0, start, end);\n    block[end - start] = 0x80;\n    return block;\n}\nfunction generateSubkeys(key) {\n    const l = aes(key, zero);\n    let subkey1 = bitShiftLeft(l);\n    if (l[0] & 0x80) {\n        subkey1 = xor(subkey1, rb);\n    }\n    let subkey2 = bitShiftLeft(subkey1);\n    if (subkey1[0] & 0x80) {\n        subkey2 = xor(subkey2, rb);\n    }\n    return { subkey1, subkey2 };\n}\nfunction aesCmac(key, message) {\n    const subkeys = generateSubkeys(key);\n    let blockCount = Math.ceil(message.length / blockSize);\n    let lastBlockCompleteFlag;\n    let lastBlock;\n    if (blockCount === 0) {\n        blockCount = 1;\n        lastBlockCompleteFlag = false;\n    }\n    else {\n        lastBlockCompleteFlag = (message.length % blockSize === 0);\n    }\n    const lastBlockIndex = blockCount - 1;\n    if (lastBlockCompleteFlag) {\n        lastBlock = xor(getMessageBlock(message, lastBlockIndex), subkeys.subkey1);\n    }\n    else {\n        lastBlock = xor(getPaddedMessageBlock(message, lastBlockIndex), subkeys.subkey2);\n    }\n    let x = zero;\n    let y;\n    for (let index = 0; index < lastBlockIndex; index++) {\n        y = xor(x, getMessageBlock(message, index));\n        x = aes(key, y);\n    }\n    y = xor(lastBlock, x);\n    return aes(key, y);\n}\nclass AesCmacProvider extends core.AesCmacProvider {\n    async onGenerateKey(algorithm, extractable, keyUsages) {\n        const key = await AesCrypto.generateKey({\n            name: this.name,\n            length: algorithm.length,\n        }, extractable, keyUsages);\n        return setCryptoKey(key);\n    }\n    async onSign(algorithm, key, data) {\n        const result = aesCmac(getCryptoKey(key).data, Buffer$1.from(data));\n        return new Uint8Array(result).buffer;\n    }\n    async onVerify(algorithm, key, signature, data) {\n        const signature2 = await this.sign(algorithm, key, data);\n        return Buffer$1.from(signature).compare(Buffer$1.from(signature2)) === 0;\n    }\n    async onExportKey(format, key) {\n        return AesCrypto.exportKey(format, getCryptoKey(key));\n    }\n    async onImportKey(format, keyData, algorithm, extractable, keyUsages) {\n        const res = await AesCrypto.importKey(format, keyData, { name: algorithm.name }, extractable, keyUsages);\n        return setCryptoKey(res);\n    }\n    checkCryptoKey(key, keyUsage) {\n        super.checkCryptoKey(key, keyUsage);\n        if (!(getCryptoKey(key) instanceof AesCryptoKey)) {\n            throw new TypeError(\"key: Is not a AesCryptoKey\");\n        }\n    }\n}\n\nclass AesCtrProvider extends core.AesCtrProvider {\n    async onGenerateKey(algorithm, extractable, keyUsages) {\n        const key = await AesCrypto.generateKey({\n            name: this.name,\n            length: algorithm.length,\n        }, extractable, keyUsages);\n        return setCryptoKey(key);\n    }\n    async onEncrypt(algorithm, key, data) {\n        return AesCrypto.encrypt(algorithm, getCryptoKey(key), new Uint8Array(data));\n    }\n    async onDecrypt(algorithm, key, data) {\n        return AesCrypto.decrypt(algorithm, getCryptoKey(key), new Uint8Array(data));\n    }\n    async onExportKey(format, key) {\n        return AesCrypto.exportKey(format, getCryptoKey(key));\n    }\n    async onImportKey(format, keyData, algorithm, extractable, keyUsages) {\n        const res = await AesCrypto.importKey(format, keyData, { name: algorithm.name }, extractable, keyUsages);\n        return setCryptoKey(res);\n    }\n    checkCryptoKey(key, keyUsage) {\n        super.checkCryptoKey(key, keyUsage);\n        if (!(getCryptoKey(key) instanceof AesCryptoKey)) {\n            throw new TypeError(\"key: Is not a AesCryptoKey\");\n        }\n    }\n}\n\nclass AesGcmProvider extends core.AesGcmProvider {\n    async onGenerateKey(algorithm, extractable, keyUsages) {\n        const key = await AesCrypto.generateKey({\n            name: this.name,\n            length: algorithm.length,\n        }, extractable, keyUsages);\n        return setCryptoKey(key);\n    }\n    async onEncrypt(algorithm, key, data) {\n        return AesCrypto.encrypt(algorithm, getCryptoKey(key), new Uint8Array(data));\n    }\n    async onDecrypt(algorithm, key, data) {\n        return AesCrypto.decrypt(algorithm, getCryptoKey(key), new Uint8Array(data));\n    }\n    async onExportKey(format, key) {\n        return AesCrypto.exportKey(format, getCryptoKey(key));\n    }\n    async onImportKey(format, keyData, algorithm, extractable, keyUsages) {\n        const res = await AesCrypto.importKey(format, keyData, { name: algorithm.name }, extractable, keyUsages);\n        return setCryptoKey(res);\n    }\n    checkCryptoKey(key, keyUsage) {\n        super.checkCryptoKey(key, keyUsage);\n        if (!(getCryptoKey(key) instanceof AesCryptoKey)) {\n            throw new TypeError(\"key: Is not a AesCryptoKey\");\n        }\n    }\n}\n\nclass AesKwProvider extends core.AesKwProvider {\n    async onGenerateKey(algorithm, extractable, keyUsages) {\n        const res = await AesCrypto.generateKey({\n            name: this.name,\n            length: algorithm.length,\n        }, extractable, keyUsages);\n        return setCryptoKey(res);\n    }\n    async onExportKey(format, key) {\n        return AesCrypto.exportKey(format, getCryptoKey(key));\n    }\n    async onImportKey(format, keyData, algorithm, extractable, keyUsages) {\n        const res = await AesCrypto.importKey(format, keyData, { name: algorithm.name }, extractable, keyUsages);\n        return setCryptoKey(res);\n    }\n    async onEncrypt(algorithm, key, data) {\n        return AesCrypto.encrypt(algorithm, getCryptoKey(key), new Uint8Array(data));\n    }\n    async onDecrypt(algorithm, key, data) {\n        return AesCrypto.decrypt(algorithm, getCryptoKey(key), new Uint8Array(data));\n    }\n    checkCryptoKey(key, keyUsage) {\n        super.checkCryptoKey(key, keyUsage);\n        if (!(getCryptoKey(key) instanceof AesCryptoKey)) {\n            throw new TypeError(\"key: Is not a AesCryptoKey\");\n        }\n    }\n}\n\nclass AesEcbProvider extends core.AesEcbProvider {\n    async onGenerateKey(algorithm, extractable, keyUsages) {\n        const key = await AesCrypto.generateKey({\n            name: this.name,\n            length: algorithm.length,\n        }, extractable, keyUsages);\n        return setCryptoKey(key);\n    }\n    async onEncrypt(algorithm, key, data) {\n        return AesCrypto.encrypt(algorithm, getCryptoKey(key), new Uint8Array(data));\n    }\n    async onDecrypt(algorithm, key, data) {\n        return AesCrypto.decrypt(algorithm, getCryptoKey(key), new Uint8Array(data));\n    }\n    async onExportKey(format, key) {\n        return AesCrypto.exportKey(format, getCryptoKey(key));\n    }\n    async onImportKey(format, keyData, algorithm, extractable, keyUsages) {\n        const res = await AesCrypto.importKey(format, keyData, { name: algorithm.name }, extractable, keyUsages);\n        return setCryptoKey(res);\n    }\n    checkCryptoKey(key, keyUsage) {\n        super.checkCryptoKey(key, keyUsage);\n        if (!(getCryptoKey(key) instanceof AesCryptoKey)) {\n            throw new TypeError(\"key: Is not a AesCryptoKey\");\n        }\n    }\n}\n\nclass DesCryptoKey extends SymmetricKey {\n    get alg() {\n        switch (this.algorithm.name.toUpperCase()) {\n            case \"DES-CBC\":\n                return `DES-CBC`;\n            case \"DES-EDE3-CBC\":\n                return `3DES-CBC`;\n            default:\n                throw new core.AlgorithmError(\"Unsupported algorithm name\");\n        }\n    }\n    set alg(value) {\n    }\n}\n__decorate([\n    JsonProp({ name: \"k\", converter: JsonBase64UrlConverter })\n], DesCryptoKey.prototype, \"data\", void 0);\n\nclass DesCrypto {\n    static async generateKey(algorithm, extractable, keyUsages) {\n        const key = new DesCryptoKey();\n        key.algorithm = algorithm;\n        key.extractable = extractable;\n        key.usages = keyUsages;\n        key.data = crypto.randomBytes(algorithm.length >> 3);\n        return key;\n    }\n    static async exportKey(format, key) {\n        switch (format.toLowerCase()) {\n            case \"jwk\":\n                return JsonSerializer.toJSON(key);\n            case \"raw\":\n                return new Uint8Array(key.data).buffer;\n            default:\n                throw new core.OperationError(\"format: Must be 'jwk' or 'raw'\");\n        }\n    }\n    static async importKey(format, keyData, algorithm, extractable, keyUsages) {\n        let key;\n        switch (format.toLowerCase()) {\n            case \"jwk\":\n                key = JsonParser.fromJSON(keyData, { targetSchema: DesCryptoKey });\n                break;\n            case \"raw\":\n                key = new DesCryptoKey();\n                key.data = Buffer$1.from(keyData);\n                break;\n            default:\n                throw new core.OperationError(\"format: Must be 'jwk' or 'raw'\");\n        }\n        key.algorithm = algorithm;\n        key.extractable = extractable;\n        key.usages = keyUsages;\n        return key;\n    }\n    static async encrypt(algorithm, key, data) {\n        switch (algorithm.name.toUpperCase()) {\n            case \"DES-CBC\":\n                return this.encryptDesCBC(algorithm, key, Buffer$1.from(data));\n            case \"DES-EDE3-CBC\":\n                return this.encryptDesEDE3CBC(algorithm, key, Buffer$1.from(data));\n            default:\n                throw new core.OperationError(\"algorithm: Is not recognized\");\n        }\n    }\n    static async decrypt(algorithm, key, data) {\n        if (!(key instanceof DesCryptoKey)) {\n            throw new Error(\"key: Is not DesCryptoKey\");\n        }\n        switch (algorithm.name.toUpperCase()) {\n            case \"DES-CBC\":\n                return this.decryptDesCBC(algorithm, key, Buffer$1.from(data));\n            case \"DES-EDE3-CBC\":\n                return this.decryptDesEDE3CBC(algorithm, key, Buffer$1.from(data));\n            default:\n                throw new core.OperationError(\"algorithm: Is not recognized\");\n        }\n    }\n    static async encryptDesCBC(algorithm, key, data) {\n        const cipher = crypto.createCipheriv(`des-cbc`, key.data, new Uint8Array(algorithm.iv));\n        let enc = cipher.update(data);\n        enc = Buffer$1.concat([enc, cipher.final()]);\n        const res = new Uint8Array(enc).buffer;\n        return res;\n    }\n    static async decryptDesCBC(algorithm, key, data) {\n        const decipher = crypto.createDecipheriv(`des-cbc`, key.data, new Uint8Array(algorithm.iv));\n        let dec = decipher.update(data);\n        dec = Buffer$1.concat([dec, decipher.final()]);\n        return new Uint8Array(dec).buffer;\n    }\n    static async encryptDesEDE3CBC(algorithm, key, data) {\n        const cipher = crypto.createCipheriv(`des-ede3-cbc`, key.data, Buffer$1.from(algorithm.iv));\n        let enc = cipher.update(data);\n        enc = Buffer$1.concat([enc, cipher.final()]);\n        const res = new Uint8Array(enc).buffer;\n        return res;\n    }\n    static async decryptDesEDE3CBC(algorithm, key, data) {\n        const decipher = crypto.createDecipheriv(`des-ede3-cbc`, key.data, new Uint8Array(algorithm.iv));\n        let dec = decipher.update(data);\n        dec = Buffer$1.concat([dec, decipher.final()]);\n        return new Uint8Array(dec).buffer;\n    }\n}\n\nclass DesCbcProvider extends core.DesProvider {\n    constructor() {\n        super(...arguments);\n        this.keySizeBits = 64;\n        this.ivSize = 8;\n        this.name = \"DES-CBC\";\n    }\n    async onGenerateKey(algorithm, extractable, keyUsages) {\n        const key = await DesCrypto.generateKey({\n            name: this.name,\n            length: this.keySizeBits,\n        }, extractable, keyUsages);\n        return setCryptoKey(key);\n    }\n    async onEncrypt(algorithm, key, data) {\n        return DesCrypto.encrypt(algorithm, getCryptoKey(key), new Uint8Array(data));\n    }\n    async onDecrypt(algorithm, key, data) {\n        return DesCrypto.decrypt(algorithm, getCryptoKey(key), new Uint8Array(data));\n    }\n    async onExportKey(format, key) {\n        return DesCrypto.exportKey(format, getCryptoKey(key));\n    }\n    async onImportKey(format, keyData, algorithm, extractable, keyUsages) {\n        const key = await DesCrypto.importKey(format, keyData, { name: this.name, length: this.keySizeBits }, extractable, keyUsages);\n        if (key.data.length !== (this.keySizeBits >> 3)) {\n            throw new core.OperationError(\"keyData: Wrong key size\");\n        }\n        return setCryptoKey(key);\n    }\n    checkCryptoKey(key, keyUsage) {\n        super.checkCryptoKey(key, keyUsage);\n        if (!(getCryptoKey(key) instanceof DesCryptoKey)) {\n            throw new TypeError(\"key: Is not a DesCryptoKey\");\n        }\n    }\n}\n\nclass DesEde3CbcProvider extends core.DesProvider {\n    constructor() {\n        super(...arguments);\n        this.keySizeBits = 192;\n        this.ivSize = 8;\n        this.name = \"DES-EDE3-CBC\";\n    }\n    async onGenerateKey(algorithm, extractable, keyUsages) {\n        const key = await DesCrypto.generateKey({\n            name: this.name,\n            length: this.keySizeBits,\n        }, extractable, keyUsages);\n        return setCryptoKey(key);\n    }\n    async onEncrypt(algorithm, key, data) {\n        return DesCrypto.encrypt(algorithm, getCryptoKey(key), new Uint8Array(data));\n    }\n    async onDecrypt(algorithm, key, data) {\n        return DesCrypto.decrypt(algorithm, getCryptoKey(key), new Uint8Array(data));\n    }\n    async onExportKey(format, key) {\n        return DesCrypto.exportKey(format, getCryptoKey(key));\n    }\n    async onImportKey(format, keyData, algorithm, extractable, keyUsages) {\n        const key = await DesCrypto.importKey(format, keyData, { name: this.name, length: this.keySizeBits }, extractable, keyUsages);\n        if (key.data.length !== (this.keySizeBits >> 3)) {\n            throw new core.OperationError(\"keyData: Wrong key size\");\n        }\n        return setCryptoKey(key);\n    }\n    checkCryptoKey(key, keyUsage) {\n        super.checkCryptoKey(key, keyUsage);\n        if (!(getCryptoKey(key) instanceof DesCryptoKey)) {\n            throw new TypeError(\"key: Is not a DesCryptoKey\");\n        }\n    }\n}\n\nfunction getJwkAlgorithm(algorithm) {\n    switch (algorithm.name.toUpperCase()) {\n        case \"RSA-OAEP\": {\n            const mdSize = /(\\d+)$/.exec(algorithm.hash.name)[1];\n            return `RSA-OAEP${mdSize !== \"1\" ? `-${mdSize}` : \"\"}`;\n        }\n        case \"RSASSA-PKCS1-V1_5\":\n            return `RS${/(\\d+)$/.exec(algorithm.hash.name)[1]}`;\n        case \"RSA-PSS\":\n            return `PS${/(\\d+)$/.exec(algorithm.hash.name)[1]}`;\n        case \"RSA-PKCS1\":\n            return `RS1`;\n        default:\n            throw new core.OperationError(\"algorithm: Is not recognized\");\n    }\n}\n\nclass RsaPrivateKey extends AsymmetricKey {\n    constructor() {\n        super(...arguments);\n        this.type = \"private\";\n    }\n    getKey() {\n        const keyInfo = AsnParser.parse(this.data, core.asn1.PrivateKeyInfo);\n        return AsnParser.parse(keyInfo.privateKey, core.asn1.RsaPrivateKey);\n    }\n    toJSON() {\n        const key = this.getKey();\n        const json = {\n            kty: \"RSA\",\n            alg: getJwkAlgorithm(this.algorithm),\n            key_ops: this.usages,\n            ext: this.extractable,\n        };\n        return Object.assign(json, JsonSerializer.toJSON(key));\n    }\n    fromJSON(json) {\n        const key = JsonParser.fromJSON(json, { targetSchema: core.asn1.RsaPrivateKey });\n        const keyInfo = new core.asn1.PrivateKeyInfo();\n        keyInfo.privateKeyAlgorithm.algorithm = \"1.2.840.113549.1.1.1\";\n        keyInfo.privateKeyAlgorithm.parameters = null;\n        keyInfo.privateKey = AsnSerializer.serialize(key);\n        this.data = Buffer$1.from(AsnSerializer.serialize(keyInfo));\n    }\n}\n\nclass RsaPublicKey extends AsymmetricKey {\n    constructor() {\n        super(...arguments);\n        this.type = \"public\";\n    }\n    getKey() {\n        const keyInfo = AsnParser.parse(this.data, core.asn1.PublicKeyInfo);\n        return AsnParser.parse(keyInfo.publicKey, core.asn1.RsaPublicKey);\n    }\n    toJSON() {\n        const key = this.getKey();\n        const json = {\n            kty: \"RSA\",\n            alg: getJwkAlgorithm(this.algorithm),\n            key_ops: this.usages,\n            ext: this.extractable,\n        };\n        return Object.assign(json, JsonSerializer.toJSON(key));\n    }\n    fromJSON(json) {\n        const key = JsonParser.fromJSON(json, { targetSchema: core.asn1.RsaPublicKey });\n        const keyInfo = new core.asn1.PublicKeyInfo();\n        keyInfo.publicKeyAlgorithm.algorithm = \"1.2.840.113549.1.1.1\";\n        keyInfo.publicKeyAlgorithm.parameters = null;\n        keyInfo.publicKey = AsnSerializer.serialize(key);\n        this.data = Buffer$1.from(AsnSerializer.serialize(keyInfo));\n    }\n}\n\nclass RsaCrypto {\n    static async generateKey(algorithm, extractable, keyUsages) {\n        const privateKey = new RsaPrivateKey();\n        privateKey.algorithm = algorithm;\n        privateKey.extractable = extractable;\n        privateKey.usages = keyUsages.filter((usage) => this.privateKeyUsages.indexOf(usage) !== -1);\n        const publicKey = new RsaPublicKey();\n        publicKey.algorithm = algorithm;\n        publicKey.extractable = true;\n        publicKey.usages = keyUsages.filter((usage) => this.publicKeyUsages.indexOf(usage) !== -1);\n        const publicExponent = Buffer$1.concat([\n            Buffer$1.alloc(4 - algorithm.publicExponent.byteLength, 0),\n            Buffer$1.from(algorithm.publicExponent),\n        ]).readInt32BE(0);\n        const keys = crypto.generateKeyPairSync(\"rsa\", {\n            modulusLength: algorithm.modulusLength,\n            publicExponent,\n            publicKeyEncoding: {\n                format: \"der\",\n                type: \"spki\",\n            },\n            privateKeyEncoding: {\n                format: \"der\",\n                type: \"pkcs8\",\n            },\n        });\n        privateKey.data = keys.privateKey;\n        publicKey.data = keys.publicKey;\n        const res = {\n            privateKey,\n            publicKey,\n        };\n        return res;\n    }\n    static async exportKey(format, key) {\n        switch (format.toLowerCase()) {\n            case \"jwk\":\n                return JsonSerializer.toJSON(key);\n            case \"pkcs8\":\n            case \"spki\":\n                return new Uint8Array(key.data).buffer;\n            default:\n                throw new core.OperationError(\"format: Must be 'jwk', 'pkcs8' or 'spki'\");\n        }\n    }\n    static async importKey(format, keyData, algorithm, extractable, keyUsages) {\n        switch (format.toLowerCase()) {\n            case \"jwk\": {\n                const jwk = keyData;\n                if (jwk.d) {\n                    const asnKey = JsonParser.fromJSON(keyData, { targetSchema: core.asn1.RsaPrivateKey });\n                    return this.importPrivateKey(asnKey, algorithm, extractable, keyUsages);\n                }\n                else {\n                    const asnKey = JsonParser.fromJSON(keyData, { targetSchema: core.asn1.RsaPublicKey });\n                    return this.importPublicKey(asnKey, algorithm, extractable, keyUsages);\n                }\n            }\n            case \"spki\": {\n                const keyInfo = AsnParser.parse(new Uint8Array(keyData), core.asn1.PublicKeyInfo);\n                const asnKey = AsnParser.parse(keyInfo.publicKey, core.asn1.RsaPublicKey);\n                return this.importPublicKey(asnKey, algorithm, extractable, keyUsages);\n            }\n            case \"pkcs8\": {\n                const keyInfo = AsnParser.parse(new Uint8Array(keyData), core.asn1.PrivateKeyInfo);\n                const asnKey = AsnParser.parse(keyInfo.privateKey, core.asn1.RsaPrivateKey);\n                return this.importPrivateKey(asnKey, algorithm, extractable, keyUsages);\n            }\n            default:\n                throw new core.OperationError(\"format: Must be 'jwk', 'pkcs8' or 'spki'\");\n        }\n    }\n    static async sign(algorithm, key, data) {\n        switch (algorithm.name.toUpperCase()) {\n            case \"RSA-PSS\":\n            case \"RSASSA-PKCS1-V1_5\":\n                return this.signRsa(algorithm, key, data);\n            default:\n                throw new core.OperationError(\"algorithm: Is not recognized\");\n        }\n    }\n    static async verify(algorithm, key, signature, data) {\n        switch (algorithm.name.toUpperCase()) {\n            case \"RSA-PSS\":\n            case \"RSASSA-PKCS1-V1_5\":\n                return this.verifySSA(algorithm, key, data, signature);\n            default:\n                throw new core.OperationError(\"algorithm: Is not recognized\");\n        }\n    }\n    static async encrypt(algorithm, key, data) {\n        switch (algorithm.name.toUpperCase()) {\n            case \"RSA-OAEP\":\n                return this.encryptOAEP(algorithm, key, data);\n            default:\n                throw new core.OperationError(\"algorithm: Is not recognized\");\n        }\n    }\n    static async decrypt(algorithm, key, data) {\n        switch (algorithm.name.toUpperCase()) {\n            case \"RSA-OAEP\":\n                return this.decryptOAEP(algorithm, key, data);\n            default:\n                throw new core.OperationError(\"algorithm: Is not recognized\");\n        }\n    }\n    static importPrivateKey(asnKey, algorithm, extractable, keyUsages) {\n        const keyInfo = new core.asn1.PrivateKeyInfo();\n        keyInfo.privateKeyAlgorithm.algorithm = \"1.2.840.113549.1.1.1\";\n        keyInfo.privateKeyAlgorithm.parameters = null;\n        keyInfo.privateKey = AsnSerializer.serialize(asnKey);\n        const key = new RsaPrivateKey();\n        key.data = Buffer$1.from(AsnSerializer.serialize(keyInfo));\n        key.algorithm = Object.assign({}, algorithm);\n        key.algorithm.publicExponent = new Uint8Array(asnKey.publicExponent);\n        key.algorithm.modulusLength = asnKey.modulus.byteLength << 3;\n        key.extractable = extractable;\n        key.usages = keyUsages;\n        return key;\n    }\n    static importPublicKey(asnKey, algorithm, extractable, keyUsages) {\n        const keyInfo = new core.asn1.PublicKeyInfo();\n        keyInfo.publicKeyAlgorithm.algorithm = \"1.2.840.113549.1.1.1\";\n        keyInfo.publicKeyAlgorithm.parameters = null;\n        keyInfo.publicKey = AsnSerializer.serialize(asnKey);\n        const key = new RsaPublicKey();\n        key.data = Buffer$1.from(AsnSerializer.serialize(keyInfo));\n        key.algorithm = Object.assign({}, algorithm);\n        key.algorithm.publicExponent = new Uint8Array(asnKey.publicExponent);\n        key.algorithm.modulusLength = asnKey.modulus.byteLength << 3;\n        key.extractable = extractable;\n        key.usages = keyUsages;\n        return key;\n    }\n    static getCryptoAlgorithm(alg) {\n        switch (alg.hash.name.toUpperCase()) {\n            case \"SHA-1\":\n                return \"RSA-SHA1\";\n            case \"SHA-256\":\n                return \"RSA-SHA256\";\n            case \"SHA-384\":\n                return \"RSA-SHA384\";\n            case \"SHA-512\":\n                return \"RSA-SHA512\";\n            case \"SHA3-256\":\n                return \"RSA-SHA3-256\";\n            case \"SHA3-384\":\n                return \"RSA-SHA3-384\";\n            case \"SHA3-512\":\n                return \"RSA-SHA3-512\";\n            default:\n                throw new core.OperationError(\"algorithm.hash: Is not recognized\");\n        }\n    }\n    static signRsa(algorithm, key, data) {\n        const cryptoAlg = this.getCryptoAlgorithm(key.algorithm);\n        const signer = crypto.createSign(cryptoAlg);\n        signer.update(Buffer$1.from(data));\n        if (!key.pem) {\n            key.pem = `-----BEGIN PRIVATE KEY-----\\n${key.data.toString(\"base64\")}\\n-----END PRIVATE KEY-----`;\n        }\n        const options = {\n            key: key.pem,\n        };\n        if (algorithm.name.toUpperCase() === \"RSA-PSS\") {\n            options.padding = crypto.constants.RSA_PKCS1_PSS_PADDING;\n            options.saltLength = algorithm.saltLength;\n        }\n        const signature = signer.sign(options);\n        return new Uint8Array(signature).buffer;\n    }\n    static verifySSA(algorithm, key, data, signature) {\n        const cryptoAlg = this.getCryptoAlgorithm(key.algorithm);\n        const signer = crypto.createVerify(cryptoAlg);\n        signer.update(Buffer$1.from(data));\n        if (!key.pem) {\n            key.pem = `-----BEGIN PUBLIC KEY-----\\n${key.data.toString(\"base64\")}\\n-----END PUBLIC KEY-----`;\n        }\n        const options = {\n            key: key.pem,\n        };\n        if (algorithm.name.toUpperCase() === \"RSA-PSS\") {\n            options.padding = crypto.constants.RSA_PKCS1_PSS_PADDING;\n            options.saltLength = algorithm.saltLength;\n        }\n        const ok = signer.verify(options, signature);\n        return ok;\n    }\n    static encryptOAEP(algorithm, key, data) {\n        const options = {\n            key: `-----BEGIN PUBLIC KEY-----\\n${key.data.toString(\"base64\")}\\n-----END PUBLIC KEY-----`,\n            padding: crypto.constants.RSA_PKCS1_OAEP_PADDING,\n        };\n        if (algorithm.label) ;\n        return new Uint8Array(crypto.publicEncrypt(options, data)).buffer;\n    }\n    static decryptOAEP(algorithm, key, data) {\n        const options = {\n            key: `-----BEGIN PRIVATE KEY-----\\n${key.data.toString(\"base64\")}\\n-----END PRIVATE KEY-----`,\n            padding: crypto.constants.RSA_PKCS1_OAEP_PADDING,\n        };\n        if (algorithm.label) ;\n        return new Uint8Array(crypto.privateDecrypt(options, data)).buffer;\n    }\n}\nRsaCrypto.publicKeyUsages = [\"verify\", \"encrypt\", \"wrapKey\"];\nRsaCrypto.privateKeyUsages = [\"sign\", \"decrypt\", \"unwrapKey\"];\n\nclass RsaSsaProvider extends core.RsaSsaProvider {\n    constructor() {\n        super(...arguments);\n        this.hashAlgorithms = [\n            \"SHA-1\", \"SHA-256\", \"SHA-384\", \"SHA-512\",\n            \"shake128\", \"shake256\",\n            \"SHA3-256\", \"SHA3-384\", \"SHA3-512\"\n        ];\n    }\n    async onGenerateKey(algorithm, extractable, keyUsages) {\n        const keys = await RsaCrypto.generateKey({\n            ...algorithm,\n            name: this.name,\n        }, extractable, keyUsages);\n        return {\n            privateKey: setCryptoKey(keys.privateKey),\n            publicKey: setCryptoKey(keys.publicKey),\n        };\n    }\n    async onSign(algorithm, key, data) {\n        return RsaCrypto.sign(algorithm, getCryptoKey(key), new Uint8Array(data));\n    }\n    async onVerify(algorithm, key, signature, data) {\n        return RsaCrypto.verify(algorithm, getCryptoKey(key), new Uint8Array(signature), new Uint8Array(data));\n    }\n    async onExportKey(format, key) {\n        return RsaCrypto.exportKey(format, getCryptoKey(key));\n    }\n    async onImportKey(format, keyData, algorithm, extractable, keyUsages) {\n        const key = await RsaCrypto.importKey(format, keyData, { ...algorithm, name: this.name }, extractable, keyUsages);\n        return setCryptoKey(key);\n    }\n    checkCryptoKey(key, keyUsage) {\n        super.checkCryptoKey(key, keyUsage);\n        const internalKey = getCryptoKey(key);\n        if (!(internalKey instanceof RsaPrivateKey || internalKey instanceof RsaPublicKey)) {\n            throw new TypeError(\"key: Is not RSA CryptoKey\");\n        }\n    }\n}\n\nclass RsaPssProvider extends core.RsaPssProvider {\n    constructor() {\n        super(...arguments);\n        this.hashAlgorithms = [\n            \"SHA-1\", \"SHA-256\", \"SHA-384\", \"SHA-512\",\n            \"shake128\", \"shake256\",\n            \"SHA3-256\", \"SHA3-384\", \"SHA3-512\"\n        ];\n    }\n    async onGenerateKey(algorithm, extractable, keyUsages) {\n        const keys = await RsaCrypto.generateKey({\n            ...algorithm,\n            name: this.name,\n        }, extractable, keyUsages);\n        return {\n            privateKey: setCryptoKey(keys.privateKey),\n            publicKey: setCryptoKey(keys.publicKey),\n        };\n    }\n    async onSign(algorithm, key, data) {\n        return RsaCrypto.sign(algorithm, getCryptoKey(key), new Uint8Array(data));\n    }\n    async onVerify(algorithm, key, signature, data) {\n        return RsaCrypto.verify(algorithm, getCryptoKey(key), new Uint8Array(signature), new Uint8Array(data));\n    }\n    async onExportKey(format, key) {\n        return RsaCrypto.exportKey(format, getCryptoKey(key));\n    }\n    async onImportKey(format, keyData, algorithm, extractable, keyUsages) {\n        const key = await RsaCrypto.importKey(format, keyData, { ...algorithm, name: this.name }, extractable, keyUsages);\n        return setCryptoKey(key);\n    }\n    checkCryptoKey(key, keyUsage) {\n        super.checkCryptoKey(key, keyUsage);\n        const internalKey = getCryptoKey(key);\n        if (!(internalKey instanceof RsaPrivateKey || internalKey instanceof RsaPublicKey)) {\n            throw new TypeError(\"key: Is not RSA CryptoKey\");\n        }\n    }\n}\n\nclass ShaCrypto {\n    static size(algorithm) {\n        switch (algorithm.name.toUpperCase()) {\n            case \"SHA-1\":\n                return 160;\n            case \"SHA-256\":\n            case \"SHA3-256\":\n                return 256;\n            case \"SHA-384\":\n            case \"SHA3-384\":\n                return 384;\n            case \"SHA-512\":\n            case \"SHA3-512\":\n                return 512;\n            default:\n                throw new Error(\"Unrecognized name\");\n        }\n    }\n    static getAlgorithmName(algorithm) {\n        switch (algorithm.name.toUpperCase()) {\n            case \"SHA-1\":\n                return \"sha1\";\n            case \"SHA-256\":\n                return \"sha256\";\n            case \"SHA-384\":\n                return \"sha384\";\n            case \"SHA-512\":\n                return \"sha512\";\n            case \"SHA3-256\":\n                return \"sha3-256\";\n            case \"SHA3-384\":\n                return \"sha3-384\";\n            case \"SHA3-512\":\n                return \"sha3-512\";\n            default:\n                throw new Error(\"Unrecognized name\");\n        }\n    }\n    static digest(algorithm, data) {\n        const hashAlg = this.getAlgorithmName(algorithm);\n        const hash = crypto.createHash(hashAlg)\n            .update(Buffer$1.from(data)).digest();\n        return new Uint8Array(hash).buffer;\n    }\n}\n\nclass RsaOaepProvider extends core.RsaOaepProvider {\n    async onGenerateKey(algorithm, extractable, keyUsages) {\n        const keys = await RsaCrypto.generateKey({\n            ...algorithm,\n            name: this.name,\n        }, extractable, keyUsages);\n        return {\n            privateKey: setCryptoKey(keys.privateKey),\n            publicKey: setCryptoKey(keys.publicKey),\n        };\n    }\n    async onEncrypt(algorithm, key, data) {\n        const internalKey = getCryptoKey(key);\n        const dataView = new Uint8Array(data);\n        const keySize = Math.ceil(internalKey.algorithm.modulusLength >> 3);\n        const hashSize = ShaCrypto.size(internalKey.algorithm.hash) >> 3;\n        const dataLength = dataView.byteLength;\n        const psLength = keySize - dataLength - 2 * hashSize - 2;\n        if (dataLength > keySize - 2 * hashSize - 2) {\n            throw new Error(\"Data too large\");\n        }\n        const message = new Uint8Array(keySize);\n        const seed = message.subarray(1, hashSize + 1);\n        const dataBlock = message.subarray(hashSize + 1);\n        dataBlock.set(dataView, hashSize + psLength + 1);\n        const labelHash = crypto.createHash(internalKey.algorithm.hash.name.replace(\"-\", \"\"))\n            .update(core.BufferSourceConverter.toUint8Array(algorithm.label || new Uint8Array(0)))\n            .digest();\n        dataBlock.set(labelHash, 0);\n        dataBlock[hashSize + psLength] = 1;\n        crypto.randomFillSync(seed);\n        const dataBlockMask = this.mgf1(internalKey.algorithm.hash, seed, dataBlock.length);\n        for (let i = 0; i < dataBlock.length; i++) {\n            dataBlock[i] ^= dataBlockMask[i];\n        }\n        const seedMask = this.mgf1(internalKey.algorithm.hash, dataBlock, seed.length);\n        for (let i = 0; i < seed.length; i++) {\n            seed[i] ^= seedMask[i];\n        }\n        if (!internalKey.pem) {\n            internalKey.pem = `-----BEGIN PUBLIC KEY-----\\n${internalKey.data.toString(\"base64\")}\\n-----END PUBLIC KEY-----`;\n        }\n        const pkcs0 = crypto.publicEncrypt({\n            key: internalKey.pem,\n            padding: crypto.constants.RSA_NO_PADDING,\n        }, Buffer$1.from(message));\n        return new Uint8Array(pkcs0).buffer;\n    }\n    async onDecrypt(algorithm, key, data) {\n        const internalKey = getCryptoKey(key);\n        const keySize = Math.ceil(internalKey.algorithm.modulusLength >> 3);\n        const hashSize = ShaCrypto.size(internalKey.algorithm.hash) >> 3;\n        const dataLength = data.byteLength;\n        if (dataLength !== keySize) {\n            throw new Error(\"Bad data\");\n        }\n        if (!internalKey.pem) {\n            internalKey.pem = `-----BEGIN PRIVATE KEY-----\\n${internalKey.data.toString(\"base64\")}\\n-----END PRIVATE KEY-----`;\n        }\n        let pkcs0 = crypto.privateDecrypt({\n            key: internalKey.pem,\n            padding: crypto.constants.RSA_NO_PADDING,\n        }, Buffer$1.from(data));\n        const z = pkcs0[0];\n        const seed = pkcs0.subarray(1, hashSize + 1);\n        const dataBlock = pkcs0.subarray(hashSize + 1);\n        if (z !== 0) {\n            throw new Error(\"Decryption failed\");\n        }\n        const seedMask = this.mgf1(internalKey.algorithm.hash, dataBlock, seed.length);\n        for (let i = 0; i < seed.length; i++) {\n            seed[i] ^= seedMask[i];\n        }\n        const dataBlockMask = this.mgf1(internalKey.algorithm.hash, seed, dataBlock.length);\n        for (let i = 0; i < dataBlock.length; i++) {\n            dataBlock[i] ^= dataBlockMask[i];\n        }\n        const labelHash = crypto.createHash(internalKey.algorithm.hash.name.replace(\"-\", \"\"))\n            .update(core.BufferSourceConverter.toUint8Array(algorithm.label || new Uint8Array(0)))\n            .digest();\n        for (let i = 0; i < hashSize; i++) {\n            if (labelHash[i] !== dataBlock[i]) {\n                throw new Error(\"Decryption failed\");\n            }\n        }\n        let psEnd = hashSize;\n        for (; psEnd < dataBlock.length; psEnd++) {\n            const psz = dataBlock[psEnd];\n            if (psz === 1) {\n                break;\n            }\n            if (psz !== 0) {\n                throw new Error(\"Decryption failed\");\n            }\n        }\n        if (psEnd === dataBlock.length) {\n            throw new Error(\"Decryption failed\");\n        }\n        pkcs0 = dataBlock.subarray(psEnd + 1);\n        return new Uint8Array(pkcs0).buffer;\n    }\n    async onExportKey(format, key) {\n        return RsaCrypto.exportKey(format, getCryptoKey(key));\n    }\n    async onImportKey(format, keyData, algorithm, extractable, keyUsages) {\n        const key = await RsaCrypto.importKey(format, keyData, { ...algorithm, name: this.name }, extractable, keyUsages);\n        return setCryptoKey(key);\n    }\n    checkCryptoKey(key, keyUsage) {\n        super.checkCryptoKey(key, keyUsage);\n        const internalKey = getCryptoKey(key);\n        if (!(internalKey instanceof RsaPrivateKey || internalKey instanceof RsaPublicKey)) {\n            throw new TypeError(\"key: Is not RSA CryptoKey\");\n        }\n    }\n    mgf1(algorithm, seed, length = 0) {\n        const hashSize = ShaCrypto.size(algorithm) >> 3;\n        const mask = new Uint8Array(length);\n        const counter = new Uint8Array(4);\n        const chunks = Math.ceil(length / hashSize);\n        for (let i = 0; i < chunks; i++) {\n            counter[0] = i >>> 24;\n            counter[1] = (i >>> 16) & 255;\n            counter[2] = (i >>> 8) & 255;\n            counter[3] = i & 255;\n            const submask = mask.subarray(i * hashSize);\n            let chunk = crypto.createHash(algorithm.name.replace(\"-\", \"\"))\n                .update(seed)\n                .update(counter)\n                .digest();\n            if (chunk.length > submask.length) {\n                chunk = chunk.subarray(0, submask.length);\n            }\n            submask.set(chunk);\n        }\n        return mask;\n    }\n}\n\nclass RsaEsProvider extends core.ProviderCrypto {\n    constructor() {\n        super(...arguments);\n        this.name = \"RSAES-PKCS1-v1_5\";\n        this.usages = {\n            publicKey: [\"encrypt\", \"wrapKey\"],\n            privateKey: [\"decrypt\", \"unwrapKey\"],\n        };\n    }\n    async onGenerateKey(algorithm, extractable, keyUsages) {\n        const keys = await RsaCrypto.generateKey({\n            ...algorithm,\n            name: this.name,\n        }, extractable, keyUsages);\n        return {\n            privateKey: setCryptoKey(keys.privateKey),\n            publicKey: setCryptoKey(keys.publicKey),\n        };\n    }\n    checkGenerateKeyParams(algorithm) {\n        this.checkRequiredProperty(algorithm, \"publicExponent\");\n        if (!(algorithm.publicExponent && algorithm.publicExponent instanceof Uint8Array)) {\n            throw new TypeError(\"publicExponent: Missing or not a Uint8Array\");\n        }\n        const publicExponent = Convert.ToBase64(algorithm.publicExponent);\n        if (!(publicExponent === \"Aw==\" || publicExponent === \"AQAB\")) {\n            throw new TypeError(\"publicExponent: Must be [3] or [1,0,1]\");\n        }\n        this.checkRequiredProperty(algorithm, \"modulusLength\");\n        switch (algorithm.modulusLength) {\n            case 1024:\n            case 2048:\n            case 4096:\n                break;\n            default:\n                throw new TypeError(\"modulusLength: Must be 1024, 2048, or 4096\");\n        }\n    }\n    async onEncrypt(algorithm, key, data) {\n        const options = this.toCryptoOptions(key);\n        const enc = crypto.publicEncrypt(options, new Uint8Array(data));\n        return new Uint8Array(enc).buffer;\n    }\n    async onDecrypt(algorithm, key, data) {\n        const options = this.toCryptoOptions(key);\n        const dec = crypto.privateDecrypt(options, new Uint8Array(data));\n        return new Uint8Array(dec).buffer;\n    }\n    async onExportKey(format, key) {\n        return RsaCrypto.exportKey(format, getCryptoKey(key));\n    }\n    async onImportKey(format, keyData, algorithm, extractable, keyUsages) {\n        const key = await RsaCrypto.importKey(format, keyData, { ...algorithm, name: this.name }, extractable, keyUsages);\n        return setCryptoKey(key);\n    }\n    checkCryptoKey(key, keyUsage) {\n        super.checkCryptoKey(key, keyUsage);\n        const internalKey = getCryptoKey(key);\n        if (!(internalKey instanceof RsaPrivateKey || internalKey instanceof RsaPublicKey)) {\n            throw new TypeError(\"key: Is not RSA CryptoKey\");\n        }\n    }\n    toCryptoOptions(key) {\n        const type = key.type.toUpperCase();\n        return {\n            key: `-----BEGIN ${type} KEY-----\\n${getCryptoKey(key).data.toString(\"base64\")}\\n-----END ${type} KEY-----`,\n            padding: crypto.constants.RSA_PKCS1_PADDING,\n        };\n    }\n}\n\nconst namedOIDs = {\n    \"1.2.840.10045.3.1.7\": \"P-256\",\n    \"P-256\": \"1.2.840.10045.3.1.7\",\n    \"1.3.132.0.34\": \"P-384\",\n    \"P-384\": \"1.3.132.0.34\",\n    \"1.3.132.0.35\": \"P-521\",\n    \"P-521\": \"1.3.132.0.35\",\n    \"1.3.132.0.10\": \"K-256\",\n    \"K-256\": \"1.3.132.0.10\",\n    \"brainpoolP160r1\": \"1.3.36.3.3.2.8.1.1.1\",\n    \"1.3.36.3.3.2.8.1.1.1\": \"brainpoolP160r1\",\n    \"brainpoolP160t1\": \"1.3.36.3.3.2.8.1.1.2\",\n    \"1.3.36.3.3.2.8.1.1.2\": \"brainpoolP160t1\",\n    \"brainpoolP192r1\": \"1.3.36.3.3.2.8.1.1.3\",\n    \"1.3.36.3.3.2.8.1.1.3\": \"brainpoolP192r1\",\n    \"brainpoolP192t1\": \"1.3.36.3.3.2.8.1.1.4\",\n    \"1.3.36.3.3.2.8.1.1.4\": \"brainpoolP192t1\",\n    \"brainpoolP224r1\": \"1.3.36.3.3.2.8.1.1.5\",\n    \"1.3.36.3.3.2.8.1.1.5\": \"brainpoolP224r1\",\n    \"brainpoolP224t1\": \"1.3.36.3.3.2.8.1.1.6\",\n    \"1.3.36.3.3.2.8.1.1.6\": \"brainpoolP224t1\",\n    \"brainpoolP256r1\": \"1.3.36.3.3.2.8.1.1.7\",\n    \"1.3.36.3.3.2.8.1.1.7\": \"brainpoolP256r1\",\n    \"brainpoolP256t1\": \"1.3.36.3.3.2.8.1.1.8\",\n    \"1.3.36.3.3.2.8.1.1.8\": \"brainpoolP256t1\",\n    \"brainpoolP320r1\": \"1.3.36.3.3.2.8.1.1.9\",\n    \"1.3.36.3.3.2.8.1.1.9\": \"brainpoolP320r1\",\n    \"brainpoolP320t1\": \"1.3.36.3.3.2.8.1.1.10\",\n    \"1.3.36.3.3.2.8.1.1.10\": \"brainpoolP320t1\",\n    \"brainpoolP384r1\": \"1.3.36.3.3.2.8.1.1.11\",\n    \"1.3.36.3.3.2.8.1.1.11\": \"brainpoolP384r1\",\n    \"brainpoolP384t1\": \"1.3.36.3.3.2.8.1.1.12\",\n    \"1.3.36.3.3.2.8.1.1.12\": \"brainpoolP384t1\",\n    \"brainpoolP512r1\": \"1.3.36.3.3.2.8.1.1.13\",\n    \"1.3.36.3.3.2.8.1.1.13\": \"brainpoolP512r1\",\n    \"brainpoolP512t1\": \"1.3.36.3.3.2.8.1.1.14\",\n    \"1.3.36.3.3.2.8.1.1.14\": \"brainpoolP512t1\",\n};\nfunction getOidByNamedCurve$1(namedCurve) {\n    const oid = namedOIDs[namedCurve];\n    if (!oid) {\n        throw new core.OperationError(`Cannot convert WebCrypto named curve '${namedCurve}' to OID`);\n    }\n    return oid;\n}\n\nclass EcPrivateKey extends AsymmetricKey {\n    constructor() {\n        super(...arguments);\n        this.type = \"private\";\n    }\n    getKey() {\n        const keyInfo = AsnParser.parse(this.data, core.asn1.PrivateKeyInfo);\n        return AsnParser.parse(keyInfo.privateKey, core.asn1.EcPrivateKey);\n    }\n    toJSON() {\n        const key = this.getKey();\n        const json = {\n            kty: \"EC\",\n            crv: this.algorithm.namedCurve,\n            key_ops: this.usages,\n            ext: this.extractable,\n        };\n        return Object.assign(json, JsonSerializer.toJSON(key));\n    }\n    fromJSON(json) {\n        if (!json.crv) {\n            throw new core.OperationError(`Cannot get named curve from JWK. Property 'crv' is required`);\n        }\n        const keyInfo = new core.asn1.PrivateKeyInfo();\n        keyInfo.privateKeyAlgorithm.algorithm = \"1.2.840.10045.2.1\";\n        keyInfo.privateKeyAlgorithm.parameters = AsnSerializer.serialize(new core.asn1.ObjectIdentifier(getOidByNamedCurve$1(json.crv)));\n        const key = JsonParser.fromJSON(json, { targetSchema: core.asn1.EcPrivateKey });\n        keyInfo.privateKey = AsnSerializer.serialize(key);\n        this.data = Buffer$1.from(AsnSerializer.serialize(keyInfo));\n        return this;\n    }\n}\n\nclass EcPublicKey extends AsymmetricKey {\n    constructor() {\n        super(...arguments);\n        this.type = \"public\";\n    }\n    getKey() {\n        const keyInfo = AsnParser.parse(this.data, core.asn1.PublicKeyInfo);\n        return new core.asn1.EcPublicKey(keyInfo.publicKey);\n    }\n    toJSON() {\n        const key = this.getKey();\n        const json = {\n            kty: \"EC\",\n            crv: this.algorithm.namedCurve,\n            key_ops: this.usages,\n            ext: this.extractable,\n        };\n        return Object.assign(json, JsonSerializer.toJSON(key));\n    }\n    fromJSON(json) {\n        if (!json.crv) {\n            throw new core.OperationError(`Cannot get named curve from JWK. Property 'crv' is required`);\n        }\n        const key = JsonParser.fromJSON(json, { targetSchema: core.asn1.EcPublicKey });\n        const keyInfo = new core.asn1.PublicKeyInfo();\n        keyInfo.publicKeyAlgorithm.algorithm = \"1.2.840.10045.2.1\";\n        keyInfo.publicKeyAlgorithm.parameters = AsnSerializer.serialize(new core.asn1.ObjectIdentifier(getOidByNamedCurve$1(json.crv)));\n        keyInfo.publicKey = AsnSerializer.toASN(key).valueHex;\n        this.data = Buffer$1.from(AsnSerializer.serialize(keyInfo));\n        return this;\n    }\n}\n\nclass Sha1Provider extends core.ProviderCrypto {\n    constructor() {\n        super(...arguments);\n        this.name = \"SHA-1\";\n        this.usages = [];\n    }\n    async onDigest(algorithm, data) {\n        return ShaCrypto.digest(algorithm, data);\n    }\n}\n\nclass Sha256Provider extends core.ProviderCrypto {\n    constructor() {\n        super(...arguments);\n        this.name = \"SHA-256\";\n        this.usages = [];\n    }\n    async onDigest(algorithm, data) {\n        return ShaCrypto.digest(algorithm, data);\n    }\n}\n\nclass Sha384Provider extends core.ProviderCrypto {\n    constructor() {\n        super(...arguments);\n        this.name = \"SHA-384\";\n        this.usages = [];\n    }\n    async onDigest(algorithm, data) {\n        return ShaCrypto.digest(algorithm, data);\n    }\n}\n\nclass Sha512Provider extends core.ProviderCrypto {\n    constructor() {\n        super(...arguments);\n        this.name = \"SHA-512\";\n        this.usages = [];\n    }\n    async onDigest(algorithm, data) {\n        return ShaCrypto.digest(algorithm, data);\n    }\n}\n\nclass Sha3256Provider extends core.ProviderCrypto {\n    constructor() {\n        super(...arguments);\n        this.name = \"SHA3-256\";\n        this.usages = [];\n    }\n    async onDigest(algorithm, data) {\n        return ShaCrypto.digest(algorithm, data);\n    }\n}\n\nclass Sha3384Provider extends core.ProviderCrypto {\n    constructor() {\n        super(...arguments);\n        this.name = \"SHA3-384\";\n        this.usages = [];\n    }\n    async onDigest(algorithm, data) {\n        return ShaCrypto.digest(algorithm, data);\n    }\n}\n\nclass Sha3512Provider extends core.ProviderCrypto {\n    constructor() {\n        super(...arguments);\n        this.name = \"SHA3-512\";\n        this.usages = [];\n    }\n    async onDigest(algorithm, data) {\n        return ShaCrypto.digest(algorithm, data);\n    }\n}\n\nclass EcCrypto {\n    static async generateKey(algorithm, extractable, keyUsages) {\n        const privateKey = new EcPrivateKey();\n        privateKey.algorithm = algorithm;\n        privateKey.extractable = extractable;\n        privateKey.usages = keyUsages.filter((usage) => this.privateKeyUsages.indexOf(usage) !== -1);\n        const publicKey = new EcPublicKey();\n        publicKey.algorithm = algorithm;\n        publicKey.extractable = true;\n        publicKey.usages = keyUsages.filter((usage) => this.publicKeyUsages.indexOf(usage) !== -1);\n        const keys = crypto.generateKeyPairSync(\"ec\", {\n            namedCurve: this.getOpenSSLNamedCurve(algorithm.namedCurve),\n            publicKeyEncoding: {\n                format: \"der\",\n                type: \"spki\",\n            },\n            privateKeyEncoding: {\n                format: \"der\",\n                type: \"pkcs8\",\n            },\n        });\n        privateKey.data = keys.privateKey;\n        publicKey.data = keys.publicKey;\n        const res = {\n            privateKey,\n            publicKey,\n        };\n        return res;\n    }\n    static async sign(algorithm, key, data) {\n        const cryptoAlg = ShaCrypto.getAlgorithmName(algorithm.hash);\n        const signer = crypto.createSign(cryptoAlg);\n        signer.update(Buffer$1.from(data));\n        if (!key.pem) {\n            key.pem = `-----BEGIN PRIVATE KEY-----\\n${key.data.toString(\"base64\")}\\n-----END PRIVATE KEY-----`;\n        }\n        const options = {\n            key: key.pem,\n        };\n        const signature = signer.sign(options);\n        const ecSignature = AsnParser.parse(signature, core.asn1.EcDsaSignature);\n        const signatureRaw = core.EcUtils.encodeSignature(ecSignature, core.EcCurves.get(key.algorithm.namedCurve).size);\n        return signatureRaw.buffer;\n    }\n    static async verify(algorithm, key, signature, data) {\n        const cryptoAlg = ShaCrypto.getAlgorithmName(algorithm.hash);\n        const signer = crypto.createVerify(cryptoAlg);\n        signer.update(Buffer$1.from(data));\n        if (!key.pem) {\n            key.pem = `-----BEGIN PUBLIC KEY-----\\n${key.data.toString(\"base64\")}\\n-----END PUBLIC KEY-----`;\n        }\n        const options = {\n            key: key.pem,\n        };\n        const ecSignature = new core.asn1.EcDsaSignature();\n        const namedCurve = core.EcCurves.get(key.algorithm.namedCurve);\n        const signaturePoint = core.EcUtils.decodeSignature(signature, namedCurve.size);\n        ecSignature.r = BufferSourceConverter.toArrayBuffer(signaturePoint.r);\n        ecSignature.s = BufferSourceConverter.toArrayBuffer(signaturePoint.s);\n        const ecSignatureRaw = Buffer$1.from(AsnSerializer.serialize(ecSignature));\n        const ok = signer.verify(options, ecSignatureRaw);\n        return ok;\n    }\n    static async deriveBits(algorithm, baseKey, length) {\n        const cryptoAlg = this.getOpenSSLNamedCurve(baseKey.algorithm.namedCurve);\n        const ecdh = crypto.createECDH(cryptoAlg);\n        const asnPrivateKey = AsnParser.parse(baseKey.data, core.asn1.PrivateKeyInfo);\n        const asnEcPrivateKey = AsnParser.parse(asnPrivateKey.privateKey, core.asn1.EcPrivateKey);\n        ecdh.setPrivateKey(Buffer$1.from(asnEcPrivateKey.privateKey));\n        const asnPublicKey = AsnParser.parse(algorithm.public.data, core.asn1.PublicKeyInfo);\n        const bits = ecdh.computeSecret(Buffer$1.from(asnPublicKey.publicKey));\n        if (length === null) {\n            return bits;\n        }\n        return new Uint8Array(bits).buffer.slice(0, length >> 3);\n    }\n    static async exportKey(format, key) {\n        switch (format.toLowerCase()) {\n            case \"jwk\":\n                return JsonSerializer.toJSON(key);\n            case \"pkcs8\":\n            case \"spki\":\n                return new Uint8Array(key.data).buffer;\n            case \"raw\": {\n                const publicKeyInfo = AsnParser.parse(key.data, core.asn1.PublicKeyInfo);\n                return publicKeyInfo.publicKey;\n            }\n            default:\n                throw new core.OperationError(\"format: Must be 'jwk', 'raw', pkcs8' or 'spki'\");\n        }\n    }\n    static async importKey(format, keyData, algorithm, extractable, keyUsages) {\n        switch (format.toLowerCase()) {\n            case \"jwk\": {\n                const jwk = keyData;\n                if (jwk.d) {\n                    const asnKey = JsonParser.fromJSON(keyData, { targetSchema: core.asn1.EcPrivateKey });\n                    return this.importPrivateKey(asnKey, algorithm, extractable, keyUsages);\n                }\n                else {\n                    const asnKey = JsonParser.fromJSON(keyData, { targetSchema: core.asn1.EcPublicKey });\n                    return this.importPublicKey(asnKey, algorithm, extractable, keyUsages);\n                }\n            }\n            case \"raw\": {\n                const asnKey = new core.asn1.EcPublicKey(keyData);\n                return this.importPublicKey(asnKey, algorithm, extractable, keyUsages);\n            }\n            case \"spki\": {\n                const keyInfo = AsnParser.parse(new Uint8Array(keyData), core.asn1.PublicKeyInfo);\n                const asnKey = new core.asn1.EcPublicKey(keyInfo.publicKey);\n                this.assertKeyParameters(keyInfo.publicKeyAlgorithm.parameters, algorithm.namedCurve);\n                return this.importPublicKey(asnKey, algorithm, extractable, keyUsages);\n            }\n            case \"pkcs8\": {\n                const keyInfo = AsnParser.parse(new Uint8Array(keyData), core.asn1.PrivateKeyInfo);\n                const asnKey = AsnParser.parse(keyInfo.privateKey, core.asn1.EcPrivateKey);\n                this.assertKeyParameters(keyInfo.privateKeyAlgorithm.parameters, algorithm.namedCurve);\n                return this.importPrivateKey(asnKey, algorithm, extractable, keyUsages);\n            }\n            default:\n                throw new core.OperationError(\"format: Must be 'jwk', 'raw', 'pkcs8' or 'spki'\");\n        }\n    }\n    static assertKeyParameters(parameters, namedCurve) {\n        if (!parameters) {\n            throw new core.CryptoError(\"Key info doesn't have required parameters\");\n        }\n        let namedCurveIdentifier = \"\";\n        try {\n            namedCurveIdentifier = AsnParser.parse(parameters, core.asn1.ObjectIdentifier).value;\n        }\n        catch (e) {\n            throw new core.CryptoError(\"Cannot read key info parameters\");\n        }\n        if (getOidByNamedCurve$1(namedCurve) !== namedCurveIdentifier) {\n            throw new core.CryptoError(\"Key info parameter doesn't match to named curve\");\n        }\n    }\n    static async importPrivateKey(asnKey, algorithm, extractable, keyUsages) {\n        const keyInfo = new core.asn1.PrivateKeyInfo();\n        keyInfo.privateKeyAlgorithm.algorithm = \"1.2.840.10045.2.1\";\n        keyInfo.privateKeyAlgorithm.parameters = AsnSerializer.serialize(new core.asn1.ObjectIdentifier(getOidByNamedCurve$1(algorithm.namedCurve)));\n        keyInfo.privateKey = AsnSerializer.serialize(asnKey);\n        const key = new EcPrivateKey();\n        key.data = Buffer$1.from(AsnSerializer.serialize(keyInfo));\n        key.algorithm = Object.assign({}, algorithm);\n        key.extractable = extractable;\n        key.usages = keyUsages;\n        return key;\n    }\n    static async importPublicKey(asnKey, algorithm, extractable, keyUsages) {\n        const keyInfo = new core.asn1.PublicKeyInfo();\n        keyInfo.publicKeyAlgorithm.algorithm = \"1.2.840.10045.2.1\";\n        const namedCurve = getOidByNamedCurve$1(algorithm.namedCurve);\n        keyInfo.publicKeyAlgorithm.parameters = AsnSerializer.serialize(new core.asn1.ObjectIdentifier(namedCurve));\n        keyInfo.publicKey = asnKey.value;\n        const key = new EcPublicKey();\n        key.data = Buffer$1.from(AsnSerializer.serialize(keyInfo));\n        key.algorithm = Object.assign({}, algorithm);\n        key.extractable = extractable;\n        key.usages = keyUsages;\n        return key;\n    }\n    static getOpenSSLNamedCurve(curve) {\n        switch (curve.toUpperCase()) {\n            case \"P-256\":\n                return \"prime256v1\";\n            case \"K-256\":\n                return \"secp256k1\";\n            case \"P-384\":\n                return \"secp384r1\";\n            case \"P-521\":\n                return \"secp521r1\";\n            default:\n                return curve;\n        }\n    }\n}\nEcCrypto.publicKeyUsages = [\"verify\"];\nEcCrypto.privateKeyUsages = [\"sign\", \"deriveKey\", \"deriveBits\"];\n\nclass EcdsaProvider extends core.EcdsaProvider {\n    constructor() {\n        super(...arguments);\n        this.namedCurves = core.EcCurves.names;\n        this.hashAlgorithms = [\n            \"SHA-1\", \"SHA-256\", \"SHA-384\", \"SHA-512\",\n            \"shake128\", \"shake256\",\n            \"SHA3-256\", \"SHA3-384\", \"SHA3-512\"\n        ];\n    }\n    async onGenerateKey(algorithm, extractable, keyUsages) {\n        const keys = await EcCrypto.generateKey({\n            ...algorithm,\n            name: this.name,\n        }, extractable, keyUsages);\n        return {\n            privateKey: setCryptoKey(keys.privateKey),\n            publicKey: setCryptoKey(keys.publicKey),\n        };\n    }\n    async onSign(algorithm, key, data) {\n        return EcCrypto.sign(algorithm, getCryptoKey(key), new Uint8Array(data));\n    }\n    async onVerify(algorithm, key, signature, data) {\n        return EcCrypto.verify(algorithm, getCryptoKey(key), new Uint8Array(signature), new Uint8Array(data));\n    }\n    async onExportKey(format, key) {\n        return EcCrypto.exportKey(format, getCryptoKey(key));\n    }\n    async onImportKey(format, keyData, algorithm, extractable, keyUsages) {\n        const key = await EcCrypto.importKey(format, keyData, { ...algorithm, name: this.name }, extractable, keyUsages);\n        return setCryptoKey(key);\n    }\n    checkCryptoKey(key, keyUsage) {\n        super.checkCryptoKey(key, keyUsage);\n        const internalKey = getCryptoKey(key);\n        if (!(internalKey instanceof EcPrivateKey || internalKey instanceof EcPublicKey)) {\n            throw new TypeError(\"key: Is not EC CryptoKey\");\n        }\n    }\n}\n\nclass EcdhProvider extends core.EcdhProvider {\n    constructor() {\n        super(...arguments);\n        this.namedCurves = core.EcCurves.names;\n    }\n    async onGenerateKey(algorithm, extractable, keyUsages) {\n        const keys = await EcCrypto.generateKey({\n            ...algorithm,\n            name: this.name,\n        }, extractable, keyUsages);\n        return {\n            privateKey: setCryptoKey(keys.privateKey),\n            publicKey: setCryptoKey(keys.publicKey),\n        };\n    }\n    async onExportKey(format, key) {\n        return EcCrypto.exportKey(format, getCryptoKey(key));\n    }\n    async onImportKey(format, keyData, algorithm, extractable, keyUsages) {\n        const key = await EcCrypto.importKey(format, keyData, { ...algorithm, name: this.name }, extractable, keyUsages);\n        return setCryptoKey(key);\n    }\n    checkCryptoKey(key, keyUsage) {\n        super.checkCryptoKey(key, keyUsage);\n        const internalKey = getCryptoKey(key);\n        if (!(internalKey instanceof EcPrivateKey || internalKey instanceof EcPublicKey)) {\n            throw new TypeError(\"key: Is not EC CryptoKey\");\n        }\n    }\n    async onDeriveBits(algorithm, baseKey, length) {\n        const bits = await EcCrypto.deriveBits({ ...algorithm, public: getCryptoKey(algorithm.public) }, getCryptoKey(baseKey), length);\n        return bits;\n    }\n}\n\nconst edOIDs = {\n    [core.asn1.idEd448]: \"Ed448\",\n    \"ed448\": core.asn1.idEd448,\n    [core.asn1.idX448]: \"X448\",\n    \"x448\": core.asn1.idX448,\n    [core.asn1.idEd25519]: \"Ed25519\",\n    \"ed25519\": core.asn1.idEd25519,\n    [core.asn1.idX25519]: \"X25519\",\n    \"x25519\": core.asn1.idX25519,\n};\nfunction getOidByNamedCurve(namedCurve) {\n    const oid = edOIDs[namedCurve.toLowerCase()];\n    if (!oid) {\n        throw new core.OperationError(`Cannot convert WebCrypto named curve '${namedCurve}' to OID`);\n    }\n    return oid;\n}\n\nclass EdPrivateKey extends AsymmetricKey {\n    constructor() {\n        super(...arguments);\n        this.type = \"private\";\n    }\n    getKey() {\n        const keyInfo = AsnParser.parse(this.data, core.asn1.PrivateKeyInfo);\n        return AsnParser.parse(keyInfo.privateKey, core.asn1.CurvePrivateKey);\n    }\n    toJSON() {\n        const key = this.getKey();\n        const json = {\n            kty: \"OKP\",\n            crv: this.algorithm.namedCurve,\n            key_ops: this.usages,\n            ext: this.extractable,\n        };\n        return Object.assign(json, JsonSerializer.toJSON(key));\n    }\n    fromJSON(json) {\n        if (!json.crv) {\n            throw new core.OperationError(`Cannot get named curve from JWK. Property 'crv' is required`);\n        }\n        const keyInfo = new core.asn1.PrivateKeyInfo();\n        keyInfo.privateKeyAlgorithm.algorithm = getOidByNamedCurve(json.crv);\n        const key = JsonParser.fromJSON(json, { targetSchema: core.asn1.CurvePrivateKey });\n        keyInfo.privateKey = AsnSerializer.serialize(key);\n        this.data = Buffer$1.from(AsnSerializer.serialize(keyInfo));\n        return this;\n    }\n}\n\nclass EdPublicKey extends AsymmetricKey {\n    constructor() {\n        super(...arguments);\n        this.type = \"public\";\n    }\n    getKey() {\n        const keyInfo = AsnParser.parse(this.data, core.asn1.PublicKeyInfo);\n        return keyInfo.publicKey;\n    }\n    toJSON() {\n        const key = this.getKey();\n        const json = {\n            kty: \"OKP\",\n            crv: this.algorithm.namedCurve,\n            key_ops: this.usages,\n            ext: this.extractable,\n        };\n        return Object.assign(json, {\n            x: Convert.ToBase64Url(key)\n        });\n    }\n    fromJSON(json) {\n        if (!json.crv) {\n            throw new core.OperationError(`Cannot get named curve from JWK. Property 'crv' is required`);\n        }\n        if (!json.x) {\n            throw new core.OperationError(`Cannot get property from JWK. Property 'x' is required`);\n        }\n        const keyInfo = new core.asn1.PublicKeyInfo();\n        keyInfo.publicKeyAlgorithm.algorithm = getOidByNamedCurve(json.crv);\n        keyInfo.publicKey = Convert.FromBase64Url(json.x);\n        this.data = Buffer$1.from(AsnSerializer.serialize(keyInfo));\n        return this;\n    }\n}\n\nclass EdCrypto {\n    static async generateKey(algorithm, extractable, keyUsages) {\n        const privateKey = new EdPrivateKey();\n        privateKey.algorithm = algorithm;\n        privateKey.extractable = extractable;\n        privateKey.usages = keyUsages.filter((usage) => this.privateKeyUsages.indexOf(usage) !== -1);\n        const publicKey = new EdPublicKey();\n        publicKey.algorithm = algorithm;\n        publicKey.extractable = true;\n        publicKey.usages = keyUsages.filter((usage) => this.publicKeyUsages.indexOf(usage) !== -1);\n        const type = algorithm.namedCurve.toLowerCase();\n        const keys = crypto.generateKeyPairSync(type, {\n            publicKeyEncoding: {\n                format: \"der\",\n                type: \"spki\",\n            },\n            privateKeyEncoding: {\n                format: \"der\",\n                type: \"pkcs8\",\n            },\n        });\n        privateKey.data = keys.privateKey;\n        publicKey.data = keys.publicKey;\n        const res = {\n            privateKey,\n            publicKey,\n        };\n        return res;\n    }\n    static async sign(algorithm, key, data) {\n        if (!key.pem) {\n            key.pem = `-----BEGIN PRIVATE KEY-----\\n${key.data.toString(\"base64\")}\\n-----END PRIVATE KEY-----`;\n        }\n        const options = {\n            key: key.pem,\n        };\n        const signature = crypto.sign(null, Buffer$1.from(data), options);\n        return core.BufferSourceConverter.toArrayBuffer(signature);\n    }\n    static async verify(algorithm, key, signature, data) {\n        if (!key.pem) {\n            key.pem = `-----BEGIN PUBLIC KEY-----\\n${key.data.toString(\"base64\")}\\n-----END PUBLIC KEY-----`;\n        }\n        const options = {\n            key: key.pem,\n        };\n        const ok = crypto.verify(null, Buffer$1.from(data), options, Buffer$1.from(signature));\n        return ok;\n    }\n    static async deriveBits(algorithm, baseKey, length) {\n        const publicKey = crypto.createPublicKey({\n            key: algorithm.public.data,\n            format: \"der\",\n            type: \"spki\",\n        });\n        const privateKey = crypto.createPrivateKey({\n            key: baseKey.data,\n            format: \"der\",\n            type: \"pkcs8\",\n        });\n        const bits = crypto.diffieHellman({\n            publicKey,\n            privateKey,\n        });\n        return new Uint8Array(bits).buffer.slice(0, length >> 3);\n    }\n    static async exportKey(format, key) {\n        switch (format.toLowerCase()) {\n            case \"jwk\":\n                return JsonSerializer.toJSON(key);\n            case \"pkcs8\":\n            case \"spki\":\n                return new Uint8Array(key.data).buffer;\n            case \"raw\": {\n                const publicKeyInfo = AsnParser.parse(key.data, core.asn1.PublicKeyInfo);\n                return publicKeyInfo.publicKey;\n            }\n            default:\n                throw new core.OperationError(\"format: Must be 'jwk', 'raw', pkcs8' or 'spki'\");\n        }\n    }\n    static async importKey(format, keyData, algorithm, extractable, keyUsages) {\n        switch (format.toLowerCase()) {\n            case \"jwk\": {\n                const jwk = keyData;\n                if (jwk.d) {\n                    const asnKey = JsonParser.fromJSON(keyData, { targetSchema: core.asn1.CurvePrivateKey });\n                    return this.importPrivateKey(asnKey, algorithm, extractable, keyUsages);\n                }\n                else {\n                    if (!jwk.x) {\n                        throw new TypeError(\"keyData: Cannot get required 'x' filed\");\n                    }\n                    return this.importPublicKey(Convert.FromBase64Url(jwk.x), algorithm, extractable, keyUsages);\n                }\n            }\n            case \"raw\": {\n                return this.importPublicKey(keyData, algorithm, extractable, keyUsages);\n            }\n            case \"spki\": {\n                const keyInfo = AsnParser.parse(new Uint8Array(keyData), core.asn1.PublicKeyInfo);\n                return this.importPublicKey(keyInfo.publicKey, algorithm, extractable, keyUsages);\n            }\n            case \"pkcs8\": {\n                const keyInfo = AsnParser.parse(new Uint8Array(keyData), core.asn1.PrivateKeyInfo);\n                const asnKey = AsnParser.parse(keyInfo.privateKey, core.asn1.CurvePrivateKey);\n                return this.importPrivateKey(asnKey, algorithm, extractable, keyUsages);\n            }\n            default:\n                throw new core.OperationError(\"format: Must be 'jwk', 'raw', 'pkcs8' or 'spki'\");\n        }\n    }\n    static importPrivateKey(asnKey, algorithm, extractable, keyUsages) {\n        const key = new EdPrivateKey();\n        key.fromJSON({\n            crv: algorithm.namedCurve,\n            d: Convert.ToBase64Url(asnKey.d),\n        });\n        key.algorithm = Object.assign({}, algorithm);\n        key.extractable = extractable;\n        key.usages = keyUsages;\n        return key;\n    }\n    static async importPublicKey(asnKey, algorithm, extractable, keyUsages) {\n        const key = new EdPublicKey();\n        key.fromJSON({\n            crv: algorithm.namedCurve,\n            x: Convert.ToBase64Url(asnKey),\n        });\n        key.algorithm = Object.assign({}, algorithm);\n        key.extractable = extractable;\n        key.usages = keyUsages;\n        return key;\n    }\n}\nEdCrypto.publicKeyUsages = [\"verify\"];\nEdCrypto.privateKeyUsages = [\"sign\", \"deriveKey\", \"deriveBits\"];\n\nclass EdDsaProvider extends core.EdDsaProvider {\n    async onGenerateKey(algorithm, extractable, keyUsages) {\n        const keys = await EdCrypto.generateKey({\n            name: this.name,\n            namedCurve: algorithm.namedCurve.replace(/^ed/i, \"Ed\"),\n        }, extractable, keyUsages);\n        return {\n            privateKey: setCryptoKey(keys.privateKey),\n            publicKey: setCryptoKey(keys.publicKey),\n        };\n    }\n    async onSign(algorithm, key, data) {\n        return EdCrypto.sign(algorithm, getCryptoKey(key), new Uint8Array(data));\n    }\n    async onVerify(algorithm, key, signature, data) {\n        return EdCrypto.verify(algorithm, getCryptoKey(key), new Uint8Array(signature), new Uint8Array(data));\n    }\n    async onExportKey(format, key) {\n        return EdCrypto.exportKey(format, getCryptoKey(key));\n    }\n    async onImportKey(format, keyData, algorithm, extractable, keyUsages) {\n        const key = await EdCrypto.importKey(format, keyData, { ...algorithm, name: this.name }, extractable, keyUsages);\n        return setCryptoKey(key);\n    }\n}\n\nclass EcdhEsProvider extends core.EcdhEsProvider {\n    async onGenerateKey(algorithm, extractable, keyUsages) {\n        const keys = await EdCrypto.generateKey({\n            name: this.name,\n            namedCurve: algorithm.namedCurve.toUpperCase(),\n        }, extractable, keyUsages);\n        return {\n            privateKey: setCryptoKey(keys.privateKey),\n            publicKey: setCryptoKey(keys.publicKey),\n        };\n    }\n    async onDeriveBits(algorithm, baseKey, length) {\n        const bits = await EdCrypto.deriveBits({ ...algorithm, public: getCryptoKey(algorithm.public) }, getCryptoKey(baseKey), length);\n        return bits;\n    }\n    async onExportKey(format, key) {\n        return EdCrypto.exportKey(format, getCryptoKey(key));\n    }\n    async onImportKey(format, keyData, algorithm, extractable, keyUsages) {\n        const key = await EdCrypto.importKey(format, keyData, { ...algorithm, name: this.name }, extractable, keyUsages);\n        return setCryptoKey(key);\n    }\n}\n\nclass Ed25519CryptoKey extends CryptoKey {\n    constructor(algorithm, extractable, usages, data) {\n        super();\n        this.algorithm = algorithm;\n        this.extractable = extractable;\n        this.usages = usages;\n        this.data = Buffer.from(data);\n    }\n    toJWK() {\n        return {\n            kty: \"OKP\",\n            crv: this.algorithm.name,\n            key_ops: this.usages,\n            ext: this.extractable,\n        };\n    }\n}\n\nclass Ed25519PrivateKey extends Ed25519CryptoKey {\n    constructor() {\n        super(...arguments);\n        this.type = \"private\";\n    }\n    toJWK() {\n        const pubJwk = crypto.createPublicKey({\n            key: this.data,\n            format: \"pem\",\n        }).export({ format: \"jwk\" });\n        const raw = core.PemConverter.toUint8Array(this.data.toString());\n        const pkcs8 = AsnConvert.parse(raw, core.asn1.PrivateKeyInfo);\n        const d = AsnConvert.parse(pkcs8.privateKey, core.asn1.EdPrivateKey).value;\n        return {\n            ...super.toJWK(),\n            ...pubJwk,\n            d: Buffer.from(new Uint8Array(d)).toString(\"base64url\"),\n        };\n    }\n}\n\nclass Ed25519PublicKey extends Ed25519CryptoKey {\n    constructor() {\n        super(...arguments);\n        this.type = \"public\";\n    }\n    toJWK() {\n        const jwk = crypto.createPublicKey({\n            key: this.data,\n            format: \"pem\",\n        }).export({ format: \"jwk\" });\n        return {\n            ...super.toJWK(),\n            ...jwk,\n        };\n    }\n}\n\nclass Ed25519Crypto {\n    static async generateKey(algorithm, extractable, keyUsages) {\n        const type = algorithm.name.toLowerCase();\n        const keys = crypto.generateKeyPairSync(type, {\n            publicKeyEncoding: {\n                format: \"pem\",\n                type: \"spki\",\n            },\n            privateKeyEncoding: {\n                format: \"pem\",\n                type: \"pkcs8\",\n            },\n        });\n        const keyAlg = {\n            name: type === \"ed25519\" ? \"Ed25519\" : \"X25519\",\n        };\n        const privateKeyUsages = keyUsages.filter((usage) => this.privateKeyUsages.includes(usage));\n        const publicKeyUsages = keyUsages.filter((usage) => this.publicKeyUsages.includes(usage));\n        return {\n            privateKey: new Ed25519PrivateKey(keyAlg, extractable, privateKeyUsages, keys.privateKey),\n            publicKey: new Ed25519PublicKey(keyAlg, true, publicKeyUsages, keys.publicKey),\n        };\n    }\n    static async sign(algorithm, key, data) {\n        const signature = crypto.sign(null, Buffer.from(data), key.data);\n        return core.BufferSourceConverter.toArrayBuffer(signature);\n    }\n    static async verify(algorithm, key, signature, data) {\n        return crypto.verify(null, Buffer.from(data), key.data, signature);\n    }\n    static async exportKey(format, key) {\n        switch (format) {\n            case \"jwk\":\n                return key.toJWK();\n            case \"pkcs8\": {\n                return core.PemConverter.toArrayBuffer(key.data.toString());\n            }\n            case \"spki\": {\n                return core.PemConverter.toArrayBuffer(key.data.toString());\n            }\n            case \"raw\": {\n                const jwk = key.toJWK();\n                return Convert.FromBase64Url(jwk.x);\n            }\n            default:\n                return Promise.reject(new core.OperationError(\"format: Must be 'jwk', 'raw', pkcs8' or 'spki'\"));\n        }\n    }\n    static async importKey(format, keyData, algorithm, extractable, keyUsages) {\n        switch (format) {\n            case \"jwk\": {\n                const jwk = keyData;\n                if (jwk.d) {\n                    const privateData = new core.asn1.EdPrivateKey();\n                    privateData.value = core.BufferSourceConverter.toArrayBuffer(Buffer.from(jwk.d, \"base64url\"));\n                    const pkcs8 = new core.asn1.PrivateKeyInfo();\n                    pkcs8.privateKeyAlgorithm.algorithm = algorithm.name.toLowerCase() === \"ed25519\"\n                        ? core.asn1.idEd25519\n                        : core.asn1.idX25519;\n                    pkcs8.privateKey = AsnConvert.serialize(privateData);\n                    const raw = AsnConvert.serialize(pkcs8);\n                    const pem = core.PemConverter.fromBufferSource(raw, \"PRIVATE KEY\");\n                    return new Ed25519PrivateKey(algorithm, extractable, keyUsages, pem);\n                }\n                else if (jwk.x) {\n                    const pubKey = crypto.createPublicKey({\n                        format: \"jwk\",\n                        key: jwk,\n                    });\n                    const pem = pubKey.export({ format: \"pem\", type: \"spki\" });\n                    return new Ed25519PublicKey(algorithm, extractable, keyUsages, pem);\n                }\n                else {\n                    throw new core.OperationError(\"keyData: Cannot import JWK. 'd' or 'x' must be presented\");\n                }\n            }\n            case \"pkcs8\": {\n                const pem = core.PemConverter.fromBufferSource(keyData, \"PRIVATE KEY\");\n                return new Ed25519PrivateKey(algorithm, extractable, keyUsages, pem);\n            }\n            case \"spki\": {\n                const pem = core.PemConverter.fromBufferSource(keyData, \"PUBLIC KEY\");\n                return new Ed25519PublicKey(algorithm, extractable, keyUsages, pem);\n            }\n            case \"raw\": {\n                const raw = keyData;\n                const key = crypto.createPublicKey({\n                    format: \"jwk\",\n                    key: {\n                        kty: \"OKP\",\n                        crv: algorithm.name.toLowerCase() === \"ed25519\" ? \"Ed25519\" : \"X25519\",\n                        x: Convert.ToBase64Url(raw),\n                    },\n                });\n                const pem = key.export({ format: \"pem\", type: \"spki\" });\n                return new Ed25519PublicKey(algorithm, extractable, keyUsages, pem);\n            }\n            default:\n                return Promise.reject(new core.OperationError(\"format: Must be 'jwk', 'raw', pkcs8' or 'spki'\"));\n        }\n    }\n}\nEd25519Crypto.privateKeyUsages = [\"sign\", \"deriveBits\", \"deriveKey\"];\nEd25519Crypto.publicKeyUsages = [\"verify\"];\n\nclass Ed25519Provider extends core.Ed25519Provider {\n    async onGenerateKey(algorithm, extractable, keyUsages) {\n        const keys = await Ed25519Crypto.generateKey(algorithm, extractable, keyUsages);\n        return {\n            privateKey: setCryptoKey(keys.privateKey),\n            publicKey: setCryptoKey(keys.publicKey),\n        };\n    }\n    async onSign(algorithm, key, data) {\n        const internalKey = getCryptoKey(key);\n        const signature = Ed25519Crypto.sign(algorithm, internalKey, new Uint8Array(data));\n        return signature;\n    }\n    onVerify(algorithm, key, signature, data) {\n        const internalKey = getCryptoKey(key);\n        return Ed25519Crypto.verify(algorithm, internalKey, new Uint8Array(signature), new Uint8Array(data));\n    }\n    async onExportKey(format, key) {\n        const internalKey = getCryptoKey(key);\n        return Ed25519Crypto.exportKey(format, internalKey);\n    }\n    async onImportKey(format, keyData, algorithm, extractable, keyUsages) {\n        const internalKey = await Ed25519Crypto.importKey(format, keyData, algorithm, extractable, keyUsages);\n        return setCryptoKey(internalKey);\n    }\n}\n\nclass X25519Provider extends core.X25519Provider {\n    async onGenerateKey(algorithm, extractable, keyUsages) {\n        const keys = await Ed25519Crypto.generateKey(algorithm, extractable, keyUsages);\n        return {\n            privateKey: setCryptoKey(keys.privateKey),\n            publicKey: setCryptoKey(keys.publicKey),\n        };\n    }\n    async onDeriveBits(algorithm, baseKey, length) {\n        const internalBaseKey = getCryptoKey(baseKey);\n        const internalPublicKey = getCryptoKey(algorithm.public);\n        const publicKey = crypto.createPublicKey({\n            key: internalPublicKey.data.toString(),\n            format: \"pem\",\n            type: \"spki\",\n        });\n        const privateKey = crypto.createPrivateKey({\n            key: internalBaseKey.data.toString(),\n            format: \"pem\",\n            type: \"pkcs8\",\n        });\n        const bits = crypto.diffieHellman({\n            publicKey,\n            privateKey,\n        });\n        return new Uint8Array(bits).buffer.slice(0, length >> 3);\n    }\n    async onExportKey(format, key) {\n        const internalKey = getCryptoKey(key);\n        return Ed25519Crypto.exportKey(format, internalKey);\n    }\n    async onImportKey(format, keyData, algorithm, extractable, keyUsages) {\n        const key = await Ed25519Crypto.importKey(format, keyData, algorithm, extractable, keyUsages);\n        return setCryptoKey(key);\n    }\n    checkCryptoKey(key, keyUsage) {\n        super.checkCryptoKey(key, keyUsage);\n        if (!(getCryptoKey(key) instanceof Ed25519CryptoKey)) {\n            throw new TypeError(\"key: Is not a Ed25519CryptoKey\");\n        }\n    }\n}\n\nclass PbkdfCryptoKey extends CryptoKey {\n}\n\nclass Pbkdf2Provider extends core.Pbkdf2Provider {\n    async onDeriveBits(algorithm, baseKey, length) {\n        return new Promise((resolve, reject) => {\n            const salt = core.BufferSourceConverter.toArrayBuffer(algorithm.salt);\n            const hash = algorithm.hash.name.replace(\"-\", \"\");\n            crypto.pbkdf2(getCryptoKey(baseKey).data, Buffer$1.from(salt), algorithm.iterations, length >> 3, hash, (err, derivedBits) => {\n                if (err) {\n                    reject(err);\n                }\n                else {\n                    resolve(new Uint8Array(derivedBits).buffer);\n                }\n            });\n        });\n    }\n    async onImportKey(format, keyData, algorithm, extractable, keyUsages) {\n        if (format === \"raw\") {\n            const key = new PbkdfCryptoKey();\n            key.data = Buffer$1.from(keyData);\n            key.algorithm = { name: this.name };\n            key.extractable = false;\n            key.usages = keyUsages;\n            return setCryptoKey(key);\n        }\n        throw new core.OperationError(\"format: Must be 'raw'\");\n    }\n    checkCryptoKey(key, keyUsage) {\n        super.checkCryptoKey(key, keyUsage);\n        if (!(getCryptoKey(key) instanceof PbkdfCryptoKey)) {\n            throw new TypeError(\"key: Is not PBKDF CryptoKey\");\n        }\n    }\n}\n\nclass HmacCryptoKey extends CryptoKey {\n    get alg() {\n        const hash = this.algorithm.hash.name.toUpperCase();\n        return `HS${hash.replace(\"SHA-\", \"\")}`;\n    }\n    set alg(value) {\n    }\n}\n__decorate([\n    JsonProp({ name: \"k\", converter: JsonBase64UrlConverter })\n], HmacCryptoKey.prototype, \"data\", void 0);\n\nclass HmacProvider extends core.HmacProvider {\n    async onGenerateKey(algorithm, extractable, keyUsages) {\n        const length = (algorithm.length || this.getDefaultLength(algorithm.hash.name)) >> 3 << 3;\n        const key = new HmacCryptoKey();\n        key.algorithm = {\n            ...algorithm,\n            length,\n            name: this.name,\n        };\n        key.extractable = extractable;\n        key.usages = keyUsages;\n        key.data = crypto.randomBytes(length >> 3);\n        return setCryptoKey(key);\n    }\n    async onSign(algorithm, key, data) {\n        const cryptoAlg = ShaCrypto.getAlgorithmName(key.algorithm.hash);\n        const hmac = crypto.createHmac(cryptoAlg, getCryptoKey(key).data)\n            .update(Buffer$1.from(data)).digest();\n        return new Uint8Array(hmac).buffer;\n    }\n    async onVerify(algorithm, key, signature, data) {\n        const cryptoAlg = ShaCrypto.getAlgorithmName(key.algorithm.hash);\n        const hmac = crypto.createHmac(cryptoAlg, getCryptoKey(key).data)\n            .update(Buffer$1.from(data)).digest();\n        return hmac.compare(Buffer$1.from(signature)) === 0;\n    }\n    async onImportKey(format, keyData, algorithm, extractable, keyUsages) {\n        let key;\n        switch (format.toLowerCase()) {\n            case \"jwk\":\n                key = JsonParser.fromJSON(keyData, { targetSchema: HmacCryptoKey });\n                break;\n            case \"raw\":\n                key = new HmacCryptoKey();\n                key.data = Buffer$1.from(keyData);\n                break;\n            default:\n                throw new core.OperationError(\"format: Must be 'jwk' or 'raw'\");\n        }\n        key.algorithm = {\n            hash: { name: algorithm.hash.name },\n            name: this.name,\n            length: key.data.length << 3,\n        };\n        key.extractable = extractable;\n        key.usages = keyUsages;\n        return setCryptoKey(key);\n    }\n    async onExportKey(format, key) {\n        switch (format.toLowerCase()) {\n            case \"jwk\":\n                return JsonSerializer.toJSON(getCryptoKey(key));\n            case \"raw\":\n                return new Uint8Array(getCryptoKey(key).data).buffer;\n            default:\n                throw new core.OperationError(\"format: Must be 'jwk' or 'raw'\");\n        }\n    }\n    checkCryptoKey(key, keyUsage) {\n        super.checkCryptoKey(key, keyUsage);\n        if (!(getCryptoKey(key) instanceof HmacCryptoKey)) {\n            throw new TypeError(\"key: Is not HMAC CryptoKey\");\n        }\n    }\n}\n\nclass HkdfCryptoKey extends CryptoKey {\n}\n\nclass HkdfProvider extends core.HkdfProvider {\n    async onImportKey(format, keyData, algorithm, extractable, keyUsages) {\n        if (format.toLowerCase() !== \"raw\") {\n            throw new core.OperationError(\"Operation not supported\");\n        }\n        const key = new HkdfCryptoKey();\n        key.data = Buffer$1.from(keyData);\n        key.algorithm = { name: this.name };\n        key.extractable = extractable;\n        key.usages = keyUsages;\n        return setCryptoKey(key);\n    }\n    async onDeriveBits(params, baseKey, length) {\n        const hash = params.hash.name.replace(\"-\", \"\");\n        const hashLength = crypto.createHash(hash).digest().length;\n        const byteLength = length / 8;\n        const info = BufferSourceConverter$1.toUint8Array(params.info);\n        const PRK = crypto.createHmac(hash, BufferSourceConverter$1.toUint8Array(params.salt))\n            .update(BufferSourceConverter$1.toUint8Array(getCryptoKey(baseKey).data))\n            .digest();\n        const blocks = [Buffer$1.alloc(0)];\n        const blockCount = Math.ceil(byteLength / hashLength) + 1;\n        for (let i = 1; i < blockCount; ++i) {\n            blocks.push(crypto.createHmac(hash, PRK)\n                .update(Buffer$1.concat([blocks[i - 1], info, Buffer$1.from([i])]))\n                .digest());\n        }\n        return Buffer$1.concat(blocks).slice(0, byteLength);\n    }\n    checkCryptoKey(key, keyUsage) {\n        super.checkCryptoKey(key, keyUsage);\n        if (!(getCryptoKey(key) instanceof HkdfCryptoKey)) {\n            throw new TypeError(\"key: Is not HKDF CryptoKey\");\n        }\n    }\n}\n\nclass ShakeCrypto {\n    static digest(algorithm, data) {\n        const hash = crypto.createHash(algorithm.name.toLowerCase(), { outputLength: algorithm.length })\n            .update(Buffer$1.from(data)).digest();\n        return new Uint8Array(hash).buffer;\n    }\n}\n\nclass Shake128Provider extends core.Shake128Provider {\n    async onDigest(algorithm, data) {\n        return ShakeCrypto.digest(algorithm, data);\n    }\n}\n\nclass Shake256Provider extends core.Shake256Provider {\n    async onDigest(algorithm, data) {\n        return ShakeCrypto.digest(algorithm, data);\n    }\n}\n\nclass SubtleCrypto extends core.SubtleCrypto {\n    constructor() {\n        var _a;\n        super();\n        this.providers.set(new AesCbcProvider());\n        this.providers.set(new AesCtrProvider());\n        this.providers.set(new AesGcmProvider());\n        this.providers.set(new AesCmacProvider());\n        this.providers.set(new AesKwProvider());\n        this.providers.set(new AesEcbProvider());\n        const ciphers = crypto.getCiphers();\n        if (ciphers.includes(\"des-cbc\")) {\n            this.providers.set(new DesCbcProvider());\n        }\n        this.providers.set(new DesEde3CbcProvider());\n        this.providers.set(new RsaSsaProvider());\n        this.providers.set(new RsaPssProvider());\n        this.providers.set(new RsaOaepProvider());\n        this.providers.set(new RsaEsProvider());\n        this.providers.set(new EcdsaProvider());\n        this.providers.set(new EcdhProvider());\n        this.providers.set(new Sha1Provider());\n        this.providers.set(new Sha256Provider());\n        this.providers.set(new Sha384Provider());\n        this.providers.set(new Sha512Provider());\n        this.providers.set(new Pbkdf2Provider());\n        this.providers.set(new HmacProvider());\n        this.providers.set(new HkdfProvider());\n        const nodeMajorVersion = (_a = /^v(\\d+)/.exec(process.version)) === null || _a === void 0 ? void 0 : _a[1];\n        if (nodeMajorVersion && parseInt(nodeMajorVersion, 10) >= 12) {\n            this.providers.set(new Shake128Provider());\n            this.providers.set(new Shake256Provider());\n        }\n        const hashes = crypto.getHashes();\n        if (hashes.includes(\"sha3-256\")) {\n            this.providers.set(new Sha3256Provider());\n        }\n        if (hashes.includes(\"sha3-384\")) {\n            this.providers.set(new Sha3384Provider());\n        }\n        if (hashes.includes(\"sha3-512\")) {\n            this.providers.set(new Sha3512Provider());\n        }\n        if (nodeMajorVersion && parseInt(nodeMajorVersion, 10) >= 14) {\n            this.providers.set(new EdDsaProvider());\n            this.providers.set(new EcdhEsProvider());\n            this.providers.set(new Ed25519Provider());\n            this.providers.set(new X25519Provider());\n        }\n    }\n}\n\nclass Crypto extends core.Crypto {\n    constructor() {\n        super(...arguments);\n        this.subtle = new SubtleCrypto();\n    }\n    getRandomValues(array) {\n        if (!ArrayBuffer.isView(array)) {\n            throw new TypeError(\"Failed to execute 'getRandomValues' on 'Crypto': parameter 1 is not of type 'ArrayBufferView'\");\n        }\n        const buffer = Buffer$1.from(array.buffer, array.byteOffset, array.byteLength);\n        crypto.randomFillSync(buffer);\n        return array;\n    }\n}\n\nexport { Crypto };\n", "/*!\n Copyright (c) Peculiar Ventures, LLC\n*/\n\nimport { Convert, BufferSourceConverter, combine } from 'pvtsutils';\nexport { BufferSourceConverter } from 'pvtsutils';\nimport { AsnProp, AsnPropTypes, AsnType, AsnTypeTypes, AsnIntegerConverter, AsnSerializer, AsnConvert } from '@peculiar/asn1-schema';\nimport { __decorate } from 'tslib';\nimport { JsonProp, JsonPropTypes } from '@peculiar/json-schema';\nimport * as asn1 from 'asn1js';\n\nclass CryptoError extends Error {\n}\n\nclass AlgorithmError extends CryptoError {\n}\n\nclass UnsupportedOperationError extends CryptoError {\n    constructor(methodName) {\n        super(`Unsupported operation: ${methodName ? `${methodName}` : \"\"}`);\n    }\n}\n\nclass OperationError extends CryptoError {\n}\n\nclass RequiredPropertyError extends CryptoError {\n    constructor(propName) {\n        super(`${propName}: Missing required property`);\n    }\n}\n\nclass PemConverter {\n    static toArrayBuffer(pem) {\n        const base64 = pem\n            .replace(/-{5}(BEGIN|END) .*-{5}/g, \"\")\n            .replace(\"\\r\", \"\")\n            .replace(\"\\n\", \"\");\n        return Convert.FromBase64(base64);\n    }\n    static toUint8Array(pem) {\n        const bytes = this.toArrayBuffer(pem);\n        return new Uint8Array(bytes);\n    }\n    static fromBufferSource(buffer, tag) {\n        const base64 = Convert.ToBase64(buffer);\n        let sliced;\n        let offset = 0;\n        const rows = [];\n        while (offset < base64.length) {\n            sliced = base64.slice(offset, offset + 64);\n            if (sliced.length) {\n                rows.push(sliced);\n            }\n            else {\n                break;\n            }\n            offset += 64;\n        }\n        const upperCaseTag = tag.toUpperCase();\n        return `-----BEGIN ${upperCaseTag}-----\\n${rows.join(\"\\n\")}\\n-----END ${upperCaseTag}-----`;\n    }\n    static isPEM(data) {\n        return /-----BEGIN .+-----[A-Za-z0-9+/+=\\s\\n]+-----END .+-----/i.test(data);\n    }\n    static getTagName(pem) {\n        if (!this.isPEM(pem)) {\n            throw new Error(\"Bad parameter. Incoming data is not right PEM\");\n        }\n        const res = /-----BEGIN (.+)-----/.exec(pem);\n        if (!res) {\n            throw new Error(\"Cannot get tag from PEM\");\n        }\n        return res[1];\n    }\n    static hasTagName(pem, tagName) {\n        const tag = this.getTagName(pem);\n        return tagName.toLowerCase() === tag.toLowerCase();\n    }\n    static isCertificate(pem) {\n        return this.hasTagName(pem, \"certificate\");\n    }\n    static isCertificateRequest(pem) {\n        return this.hasTagName(pem, \"certificate request\");\n    }\n    static isCRL(pem) {\n        return this.hasTagName(pem, \"x509 crl\");\n    }\n    static isPublicKey(pem) {\n        return this.hasTagName(pem, \"public key\");\n    }\n}\n\nfunction isJWK(data) {\n    return typeof data === \"object\" && \"kty\" in data;\n}\n\nclass ProviderCrypto {\n    async digest(...args) {\n        this.checkDigest.apply(this, args);\n        return this.onDigest.apply(this, args);\n    }\n    checkDigest(algorithm, _data) {\n        this.checkAlgorithmName(algorithm);\n    }\n    async onDigest(_algorithm, _data) {\n        throw new UnsupportedOperationError(\"digest\");\n    }\n    async generateKey(...args) {\n        this.checkGenerateKey.apply(this, args);\n        return this.onGenerateKey.apply(this, args);\n    }\n    checkGenerateKey(algorithm, _extractable, keyUsages, ..._args) {\n        this.checkAlgorithmName(algorithm);\n        this.checkGenerateKeyParams(algorithm);\n        if (!(keyUsages && keyUsages.length)) {\n            throw new TypeError(`Usages cannot be empty when creating a key.`);\n        }\n        let allowedUsages;\n        if (Array.isArray(this.usages)) {\n            allowedUsages = this.usages;\n        }\n        else {\n            allowedUsages = this.usages.privateKey.concat(this.usages.publicKey);\n        }\n        this.checkKeyUsages(keyUsages, allowedUsages);\n    }\n    checkGenerateKeyParams(_algorithm) {\n    }\n    async onGenerateKey(_algorithm, _extractable, _keyUsages, ..._args) {\n        throw new UnsupportedOperationError(\"generateKey\");\n    }\n    async sign(...args) {\n        this.checkSign.apply(this, args);\n        return this.onSign.apply(this, args);\n    }\n    checkSign(algorithm, key, _data, ..._args) {\n        this.checkAlgorithmName(algorithm);\n        this.checkAlgorithmParams(algorithm);\n        this.checkCryptoKey(key, \"sign\");\n    }\n    async onSign(_algorithm, _key, _data, ..._args) {\n        throw new UnsupportedOperationError(\"sign\");\n    }\n    async verify(...args) {\n        this.checkVerify.apply(this, args);\n        return this.onVerify.apply(this, args);\n    }\n    checkVerify(algorithm, key, _signature, _data, ..._args) {\n        this.checkAlgorithmName(algorithm);\n        this.checkAlgorithmParams(algorithm);\n        this.checkCryptoKey(key, \"verify\");\n    }\n    async onVerify(_algorithm, _key, _signature, _data, ..._args) {\n        throw new UnsupportedOperationError(\"verify\");\n    }\n    async encrypt(...args) {\n        this.checkEncrypt.apply(this, args);\n        return this.onEncrypt.apply(this, args);\n    }\n    checkEncrypt(algorithm, key, _data, options = {}, ..._args) {\n        this.checkAlgorithmName(algorithm);\n        this.checkAlgorithmParams(algorithm);\n        this.checkCryptoKey(key, options.keyUsage ? \"encrypt\" : void 0);\n    }\n    async onEncrypt(_algorithm, _key, _data, ..._args) {\n        throw new UnsupportedOperationError(\"encrypt\");\n    }\n    async decrypt(...args) {\n        this.checkDecrypt.apply(this, args);\n        return this.onDecrypt.apply(this, args);\n    }\n    checkDecrypt(algorithm, key, _data, options = {}, ..._args) {\n        this.checkAlgorithmName(algorithm);\n        this.checkAlgorithmParams(algorithm);\n        this.checkCryptoKey(key, options.keyUsage ? \"decrypt\" : void 0);\n    }\n    async onDecrypt(_algorithm, _key, _data, ..._args) {\n        throw new UnsupportedOperationError(\"decrypt\");\n    }\n    async deriveBits(...args) {\n        this.checkDeriveBits.apply(this, args);\n        return this.onDeriveBits.apply(this, args);\n    }\n    checkDeriveBits(algorithm, baseKey, length, options = {}, ..._args) {\n        this.checkAlgorithmName(algorithm);\n        this.checkAlgorithmParams(algorithm);\n        this.checkCryptoKey(baseKey, options.keyUsage ? \"deriveBits\" : void 0);\n        if (length % 8 !== 0) {\n            throw new OperationError(\"length: Is not multiple of 8\");\n        }\n    }\n    async onDeriveBits(_algorithm, _baseKey, _length, ..._args) {\n        throw new UnsupportedOperationError(\"deriveBits\");\n    }\n    async exportKey(...args) {\n        this.checkExportKey.apply(this, args);\n        return this.onExportKey.apply(this, args);\n    }\n    checkExportKey(format, key, ..._args) {\n        this.checkKeyFormat(format);\n        this.checkCryptoKey(key);\n        if (!key.extractable) {\n            throw new CryptoError(\"key: Is not extractable\");\n        }\n    }\n    async onExportKey(_format, _key, ..._args) {\n        throw new UnsupportedOperationError(\"exportKey\");\n    }\n    async importKey(...args) {\n        this.checkImportKey.apply(this, args);\n        return this.onImportKey.apply(this, args);\n    }\n    checkImportKey(format, keyData, algorithm, _extractable, keyUsages, ..._args) {\n        this.checkKeyFormat(format);\n        this.checkKeyData(format, keyData);\n        this.checkAlgorithmName(algorithm);\n        this.checkImportParams(algorithm);\n        if (Array.isArray(this.usages)) {\n            this.checkKeyUsages(keyUsages, this.usages);\n        }\n    }\n    async onImportKey(_format, _keyData, _algorithm, _extractable, _keyUsages, ..._args) {\n        throw new UnsupportedOperationError(\"importKey\");\n    }\n    checkAlgorithmName(algorithm) {\n        if (algorithm.name.toLowerCase() !== this.name.toLowerCase()) {\n            throw new AlgorithmError(\"Unrecognized name\");\n        }\n    }\n    checkAlgorithmParams(_algorithm) {\n    }\n    checkDerivedKeyParams(_algorithm) {\n    }\n    checkKeyUsages(usages, allowed) {\n        for (const usage of usages) {\n            if (allowed.indexOf(usage) === -1) {\n                throw new TypeError(\"Cannot create a key using the specified key usages\");\n            }\n        }\n    }\n    checkCryptoKey(key, keyUsage) {\n        this.checkAlgorithmName(key.algorithm);\n        if (keyUsage && key.usages.indexOf(keyUsage) === -1) {\n            throw new CryptoError(`key does not match that of operation`);\n        }\n    }\n    checkRequiredProperty(data, propName) {\n        if (!(propName in data)) {\n            throw new RequiredPropertyError(propName);\n        }\n    }\n    checkHashAlgorithm(algorithm, hashAlgorithms) {\n        for (const item of hashAlgorithms) {\n            if (item.toLowerCase() === algorithm.name.toLowerCase()) {\n                return;\n            }\n        }\n        throw new OperationError(`hash: Must be one of ${hashAlgorithms.join(\", \")}`);\n    }\n    checkImportParams(_algorithm) {\n    }\n    checkKeyFormat(format) {\n        switch (format) {\n            case \"raw\":\n            case \"pkcs8\":\n            case \"spki\":\n            case \"jwk\":\n                break;\n            default:\n                throw new TypeError(\"format: Is invalid value. Must be 'jwk', 'raw', 'spki', or 'pkcs8'\");\n        }\n    }\n    checkKeyData(format, keyData) {\n        if (!keyData) {\n            throw new TypeError(\"keyData: Cannot be empty on empty on key importing\");\n        }\n        if (format === \"jwk\") {\n            if (!isJWK(keyData)) {\n                throw new TypeError(\"keyData: Is not JsonWebToken\");\n            }\n        }\n        else if (!BufferSourceConverter.isBufferSource(keyData)) {\n            throw new TypeError(\"keyData: Is not ArrayBufferView or ArrayBuffer\");\n        }\n    }\n    prepareData(data) {\n        return BufferSourceConverter.toArrayBuffer(data);\n    }\n}\n\nclass AesProvider extends ProviderCrypto {\n    checkGenerateKeyParams(algorithm) {\n        this.checkRequiredProperty(algorithm, \"length\");\n        if (typeof algorithm.length !== \"number\") {\n            throw new TypeError(\"length: Is not of type Number\");\n        }\n        switch (algorithm.length) {\n            case 128:\n            case 192:\n            case 256:\n                break;\n            default:\n                throw new TypeError(\"length: Must be 128, 192, or 256\");\n        }\n    }\n    checkDerivedKeyParams(algorithm) {\n        this.checkGenerateKeyParams(algorithm);\n    }\n}\n\nclass AesCbcProvider extends AesProvider {\n    constructor() {\n        super(...arguments);\n        this.name = \"AES-CBC\";\n        this.usages = [\"encrypt\", \"decrypt\", \"wrapKey\", \"unwrapKey\"];\n    }\n    checkAlgorithmParams(algorithm) {\n        this.checkRequiredProperty(algorithm, \"iv\");\n        if (!(algorithm.iv instanceof ArrayBuffer || ArrayBuffer.isView(algorithm.iv))) {\n            throw new TypeError(\"iv: Is not of type '(ArrayBuffer or ArrayBufferView)'\");\n        }\n        if (algorithm.iv.byteLength !== 16) {\n            throw new TypeError(\"iv: Must have length 16 bytes\");\n        }\n    }\n}\n\nclass AesCmacProvider extends AesProvider {\n    constructor() {\n        super(...arguments);\n        this.name = \"AES-CMAC\";\n        this.usages = [\"sign\", \"verify\"];\n    }\n    checkAlgorithmParams(algorithm) {\n        this.checkRequiredProperty(algorithm, \"length\");\n        if (typeof algorithm.length !== \"number\") {\n            throw new TypeError(\"length: Is not a Number\");\n        }\n        if (algorithm.length < 1) {\n            throw new OperationError(\"length: Must be more than 0\");\n        }\n    }\n}\n\nclass AesCtrProvider extends AesProvider {\n    constructor() {\n        super(...arguments);\n        this.name = \"AES-CTR\";\n        this.usages = [\"encrypt\", \"decrypt\", \"wrapKey\", \"unwrapKey\"];\n    }\n    checkAlgorithmParams(algorithm) {\n        this.checkRequiredProperty(algorithm, \"counter\");\n        if (!(algorithm.counter instanceof ArrayBuffer || ArrayBuffer.isView(algorithm.counter))) {\n            throw new TypeError(\"counter: Is not of type '(ArrayBuffer or ArrayBufferView)'\");\n        }\n        if (algorithm.counter.byteLength !== 16) {\n            throw new TypeError(\"iv: Must have length 16 bytes\");\n        }\n        this.checkRequiredProperty(algorithm, \"length\");\n        if (typeof algorithm.length !== \"number\") {\n            throw new TypeError(\"length: Is not a Number\");\n        }\n        if (algorithm.length < 1) {\n            throw new OperationError(\"length: Must be more than 0\");\n        }\n    }\n}\n\nclass AesEcbProvider extends AesProvider {\n    constructor() {\n        super(...arguments);\n        this.name = \"AES-ECB\";\n        this.usages = [\"encrypt\", \"decrypt\", \"wrapKey\", \"unwrapKey\"];\n    }\n}\n\nclass AesGcmProvider extends AesProvider {\n    constructor() {\n        super(...arguments);\n        this.name = \"AES-GCM\";\n        this.usages = [\"encrypt\", \"decrypt\", \"wrapKey\", \"unwrapKey\"];\n    }\n    checkAlgorithmParams(algorithm) {\n        var _a;\n        this.checkRequiredProperty(algorithm, \"iv\");\n        if (!(algorithm.iv instanceof ArrayBuffer || ArrayBuffer.isView(algorithm.iv))) {\n            throw new TypeError(\"iv: Is not of type '(ArrayBuffer or ArrayBufferView)'\");\n        }\n        if (algorithm.iv.byteLength < 1) {\n            throw new OperationError(\"iv: Must have length more than 0 and less than 2^64 - 1\");\n        }\n        (_a = algorithm.tagLength) !== null && _a !== void 0 ? _a : (algorithm.tagLength = 128);\n        switch (algorithm.tagLength) {\n            case 32:\n            case 64:\n            case 96:\n            case 104:\n            case 112:\n            case 120:\n            case 128:\n                break;\n            default:\n                throw new OperationError(\"tagLength: Must be one of 32, 64, 96, 104, 112, 120 or 128\");\n        }\n    }\n}\n\nclass AesKwProvider extends AesProvider {\n    constructor() {\n        super(...arguments);\n        this.name = \"AES-KW\";\n        this.usages = [\"wrapKey\", \"unwrapKey\"];\n    }\n}\n\nclass DesProvider extends ProviderCrypto {\n    constructor() {\n        super(...arguments);\n        this.usages = [\"encrypt\", \"decrypt\", \"wrapKey\", \"unwrapKey\"];\n    }\n    checkAlgorithmParams(algorithm) {\n        if (this.ivSize) {\n            this.checkRequiredProperty(algorithm, \"iv\");\n            if (!(algorithm.iv instanceof ArrayBuffer || ArrayBuffer.isView(algorithm.iv))) {\n                throw new TypeError(\"iv: Is not of type '(ArrayBuffer or ArrayBufferView)'\");\n            }\n            if (algorithm.iv.byteLength !== this.ivSize) {\n                throw new TypeError(`iv: Must have length ${this.ivSize} bytes`);\n            }\n        }\n    }\n    checkGenerateKeyParams(algorithm) {\n        this.checkRequiredProperty(algorithm, \"length\");\n        if (typeof algorithm.length !== \"number\") {\n            throw new TypeError(\"length: Is not of type Number\");\n        }\n        if (algorithm.length !== this.keySizeBits) {\n            throw new OperationError(`algorithm.length: Must be ${this.keySizeBits}`);\n        }\n    }\n    checkDerivedKeyParams(algorithm) {\n        this.checkGenerateKeyParams(algorithm);\n    }\n}\n\nclass RsaProvider extends ProviderCrypto {\n    constructor() {\n        super(...arguments);\n        this.hashAlgorithms = [\"SHA-1\", \"SHA-256\", \"SHA-384\", \"SHA-512\"];\n    }\n    checkGenerateKeyParams(algorithm) {\n        this.checkRequiredProperty(algorithm, \"hash\");\n        this.checkHashAlgorithm(algorithm.hash, this.hashAlgorithms);\n        this.checkRequiredProperty(algorithm, \"publicExponent\");\n        if (!(algorithm.publicExponent && algorithm.publicExponent instanceof Uint8Array)) {\n            throw new TypeError(\"publicExponent: Missing or not a Uint8Array\");\n        }\n        const publicExponent = Convert.ToBase64(algorithm.publicExponent);\n        if (!(publicExponent === \"Aw==\" || publicExponent === \"AQAB\")) {\n            throw new TypeError(\"publicExponent: Must be [3] or [1,0,1]\");\n        }\n        this.checkRequiredProperty(algorithm, \"modulusLength\");\n        if (algorithm.modulusLength % 8\n            || algorithm.modulusLength < 256\n            || algorithm.modulusLength > 16384) {\n            throw new TypeError(\"The modulus length must be a multiple of 8 bits and >= 256 and <= 16384\");\n        }\n    }\n    checkImportParams(algorithm) {\n        this.checkRequiredProperty(algorithm, \"hash\");\n        this.checkHashAlgorithm(algorithm.hash, this.hashAlgorithms);\n    }\n}\n\nclass RsaSsaProvider extends RsaProvider {\n    constructor() {\n        super(...arguments);\n        this.name = \"RSASSA-PKCS1-v1_5\";\n        this.usages = {\n            privateKey: [\"sign\"],\n            publicKey: [\"verify\"],\n        };\n    }\n}\n\nclass RsaPssProvider extends RsaProvider {\n    constructor() {\n        super(...arguments);\n        this.name = \"RSA-PSS\";\n        this.usages = {\n            privateKey: [\"sign\"],\n            publicKey: [\"verify\"],\n        };\n    }\n    checkAlgorithmParams(algorithm) {\n        this.checkRequiredProperty(algorithm, \"saltLength\");\n        if (typeof algorithm.saltLength !== \"number\") {\n            throw new TypeError(\"saltLength: Is not a Number\");\n        }\n        if (algorithm.saltLength < 0) {\n            throw new RangeError(\"saltLength: Must be positive number\");\n        }\n    }\n}\n\nclass RsaOaepProvider extends RsaProvider {\n    constructor() {\n        super(...arguments);\n        this.name = \"RSA-OAEP\";\n        this.usages = {\n            privateKey: [\"decrypt\", \"unwrapKey\"],\n            publicKey: [\"encrypt\", \"wrapKey\"],\n        };\n    }\n    checkAlgorithmParams(algorithm) {\n        if (algorithm.label\n            && !(algorithm.label instanceof ArrayBuffer || ArrayBuffer.isView(algorithm.label))) {\n            throw new TypeError(\"label: Is not of type '(ArrayBuffer or ArrayBufferView)'\");\n        }\n    }\n}\n\nclass EllipticProvider extends ProviderCrypto {\n    checkGenerateKeyParams(algorithm) {\n        this.checkRequiredProperty(algorithm, \"namedCurve\");\n        this.checkNamedCurve(algorithm.namedCurve);\n    }\n    checkNamedCurve(namedCurve) {\n        for (const item of this.namedCurves) {\n            if (item.toLowerCase() === namedCurve.toLowerCase()) {\n                return;\n            }\n        }\n        throw new OperationError(`namedCurve: Must be one of ${this.namedCurves.join(\", \")}`);\n    }\n}\n\nclass EcdsaProvider extends EllipticProvider {\n    constructor() {\n        super(...arguments);\n        this.name = \"ECDSA\";\n        this.hashAlgorithms = [\"SHA-1\", \"SHA-256\", \"SHA-384\", \"SHA-512\"];\n        this.usages = {\n            privateKey: [\"sign\"],\n            publicKey: [\"verify\"],\n        };\n        this.namedCurves = [\"P-256\", \"P-384\", \"P-521\", \"K-256\"];\n    }\n    checkAlgorithmParams(algorithm) {\n        this.checkRequiredProperty(algorithm, \"hash\");\n        this.checkHashAlgorithm(algorithm.hash, this.hashAlgorithms);\n    }\n}\n\nconst KEY_TYPES = [\"secret\", \"private\", \"public\"];\nclass CryptoKey {\n    static create(algorithm, type, extractable, usages) {\n        const key = new this();\n        key.algorithm = algorithm;\n        key.type = type;\n        key.extractable = extractable;\n        key.usages = usages;\n        return key;\n    }\n    static isKeyType(data) {\n        return KEY_TYPES.indexOf(data) !== -1;\n    }\n    get [Symbol.toStringTag]() {\n        return \"CryptoKey\";\n    }\n}\n\nclass EcdhProvider extends EllipticProvider {\n    constructor() {\n        super(...arguments);\n        this.name = \"ECDH\";\n        this.usages = {\n            privateKey: [\"deriveBits\", \"deriveKey\"],\n            publicKey: [],\n        };\n        this.namedCurves = [\"P-256\", \"P-384\", \"P-521\", \"K-256\"];\n    }\n    checkAlgorithmParams(algorithm) {\n        this.checkRequiredProperty(algorithm, \"public\");\n        if (!(algorithm.public instanceof CryptoKey)) {\n            throw new TypeError(\"public: Is not a CryptoKey\");\n        }\n        if (algorithm.public.type !== \"public\") {\n            throw new OperationError(\"public: Is not a public key\");\n        }\n        if (algorithm.public.algorithm.name !== this.name) {\n            throw new OperationError(`public: Is not ${this.name} key`);\n        }\n    }\n}\n\nclass EcdhEsProvider extends EcdhProvider {\n    constructor() {\n        super(...arguments);\n        this.name = \"ECDH-ES\";\n        this.namedCurves = [\"X25519\", \"X448\"];\n    }\n}\n\nclass EdDsaProvider extends EllipticProvider {\n    constructor() {\n        super(...arguments);\n        this.name = \"EdDSA\";\n        this.usages = {\n            privateKey: [\"sign\"],\n            publicKey: [\"verify\"],\n        };\n        this.namedCurves = [\"Ed25519\", \"Ed448\"];\n    }\n}\n\nlet ObjectIdentifier = class ObjectIdentifier {\n    constructor(value) {\n        if (value) {\n            this.value = value;\n        }\n    }\n};\n__decorate([\n    AsnProp({ type: AsnPropTypes.ObjectIdentifier })\n], ObjectIdentifier.prototype, \"value\", void 0);\nObjectIdentifier = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], ObjectIdentifier);\n\nclass AlgorithmIdentifier {\n    constructor(params) {\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({\n        type: AsnPropTypes.ObjectIdentifier,\n    })\n], AlgorithmIdentifier.prototype, \"algorithm\", void 0);\n__decorate([\n    AsnProp({\n        type: AsnPropTypes.Any,\n        optional: true,\n    })\n], AlgorithmIdentifier.prototype, \"parameters\", void 0);\n\nclass PrivateKeyInfo {\n    constructor() {\n        this.version = 0;\n        this.privateKeyAlgorithm = new AlgorithmIdentifier();\n        this.privateKey = new ArrayBuffer(0);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer })\n], PrivateKeyInfo.prototype, \"version\", void 0);\n__decorate([\n    AsnProp({ type: AlgorithmIdentifier })\n], PrivateKeyInfo.prototype, \"privateKeyAlgorithm\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.OctetString })\n], PrivateKeyInfo.prototype, \"privateKey\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Any, optional: true })\n], PrivateKeyInfo.prototype, \"attributes\", void 0);\n\nclass PublicKeyInfo {\n    constructor() {\n        this.publicKeyAlgorithm = new AlgorithmIdentifier();\n        this.publicKey = new ArrayBuffer(0);\n    }\n}\n__decorate([\n    AsnProp({ type: AlgorithmIdentifier })\n], PublicKeyInfo.prototype, \"publicKeyAlgorithm\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.BitString })\n], PublicKeyInfo.prototype, \"publicKey\", void 0);\n\nconst JsonBase64UrlArrayBufferConverter = {\n    fromJSON: (value) => Convert.FromBase64Url(value),\n    toJSON: (value) => Convert.ToBase64Url(new Uint8Array(value)),\n};\n\nconst AsnIntegerArrayBufferConverter = {\n    fromASN: (value) => {\n        const valueHex = value.valueBlock.valueHex;\n        return !(new Uint8Array(valueHex)[0])\n            ? value.valueBlock.valueHex.slice(1)\n            : value.valueBlock.valueHex;\n    },\n    toASN: (value) => {\n        const valueHex = new Uint8Array(value)[0] > 127\n            ? combine(new Uint8Array([0]).buffer, value)\n            : value;\n        return new asn1.Integer({ valueHex });\n    },\n};\n\nvar index$3 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  AsnIntegerArrayBufferConverter: AsnIntegerArrayBufferConverter,\n  JsonBase64UrlArrayBufferConverter: JsonBase64UrlArrayBufferConverter\n});\n\nclass RsaPrivateKey {\n    constructor() {\n        this.version = 0;\n        this.modulus = new ArrayBuffer(0);\n        this.publicExponent = new ArrayBuffer(0);\n        this.privateExponent = new ArrayBuffer(0);\n        this.prime1 = new ArrayBuffer(0);\n        this.prime2 = new ArrayBuffer(0);\n        this.exponent1 = new ArrayBuffer(0);\n        this.exponent2 = new ArrayBuffer(0);\n        this.coefficient = new ArrayBuffer(0);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerConverter })\n], RsaPrivateKey.prototype, \"version\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerArrayBufferConverter }),\n    JsonProp({ name: \"n\", converter: JsonBase64UrlArrayBufferConverter })\n], RsaPrivateKey.prototype, \"modulus\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerArrayBufferConverter }),\n    JsonProp({ name: \"e\", converter: JsonBase64UrlArrayBufferConverter })\n], RsaPrivateKey.prototype, \"publicExponent\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerArrayBufferConverter }),\n    JsonProp({ name: \"d\", converter: JsonBase64UrlArrayBufferConverter })\n], RsaPrivateKey.prototype, \"privateExponent\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerArrayBufferConverter }),\n    JsonProp({ name: \"p\", converter: JsonBase64UrlArrayBufferConverter })\n], RsaPrivateKey.prototype, \"prime1\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerArrayBufferConverter }),\n    JsonProp({ name: \"q\", converter: JsonBase64UrlArrayBufferConverter })\n], RsaPrivateKey.prototype, \"prime2\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerArrayBufferConverter }),\n    JsonProp({ name: \"dp\", converter: JsonBase64UrlArrayBufferConverter })\n], RsaPrivateKey.prototype, \"exponent1\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerArrayBufferConverter }),\n    JsonProp({ name: \"dq\", converter: JsonBase64UrlArrayBufferConverter })\n], RsaPrivateKey.prototype, \"exponent2\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerArrayBufferConverter }),\n    JsonProp({ name: \"qi\", converter: JsonBase64UrlArrayBufferConverter })\n], RsaPrivateKey.prototype, \"coefficient\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Any, optional: true })\n], RsaPrivateKey.prototype, \"otherPrimeInfos\", void 0);\n\nclass RsaPublicKey {\n    constructor() {\n        this.modulus = new ArrayBuffer(0);\n        this.publicExponent = new ArrayBuffer(0);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerArrayBufferConverter }),\n    JsonProp({ name: \"n\", converter: JsonBase64UrlArrayBufferConverter })\n], RsaPublicKey.prototype, \"modulus\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerArrayBufferConverter }),\n    JsonProp({ name: \"e\", converter: JsonBase64UrlArrayBufferConverter })\n], RsaPublicKey.prototype, \"publicExponent\", void 0);\n\nlet EcPublicKey = class EcPublicKey {\n    constructor(value) {\n        this.value = new ArrayBuffer(0);\n        if (value) {\n            this.value = value;\n        }\n    }\n    toJSON() {\n        let bytes = new Uint8Array(this.value);\n        if (bytes[0] !== 0x04) {\n            throw new CryptoError(\"Wrong ECPoint. Current version supports only Uncompressed (0x04) point\");\n        }\n        bytes = new Uint8Array(this.value.slice(1));\n        const size = bytes.length / 2;\n        const offset = 0;\n        const json = {\n            x: Convert.ToBase64Url(bytes.buffer.slice(offset, offset + size)),\n            y: Convert.ToBase64Url(bytes.buffer.slice(offset + size, offset + size + size)),\n        };\n        return json;\n    }\n    fromJSON(json) {\n        if (!(\"x\" in json)) {\n            throw new Error(\"x: Missing required property\");\n        }\n        if (!(\"y\" in json)) {\n            throw new Error(\"y: Missing required property\");\n        }\n        const x = Convert.FromBase64Url(json.x);\n        const y = Convert.FromBase64Url(json.y);\n        const value = combine(new Uint8Array([0x04]).buffer, x, y);\n        this.value = new Uint8Array(value).buffer;\n        return this;\n    }\n};\n__decorate([\n    AsnProp({ type: AsnPropTypes.OctetString })\n], EcPublicKey.prototype, \"value\", void 0);\nEcPublicKey = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], EcPublicKey);\n\nclass EcPrivateKey {\n    constructor() {\n        this.version = 1;\n        this.privateKey = new ArrayBuffer(0);\n    }\n    fromJSON(json) {\n        if (!(\"d\" in json)) {\n            throw new Error(\"d: Missing required property\");\n        }\n        this.privateKey = Convert.FromBase64Url(json.d);\n        if (\"x\" in json) {\n            const publicKey = new EcPublicKey();\n            publicKey.fromJSON(json);\n            const asn = AsnSerializer.toASN(publicKey);\n            if (\"valueHex\" in asn.valueBlock) {\n                this.publicKey = asn.valueBlock.valueHex;\n            }\n        }\n        return this;\n    }\n    toJSON() {\n        const jwk = {};\n        jwk.d = Convert.ToBase64Url(this.privateKey);\n        if (this.publicKey) {\n            Object.assign(jwk, new EcPublicKey(this.publicKey).toJSON());\n        }\n        return jwk;\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerConverter })\n], EcPrivateKey.prototype, \"version\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.OctetString })\n], EcPrivateKey.prototype, \"privateKey\", void 0);\n__decorate([\n    AsnProp({ context: 0, type: AsnPropTypes.Any, optional: true })\n], EcPrivateKey.prototype, \"parameters\", void 0);\n__decorate([\n    AsnProp({ context: 1, type: AsnPropTypes.BitString, optional: true })\n], EcPrivateKey.prototype, \"publicKey\", void 0);\n\nconst AsnIntegerWithoutPaddingConverter = {\n    fromASN: (value) => {\n        const bytes = new Uint8Array(value.valueBlock.valueHex);\n        return (bytes[0] === 0)\n            ? bytes.buffer.slice(1)\n            : bytes.buffer;\n    },\n    toASN: (value) => {\n        const bytes = new Uint8Array(value);\n        if (bytes[0] > 127) {\n            const newValue = new Uint8Array(bytes.length + 1);\n            newValue.set(bytes, 1);\n            return new asn1.Integer({ valueHex: newValue.buffer });\n        }\n        return new asn1.Integer({ valueHex: value });\n    },\n};\n\nvar index$2 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  AsnIntegerWithoutPaddingConverter: AsnIntegerWithoutPaddingConverter\n});\n\nclass EcUtils {\n    static decodePoint(data, pointSize) {\n        const view = BufferSourceConverter.toUint8Array(data);\n        if ((view.length === 0) || (view[0] !== 4)) {\n            throw new Error(\"Only uncompressed point format supported\");\n        }\n        const n = (view.length - 1) / 2;\n        if (n !== (Math.ceil(pointSize / 8))) {\n            throw new Error(\"Point does not match field size\");\n        }\n        const xb = view.slice(1, n + 1);\n        const yb = view.slice(n + 1, n + 1 + n);\n        return { x: xb, y: yb };\n    }\n    static encodePoint(point, pointSize) {\n        const size = Math.ceil(pointSize / 8);\n        if (point.x.byteLength !== size || point.y.byteLength !== size) {\n            throw new Error(\"X,Y coordinates don't match point size criteria\");\n        }\n        const x = BufferSourceConverter.toUint8Array(point.x);\n        const y = BufferSourceConverter.toUint8Array(point.y);\n        const res = new Uint8Array(size * 2 + 1);\n        res[0] = 4;\n        res.set(x, 1);\n        res.set(y, size + 1);\n        return res;\n    }\n    static getSize(pointSize) {\n        return Math.ceil(pointSize / 8);\n    }\n    static encodeSignature(signature, pointSize) {\n        const size = this.getSize(pointSize);\n        const r = BufferSourceConverter.toUint8Array(signature.r);\n        const s = BufferSourceConverter.toUint8Array(signature.s);\n        const res = new Uint8Array(size * 2);\n        res.set(this.padStart(r, size));\n        res.set(this.padStart(s, size), size);\n        return res;\n    }\n    static decodeSignature(data, pointSize) {\n        const size = this.getSize(pointSize);\n        const view = BufferSourceConverter.toUint8Array(data);\n        if (view.length !== (size * 2)) {\n            throw new Error(\"Incorrect size of the signature\");\n        }\n        const r = view.slice(0, size);\n        const s = view.slice(size);\n        return {\n            r: this.trimStart(r),\n            s: this.trimStart(s),\n        };\n    }\n    static trimStart(data) {\n        let i = 0;\n        while ((i < data.length - 1) && (data[i] === 0)) {\n            i++;\n        }\n        if (i === 0) {\n            return data;\n        }\n        return data.slice(i, data.length);\n    }\n    static padStart(data, size) {\n        if (size === data.length) {\n            return data;\n        }\n        const res = new Uint8Array(size);\n        res.set(data, size - data.length);\n        return res;\n    }\n}\n\nclass EcDsaSignature {\n    constructor() {\n        this.r = new ArrayBuffer(0);\n        this.s = new ArrayBuffer(0);\n    }\n    static fromWebCryptoSignature(value) {\n        const pointSize = value.byteLength / 2;\n        const point = EcUtils.decodeSignature(value, pointSize * 8);\n        const ecSignature = new EcDsaSignature();\n        ecSignature.r = BufferSourceConverter.toArrayBuffer(point.r);\n        ecSignature.s = BufferSourceConverter.toArrayBuffer(point.s);\n        return ecSignature;\n    }\n    toWebCryptoSignature(pointSize) {\n        if (!pointSize) {\n            const maxPointLength = Math.max(this.r.byteLength, this.s.byteLength);\n            if (maxPointLength <= 32) {\n                pointSize = 256;\n            }\n            else if (maxPointLength <= 48) {\n                pointSize = 384;\n            }\n            else {\n                pointSize = 521;\n            }\n        }\n        const signature = EcUtils.encodeSignature(this, pointSize);\n        return signature.buffer;\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerWithoutPaddingConverter })\n], EcDsaSignature.prototype, \"r\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerWithoutPaddingConverter })\n], EcDsaSignature.prototype, \"s\", void 0);\n\nclass OneAsymmetricKey extends PrivateKeyInfo {\n}\n__decorate([\n    AsnProp({ context: 1, implicit: true, type: AsnPropTypes.BitString, optional: true })\n], OneAsymmetricKey.prototype, \"publicKey\", void 0);\n\nlet EdPrivateKey = class EdPrivateKey {\n    constructor() {\n        this.value = new ArrayBuffer(0);\n    }\n    fromJSON(json) {\n        if (!json.d) {\n            throw new Error(\"d: Missing required property\");\n        }\n        this.value = Convert.FromBase64Url(json.d);\n        return this;\n    }\n    toJSON() {\n        const jwk = {\n            d: Convert.ToBase64Url(this.value),\n        };\n        return jwk;\n    }\n};\n__decorate([\n    AsnProp({ type: AsnPropTypes.OctetString })\n], EdPrivateKey.prototype, \"value\", void 0);\nEdPrivateKey = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], EdPrivateKey);\n\nlet EdPublicKey = class EdPublicKey {\n    constructor(value) {\n        this.value = new ArrayBuffer(0);\n        if (value) {\n            this.value = value;\n        }\n    }\n    toJSON() {\n        const json = {\n            x: Convert.ToBase64Url(this.value),\n        };\n        return json;\n    }\n    fromJSON(json) {\n        if (!(\"x\" in json)) {\n            throw new Error(\"x: Missing required property\");\n        }\n        this.value = Convert.FromBase64Url(json.x);\n        return this;\n    }\n};\n__decorate([\n    AsnProp({ type: AsnPropTypes.BitString })\n], EdPublicKey.prototype, \"value\", void 0);\nEdPublicKey = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], EdPublicKey);\n\nlet CurvePrivateKey = class CurvePrivateKey {\n};\n__decorate([\n    AsnProp({ type: AsnPropTypes.OctetString }),\n    JsonProp({ type: JsonPropTypes.String, converter: JsonBase64UrlArrayBufferConverter })\n], CurvePrivateKey.prototype, \"d\", void 0);\nCurvePrivateKey = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], CurvePrivateKey);\n\nconst idSecp256r1 = \"1.2.840.10045.3.1.7\";\nconst idEllipticCurve = \"1.3.132.0\";\nconst idSecp384r1 = `${idEllipticCurve}.34`;\nconst idSecp521r1 = `${idEllipticCurve}.35`;\nconst idSecp256k1 = `${idEllipticCurve}.10`;\nconst idVersionOne = \"1.3.36.3.3.2.8.1.1\";\nconst idBrainpoolP160r1 = `${idVersionOne}.1`;\nconst idBrainpoolP160t1 = `${idVersionOne}.2`;\nconst idBrainpoolP192r1 = `${idVersionOne}.3`;\nconst idBrainpoolP192t1 = `${idVersionOne}.4`;\nconst idBrainpoolP224r1 = `${idVersionOne}.5`;\nconst idBrainpoolP224t1 = `${idVersionOne}.6`;\nconst idBrainpoolP256r1 = `${idVersionOne}.7`;\nconst idBrainpoolP256t1 = `${idVersionOne}.8`;\nconst idBrainpoolP320r1 = `${idVersionOne}.9`;\nconst idBrainpoolP320t1 = `${idVersionOne}.10`;\nconst idBrainpoolP384r1 = `${idVersionOne}.11`;\nconst idBrainpoolP384t1 = `${idVersionOne}.12`;\nconst idBrainpoolP512r1 = `${idVersionOne}.13`;\nconst idBrainpoolP512t1 = `${idVersionOne}.14`;\nconst idX25519 = \"1.3.101.110\";\nconst idX448 = \"1.3.101.111\";\nconst idEd25519 = \"1.3.101.112\";\nconst idEd448 = \"1.3.101.113\";\n\nvar index$1 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  AlgorithmIdentifier: AlgorithmIdentifier,\n  get CurvePrivateKey () { return CurvePrivateKey; },\n  EcDsaSignature: EcDsaSignature,\n  EcPrivateKey: EcPrivateKey,\n  get EcPublicKey () { return EcPublicKey; },\n  get EdPrivateKey () { return EdPrivateKey; },\n  get EdPublicKey () { return EdPublicKey; },\n  get ObjectIdentifier () { return ObjectIdentifier; },\n  OneAsymmetricKey: OneAsymmetricKey,\n  PrivateKeyInfo: PrivateKeyInfo,\n  PublicKeyInfo: PublicKeyInfo,\n  RsaPrivateKey: RsaPrivateKey,\n  RsaPublicKey: RsaPublicKey,\n  converters: index$2,\n  idBrainpoolP160r1: idBrainpoolP160r1,\n  idBrainpoolP160t1: idBrainpoolP160t1,\n  idBrainpoolP192r1: idBrainpoolP192r1,\n  idBrainpoolP192t1: idBrainpoolP192t1,\n  idBrainpoolP224r1: idBrainpoolP224r1,\n  idBrainpoolP224t1: idBrainpoolP224t1,\n  idBrainpoolP256r1: idBrainpoolP256r1,\n  idBrainpoolP256t1: idBrainpoolP256t1,\n  idBrainpoolP320r1: idBrainpoolP320r1,\n  idBrainpoolP320t1: idBrainpoolP320t1,\n  idBrainpoolP384r1: idBrainpoolP384r1,\n  idBrainpoolP384t1: idBrainpoolP384t1,\n  idBrainpoolP512r1: idBrainpoolP512r1,\n  idBrainpoolP512t1: idBrainpoolP512t1,\n  idEd25519: idEd25519,\n  idEd448: idEd448,\n  idEllipticCurve: idEllipticCurve,\n  idSecp256k1: idSecp256k1,\n  idSecp256r1: idSecp256r1,\n  idSecp384r1: idSecp384r1,\n  idSecp521r1: idSecp521r1,\n  idVersionOne: idVersionOne,\n  idX25519: idX25519,\n  idX448: idX448\n});\n\nclass EcCurves {\n    constructor() { }\n    static register(item) {\n        const oid = new ObjectIdentifier();\n        oid.value = item.id;\n        const raw = AsnConvert.serialize(oid);\n        this.items.push({\n            ...item,\n            raw,\n        });\n        this.names.push(item.name);\n    }\n    static find(nameOrId) {\n        nameOrId = nameOrId.toUpperCase();\n        for (const item of this.items) {\n            if (item.name.toUpperCase() === nameOrId || item.id.toUpperCase() === nameOrId) {\n                return item;\n            }\n        }\n        return null;\n    }\n    static get(nameOrId) {\n        const res = this.find(nameOrId);\n        if (!res) {\n            throw new Error(`Unsupported EC named curve '${nameOrId}'`);\n        }\n        return res;\n    }\n}\nEcCurves.items = [];\nEcCurves.names = [];\nEcCurves.register({ name: \"P-256\", id: idSecp256r1, size: 256 });\nEcCurves.register({ name: \"P-384\", id: idSecp384r1, size: 384 });\nEcCurves.register({ name: \"P-521\", id: idSecp521r1, size: 521 });\nEcCurves.register({ name: \"K-256\", id: idSecp256k1, size: 256 });\nEcCurves.register({ name: \"brainpoolP160r1\", id: idBrainpoolP160r1, size: 160 });\nEcCurves.register({ name: \"brainpoolP160t1\", id: idBrainpoolP160t1, size: 160 });\nEcCurves.register({ name: \"brainpoolP192r1\", id: idBrainpoolP192r1, size: 192 });\nEcCurves.register({ name: \"brainpoolP192t1\", id: idBrainpoolP192t1, size: 192 });\nEcCurves.register({ name: \"brainpoolP224r1\", id: idBrainpoolP224r1, size: 224 });\nEcCurves.register({ name: \"brainpoolP224t1\", id: idBrainpoolP224t1, size: 224 });\nEcCurves.register({ name: \"brainpoolP256r1\", id: idBrainpoolP256r1, size: 256 });\nEcCurves.register({ name: \"brainpoolP256t1\", id: idBrainpoolP256t1, size: 256 });\nEcCurves.register({ name: \"brainpoolP320r1\", id: idBrainpoolP320r1, size: 320 });\nEcCurves.register({ name: \"brainpoolP320t1\", id: idBrainpoolP320t1, size: 320 });\nEcCurves.register({ name: \"brainpoolP384r1\", id: idBrainpoolP384r1, size: 384 });\nEcCurves.register({ name: \"brainpoolP384t1\", id: idBrainpoolP384t1, size: 384 });\nEcCurves.register({ name: \"brainpoolP512r1\", id: idBrainpoolP512r1, size: 512 });\nEcCurves.register({ name: \"brainpoolP512t1\", id: idBrainpoolP512t1, size: 512 });\n\nclass X25519Provider extends ProviderCrypto {\n    constructor() {\n        super(...arguments);\n        this.name = \"X25519\";\n        this.usages = {\n            privateKey: [\"deriveKey\", \"deriveBits\"],\n            publicKey: [],\n        };\n    }\n    checkAlgorithmParams(algorithm) {\n        this.checkRequiredProperty(algorithm, \"public\");\n    }\n}\n\nclass Ed25519Provider extends ProviderCrypto {\n    constructor() {\n        super(...arguments);\n        this.name = \"Ed25519\";\n        this.usages = {\n            privateKey: [\"sign\"],\n            publicKey: [\"verify\"],\n        };\n    }\n}\n\nclass HmacProvider extends ProviderCrypto {\n    constructor() {\n        super(...arguments);\n        this.name = \"HMAC\";\n        this.hashAlgorithms = [\"SHA-1\", \"SHA-256\", \"SHA-384\", \"SHA-512\"];\n        this.usages = [\"sign\", \"verify\"];\n    }\n    getDefaultLength(algName) {\n        switch (algName.toUpperCase()) {\n            case \"SHA-1\":\n            case \"SHA-256\":\n            case \"SHA-384\":\n            case \"SHA-512\":\n                return 512;\n            default:\n                throw new Error(`Unknown algorithm name '${algName}'`);\n        }\n    }\n    checkGenerateKeyParams(algorithm) {\n        this.checkRequiredProperty(algorithm, \"hash\");\n        this.checkHashAlgorithm(algorithm.hash, this.hashAlgorithms);\n        if (\"length\" in algorithm) {\n            if (typeof algorithm.length !== \"number\") {\n                throw new TypeError(\"length: Is not a Number\");\n            }\n            if (algorithm.length < 1) {\n                throw new RangeError(\"length: Number is out of range\");\n            }\n        }\n    }\n    checkImportParams(algorithm) {\n        this.checkRequiredProperty(algorithm, \"hash\");\n        this.checkHashAlgorithm(algorithm.hash, this.hashAlgorithms);\n    }\n}\n\nclass Pbkdf2Provider extends ProviderCrypto {\n    constructor() {\n        super(...arguments);\n        this.name = \"PBKDF2\";\n        this.hashAlgorithms = [\"SHA-1\", \"SHA-256\", \"SHA-384\", \"SHA-512\"];\n        this.usages = [\"deriveBits\", \"deriveKey\"];\n    }\n    checkAlgorithmParams(algorithm) {\n        this.checkRequiredProperty(algorithm, \"hash\");\n        this.checkHashAlgorithm(algorithm.hash, this.hashAlgorithms);\n        this.checkRequiredProperty(algorithm, \"salt\");\n        if (!(algorithm.salt instanceof ArrayBuffer || ArrayBuffer.isView(algorithm.salt))) {\n            throw new TypeError(\"salt: Is not of type '(ArrayBuffer or ArrayBufferView)'\");\n        }\n        this.checkRequiredProperty(algorithm, \"iterations\");\n        if (typeof algorithm.iterations !== \"number\") {\n            throw new TypeError(\"iterations: Is not a Number\");\n        }\n        if (algorithm.iterations < 1) {\n            throw new TypeError(\"iterations: Is less than 1\");\n        }\n    }\n    checkImportKey(format, keyData, algorithm, extractable, keyUsages, ...args) {\n        super.checkImportKey(format, keyData, algorithm, extractable, keyUsages, ...args);\n        if (extractable) {\n            throw new SyntaxError(\"extractable: Must be 'false'\");\n        }\n    }\n}\n\nclass HkdfProvider extends ProviderCrypto {\n    constructor() {\n        super(...arguments);\n        this.name = \"HKDF\";\n        this.hashAlgorithms = [\"SHA-1\", \"SHA-256\", \"SHA-384\", \"SHA-512\"];\n        this.usages = [\"deriveKey\", \"deriveBits\"];\n    }\n    checkAlgorithmParams(algorithm) {\n        this.checkRequiredProperty(algorithm, \"hash\");\n        this.checkHashAlgorithm(algorithm.hash, this.hashAlgorithms);\n        this.checkRequiredProperty(algorithm, \"salt\");\n        if (!BufferSourceConverter.isBufferSource(algorithm.salt)) {\n            throw new TypeError(\"salt: Is not of type '(ArrayBuffer or ArrayBufferView)'\");\n        }\n        this.checkRequiredProperty(algorithm, \"info\");\n        if (!BufferSourceConverter.isBufferSource(algorithm.info)) {\n            throw new TypeError(\"salt: Is not of type '(ArrayBuffer or ArrayBufferView)'\");\n        }\n    }\n    checkImportKey(format, keyData, algorithm, extractable, keyUsages, ...args) {\n        super.checkImportKey(format, keyData, algorithm, extractable, keyUsages, ...args);\n        if (extractable) {\n            throw new SyntaxError(\"extractable: Must be 'false'\");\n        }\n    }\n}\n\nclass ShakeProvider extends ProviderCrypto {\n    constructor() {\n        super(...arguments);\n        this.usages = [];\n        this.defaultLength = 0;\n    }\n    digest(...args) {\n        args[0] = { length: this.defaultLength, ...args[0] };\n        return super.digest.apply(this, args);\n    }\n    checkDigest(algorithm, data) {\n        super.checkDigest(algorithm, data);\n        const length = algorithm.length || 0;\n        if (typeof length !== \"number\") {\n            throw new TypeError(\"length: Is not a Number\");\n        }\n        if (length < 0) {\n            throw new TypeError(\"length: Is negative\");\n        }\n    }\n}\n\nclass Shake128Provider extends ShakeProvider {\n    constructor() {\n        super(...arguments);\n        this.name = \"shake128\";\n        this.defaultLength = 16;\n    }\n}\n\nclass Shake256Provider extends ShakeProvider {\n    constructor() {\n        super(...arguments);\n        this.name = \"shake256\";\n        this.defaultLength = 32;\n    }\n}\n\nclass Crypto {\n    get [Symbol.toStringTag]() {\n        return \"Crypto\";\n    }\n    randomUUID() {\n        const b = this.getRandomValues(new Uint8Array(16));\n        b[6] = (b[6] & 0x0f) | 0x40;\n        b[8] = (b[8] & 0x3f) | 0x80;\n        const uuid = Convert.ToHex(b).toLowerCase();\n        return `${uuid.substring(0, 8)}-${uuid.substring(8, 12)}-${uuid.substring(12, 16)}-${uuid.substring(16, 20)}-${uuid.substring(20)}`;\n    }\n}\n\nclass ProviderStorage {\n    constructor() {\n        this.items = {};\n    }\n    get(algorithmName) {\n        return this.items[algorithmName.toLowerCase()] || null;\n    }\n    set(provider) {\n        this.items[provider.name.toLowerCase()] = provider;\n    }\n    removeAt(algorithmName) {\n        const provider = this.get(algorithmName.toLowerCase());\n        if (provider) {\n            delete this.items[algorithmName];\n        }\n        return provider;\n    }\n    has(name) {\n        return !!this.get(name);\n    }\n    get length() {\n        return Object.keys(this.items).length;\n    }\n    get algorithms() {\n        const algorithms = [];\n        for (const key in this.items) {\n            const provider = this.items[key];\n            algorithms.push(provider.name);\n        }\n        return algorithms.sort();\n    }\n}\n\nconst keyFormatMap = {\n    \"jwk\": [\"private\", \"public\", \"secret\"],\n    \"pkcs8\": [\"private\"],\n    \"spki\": [\"public\"],\n    \"raw\": [\"secret\", \"public\"]\n};\nconst sourceBufferKeyFormats = [\"pkcs8\", \"spki\", \"raw\"];\nclass SubtleCrypto {\n    constructor() {\n        this.providers = new ProviderStorage();\n    }\n    static isHashedAlgorithm(data) {\n        return data\n            && typeof data === \"object\"\n            && \"name\" in data\n            && \"hash\" in data\n            ? true\n            : false;\n    }\n    get [Symbol.toStringTag]() {\n        return \"SubtleCrypto\";\n    }\n    async digest(...args) {\n        this.checkRequiredArguments(args, 2, \"digest\");\n        const [algorithm, data, ...params] = args;\n        const preparedAlgorithm = this.prepareAlgorithm(algorithm);\n        const preparedData = BufferSourceConverter.toArrayBuffer(data);\n        const provider = this.getProvider(preparedAlgorithm.name);\n        const result = await provider.digest(preparedAlgorithm, preparedData, ...params);\n        return result;\n    }\n    async generateKey(...args) {\n        this.checkRequiredArguments(args, 3, \"generateKey\");\n        const [algorithm, extractable, keyUsages, ...params] = args;\n        const preparedAlgorithm = this.prepareAlgorithm(algorithm);\n        const provider = this.getProvider(preparedAlgorithm.name);\n        const result = await provider.generateKey({ ...preparedAlgorithm, name: provider.name }, extractable, keyUsages, ...params);\n        return result;\n    }\n    async sign(...args) {\n        this.checkRequiredArguments(args, 3, \"sign\");\n        const [algorithm, key, data, ...params] = args;\n        this.checkCryptoKey(key);\n        const preparedAlgorithm = this.prepareAlgorithm(algorithm);\n        const preparedData = BufferSourceConverter.toArrayBuffer(data);\n        const provider = this.getProvider(preparedAlgorithm.name);\n        const result = await provider.sign({ ...preparedAlgorithm, name: provider.name }, key, preparedData, ...params);\n        return result;\n    }\n    async verify(...args) {\n        this.checkRequiredArguments(args, 4, \"verify\");\n        const [algorithm, key, signature, data, ...params] = args;\n        this.checkCryptoKey(key);\n        const preparedAlgorithm = this.prepareAlgorithm(algorithm);\n        const preparedData = BufferSourceConverter.toArrayBuffer(data);\n        const preparedSignature = BufferSourceConverter.toArrayBuffer(signature);\n        const provider = this.getProvider(preparedAlgorithm.name);\n        const result = await provider.verify({ ...preparedAlgorithm, name: provider.name }, key, preparedSignature, preparedData, ...params);\n        return result;\n    }\n    async encrypt(...args) {\n        this.checkRequiredArguments(args, 3, \"encrypt\");\n        const [algorithm, key, data, ...params] = args;\n        this.checkCryptoKey(key);\n        const preparedAlgorithm = this.prepareAlgorithm(algorithm);\n        const preparedData = BufferSourceConverter.toArrayBuffer(data);\n        const provider = this.getProvider(preparedAlgorithm.name);\n        const result = await provider.encrypt({ ...preparedAlgorithm, name: provider.name }, key, preparedData, { keyUsage: true }, ...params);\n        return result;\n    }\n    async decrypt(...args) {\n        this.checkRequiredArguments(args, 3, \"decrypt\");\n        const [algorithm, key, data, ...params] = args;\n        this.checkCryptoKey(key);\n        const preparedAlgorithm = this.prepareAlgorithm(algorithm);\n        const preparedData = BufferSourceConverter.toArrayBuffer(data);\n        const provider = this.getProvider(preparedAlgorithm.name);\n        const result = await provider.decrypt({ ...preparedAlgorithm, name: provider.name }, key, preparedData, { keyUsage: true }, ...params);\n        return result;\n    }\n    async deriveBits(...args) {\n        this.checkRequiredArguments(args, 3, \"deriveBits\");\n        const [algorithm, baseKey, length, ...params] = args;\n        this.checkCryptoKey(baseKey);\n        const preparedAlgorithm = this.prepareAlgorithm(algorithm);\n        const provider = this.getProvider(preparedAlgorithm.name);\n        const result = await provider.deriveBits({ ...preparedAlgorithm, name: provider.name }, baseKey, length, { keyUsage: true }, ...params);\n        return result;\n    }\n    async deriveKey(...args) {\n        this.checkRequiredArguments(args, 5, \"deriveKey\");\n        const [algorithm, baseKey, derivedKeyType, extractable, keyUsages, ...params] = args;\n        const preparedDerivedKeyType = this.prepareAlgorithm(derivedKeyType);\n        const importProvider = this.getProvider(preparedDerivedKeyType.name);\n        importProvider.checkDerivedKeyParams(preparedDerivedKeyType);\n        const preparedAlgorithm = this.prepareAlgorithm(algorithm);\n        const provider = this.getProvider(preparedAlgorithm.name);\n        provider.checkCryptoKey(baseKey, \"deriveKey\");\n        const derivedBits = await provider.deriveBits({ ...preparedAlgorithm, name: provider.name }, baseKey, derivedKeyType.length || 512, { keyUsage: false }, ...params);\n        return this.importKey(\"raw\", derivedBits, derivedKeyType, extractable, keyUsages, ...params);\n    }\n    async exportKey(...args) {\n        this.checkRequiredArguments(args, 2, \"exportKey\");\n        const [format, key, ...params] = args;\n        this.checkCryptoKey(key);\n        if (!keyFormatMap[format]) {\n            throw new TypeError(\"Invalid keyFormat argument\");\n        }\n        if (!keyFormatMap[format].includes(key.type)) {\n            throw new DOMException(\"The key is not of the expected type\");\n        }\n        const provider = this.getProvider(key.algorithm.name);\n        const result = await provider.exportKey(format, key, ...params);\n        return result;\n    }\n    async importKey(...args) {\n        this.checkRequiredArguments(args, 5, \"importKey\");\n        const [format, keyData, algorithm, extractable, keyUsages, ...params] = args;\n        const preparedAlgorithm = this.prepareAlgorithm(algorithm);\n        const provider = this.getProvider(preparedAlgorithm.name);\n        if (format === \"jwk\") {\n            if (typeof keyData !== \"object\" || !keyData.kty) {\n                throw new TypeError(\"Key data must be an object for JWK import\");\n            }\n        }\n        else if (sourceBufferKeyFormats.includes(format)) {\n            if (!BufferSourceConverter.isBufferSource(keyData)) {\n                throw new TypeError(\"Key data must be a BufferSource for non-JWK formats\");\n            }\n        }\n        else {\n            throw new TypeError(\"The provided value is not of type '(ArrayBuffer or ArrayBufferView or JsonWebKey)'\");\n        }\n        return provider.importKey(format, keyData, { ...preparedAlgorithm, name: provider.name }, extractable, keyUsages, ...params);\n    }\n    async wrapKey(format, key, wrappingKey, wrapAlgorithm, ...args) {\n        let keyData = await this.exportKey(format, key, ...args);\n        if (format === \"jwk\") {\n            const json = JSON.stringify(keyData);\n            keyData = Convert.FromUtf8String(json);\n        }\n        const preparedAlgorithm = this.prepareAlgorithm(wrapAlgorithm);\n        const preparedData = BufferSourceConverter.toArrayBuffer(keyData);\n        const provider = this.getProvider(preparedAlgorithm.name);\n        return provider.encrypt({ ...preparedAlgorithm, name: provider.name }, wrappingKey, preparedData, { keyUsage: false }, ...args);\n    }\n    async unwrapKey(format, wrappedKey, unwrappingKey, unwrapAlgorithm, unwrappedKeyAlgorithm, extractable, keyUsages, ...args) {\n        const preparedAlgorithm = this.prepareAlgorithm(unwrapAlgorithm);\n        const preparedData = BufferSourceConverter.toArrayBuffer(wrappedKey);\n        const provider = this.getProvider(preparedAlgorithm.name);\n        let keyData = await provider.decrypt({ ...preparedAlgorithm, name: provider.name }, unwrappingKey, preparedData, { keyUsage: false }, ...args);\n        if (format === \"jwk\") {\n            try {\n                keyData = JSON.parse(Convert.ToUtf8String(keyData));\n            }\n            catch (e) {\n                const error = new TypeError(\"wrappedKey: Is not a JSON\");\n                error.internal = e;\n                throw error;\n            }\n        }\n        return this.importKey(format, keyData, unwrappedKeyAlgorithm, extractable, keyUsages, ...args);\n    }\n    checkRequiredArguments(args, size, methodName) {\n        if (args.length < size) {\n            throw new TypeError(`Failed to execute '${methodName}' on 'SubtleCrypto': ${size} arguments required, but only ${args.length} present`);\n        }\n    }\n    prepareAlgorithm(algorithm) {\n        if (typeof algorithm === \"string\") {\n            return {\n                name: algorithm,\n            };\n        }\n        if (SubtleCrypto.isHashedAlgorithm(algorithm)) {\n            const preparedAlgorithm = { ...algorithm };\n            preparedAlgorithm.hash = this.prepareAlgorithm(algorithm.hash);\n            return preparedAlgorithm;\n        }\n        return { ...algorithm };\n    }\n    getProvider(name) {\n        const provider = this.providers.get(name);\n        if (!provider) {\n            throw new AlgorithmError(\"Unrecognized name\");\n        }\n        return provider;\n    }\n    checkCryptoKey(key) {\n        if (!(key instanceof CryptoKey)) {\n            throw new TypeError(`Key is not of type 'CryptoKey'`);\n        }\n    }\n}\n\nvar index = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  converters: index$3\n});\n\nconst REQUIRED_FIELDS = [\"crv\", \"e\", \"k\", \"kty\", \"n\", \"x\", \"y\"];\nclass JwkUtils {\n    static async thumbprint(hash, jwk, crypto) {\n        const data = this.format(jwk, true);\n        return crypto.subtle.digest(hash, Convert.FromBinary(JSON.stringify(data)));\n    }\n    static format(jwk, remove = false) {\n        let res = Object.entries(jwk);\n        if (remove) {\n            res = res.filter(o => REQUIRED_FIELDS.includes(o[0]));\n        }\n        res = res.sort(([keyA], [keyB]) => keyA > keyB ? 1 : keyA < keyB ? -1 : 0);\n        return Object.fromEntries(res);\n    }\n}\n\nexport { AesCbcProvider, AesCmacProvider, AesCtrProvider, AesEcbProvider, AesGcmProvider, AesKwProvider, AesProvider, AlgorithmError, Crypto, CryptoError, CryptoKey, DesProvider, EcCurves, EcUtils, EcdhEsProvider, EcdhProvider, EcdsaProvider, Ed25519Provider, EdDsaProvider, EllipticProvider, HkdfProvider, HmacProvider, JwkUtils, OperationError, Pbkdf2Provider, PemConverter, ProviderCrypto, ProviderStorage, RequiredPropertyError, RsaOaepProvider, RsaProvider, RsaPssProvider, RsaSsaProvider, Shake128Provider, Shake256Provider, ShakeProvider, SubtleCrypto, UnsupportedOperationError, X25519Provider, index$1 as asn1, isJWK, index as json };\n", "export * from \"./converters\";\nexport * from \"./types/index\";\nexport { AsnProp, AsnType, AsnChoiceType, AsnSequenceType, AsnSetType } from \"./decorators\";\nexport { AsnTypeTypes, AsnPropTypes } from \"./enums\";\nexport { AsnParser } from \"./parser\";\nexport { AsnSerializer } from \"./serializer\";\nexport * from \"./errors\";\nexport * from \"./objects\";\nexport * from \"./convert\";\n", "import * as asn1js from \"asn1js\";\nimport { AsnPropTypes } from \"./enums\";\nimport { OctetString } from \"./types/index\";\nexport const AsnAnyConverter = {\n    fromASN: (value) => value instanceof asn1js.Null ? null : value.valueBeforeDecodeView,\n    toASN: (value) => {\n        if (value === null) {\n            return new asn1js.Null();\n        }\n        const schema = asn1js.fromBER(value);\n        if (schema.result.error) {\n            throw new Error(schema.result.error);\n        }\n        return schema.result;\n    },\n};\nexport const AsnIntegerConverter = {\n    fromASN: (value) => value.valueBlock.valueHexView.byteLength >= 4\n        ? value.valueBlock.toString()\n        : value.valueBlock.valueDec,\n    toASN: (value) => new asn1js.Integer({ value: +value }),\n};\nexport const AsnEnumeratedConverter = {\n    fromASN: (value) => value.valueBlock.valueDec,\n    toASN: (value) => new asn1js.Enumerated({ value }),\n};\nexport const AsnIntegerArrayBufferConverter = {\n    fromASN: (value) => value.valueBlock.valueHexView,\n    toASN: (value) => new asn1js.Integer({ valueHex: value }),\n};\nexport const AsnIntegerBigIntConverter = {\n    fromASN: (value) => value.toBigInt(),\n    toASN: (value) => asn1js.Integer.fromBigInt(value),\n};\nexport const AsnBitStringConverter = {\n    fromASN: (value) => value.valueBlock.valueHexView,\n    toASN: (value) => new asn1js.BitString({ valueHex: value }),\n};\nexport const AsnObjectIdentifierConverter = {\n    fromASN: (value) => value.valueBlock.toString(),\n    toASN: (value) => new asn1js.ObjectIdentifier({ value }),\n};\nexport const AsnBooleanConverter = {\n    fromASN: (value) => value.valueBlock.value,\n    toASN: (value) => new asn1js.Boolean({ value }),\n};\nexport const AsnOctetStringConverter = {\n    fromASN: (value) => value.valueBlock.valueHexView,\n    toASN: (value) => new asn1js.OctetString({ valueHex: value }),\n};\nexport const AsnConstructedOctetStringConverter = {\n    fromASN: (value) => new OctetString(value.getValue()),\n    toASN: (value) => value.toASN(),\n};\nfunction createStringConverter(Asn1Type) {\n    return {\n        fromASN: (value) => value.valueBlock.value,\n        toASN: (value) => new Asn1Type({ value }),\n    };\n}\nexport const AsnUtf8StringConverter = createStringConverter(asn1js.Utf8String);\nexport const AsnBmpStringConverter = createStringConverter(asn1js.BmpString);\nexport const AsnUniversalStringConverter = createStringConverter(asn1js.UniversalString);\nexport const AsnNumericStringConverter = createStringConverter(asn1js.NumericString);\nexport const AsnPrintableStringConverter = createStringConverter(asn1js.PrintableString);\nexport const AsnTeletexStringConverter = createStringConverter(asn1js.TeletexString);\nexport const AsnVideotexStringConverter = createStringConverter(asn1js.VideotexString);\nexport const AsnIA5StringConverter = createStringConverter(asn1js.IA5String);\nexport const AsnGraphicStringConverter = createStringConverter(asn1js.GraphicString);\nexport const AsnVisibleStringConverter = createStringConverter(asn1js.VisibleString);\nexport const AsnGeneralStringConverter = createStringConverter(asn1js.GeneralString);\nexport const AsnCharacterStringConverter = createStringConverter(asn1js.CharacterString);\nexport const AsnUTCTimeConverter = {\n    fromASN: (value) => value.toDate(),\n    toASN: (value) => new asn1js.UTCTime({ valueDate: value }),\n};\nexport const AsnGeneralizedTimeConverter = {\n    fromASN: (value) => value.toDate(),\n    toASN: (value) => new asn1js.GeneralizedTime({ valueDate: value }),\n};\nexport const AsnNullConverter = {\n    fromASN: () => null,\n    toASN: () => {\n        return new asn1js.Null();\n    },\n};\nexport function defaultConverter(type) {\n    switch (type) {\n        case AsnPropTypes.Any:\n            return AsnAnyConverter;\n        case AsnPropTypes.BitString:\n            return AsnBitStringConverter;\n        case AsnPropTypes.BmpString:\n            return AsnBmpStringConverter;\n        case AsnPropTypes.Boolean:\n            return AsnBooleanConverter;\n        case AsnPropTypes.CharacterString:\n            return AsnCharacterStringConverter;\n        case AsnPropTypes.Enumerated:\n            return AsnEnumeratedConverter;\n        case AsnPropTypes.GeneralString:\n            return AsnGeneralStringConverter;\n        case AsnPropTypes.GeneralizedTime:\n            return AsnGeneralizedTimeConverter;\n        case AsnPropTypes.GraphicString:\n            return AsnGraphicStringConverter;\n        case AsnPropTypes.IA5String:\n            return AsnIA5StringConverter;\n        case AsnPropTypes.Integer:\n            return AsnIntegerConverter;\n        case AsnPropTypes.Null:\n            return AsnNullConverter;\n        case AsnPropTypes.NumericString:\n            return AsnNumericStringConverter;\n        case AsnPropTypes.ObjectIdentifier:\n            return AsnObjectIdentifierConverter;\n        case AsnPropTypes.OctetString:\n            return AsnOctetStringConverter;\n        case AsnPropTypes.PrintableString:\n            return AsnPrintableStringConverter;\n        case AsnPropTypes.TeletexString:\n            return AsnTeletexStringConverter;\n        case AsnPropTypes.UTCTime:\n            return AsnUTCTimeConverter;\n        case AsnPropTypes.UniversalString:\n            return AsnUniversalStringConverter;\n        case AsnPropTypes.Utf8String:\n            return AsnUtf8StringConverter;\n        case AsnPropTypes.VideotexString:\n            return AsnVideotexStringConverter;\n        case AsnPropTypes.VisibleString:\n            return AsnVisibleStringConverter;\n        default:\n            return null;\n    }\n}\n", "/*!\n * Copyright (c) 2014, GMO GlobalSign\n * Copyright (c) 2015-2022, Peculiar Ventures\n * All rights reserved.\n * \n * Author 2014-2019, Yury Strozhevsky\n * \n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n * \n * * Redistributions of source code must retain the above copyright notice, this\n *   list of conditions and the following disclaimer.\n * \n * * Redistributions in binary form must reproduce the above copyright notice, this\n *   list of conditions and the following disclaimer in the documentation and/or\n *   other materials provided with the distribution.\n * \n * * Neither the name of the copyright holder nor the names of its\n *   contributors may be used to endorse or promote products derived from\n *   this software without specific prior written permission.\n * \n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\n * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n * \n */\n\nimport * as pvtsutils from 'pvtsutils';\nimport * as pvutils from 'pvutils';\n\nfunction assertBigInt() {\n    if (typeof BigInt === \"undefined\") {\n        throw new Error(\"BigInt is not defined. Your environment doesn't implement BigInt.\");\n    }\n}\nfunction concat(buffers) {\n    let outputLength = 0;\n    let prevLength = 0;\n    for (let i = 0; i < buffers.length; i++) {\n        const buffer = buffers[i];\n        outputLength += buffer.byteLength;\n    }\n    const retView = new Uint8Array(outputLength);\n    for (let i = 0; i < buffers.length; i++) {\n        const buffer = buffers[i];\n        retView.set(new Uint8Array(buffer), prevLength);\n        prevLength += buffer.byteLength;\n    }\n    return retView.buffer;\n}\nfunction checkBufferParams(baseBlock, inputBuffer, inputOffset, inputLength) {\n    if (!(inputBuffer instanceof Uint8Array)) {\n        baseBlock.error = \"Wrong parameter: inputBuffer must be 'Uint8Array'\";\n        return false;\n    }\n    if (!inputBuffer.byteLength) {\n        baseBlock.error = \"Wrong parameter: inputBuffer has zero length\";\n        return false;\n    }\n    if (inputOffset < 0) {\n        baseBlock.error = \"Wrong parameter: inputOffset less than zero\";\n        return false;\n    }\n    if (inputLength < 0) {\n        baseBlock.error = \"Wrong parameter: inputLength less than zero\";\n        return false;\n    }\n    if ((inputBuffer.byteLength - inputOffset - inputLength) < 0) {\n        baseBlock.error = \"End of input reached before message was fully decoded (inconsistent offset and length values)\";\n        return false;\n    }\n    return true;\n}\n\nclass ViewWriter {\n    constructor() {\n        this.items = [];\n    }\n    write(buf) {\n        this.items.push(buf);\n    }\n    final() {\n        return concat(this.items);\n    }\n}\n\nconst powers2 = [new Uint8Array([1])];\nconst digitsString = \"0123456789\";\nconst NAME = \"name\";\nconst VALUE_HEX_VIEW = \"valueHexView\";\nconst IS_HEX_ONLY = \"isHexOnly\";\nconst ID_BLOCK = \"idBlock\";\nconst TAG_CLASS = \"tagClass\";\nconst TAG_NUMBER = \"tagNumber\";\nconst IS_CONSTRUCTED = \"isConstructed\";\nconst FROM_BER = \"fromBER\";\nconst TO_BER = \"toBER\";\nconst LOCAL = \"local\";\nconst EMPTY_STRING = \"\";\nconst EMPTY_BUFFER = new ArrayBuffer(0);\nconst EMPTY_VIEW = new Uint8Array(0);\nconst END_OF_CONTENT_NAME = \"EndOfContent\";\nconst OCTET_STRING_NAME = \"OCTET STRING\";\nconst BIT_STRING_NAME = \"BIT STRING\";\n\nfunction HexBlock(BaseClass) {\n    var _a;\n    return _a = class Some extends BaseClass {\n            get valueHex() {\n                return this.valueHexView.slice().buffer;\n            }\n            set valueHex(value) {\n                this.valueHexView = new Uint8Array(value);\n            }\n            constructor(...args) {\n                var _b;\n                super(...args);\n                const params = args[0] || {};\n                this.isHexOnly = (_b = params.isHexOnly) !== null && _b !== void 0 ? _b : false;\n                this.valueHexView = params.valueHex ? pvtsutils.BufferSourceConverter.toUint8Array(params.valueHex) : EMPTY_VIEW;\n            }\n            fromBER(inputBuffer, inputOffset, inputLength) {\n                const view = inputBuffer instanceof ArrayBuffer ? new Uint8Array(inputBuffer) : inputBuffer;\n                if (!checkBufferParams(this, view, inputOffset, inputLength)) {\n                    return -1;\n                }\n                const endLength = inputOffset + inputLength;\n                this.valueHexView = view.subarray(inputOffset, endLength);\n                if (!this.valueHexView.length) {\n                    this.warnings.push(\"Zero buffer length\");\n                    return inputOffset;\n                }\n                this.blockLength = inputLength;\n                return endLength;\n            }\n            toBER(sizeOnly = false) {\n                if (!this.isHexOnly) {\n                    this.error = \"Flag 'isHexOnly' is not set, abort\";\n                    return EMPTY_BUFFER;\n                }\n                if (sizeOnly) {\n                    return new ArrayBuffer(this.valueHexView.byteLength);\n                }\n                return (this.valueHexView.byteLength === this.valueHexView.buffer.byteLength)\n                    ? this.valueHexView.buffer\n                    : this.valueHexView.slice().buffer;\n            }\n            toJSON() {\n                return {\n                    ...super.toJSON(),\n                    isHexOnly: this.isHexOnly,\n                    valueHex: pvtsutils.Convert.ToHex(this.valueHexView),\n                };\n            }\n        },\n        _a.NAME = \"hexBlock\",\n        _a;\n}\n\nclass LocalBaseBlock {\n    static blockName() {\n        return this.NAME;\n    }\n    get valueBeforeDecode() {\n        return this.valueBeforeDecodeView.slice().buffer;\n    }\n    set valueBeforeDecode(value) {\n        this.valueBeforeDecodeView = new Uint8Array(value);\n    }\n    constructor({ blockLength = 0, error = EMPTY_STRING, warnings = [], valueBeforeDecode = EMPTY_VIEW, } = {}) {\n        this.blockLength = blockLength;\n        this.error = error;\n        this.warnings = warnings;\n        this.valueBeforeDecodeView = pvtsutils.BufferSourceConverter.toUint8Array(valueBeforeDecode);\n    }\n    toJSON() {\n        return {\n            blockName: this.constructor.NAME,\n            blockLength: this.blockLength,\n            error: this.error,\n            warnings: this.warnings,\n            valueBeforeDecode: pvtsutils.Convert.ToHex(this.valueBeforeDecodeView),\n        };\n    }\n}\nLocalBaseBlock.NAME = \"baseBlock\";\n\nclass ValueBlock extends LocalBaseBlock {\n    fromBER(_inputBuffer, _inputOffset, _inputLength) {\n        throw TypeError(\"User need to make a specific function in a class which extends 'ValueBlock'\");\n    }\n    toBER(_sizeOnly, _writer) {\n        throw TypeError(\"User need to make a specific function in a class which extends 'ValueBlock'\");\n    }\n}\nValueBlock.NAME = \"valueBlock\";\n\nclass LocalIdentificationBlock extends HexBlock(LocalBaseBlock) {\n    constructor({ idBlock = {} } = {}) {\n        var _a, _b, _c, _d;\n        super();\n        if (idBlock) {\n            this.isHexOnly = (_a = idBlock.isHexOnly) !== null && _a !== void 0 ? _a : false;\n            this.valueHexView = idBlock.valueHex\n                ? pvtsutils.BufferSourceConverter.toUint8Array(idBlock.valueHex)\n                : EMPTY_VIEW;\n            this.tagClass = (_b = idBlock.tagClass) !== null && _b !== void 0 ? _b : -1;\n            this.tagNumber = (_c = idBlock.tagNumber) !== null && _c !== void 0 ? _c : -1;\n            this.isConstructed = (_d = idBlock.isConstructed) !== null && _d !== void 0 ? _d : false;\n        }\n        else {\n            this.tagClass = -1;\n            this.tagNumber = -1;\n            this.isConstructed = false;\n        }\n    }\n    toBER(sizeOnly = false) {\n        let firstOctet = 0;\n        switch (this.tagClass) {\n            case 1:\n                firstOctet |= 0x00;\n                break;\n            case 2:\n                firstOctet |= 0x40;\n                break;\n            case 3:\n                firstOctet |= 0x80;\n                break;\n            case 4:\n                firstOctet |= 0xC0;\n                break;\n            default:\n                this.error = \"Unknown tag class\";\n                return EMPTY_BUFFER;\n        }\n        if (this.isConstructed)\n            firstOctet |= 0x20;\n        if (this.tagNumber < 31 && !this.isHexOnly) {\n            const retView = new Uint8Array(1);\n            if (!sizeOnly) {\n                let number = this.tagNumber;\n                number &= 0x1F;\n                firstOctet |= number;\n                retView[0] = firstOctet;\n            }\n            return retView.buffer;\n        }\n        if (!this.isHexOnly) {\n            const encodedBuf = pvutils.utilToBase(this.tagNumber, 7);\n            const encodedView = new Uint8Array(encodedBuf);\n            const size = encodedBuf.byteLength;\n            const retView = new Uint8Array(size + 1);\n            retView[0] = (firstOctet | 0x1F);\n            if (!sizeOnly) {\n                for (let i = 0; i < (size - 1); i++)\n                    retView[i + 1] = encodedView[i] | 0x80;\n                retView[size] = encodedView[size - 1];\n            }\n            return retView.buffer;\n        }\n        const retView = new Uint8Array(this.valueHexView.byteLength + 1);\n        retView[0] = (firstOctet | 0x1F);\n        if (!sizeOnly) {\n            const curView = this.valueHexView;\n            for (let i = 0; i < (curView.length - 1); i++)\n                retView[i + 1] = curView[i] | 0x80;\n            retView[this.valueHexView.byteLength] = curView[curView.length - 1];\n        }\n        return retView.buffer;\n    }\n    fromBER(inputBuffer, inputOffset, inputLength) {\n        const inputView = pvtsutils.BufferSourceConverter.toUint8Array(inputBuffer);\n        if (!checkBufferParams(this, inputView, inputOffset, inputLength)) {\n            return -1;\n        }\n        const intBuffer = inputView.subarray(inputOffset, inputOffset + inputLength);\n        if (intBuffer.length === 0) {\n            this.error = \"Zero buffer length\";\n            return -1;\n        }\n        const tagClassMask = intBuffer[0] & 0xC0;\n        switch (tagClassMask) {\n            case 0x00:\n                this.tagClass = (1);\n                break;\n            case 0x40:\n                this.tagClass = (2);\n                break;\n            case 0x80:\n                this.tagClass = (3);\n                break;\n            case 0xC0:\n                this.tagClass = (4);\n                break;\n            default:\n                this.error = \"Unknown tag class\";\n                return -1;\n        }\n        this.isConstructed = (intBuffer[0] & 0x20) === 0x20;\n        this.isHexOnly = false;\n        const tagNumberMask = intBuffer[0] & 0x1F;\n        if (tagNumberMask !== 0x1F) {\n            this.tagNumber = (tagNumberMask);\n            this.blockLength = 1;\n        }\n        else {\n            let count = 1;\n            let intTagNumberBuffer = this.valueHexView = new Uint8Array(255);\n            let tagNumberBufferMaxLength = 255;\n            while (intBuffer[count] & 0x80) {\n                intTagNumberBuffer[count - 1] = intBuffer[count] & 0x7F;\n                count++;\n                if (count >= intBuffer.length) {\n                    this.error = \"End of input reached before message was fully decoded\";\n                    return -1;\n                }\n                if (count === tagNumberBufferMaxLength) {\n                    tagNumberBufferMaxLength += 255;\n                    const tempBufferView = new Uint8Array(tagNumberBufferMaxLength);\n                    for (let i = 0; i < intTagNumberBuffer.length; i++)\n                        tempBufferView[i] = intTagNumberBuffer[i];\n                    intTagNumberBuffer = this.valueHexView = new Uint8Array(tagNumberBufferMaxLength);\n                }\n            }\n            this.blockLength = (count + 1);\n            intTagNumberBuffer[count - 1] = intBuffer[count] & 0x7F;\n            const tempBufferView = new Uint8Array(count);\n            for (let i = 0; i < count; i++)\n                tempBufferView[i] = intTagNumberBuffer[i];\n            intTagNumberBuffer = this.valueHexView = new Uint8Array(count);\n            intTagNumberBuffer.set(tempBufferView);\n            if (this.blockLength <= 9)\n                this.tagNumber = pvutils.utilFromBase(intTagNumberBuffer, 7);\n            else {\n                this.isHexOnly = true;\n                this.warnings.push(\"Tag too long, represented as hex-coded\");\n            }\n        }\n        if (((this.tagClass === 1))\n            && (this.isConstructed)) {\n            switch (this.tagNumber) {\n                case 1:\n                case 2:\n                case 5:\n                case 6:\n                case 9:\n                case 13:\n                case 14:\n                case 23:\n                case 24:\n                case 31:\n                case 32:\n                case 33:\n                case 34:\n                    this.error = \"Constructed encoding used for primitive type\";\n                    return -1;\n            }\n        }\n        return (inputOffset + this.blockLength);\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            tagClass: this.tagClass,\n            tagNumber: this.tagNumber,\n            isConstructed: this.isConstructed,\n        };\n    }\n}\nLocalIdentificationBlock.NAME = \"identificationBlock\";\n\nclass LocalLengthBlock extends LocalBaseBlock {\n    constructor({ lenBlock = {} } = {}) {\n        var _a, _b, _c;\n        super();\n        this.isIndefiniteForm = (_a = lenBlock.isIndefiniteForm) !== null && _a !== void 0 ? _a : false;\n        this.longFormUsed = (_b = lenBlock.longFormUsed) !== null && _b !== void 0 ? _b : false;\n        this.length = (_c = lenBlock.length) !== null && _c !== void 0 ? _c : 0;\n    }\n    fromBER(inputBuffer, inputOffset, inputLength) {\n        const view = pvtsutils.BufferSourceConverter.toUint8Array(inputBuffer);\n        if (!checkBufferParams(this, view, inputOffset, inputLength)) {\n            return -1;\n        }\n        const intBuffer = view.subarray(inputOffset, inputOffset + inputLength);\n        if (intBuffer.length === 0) {\n            this.error = \"Zero buffer length\";\n            return -1;\n        }\n        if (intBuffer[0] === 0xFF) {\n            this.error = \"Length block 0xFF is reserved by standard\";\n            return -1;\n        }\n        this.isIndefiniteForm = intBuffer[0] === 0x80;\n        if (this.isIndefiniteForm) {\n            this.blockLength = 1;\n            return (inputOffset + this.blockLength);\n        }\n        this.longFormUsed = !!(intBuffer[0] & 0x80);\n        if (this.longFormUsed === false) {\n            this.length = (intBuffer[0]);\n            this.blockLength = 1;\n            return (inputOffset + this.blockLength);\n        }\n        const count = intBuffer[0] & 0x7F;\n        if (count > 8) {\n            this.error = \"Too big integer\";\n            return -1;\n        }\n        if ((count + 1) > intBuffer.length) {\n            this.error = \"End of input reached before message was fully decoded\";\n            return -1;\n        }\n        const lenOffset = inputOffset + 1;\n        const lengthBufferView = view.subarray(lenOffset, lenOffset + count);\n        if (lengthBufferView[count - 1] === 0x00)\n            this.warnings.push(\"Needlessly long encoded length\");\n        this.length = pvutils.utilFromBase(lengthBufferView, 8);\n        if (this.longFormUsed && (this.length <= 127))\n            this.warnings.push(\"Unnecessary usage of long length form\");\n        this.blockLength = count + 1;\n        return (inputOffset + this.blockLength);\n    }\n    toBER(sizeOnly = false) {\n        let retBuf;\n        let retView;\n        if (this.length > 127)\n            this.longFormUsed = true;\n        if (this.isIndefiniteForm) {\n            retBuf = new ArrayBuffer(1);\n            if (sizeOnly === false) {\n                retView = new Uint8Array(retBuf);\n                retView[0] = 0x80;\n            }\n            return retBuf;\n        }\n        if (this.longFormUsed) {\n            const encodedBuf = pvutils.utilToBase(this.length, 8);\n            if (encodedBuf.byteLength > 127) {\n                this.error = \"Too big length\";\n                return (EMPTY_BUFFER);\n            }\n            retBuf = new ArrayBuffer(encodedBuf.byteLength + 1);\n            if (sizeOnly)\n                return retBuf;\n            const encodedView = new Uint8Array(encodedBuf);\n            retView = new Uint8Array(retBuf);\n            retView[0] = encodedBuf.byteLength | 0x80;\n            for (let i = 0; i < encodedBuf.byteLength; i++)\n                retView[i + 1] = encodedView[i];\n            return retBuf;\n        }\n        retBuf = new ArrayBuffer(1);\n        if (sizeOnly === false) {\n            retView = new Uint8Array(retBuf);\n            retView[0] = this.length;\n        }\n        return retBuf;\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            isIndefiniteForm: this.isIndefiniteForm,\n            longFormUsed: this.longFormUsed,\n            length: this.length,\n        };\n    }\n}\nLocalLengthBlock.NAME = \"lengthBlock\";\n\nconst typeStore = {};\n\nclass BaseBlock extends LocalBaseBlock {\n    constructor({ name = EMPTY_STRING, optional = false, primitiveSchema, ...parameters } = {}, valueBlockType) {\n        super(parameters);\n        this.name = name;\n        this.optional = optional;\n        if (primitiveSchema) {\n            this.primitiveSchema = primitiveSchema;\n        }\n        this.idBlock = new LocalIdentificationBlock(parameters);\n        this.lenBlock = new LocalLengthBlock(parameters);\n        this.valueBlock = valueBlockType ? new valueBlockType(parameters) : new ValueBlock(parameters);\n    }\n    fromBER(inputBuffer, inputOffset, inputLength) {\n        const resultOffset = this.valueBlock.fromBER(inputBuffer, inputOffset, (this.lenBlock.isIndefiniteForm)\n            ? inputLength\n            : this.lenBlock.length);\n        if (resultOffset === -1) {\n            this.error = this.valueBlock.error;\n            return resultOffset;\n        }\n        if (!this.idBlock.error.length)\n            this.blockLength += this.idBlock.blockLength;\n        if (!this.lenBlock.error.length)\n            this.blockLength += this.lenBlock.blockLength;\n        if (!this.valueBlock.error.length)\n            this.blockLength += this.valueBlock.blockLength;\n        return resultOffset;\n    }\n    toBER(sizeOnly, writer) {\n        const _writer = writer || new ViewWriter();\n        if (!writer) {\n            prepareIndefiniteForm(this);\n        }\n        const idBlockBuf = this.idBlock.toBER(sizeOnly);\n        _writer.write(idBlockBuf);\n        if (this.lenBlock.isIndefiniteForm) {\n            _writer.write(new Uint8Array([0x80]).buffer);\n            this.valueBlock.toBER(sizeOnly, _writer);\n            _writer.write(new ArrayBuffer(2));\n        }\n        else {\n            const valueBlockBuf = this.valueBlock.toBER(sizeOnly);\n            this.lenBlock.length = valueBlockBuf.byteLength;\n            const lenBlockBuf = this.lenBlock.toBER(sizeOnly);\n            _writer.write(lenBlockBuf);\n            _writer.write(valueBlockBuf);\n        }\n        if (!writer) {\n            return _writer.final();\n        }\n        return EMPTY_BUFFER;\n    }\n    toJSON() {\n        const object = {\n            ...super.toJSON(),\n            idBlock: this.idBlock.toJSON(),\n            lenBlock: this.lenBlock.toJSON(),\n            valueBlock: this.valueBlock.toJSON(),\n            name: this.name,\n            optional: this.optional,\n        };\n        if (this.primitiveSchema)\n            object.primitiveSchema = this.primitiveSchema.toJSON();\n        return object;\n    }\n    toString(encoding = \"ascii\") {\n        if (encoding === \"ascii\") {\n            return this.onAsciiEncoding();\n        }\n        return pvtsutils.Convert.ToHex(this.toBER());\n    }\n    onAsciiEncoding() {\n        const name = this.constructor.NAME;\n        const value = pvtsutils.Convert.ToHex(this.valueBlock.valueBeforeDecodeView);\n        return `${name} : ${value}`;\n    }\n    isEqual(other) {\n        if (this === other) {\n            return true;\n        }\n        if (!(other instanceof this.constructor)) {\n            return false;\n        }\n        const thisRaw = this.toBER();\n        const otherRaw = other.toBER();\n        return pvutils.isEqualBuffer(thisRaw, otherRaw);\n    }\n}\nBaseBlock.NAME = \"BaseBlock\";\nfunction prepareIndefiniteForm(baseBlock) {\n    var _a;\n    if (baseBlock instanceof typeStore.Constructed) {\n        for (const value of baseBlock.valueBlock.value) {\n            if (prepareIndefiniteForm(value)) {\n                baseBlock.lenBlock.isIndefiniteForm = true;\n            }\n        }\n    }\n    return !!((_a = baseBlock.lenBlock) === null || _a === void 0 ? void 0 : _a.isIndefiniteForm);\n}\n\nclass BaseStringBlock extends BaseBlock {\n    getValue() {\n        return this.valueBlock.value;\n    }\n    setValue(value) {\n        this.valueBlock.value = value;\n    }\n    constructor({ value = EMPTY_STRING, ...parameters } = {}, stringValueBlockType) {\n        super(parameters, stringValueBlockType);\n        if (value) {\n            this.fromString(value);\n        }\n    }\n    fromBER(inputBuffer, inputOffset, inputLength) {\n        const resultOffset = this.valueBlock.fromBER(inputBuffer, inputOffset, (this.lenBlock.isIndefiniteForm)\n            ? inputLength\n            : this.lenBlock.length);\n        if (resultOffset === -1) {\n            this.error = this.valueBlock.error;\n            return resultOffset;\n        }\n        this.fromBuffer(this.valueBlock.valueHexView);\n        if (!this.idBlock.error.length)\n            this.blockLength += this.idBlock.blockLength;\n        if (!this.lenBlock.error.length)\n            this.blockLength += this.lenBlock.blockLength;\n        if (!this.valueBlock.error.length)\n            this.blockLength += this.valueBlock.blockLength;\n        return resultOffset;\n    }\n    onAsciiEncoding() {\n        return `${this.constructor.NAME} : '${this.valueBlock.value}'`;\n    }\n}\nBaseStringBlock.NAME = \"BaseStringBlock\";\n\nclass LocalPrimitiveValueBlock extends HexBlock(ValueBlock) {\n    constructor({ isHexOnly = true, ...parameters } = {}) {\n        super(parameters);\n        this.isHexOnly = isHexOnly;\n    }\n}\nLocalPrimitiveValueBlock.NAME = \"PrimitiveValueBlock\";\n\nvar _a$w;\nclass Primitive extends BaseBlock {\n    constructor(parameters = {}) {\n        super(parameters, LocalPrimitiveValueBlock);\n        this.idBlock.isConstructed = false;\n    }\n}\n_a$w = Primitive;\n(() => {\n    typeStore.Primitive = _a$w;\n})();\nPrimitive.NAME = \"PRIMITIVE\";\n\nfunction localChangeType(inputObject, newType) {\n    if (inputObject instanceof newType) {\n        return inputObject;\n    }\n    const newObject = new newType();\n    newObject.idBlock = inputObject.idBlock;\n    newObject.lenBlock = inputObject.lenBlock;\n    newObject.warnings = inputObject.warnings;\n    newObject.valueBeforeDecodeView = inputObject.valueBeforeDecodeView;\n    return newObject;\n}\nfunction localFromBER(inputBuffer, inputOffset = 0, inputLength = inputBuffer.length) {\n    const incomingOffset = inputOffset;\n    let returnObject = new BaseBlock({}, ValueBlock);\n    const baseBlock = new LocalBaseBlock();\n    if (!checkBufferParams(baseBlock, inputBuffer, inputOffset, inputLength)) {\n        returnObject.error = baseBlock.error;\n        return {\n            offset: -1,\n            result: returnObject,\n        };\n    }\n    const intBuffer = inputBuffer.subarray(inputOffset, inputOffset + inputLength);\n    if (!intBuffer.length) {\n        returnObject.error = \"Zero buffer length\";\n        return {\n            offset: -1,\n            result: returnObject,\n        };\n    }\n    let resultOffset = returnObject.idBlock.fromBER(inputBuffer, inputOffset, inputLength);\n    if (returnObject.idBlock.warnings.length) {\n        returnObject.warnings.concat(returnObject.idBlock.warnings);\n    }\n    if (resultOffset === -1) {\n        returnObject.error = returnObject.idBlock.error;\n        return {\n            offset: -1,\n            result: returnObject,\n        };\n    }\n    inputOffset = resultOffset;\n    inputLength -= returnObject.idBlock.blockLength;\n    resultOffset = returnObject.lenBlock.fromBER(inputBuffer, inputOffset, inputLength);\n    if (returnObject.lenBlock.warnings.length) {\n        returnObject.warnings.concat(returnObject.lenBlock.warnings);\n    }\n    if (resultOffset === -1) {\n        returnObject.error = returnObject.lenBlock.error;\n        return {\n            offset: -1,\n            result: returnObject,\n        };\n    }\n    inputOffset = resultOffset;\n    inputLength -= returnObject.lenBlock.blockLength;\n    if (!returnObject.idBlock.isConstructed\n        && returnObject.lenBlock.isIndefiniteForm) {\n        returnObject.error = \"Indefinite length form used for primitive encoding form\";\n        return {\n            offset: -1,\n            result: returnObject,\n        };\n    }\n    let newASN1Type = BaseBlock;\n    switch (returnObject.idBlock.tagClass) {\n        case 1:\n            if ((returnObject.idBlock.tagNumber >= 37)\n                && (returnObject.idBlock.isHexOnly === false)) {\n                returnObject.error = \"UNIVERSAL 37 and upper tags are reserved by ASN.1 standard\";\n                return {\n                    offset: -1,\n                    result: returnObject,\n                };\n            }\n            switch (returnObject.idBlock.tagNumber) {\n                case 0:\n                    if ((returnObject.idBlock.isConstructed)\n                        && (returnObject.lenBlock.length > 0)) {\n                        returnObject.error = \"Type [UNIVERSAL 0] is reserved\";\n                        return {\n                            offset: -1,\n                            result: returnObject,\n                        };\n                    }\n                    newASN1Type = typeStore.EndOfContent;\n                    break;\n                case 1:\n                    newASN1Type = typeStore.Boolean;\n                    break;\n                case 2:\n                    newASN1Type = typeStore.Integer;\n                    break;\n                case 3:\n                    newASN1Type = typeStore.BitString;\n                    break;\n                case 4:\n                    newASN1Type = typeStore.OctetString;\n                    break;\n                case 5:\n                    newASN1Type = typeStore.Null;\n                    break;\n                case 6:\n                    newASN1Type = typeStore.ObjectIdentifier;\n                    break;\n                case 10:\n                    newASN1Type = typeStore.Enumerated;\n                    break;\n                case 12:\n                    newASN1Type = typeStore.Utf8String;\n                    break;\n                case 13:\n                    newASN1Type = typeStore.RelativeObjectIdentifier;\n                    break;\n                case 14:\n                    newASN1Type = typeStore.TIME;\n                    break;\n                case 15:\n                    returnObject.error = \"[UNIVERSAL 15] is reserved by ASN.1 standard\";\n                    return {\n                        offset: -1,\n                        result: returnObject,\n                    };\n                case 16:\n                    newASN1Type = typeStore.Sequence;\n                    break;\n                case 17:\n                    newASN1Type = typeStore.Set;\n                    break;\n                case 18:\n                    newASN1Type = typeStore.NumericString;\n                    break;\n                case 19:\n                    newASN1Type = typeStore.PrintableString;\n                    break;\n                case 20:\n                    newASN1Type = typeStore.TeletexString;\n                    break;\n                case 21:\n                    newASN1Type = typeStore.VideotexString;\n                    break;\n                case 22:\n                    newASN1Type = typeStore.IA5String;\n                    break;\n                case 23:\n                    newASN1Type = typeStore.UTCTime;\n                    break;\n                case 24:\n                    newASN1Type = typeStore.GeneralizedTime;\n                    break;\n                case 25:\n                    newASN1Type = typeStore.GraphicString;\n                    break;\n                case 26:\n                    newASN1Type = typeStore.VisibleString;\n                    break;\n                case 27:\n                    newASN1Type = typeStore.GeneralString;\n                    break;\n                case 28:\n                    newASN1Type = typeStore.UniversalString;\n                    break;\n                case 29:\n                    newASN1Type = typeStore.CharacterString;\n                    break;\n                case 30:\n                    newASN1Type = typeStore.BmpString;\n                    break;\n                case 31:\n                    newASN1Type = typeStore.DATE;\n                    break;\n                case 32:\n                    newASN1Type = typeStore.TimeOfDay;\n                    break;\n                case 33:\n                    newASN1Type = typeStore.DateTime;\n                    break;\n                case 34:\n                    newASN1Type = typeStore.Duration;\n                    break;\n                default: {\n                    const newObject = returnObject.idBlock.isConstructed\n                        ? new typeStore.Constructed()\n                        : new typeStore.Primitive();\n                    newObject.idBlock = returnObject.idBlock;\n                    newObject.lenBlock = returnObject.lenBlock;\n                    newObject.warnings = returnObject.warnings;\n                    returnObject = newObject;\n                }\n            }\n            break;\n        case 2:\n        case 3:\n        case 4:\n        default: {\n            newASN1Type = returnObject.idBlock.isConstructed\n                ? typeStore.Constructed\n                : typeStore.Primitive;\n        }\n    }\n    returnObject = localChangeType(returnObject, newASN1Type);\n    resultOffset = returnObject.fromBER(inputBuffer, inputOffset, returnObject.lenBlock.isIndefiniteForm ? inputLength : returnObject.lenBlock.length);\n    returnObject.valueBeforeDecodeView = inputBuffer.subarray(incomingOffset, incomingOffset + returnObject.blockLength);\n    return {\n        offset: resultOffset,\n        result: returnObject,\n    };\n}\nfunction fromBER(inputBuffer) {\n    if (!inputBuffer.byteLength) {\n        const result = new BaseBlock({}, ValueBlock);\n        result.error = \"Input buffer has zero length\";\n        return {\n            offset: -1,\n            result,\n        };\n    }\n    return localFromBER(pvtsutils.BufferSourceConverter.toUint8Array(inputBuffer).slice(), 0, inputBuffer.byteLength);\n}\n\nfunction checkLen(indefiniteLength, length) {\n    if (indefiniteLength) {\n        return 1;\n    }\n    return length;\n}\nclass LocalConstructedValueBlock extends ValueBlock {\n    constructor({ value = [], isIndefiniteForm = false, ...parameters } = {}) {\n        super(parameters);\n        this.value = value;\n        this.isIndefiniteForm = isIndefiniteForm;\n    }\n    fromBER(inputBuffer, inputOffset, inputLength) {\n        const view = pvtsutils.BufferSourceConverter.toUint8Array(inputBuffer);\n        if (!checkBufferParams(this, view, inputOffset, inputLength)) {\n            return -1;\n        }\n        this.valueBeforeDecodeView = view.subarray(inputOffset, inputOffset + inputLength);\n        if (this.valueBeforeDecodeView.length === 0) {\n            this.warnings.push(\"Zero buffer length\");\n            return inputOffset;\n        }\n        let currentOffset = inputOffset;\n        while (checkLen(this.isIndefiniteForm, inputLength) > 0) {\n            const returnObject = localFromBER(view, currentOffset, inputLength);\n            if (returnObject.offset === -1) {\n                this.error = returnObject.result.error;\n                this.warnings.concat(returnObject.result.warnings);\n                return -1;\n            }\n            currentOffset = returnObject.offset;\n            this.blockLength += returnObject.result.blockLength;\n            inputLength -= returnObject.result.blockLength;\n            this.value.push(returnObject.result);\n            if (this.isIndefiniteForm && returnObject.result.constructor.NAME === END_OF_CONTENT_NAME) {\n                break;\n            }\n        }\n        if (this.isIndefiniteForm) {\n            if (this.value[this.value.length - 1].constructor.NAME === END_OF_CONTENT_NAME) {\n                this.value.pop();\n            }\n            else {\n                this.warnings.push(\"No EndOfContent block encoded\");\n            }\n        }\n        return currentOffset;\n    }\n    toBER(sizeOnly, writer) {\n        const _writer = writer || new ViewWriter();\n        for (let i = 0; i < this.value.length; i++) {\n            this.value[i].toBER(sizeOnly, _writer);\n        }\n        if (!writer) {\n            return _writer.final();\n        }\n        return EMPTY_BUFFER;\n    }\n    toJSON() {\n        const object = {\n            ...super.toJSON(),\n            isIndefiniteForm: this.isIndefiniteForm,\n            value: [],\n        };\n        for (const value of this.value) {\n            object.value.push(value.toJSON());\n        }\n        return object;\n    }\n}\nLocalConstructedValueBlock.NAME = \"ConstructedValueBlock\";\n\nvar _a$v;\nclass Constructed extends BaseBlock {\n    constructor(parameters = {}) {\n        super(parameters, LocalConstructedValueBlock);\n        this.idBlock.isConstructed = true;\n    }\n    fromBER(inputBuffer, inputOffset, inputLength) {\n        this.valueBlock.isIndefiniteForm = this.lenBlock.isIndefiniteForm;\n        const resultOffset = this.valueBlock.fromBER(inputBuffer, inputOffset, (this.lenBlock.isIndefiniteForm) ? inputLength : this.lenBlock.length);\n        if (resultOffset === -1) {\n            this.error = this.valueBlock.error;\n            return resultOffset;\n        }\n        if (!this.idBlock.error.length)\n            this.blockLength += this.idBlock.blockLength;\n        if (!this.lenBlock.error.length)\n            this.blockLength += this.lenBlock.blockLength;\n        if (!this.valueBlock.error.length)\n            this.blockLength += this.valueBlock.blockLength;\n        return resultOffset;\n    }\n    onAsciiEncoding() {\n        const values = [];\n        for (const value of this.valueBlock.value) {\n            values.push(value.toString(\"ascii\").split(\"\\n\").map((o) => `  ${o}`).join(\"\\n\"));\n        }\n        const blockName = this.idBlock.tagClass === 3\n            ? `[${this.idBlock.tagNumber}]`\n            : this.constructor.NAME;\n        return values.length\n            ? `${blockName} :\\n${values.join(\"\\n\")}`\n            : `${blockName} :`;\n    }\n}\n_a$v = Constructed;\n(() => {\n    typeStore.Constructed = _a$v;\n})();\nConstructed.NAME = \"CONSTRUCTED\";\n\nclass LocalEndOfContentValueBlock extends ValueBlock {\n    fromBER(inputBuffer, inputOffset, _inputLength) {\n        return inputOffset;\n    }\n    toBER(_sizeOnly) {\n        return EMPTY_BUFFER;\n    }\n}\nLocalEndOfContentValueBlock.override = \"EndOfContentValueBlock\";\n\nvar _a$u;\nclass EndOfContent extends BaseBlock {\n    constructor(parameters = {}) {\n        super(parameters, LocalEndOfContentValueBlock);\n        this.idBlock.tagClass = 1;\n        this.idBlock.tagNumber = 0;\n    }\n}\n_a$u = EndOfContent;\n(() => {\n    typeStore.EndOfContent = _a$u;\n})();\nEndOfContent.NAME = END_OF_CONTENT_NAME;\n\nvar _a$t;\nclass Null extends BaseBlock {\n    constructor(parameters = {}) {\n        super(parameters, ValueBlock);\n        this.idBlock.tagClass = 1;\n        this.idBlock.tagNumber = 5;\n    }\n    fromBER(inputBuffer, inputOffset, inputLength) {\n        if (this.lenBlock.length > 0)\n            this.warnings.push(\"Non-zero length of value block for Null type\");\n        if (!this.idBlock.error.length)\n            this.blockLength += this.idBlock.blockLength;\n        if (!this.lenBlock.error.length)\n            this.blockLength += this.lenBlock.blockLength;\n        this.blockLength += inputLength;\n        if ((inputOffset + inputLength) > inputBuffer.byteLength) {\n            this.error = \"End of input reached before message was fully decoded (inconsistent offset and length values)\";\n            return -1;\n        }\n        return (inputOffset + inputLength);\n    }\n    toBER(sizeOnly, writer) {\n        const retBuf = new ArrayBuffer(2);\n        if (!sizeOnly) {\n            const retView = new Uint8Array(retBuf);\n            retView[0] = 0x05;\n            retView[1] = 0x00;\n        }\n        if (writer) {\n            writer.write(retBuf);\n        }\n        return retBuf;\n    }\n    onAsciiEncoding() {\n        return `${this.constructor.NAME}`;\n    }\n}\n_a$t = Null;\n(() => {\n    typeStore.Null = _a$t;\n})();\nNull.NAME = \"NULL\";\n\nclass LocalBooleanValueBlock extends HexBlock(ValueBlock) {\n    get value() {\n        for (const octet of this.valueHexView) {\n            if (octet > 0) {\n                return true;\n            }\n        }\n        return false;\n    }\n    set value(value) {\n        this.valueHexView[0] = value ? 0xFF : 0x00;\n    }\n    constructor({ value, ...parameters } = {}) {\n        super(parameters);\n        if (parameters.valueHex) {\n            this.valueHexView = pvtsutils.BufferSourceConverter.toUint8Array(parameters.valueHex);\n        }\n        else {\n            this.valueHexView = new Uint8Array(1);\n        }\n        if (value) {\n            this.value = value;\n        }\n    }\n    fromBER(inputBuffer, inputOffset, inputLength) {\n        const inputView = pvtsutils.BufferSourceConverter.toUint8Array(inputBuffer);\n        if (!checkBufferParams(this, inputView, inputOffset, inputLength)) {\n            return -1;\n        }\n        this.valueHexView = inputView.subarray(inputOffset, inputOffset + inputLength);\n        if (inputLength > 1)\n            this.warnings.push(\"Boolean value encoded in more then 1 octet\");\n        this.isHexOnly = true;\n        pvutils.utilDecodeTC.call(this);\n        this.blockLength = inputLength;\n        return (inputOffset + inputLength);\n    }\n    toBER() {\n        return this.valueHexView.slice();\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            value: this.value,\n        };\n    }\n}\nLocalBooleanValueBlock.NAME = \"BooleanValueBlock\";\n\nvar _a$s;\nclass Boolean extends BaseBlock {\n    getValue() {\n        return this.valueBlock.value;\n    }\n    setValue(value) {\n        this.valueBlock.value = value;\n    }\n    constructor(parameters = {}) {\n        super(parameters, LocalBooleanValueBlock);\n        this.idBlock.tagClass = 1;\n        this.idBlock.tagNumber = 1;\n    }\n    onAsciiEncoding() {\n        return `${this.constructor.NAME} : ${this.getValue}`;\n    }\n}\n_a$s = Boolean;\n(() => {\n    typeStore.Boolean = _a$s;\n})();\nBoolean.NAME = \"BOOLEAN\";\n\nclass LocalOctetStringValueBlock extends HexBlock(LocalConstructedValueBlock) {\n    constructor({ isConstructed = false, ...parameters } = {}) {\n        super(parameters);\n        this.isConstructed = isConstructed;\n    }\n    fromBER(inputBuffer, inputOffset, inputLength) {\n        let resultOffset = 0;\n        if (this.isConstructed) {\n            this.isHexOnly = false;\n            resultOffset = LocalConstructedValueBlock.prototype.fromBER.call(this, inputBuffer, inputOffset, inputLength);\n            if (resultOffset === -1)\n                return resultOffset;\n            for (let i = 0; i < this.value.length; i++) {\n                const currentBlockName = this.value[i].constructor.NAME;\n                if (currentBlockName === END_OF_CONTENT_NAME) {\n                    if (this.isIndefiniteForm)\n                        break;\n                    else {\n                        this.error = \"EndOfContent is unexpected, OCTET STRING may consists of OCTET STRINGs only\";\n                        return -1;\n                    }\n                }\n                if (currentBlockName !== OCTET_STRING_NAME) {\n                    this.error = \"OCTET STRING may consists of OCTET STRINGs only\";\n                    return -1;\n                }\n            }\n        }\n        else {\n            this.isHexOnly = true;\n            resultOffset = super.fromBER(inputBuffer, inputOffset, inputLength);\n            this.blockLength = inputLength;\n        }\n        return resultOffset;\n    }\n    toBER(sizeOnly, writer) {\n        if (this.isConstructed)\n            return LocalConstructedValueBlock.prototype.toBER.call(this, sizeOnly, writer);\n        return sizeOnly\n            ? new ArrayBuffer(this.valueHexView.byteLength)\n            : this.valueHexView.slice().buffer;\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            isConstructed: this.isConstructed,\n        };\n    }\n}\nLocalOctetStringValueBlock.NAME = \"OctetStringValueBlock\";\n\nvar _a$r;\nclass OctetString extends BaseBlock {\n    constructor({ idBlock = {}, lenBlock = {}, ...parameters } = {}) {\n        var _b, _c;\n        (_b = parameters.isConstructed) !== null && _b !== void 0 ? _b : (parameters.isConstructed = !!((_c = parameters.value) === null || _c === void 0 ? void 0 : _c.length));\n        super({\n            idBlock: {\n                isConstructed: parameters.isConstructed,\n                ...idBlock,\n            },\n            lenBlock: {\n                ...lenBlock,\n                isIndefiniteForm: !!parameters.isIndefiniteForm,\n            },\n            ...parameters,\n        }, LocalOctetStringValueBlock);\n        this.idBlock.tagClass = 1;\n        this.idBlock.tagNumber = 4;\n    }\n    fromBER(inputBuffer, inputOffset, inputLength) {\n        this.valueBlock.isConstructed = this.idBlock.isConstructed;\n        this.valueBlock.isIndefiniteForm = this.lenBlock.isIndefiniteForm;\n        if (inputLength === 0) {\n            if (this.idBlock.error.length === 0)\n                this.blockLength += this.idBlock.blockLength;\n            if (this.lenBlock.error.length === 0)\n                this.blockLength += this.lenBlock.blockLength;\n            return inputOffset;\n        }\n        if (!this.valueBlock.isConstructed) {\n            const view = inputBuffer instanceof ArrayBuffer ? new Uint8Array(inputBuffer) : inputBuffer;\n            const buf = view.subarray(inputOffset, inputOffset + inputLength);\n            try {\n                if (buf.byteLength) {\n                    const asn = localFromBER(buf, 0, buf.byteLength);\n                    if (asn.offset !== -1 && asn.offset === inputLength) {\n                        this.valueBlock.value = [asn.result];\n                    }\n                }\n            }\n            catch {\n            }\n        }\n        return super.fromBER(inputBuffer, inputOffset, inputLength);\n    }\n    onAsciiEncoding() {\n        if (this.valueBlock.isConstructed || (this.valueBlock.value && this.valueBlock.value.length)) {\n            return Constructed.prototype.onAsciiEncoding.call(this);\n        }\n        const name = this.constructor.NAME;\n        const value = pvtsutils.Convert.ToHex(this.valueBlock.valueHexView);\n        return `${name} : ${value}`;\n    }\n    getValue() {\n        if (!this.idBlock.isConstructed) {\n            return this.valueBlock.valueHexView.slice().buffer;\n        }\n        const array = [];\n        for (const content of this.valueBlock.value) {\n            if (content instanceof _a$r) {\n                array.push(content.valueBlock.valueHexView);\n            }\n        }\n        return pvtsutils.BufferSourceConverter.concat(array);\n    }\n}\n_a$r = OctetString;\n(() => {\n    typeStore.OctetString = _a$r;\n})();\nOctetString.NAME = OCTET_STRING_NAME;\n\nclass LocalBitStringValueBlock extends HexBlock(LocalConstructedValueBlock) {\n    constructor({ unusedBits = 0, isConstructed = false, ...parameters } = {}) {\n        super(parameters);\n        this.unusedBits = unusedBits;\n        this.isConstructed = isConstructed;\n        this.blockLength = this.valueHexView.byteLength;\n    }\n    fromBER(inputBuffer, inputOffset, inputLength) {\n        if (!inputLength) {\n            return inputOffset;\n        }\n        let resultOffset = -1;\n        if (this.isConstructed) {\n            resultOffset = LocalConstructedValueBlock.prototype.fromBER.call(this, inputBuffer, inputOffset, inputLength);\n            if (resultOffset === -1)\n                return resultOffset;\n            for (const value of this.value) {\n                const currentBlockName = value.constructor.NAME;\n                if (currentBlockName === END_OF_CONTENT_NAME) {\n                    if (this.isIndefiniteForm)\n                        break;\n                    else {\n                        this.error = \"EndOfContent is unexpected, BIT STRING may consists of BIT STRINGs only\";\n                        return -1;\n                    }\n                }\n                if (currentBlockName !== BIT_STRING_NAME) {\n                    this.error = \"BIT STRING may consists of BIT STRINGs only\";\n                    return -1;\n                }\n                const valueBlock = value.valueBlock;\n                if ((this.unusedBits > 0) && (valueBlock.unusedBits > 0)) {\n                    this.error = \"Using of \\\"unused bits\\\" inside constructive BIT STRING allowed for least one only\";\n                    return -1;\n                }\n                this.unusedBits = valueBlock.unusedBits;\n            }\n            return resultOffset;\n        }\n        const inputView = pvtsutils.BufferSourceConverter.toUint8Array(inputBuffer);\n        if (!checkBufferParams(this, inputView, inputOffset, inputLength)) {\n            return -1;\n        }\n        const intBuffer = inputView.subarray(inputOffset, inputOffset + inputLength);\n        this.unusedBits = intBuffer[0];\n        if (this.unusedBits > 7) {\n            this.error = \"Unused bits for BitString must be in range 0-7\";\n            return -1;\n        }\n        if (!this.unusedBits) {\n            const buf = intBuffer.subarray(1);\n            try {\n                if (buf.byteLength) {\n                    const asn = localFromBER(buf, 0, buf.byteLength);\n                    if (asn.offset !== -1 && asn.offset === (inputLength - 1)) {\n                        this.value = [asn.result];\n                    }\n                }\n            }\n            catch {\n            }\n        }\n        this.valueHexView = intBuffer.subarray(1);\n        this.blockLength = intBuffer.length;\n        return (inputOffset + inputLength);\n    }\n    toBER(sizeOnly, writer) {\n        if (this.isConstructed) {\n            return LocalConstructedValueBlock.prototype.toBER.call(this, sizeOnly, writer);\n        }\n        if (sizeOnly) {\n            return new ArrayBuffer(this.valueHexView.byteLength + 1);\n        }\n        if (!this.valueHexView.byteLength) {\n            return EMPTY_BUFFER;\n        }\n        const retView = new Uint8Array(this.valueHexView.length + 1);\n        retView[0] = this.unusedBits;\n        retView.set(this.valueHexView, 1);\n        return retView.buffer;\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            unusedBits: this.unusedBits,\n            isConstructed: this.isConstructed,\n        };\n    }\n}\nLocalBitStringValueBlock.NAME = \"BitStringValueBlock\";\n\nvar _a$q;\nclass BitString extends BaseBlock {\n    constructor({ idBlock = {}, lenBlock = {}, ...parameters } = {}) {\n        var _b, _c;\n        (_b = parameters.isConstructed) !== null && _b !== void 0 ? _b : (parameters.isConstructed = !!((_c = parameters.value) === null || _c === void 0 ? void 0 : _c.length));\n        super({\n            idBlock: {\n                isConstructed: parameters.isConstructed,\n                ...idBlock,\n            },\n            lenBlock: {\n                ...lenBlock,\n                isIndefiniteForm: !!parameters.isIndefiniteForm,\n            },\n            ...parameters,\n        }, LocalBitStringValueBlock);\n        this.idBlock.tagClass = 1;\n        this.idBlock.tagNumber = 3;\n    }\n    fromBER(inputBuffer, inputOffset, inputLength) {\n        this.valueBlock.isConstructed = this.idBlock.isConstructed;\n        this.valueBlock.isIndefiniteForm = this.lenBlock.isIndefiniteForm;\n        return super.fromBER(inputBuffer, inputOffset, inputLength);\n    }\n    onAsciiEncoding() {\n        if (this.valueBlock.isConstructed || (this.valueBlock.value && this.valueBlock.value.length)) {\n            return Constructed.prototype.onAsciiEncoding.call(this);\n        }\n        else {\n            const bits = [];\n            const valueHex = this.valueBlock.valueHexView;\n            for (const byte of valueHex) {\n                bits.push(byte.toString(2).padStart(8, \"0\"));\n            }\n            const bitsStr = bits.join(\"\");\n            const name = this.constructor.NAME;\n            const value = bitsStr.substring(0, bitsStr.length - this.valueBlock.unusedBits);\n            return `${name} : ${value}`;\n        }\n    }\n}\n_a$q = BitString;\n(() => {\n    typeStore.BitString = _a$q;\n})();\nBitString.NAME = BIT_STRING_NAME;\n\nvar _a$p;\nfunction viewAdd(first, second) {\n    const c = new Uint8Array([0]);\n    const firstView = new Uint8Array(first);\n    const secondView = new Uint8Array(second);\n    let firstViewCopy = firstView.slice(0);\n    const firstViewCopyLength = firstViewCopy.length - 1;\n    const secondViewCopy = secondView.slice(0);\n    const secondViewCopyLength = secondViewCopy.length - 1;\n    let value = 0;\n    const max = (secondViewCopyLength < firstViewCopyLength) ? firstViewCopyLength : secondViewCopyLength;\n    let counter = 0;\n    for (let i = max; i >= 0; i--, counter++) {\n        switch (true) {\n            case (counter < secondViewCopy.length):\n                value = firstViewCopy[firstViewCopyLength - counter] + secondViewCopy[secondViewCopyLength - counter] + c[0];\n                break;\n            default:\n                value = firstViewCopy[firstViewCopyLength - counter] + c[0];\n        }\n        c[0] = value / 10;\n        switch (true) {\n            case (counter >= firstViewCopy.length):\n                firstViewCopy = pvutils.utilConcatView(new Uint8Array([value % 10]), firstViewCopy);\n                break;\n            default:\n                firstViewCopy[firstViewCopyLength - counter] = value % 10;\n        }\n    }\n    if (c[0] > 0)\n        firstViewCopy = pvutils.utilConcatView(c, firstViewCopy);\n    return firstViewCopy;\n}\nfunction power2(n) {\n    if (n >= powers2.length) {\n        for (let p = powers2.length; p <= n; p++) {\n            const c = new Uint8Array([0]);\n            let digits = (powers2[p - 1]).slice(0);\n            for (let i = (digits.length - 1); i >= 0; i--) {\n                const newValue = new Uint8Array([(digits[i] << 1) + c[0]]);\n                c[0] = newValue[0] / 10;\n                digits[i] = newValue[0] % 10;\n            }\n            if (c[0] > 0)\n                digits = pvutils.utilConcatView(c, digits);\n            powers2.push(digits);\n        }\n    }\n    return powers2[n];\n}\nfunction viewSub(first, second) {\n    let b = 0;\n    const firstView = new Uint8Array(first);\n    const secondView = new Uint8Array(second);\n    const firstViewCopy = firstView.slice(0);\n    const firstViewCopyLength = firstViewCopy.length - 1;\n    const secondViewCopy = secondView.slice(0);\n    const secondViewCopyLength = secondViewCopy.length - 1;\n    let value;\n    let counter = 0;\n    for (let i = secondViewCopyLength; i >= 0; i--, counter++) {\n        value = firstViewCopy[firstViewCopyLength - counter] - secondViewCopy[secondViewCopyLength - counter] - b;\n        switch (true) {\n            case (value < 0):\n                b = 1;\n                firstViewCopy[firstViewCopyLength - counter] = value + 10;\n                break;\n            default:\n                b = 0;\n                firstViewCopy[firstViewCopyLength - counter] = value;\n        }\n    }\n    if (b > 0) {\n        for (let i = (firstViewCopyLength - secondViewCopyLength + 1); i >= 0; i--, counter++) {\n            value = firstViewCopy[firstViewCopyLength - counter] - b;\n            if (value < 0) {\n                b = 1;\n                firstViewCopy[firstViewCopyLength - counter] = value + 10;\n            }\n            else {\n                b = 0;\n                firstViewCopy[firstViewCopyLength - counter] = value;\n                break;\n            }\n        }\n    }\n    return firstViewCopy.slice();\n}\nclass LocalIntegerValueBlock extends HexBlock(ValueBlock) {\n    setValueHex() {\n        if (this.valueHexView.length >= 4) {\n            this.warnings.push(\"Too big Integer for decoding, hex only\");\n            this.isHexOnly = true;\n            this._valueDec = 0;\n        }\n        else {\n            this.isHexOnly = false;\n            if (this.valueHexView.length > 0) {\n                this._valueDec = pvutils.utilDecodeTC.call(this);\n            }\n        }\n    }\n    constructor({ value, ...parameters } = {}) {\n        super(parameters);\n        this._valueDec = 0;\n        if (parameters.valueHex) {\n            this.setValueHex();\n        }\n        if (value !== undefined) {\n            this.valueDec = value;\n        }\n    }\n    set valueDec(v) {\n        this._valueDec = v;\n        this.isHexOnly = false;\n        this.valueHexView = new Uint8Array(pvutils.utilEncodeTC(v));\n    }\n    get valueDec() {\n        return this._valueDec;\n    }\n    fromDER(inputBuffer, inputOffset, inputLength, expectedLength = 0) {\n        const offset = this.fromBER(inputBuffer, inputOffset, inputLength);\n        if (offset === -1)\n            return offset;\n        const view = this.valueHexView;\n        if ((view[0] === 0x00) && ((view[1] & 0x80) !== 0)) {\n            this.valueHexView = view.subarray(1);\n        }\n        else {\n            if (expectedLength !== 0) {\n                if (view.length < expectedLength) {\n                    if ((expectedLength - view.length) > 1)\n                        expectedLength = view.length + 1;\n                    this.valueHexView = view.subarray(expectedLength - view.length);\n                }\n            }\n        }\n        return offset;\n    }\n    toDER(sizeOnly = false) {\n        const view = this.valueHexView;\n        switch (true) {\n            case ((view[0] & 0x80) !== 0):\n                {\n                    const updatedView = new Uint8Array(this.valueHexView.length + 1);\n                    updatedView[0] = 0x00;\n                    updatedView.set(view, 1);\n                    this.valueHexView = updatedView;\n                }\n                break;\n            case ((view[0] === 0x00) && ((view[1] & 0x80) === 0)):\n                {\n                    this.valueHexView = this.valueHexView.subarray(1);\n                }\n                break;\n        }\n        return this.toBER(sizeOnly);\n    }\n    fromBER(inputBuffer, inputOffset, inputLength) {\n        const resultOffset = super.fromBER(inputBuffer, inputOffset, inputLength);\n        if (resultOffset === -1) {\n            return resultOffset;\n        }\n        this.setValueHex();\n        return resultOffset;\n    }\n    toBER(sizeOnly) {\n        return sizeOnly\n            ? new ArrayBuffer(this.valueHexView.length)\n            : this.valueHexView.slice().buffer;\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            valueDec: this.valueDec,\n        };\n    }\n    toString() {\n        const firstBit = (this.valueHexView.length * 8) - 1;\n        let digits = new Uint8Array((this.valueHexView.length * 8) / 3);\n        let bitNumber = 0;\n        let currentByte;\n        const asn1View = this.valueHexView;\n        let result = \"\";\n        let flag = false;\n        for (let byteNumber = (asn1View.byteLength - 1); byteNumber >= 0; byteNumber--) {\n            currentByte = asn1View[byteNumber];\n            for (let i = 0; i < 8; i++) {\n                if ((currentByte & 1) === 1) {\n                    switch (bitNumber) {\n                        case firstBit:\n                            digits = viewSub(power2(bitNumber), digits);\n                            result = \"-\";\n                            break;\n                        default:\n                            digits = viewAdd(digits, power2(bitNumber));\n                    }\n                }\n                bitNumber++;\n                currentByte >>= 1;\n            }\n        }\n        for (let i = 0; i < digits.length; i++) {\n            if (digits[i])\n                flag = true;\n            if (flag)\n                result += digitsString.charAt(digits[i]);\n        }\n        if (flag === false)\n            result += digitsString.charAt(0);\n        return result;\n    }\n}\n_a$p = LocalIntegerValueBlock;\nLocalIntegerValueBlock.NAME = \"IntegerValueBlock\";\n(() => {\n    Object.defineProperty(_a$p.prototype, \"valueHex\", {\n        set: function (v) {\n            this.valueHexView = new Uint8Array(v);\n            this.setValueHex();\n        },\n        get: function () {\n            return this.valueHexView.slice().buffer;\n        },\n    });\n})();\n\nvar _a$o;\nclass Integer extends BaseBlock {\n    constructor(parameters = {}) {\n        super(parameters, LocalIntegerValueBlock);\n        this.idBlock.tagClass = 1;\n        this.idBlock.tagNumber = 2;\n    }\n    toBigInt() {\n        assertBigInt();\n        return BigInt(this.valueBlock.toString());\n    }\n    static fromBigInt(value) {\n        assertBigInt();\n        const bigIntValue = BigInt(value);\n        const writer = new ViewWriter();\n        const hex = bigIntValue.toString(16).replace(/^-/, \"\");\n        const view = new Uint8Array(pvtsutils.Convert.FromHex(hex));\n        if (bigIntValue < 0) {\n            const first = new Uint8Array(view.length + (view[0] & 0x80 ? 1 : 0));\n            first[0] |= 0x80;\n            const firstInt = BigInt(`0x${pvtsutils.Convert.ToHex(first)}`);\n            const secondInt = firstInt + bigIntValue;\n            const second = pvtsutils.BufferSourceConverter.toUint8Array(pvtsutils.Convert.FromHex(secondInt.toString(16)));\n            second[0] |= 0x80;\n            writer.write(second);\n        }\n        else {\n            if (view[0] & 0x80) {\n                writer.write(new Uint8Array([0]));\n            }\n            writer.write(view);\n        }\n        const res = new _a$o({ valueHex: writer.final() });\n        return res;\n    }\n    convertToDER() {\n        const integer = new _a$o({ valueHex: this.valueBlock.valueHexView });\n        integer.valueBlock.toDER();\n        return integer;\n    }\n    convertFromDER() {\n        return new _a$o({\n            valueHex: this.valueBlock.valueHexView[0] === 0\n                ? this.valueBlock.valueHexView.subarray(1)\n                : this.valueBlock.valueHexView,\n        });\n    }\n    onAsciiEncoding() {\n        return `${this.constructor.NAME} : ${this.valueBlock.toString()}`;\n    }\n}\n_a$o = Integer;\n(() => {\n    typeStore.Integer = _a$o;\n})();\nInteger.NAME = \"INTEGER\";\n\nvar _a$n;\nclass Enumerated extends Integer {\n    constructor(parameters = {}) {\n        super(parameters);\n        this.idBlock.tagClass = 1;\n        this.idBlock.tagNumber = 10;\n    }\n}\n_a$n = Enumerated;\n(() => {\n    typeStore.Enumerated = _a$n;\n})();\nEnumerated.NAME = \"ENUMERATED\";\n\nclass LocalSidValueBlock extends HexBlock(ValueBlock) {\n    constructor({ valueDec = -1, isFirstSid = false, ...parameters } = {}) {\n        super(parameters);\n        this.valueDec = valueDec;\n        this.isFirstSid = isFirstSid;\n    }\n    fromBER(inputBuffer, inputOffset, inputLength) {\n        if (!inputLength) {\n            return inputOffset;\n        }\n        const inputView = pvtsutils.BufferSourceConverter.toUint8Array(inputBuffer);\n        if (!checkBufferParams(this, inputView, inputOffset, inputLength)) {\n            return -1;\n        }\n        const intBuffer = inputView.subarray(inputOffset, inputOffset + inputLength);\n        this.valueHexView = new Uint8Array(inputLength);\n        for (let i = 0; i < inputLength; i++) {\n            this.valueHexView[i] = intBuffer[i] & 0x7F;\n            this.blockLength++;\n            if ((intBuffer[i] & 0x80) === 0x00)\n                break;\n        }\n        const tempView = new Uint8Array(this.blockLength);\n        for (let i = 0; i < this.blockLength; i++) {\n            tempView[i] = this.valueHexView[i];\n        }\n        this.valueHexView = tempView;\n        if ((intBuffer[this.blockLength - 1] & 0x80) !== 0x00) {\n            this.error = \"End of input reached before message was fully decoded\";\n            return -1;\n        }\n        if (this.valueHexView[0] === 0x00)\n            this.warnings.push(\"Needlessly long format of SID encoding\");\n        if (this.blockLength <= 8)\n            this.valueDec = pvutils.utilFromBase(this.valueHexView, 7);\n        else {\n            this.isHexOnly = true;\n            this.warnings.push(\"Too big SID for decoding, hex only\");\n        }\n        return (inputOffset + this.blockLength);\n    }\n    set valueBigInt(value) {\n        assertBigInt();\n        let bits = BigInt(value).toString(2);\n        while (bits.length % 7) {\n            bits = \"0\" + bits;\n        }\n        const bytes = new Uint8Array(bits.length / 7);\n        for (let i = 0; i < bytes.length; i++) {\n            bytes[i] = parseInt(bits.slice(i * 7, i * 7 + 7), 2) + (i + 1 < bytes.length ? 0x80 : 0);\n        }\n        this.fromBER(bytes.buffer, 0, bytes.length);\n    }\n    toBER(sizeOnly) {\n        if (this.isHexOnly) {\n            if (sizeOnly)\n                return (new ArrayBuffer(this.valueHexView.byteLength));\n            const curView = this.valueHexView;\n            const retView = new Uint8Array(this.blockLength);\n            for (let i = 0; i < (this.blockLength - 1); i++)\n                retView[i] = curView[i] | 0x80;\n            retView[this.blockLength - 1] = curView[this.blockLength - 1];\n            return retView.buffer;\n        }\n        const encodedBuf = pvutils.utilToBase(this.valueDec, 7);\n        if (encodedBuf.byteLength === 0) {\n            this.error = \"Error during encoding SID value\";\n            return EMPTY_BUFFER;\n        }\n        const retView = new Uint8Array(encodedBuf.byteLength);\n        if (!sizeOnly) {\n            const encodedView = new Uint8Array(encodedBuf);\n            const len = encodedBuf.byteLength - 1;\n            for (let i = 0; i < len; i++)\n                retView[i] = encodedView[i] | 0x80;\n            retView[len] = encodedView[len];\n        }\n        return retView;\n    }\n    toString() {\n        let result = \"\";\n        if (this.isHexOnly)\n            result = pvtsutils.Convert.ToHex(this.valueHexView);\n        else {\n            if (this.isFirstSid) {\n                let sidValue = this.valueDec;\n                if (this.valueDec <= 39)\n                    result = \"0.\";\n                else {\n                    if (this.valueDec <= 79) {\n                        result = \"1.\";\n                        sidValue -= 40;\n                    }\n                    else {\n                        result = \"2.\";\n                        sidValue -= 80;\n                    }\n                }\n                result += sidValue.toString();\n            }\n            else\n                result = this.valueDec.toString();\n        }\n        return result;\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            valueDec: this.valueDec,\n            isFirstSid: this.isFirstSid,\n        };\n    }\n}\nLocalSidValueBlock.NAME = \"sidBlock\";\n\nclass LocalObjectIdentifierValueBlock extends ValueBlock {\n    constructor({ value = EMPTY_STRING, ...parameters } = {}) {\n        super(parameters);\n        this.value = [];\n        if (value) {\n            this.fromString(value);\n        }\n    }\n    fromBER(inputBuffer, inputOffset, inputLength) {\n        let resultOffset = inputOffset;\n        while (inputLength > 0) {\n            const sidBlock = new LocalSidValueBlock();\n            resultOffset = sidBlock.fromBER(inputBuffer, resultOffset, inputLength);\n            if (resultOffset === -1) {\n                this.blockLength = 0;\n                this.error = sidBlock.error;\n                return resultOffset;\n            }\n            if (this.value.length === 0)\n                sidBlock.isFirstSid = true;\n            this.blockLength += sidBlock.blockLength;\n            inputLength -= sidBlock.blockLength;\n            this.value.push(sidBlock);\n        }\n        return resultOffset;\n    }\n    toBER(sizeOnly) {\n        const retBuffers = [];\n        for (let i = 0; i < this.value.length; i++) {\n            const valueBuf = this.value[i].toBER(sizeOnly);\n            if (valueBuf.byteLength === 0) {\n                this.error = this.value[i].error;\n                return EMPTY_BUFFER;\n            }\n            retBuffers.push(valueBuf);\n        }\n        return concat(retBuffers);\n    }\n    fromString(string) {\n        this.value = [];\n        let pos1 = 0;\n        let pos2 = 0;\n        let sid = \"\";\n        let flag = false;\n        do {\n            pos2 = string.indexOf(\".\", pos1);\n            if (pos2 === -1)\n                sid = string.substring(pos1);\n            else\n                sid = string.substring(pos1, pos2);\n            pos1 = pos2 + 1;\n            if (flag) {\n                const sidBlock = this.value[0];\n                let plus = 0;\n                switch (sidBlock.valueDec) {\n                    case 0:\n                        break;\n                    case 1:\n                        plus = 40;\n                        break;\n                    case 2:\n                        plus = 80;\n                        break;\n                    default:\n                        this.value = [];\n                        return;\n                }\n                const parsedSID = parseInt(sid, 10);\n                if (isNaN(parsedSID))\n                    return;\n                sidBlock.valueDec = parsedSID + plus;\n                flag = false;\n            }\n            else {\n                const sidBlock = new LocalSidValueBlock();\n                if (sid > Number.MAX_SAFE_INTEGER) {\n                    assertBigInt();\n                    const sidValue = BigInt(sid);\n                    sidBlock.valueBigInt = sidValue;\n                }\n                else {\n                    sidBlock.valueDec = parseInt(sid, 10);\n                    if (isNaN(sidBlock.valueDec))\n                        return;\n                }\n                if (!this.value.length) {\n                    sidBlock.isFirstSid = true;\n                    flag = true;\n                }\n                this.value.push(sidBlock);\n            }\n        } while (pos2 !== -1);\n    }\n    toString() {\n        let result = \"\";\n        let isHexOnly = false;\n        for (let i = 0; i < this.value.length; i++) {\n            isHexOnly = this.value[i].isHexOnly;\n            let sidStr = this.value[i].toString();\n            if (i !== 0)\n                result = `${result}.`;\n            if (isHexOnly) {\n                sidStr = `{${sidStr}}`;\n                if (this.value[i].isFirstSid)\n                    result = `2.{${sidStr} - 80}`;\n                else\n                    result += sidStr;\n            }\n            else\n                result += sidStr;\n        }\n        return result;\n    }\n    toJSON() {\n        const object = {\n            ...super.toJSON(),\n            value: this.toString(),\n            sidArray: [],\n        };\n        for (let i = 0; i < this.value.length; i++) {\n            object.sidArray.push(this.value[i].toJSON());\n        }\n        return object;\n    }\n}\nLocalObjectIdentifierValueBlock.NAME = \"ObjectIdentifierValueBlock\";\n\nvar _a$m;\nclass ObjectIdentifier extends BaseBlock {\n    getValue() {\n        return this.valueBlock.toString();\n    }\n    setValue(value) {\n        this.valueBlock.fromString(value);\n    }\n    constructor(parameters = {}) {\n        super(parameters, LocalObjectIdentifierValueBlock);\n        this.idBlock.tagClass = 1;\n        this.idBlock.tagNumber = 6;\n    }\n    onAsciiEncoding() {\n        return `${this.constructor.NAME} : ${this.valueBlock.toString() || \"empty\"}`;\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            value: this.getValue(),\n        };\n    }\n}\n_a$m = ObjectIdentifier;\n(() => {\n    typeStore.ObjectIdentifier = _a$m;\n})();\nObjectIdentifier.NAME = \"OBJECT IDENTIFIER\";\n\nclass LocalRelativeSidValueBlock extends HexBlock(LocalBaseBlock) {\n    constructor({ valueDec = 0, ...parameters } = {}) {\n        super(parameters);\n        this.valueDec = valueDec;\n    }\n    fromBER(inputBuffer, inputOffset, inputLength) {\n        if (inputLength === 0)\n            return inputOffset;\n        const inputView = pvtsutils.BufferSourceConverter.toUint8Array(inputBuffer);\n        if (!checkBufferParams(this, inputView, inputOffset, inputLength))\n            return -1;\n        const intBuffer = inputView.subarray(inputOffset, inputOffset + inputLength);\n        this.valueHexView = new Uint8Array(inputLength);\n        for (let i = 0; i < inputLength; i++) {\n            this.valueHexView[i] = intBuffer[i] & 0x7F;\n            this.blockLength++;\n            if ((intBuffer[i] & 0x80) === 0x00)\n                break;\n        }\n        const tempView = new Uint8Array(this.blockLength);\n        for (let i = 0; i < this.blockLength; i++)\n            tempView[i] = this.valueHexView[i];\n        this.valueHexView = tempView;\n        if ((intBuffer[this.blockLength - 1] & 0x80) !== 0x00) {\n            this.error = \"End of input reached before message was fully decoded\";\n            return -1;\n        }\n        if (this.valueHexView[0] === 0x00)\n            this.warnings.push(\"Needlessly long format of SID encoding\");\n        if (this.blockLength <= 8)\n            this.valueDec = pvutils.utilFromBase(this.valueHexView, 7);\n        else {\n            this.isHexOnly = true;\n            this.warnings.push(\"Too big SID for decoding, hex only\");\n        }\n        return (inputOffset + this.blockLength);\n    }\n    toBER(sizeOnly) {\n        if (this.isHexOnly) {\n            if (sizeOnly)\n                return (new ArrayBuffer(this.valueHexView.byteLength));\n            const curView = this.valueHexView;\n            const retView = new Uint8Array(this.blockLength);\n            for (let i = 0; i < (this.blockLength - 1); i++)\n                retView[i] = curView[i] | 0x80;\n            retView[this.blockLength - 1] = curView[this.blockLength - 1];\n            return retView.buffer;\n        }\n        const encodedBuf = pvutils.utilToBase(this.valueDec, 7);\n        if (encodedBuf.byteLength === 0) {\n            this.error = \"Error during encoding SID value\";\n            return EMPTY_BUFFER;\n        }\n        const retView = new Uint8Array(encodedBuf.byteLength);\n        if (!sizeOnly) {\n            const encodedView = new Uint8Array(encodedBuf);\n            const len = encodedBuf.byteLength - 1;\n            for (let i = 0; i < len; i++)\n                retView[i] = encodedView[i] | 0x80;\n            retView[len] = encodedView[len];\n        }\n        return retView.buffer;\n    }\n    toString() {\n        let result = \"\";\n        if (this.isHexOnly)\n            result = pvtsutils.Convert.ToHex(this.valueHexView);\n        else {\n            result = this.valueDec.toString();\n        }\n        return result;\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            valueDec: this.valueDec,\n        };\n    }\n}\nLocalRelativeSidValueBlock.NAME = \"relativeSidBlock\";\n\nclass LocalRelativeObjectIdentifierValueBlock extends ValueBlock {\n    constructor({ value = EMPTY_STRING, ...parameters } = {}) {\n        super(parameters);\n        this.value = [];\n        if (value) {\n            this.fromString(value);\n        }\n    }\n    fromBER(inputBuffer, inputOffset, inputLength) {\n        let resultOffset = inputOffset;\n        while (inputLength > 0) {\n            const sidBlock = new LocalRelativeSidValueBlock();\n            resultOffset = sidBlock.fromBER(inputBuffer, resultOffset, inputLength);\n            if (resultOffset === -1) {\n                this.blockLength = 0;\n                this.error = sidBlock.error;\n                return resultOffset;\n            }\n            this.blockLength += sidBlock.blockLength;\n            inputLength -= sidBlock.blockLength;\n            this.value.push(sidBlock);\n        }\n        return resultOffset;\n    }\n    toBER(sizeOnly, _writer) {\n        const retBuffers = [];\n        for (let i = 0; i < this.value.length; i++) {\n            const valueBuf = this.value[i].toBER(sizeOnly);\n            if (valueBuf.byteLength === 0) {\n                this.error = this.value[i].error;\n                return EMPTY_BUFFER;\n            }\n            retBuffers.push(valueBuf);\n        }\n        return concat(retBuffers);\n    }\n    fromString(string) {\n        this.value = [];\n        let pos1 = 0;\n        let pos2 = 0;\n        let sid = \"\";\n        do {\n            pos2 = string.indexOf(\".\", pos1);\n            if (pos2 === -1)\n                sid = string.substring(pos1);\n            else\n                sid = string.substring(pos1, pos2);\n            pos1 = pos2 + 1;\n            const sidBlock = new LocalRelativeSidValueBlock();\n            sidBlock.valueDec = parseInt(sid, 10);\n            if (isNaN(sidBlock.valueDec))\n                return true;\n            this.value.push(sidBlock);\n        } while (pos2 !== -1);\n        return true;\n    }\n    toString() {\n        let result = \"\";\n        let isHexOnly = false;\n        for (let i = 0; i < this.value.length; i++) {\n            isHexOnly = this.value[i].isHexOnly;\n            let sidStr = this.value[i].toString();\n            if (i !== 0)\n                result = `${result}.`;\n            if (isHexOnly) {\n                sidStr = `{${sidStr}}`;\n                result += sidStr;\n            }\n            else\n                result += sidStr;\n        }\n        return result;\n    }\n    toJSON() {\n        const object = {\n            ...super.toJSON(),\n            value: this.toString(),\n            sidArray: [],\n        };\n        for (let i = 0; i < this.value.length; i++)\n            object.sidArray.push(this.value[i].toJSON());\n        return object;\n    }\n}\nLocalRelativeObjectIdentifierValueBlock.NAME = \"RelativeObjectIdentifierValueBlock\";\n\nvar _a$l;\nclass RelativeObjectIdentifier extends BaseBlock {\n    getValue() {\n        return this.valueBlock.toString();\n    }\n    setValue(value) {\n        this.valueBlock.fromString(value);\n    }\n    constructor(parameters = {}) {\n        super(parameters, LocalRelativeObjectIdentifierValueBlock);\n        this.idBlock.tagClass = 1;\n        this.idBlock.tagNumber = 13;\n    }\n    onAsciiEncoding() {\n        return `${this.constructor.NAME} : ${this.valueBlock.toString() || \"empty\"}`;\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            value: this.getValue(),\n        };\n    }\n}\n_a$l = RelativeObjectIdentifier;\n(() => {\n    typeStore.RelativeObjectIdentifier = _a$l;\n})();\nRelativeObjectIdentifier.NAME = \"RelativeObjectIdentifier\";\n\nvar _a$k;\nclass Sequence extends Constructed {\n    constructor(parameters = {}) {\n        super(parameters);\n        this.idBlock.tagClass = 1;\n        this.idBlock.tagNumber = 16;\n    }\n}\n_a$k = Sequence;\n(() => {\n    typeStore.Sequence = _a$k;\n})();\nSequence.NAME = \"SEQUENCE\";\n\nvar _a$j;\nclass Set extends Constructed {\n    constructor(parameters = {}) {\n        super(parameters);\n        this.idBlock.tagClass = 1;\n        this.idBlock.tagNumber = 17;\n    }\n}\n_a$j = Set;\n(() => {\n    typeStore.Set = _a$j;\n})();\nSet.NAME = \"SET\";\n\nclass LocalStringValueBlock extends HexBlock(ValueBlock) {\n    constructor({ ...parameters } = {}) {\n        super(parameters);\n        this.isHexOnly = true;\n        this.value = EMPTY_STRING;\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            value: this.value,\n        };\n    }\n}\nLocalStringValueBlock.NAME = \"StringValueBlock\";\n\nclass LocalSimpleStringValueBlock extends LocalStringValueBlock {\n}\nLocalSimpleStringValueBlock.NAME = \"SimpleStringValueBlock\";\n\nclass LocalSimpleStringBlock extends BaseStringBlock {\n    constructor({ ...parameters } = {}) {\n        super(parameters, LocalSimpleStringValueBlock);\n    }\n    fromBuffer(inputBuffer) {\n        this.valueBlock.value = String.fromCharCode.apply(null, pvtsutils.BufferSourceConverter.toUint8Array(inputBuffer));\n    }\n    fromString(inputString) {\n        const strLen = inputString.length;\n        const view = this.valueBlock.valueHexView = new Uint8Array(strLen);\n        for (let i = 0; i < strLen; i++)\n            view[i] = inputString.charCodeAt(i);\n        this.valueBlock.value = inputString;\n    }\n}\nLocalSimpleStringBlock.NAME = \"SIMPLE STRING\";\n\nclass LocalUtf8StringValueBlock extends LocalSimpleStringBlock {\n    fromBuffer(inputBuffer) {\n        this.valueBlock.valueHexView = pvtsutils.BufferSourceConverter.toUint8Array(inputBuffer);\n        try {\n            this.valueBlock.value = pvtsutils.Convert.ToUtf8String(inputBuffer);\n        }\n        catch (ex) {\n            this.warnings.push(`Error during \"decodeURIComponent\": ${ex}, using raw string`);\n            this.valueBlock.value = pvtsutils.Convert.ToBinary(inputBuffer);\n        }\n    }\n    fromString(inputString) {\n        this.valueBlock.valueHexView = new Uint8Array(pvtsutils.Convert.FromUtf8String(inputString));\n        this.valueBlock.value = inputString;\n    }\n}\nLocalUtf8StringValueBlock.NAME = \"Utf8StringValueBlock\";\n\nvar _a$i;\nclass Utf8String extends LocalUtf8StringValueBlock {\n    constructor(parameters = {}) {\n        super(parameters);\n        this.idBlock.tagClass = 1;\n        this.idBlock.tagNumber = 12;\n    }\n}\n_a$i = Utf8String;\n(() => {\n    typeStore.Utf8String = _a$i;\n})();\nUtf8String.NAME = \"UTF8String\";\n\nclass LocalBmpStringValueBlock extends LocalSimpleStringBlock {\n    fromBuffer(inputBuffer) {\n        this.valueBlock.value = pvtsutils.Convert.ToUtf16String(inputBuffer);\n        this.valueBlock.valueHexView = pvtsutils.BufferSourceConverter.toUint8Array(inputBuffer);\n    }\n    fromString(inputString) {\n        this.valueBlock.value = inputString;\n        this.valueBlock.valueHexView = new Uint8Array(pvtsutils.Convert.FromUtf16String(inputString));\n    }\n}\nLocalBmpStringValueBlock.NAME = \"BmpStringValueBlock\";\n\nvar _a$h;\nclass BmpString extends LocalBmpStringValueBlock {\n    constructor({ ...parameters } = {}) {\n        super(parameters);\n        this.idBlock.tagClass = 1;\n        this.idBlock.tagNumber = 30;\n    }\n}\n_a$h = BmpString;\n(() => {\n    typeStore.BmpString = _a$h;\n})();\nBmpString.NAME = \"BMPString\";\n\nclass LocalUniversalStringValueBlock extends LocalSimpleStringBlock {\n    fromBuffer(inputBuffer) {\n        const copyBuffer = ArrayBuffer.isView(inputBuffer) ? inputBuffer.slice().buffer : inputBuffer.slice(0);\n        const valueView = new Uint8Array(copyBuffer);\n        for (let i = 0; i < valueView.length; i += 4) {\n            valueView[i] = valueView[i + 3];\n            valueView[i + 1] = valueView[i + 2];\n            valueView[i + 2] = 0x00;\n            valueView[i + 3] = 0x00;\n        }\n        this.valueBlock.value = String.fromCharCode.apply(null, new Uint32Array(copyBuffer));\n    }\n    fromString(inputString) {\n        const strLength = inputString.length;\n        const valueHexView = this.valueBlock.valueHexView = new Uint8Array(strLength * 4);\n        for (let i = 0; i < strLength; i++) {\n            const codeBuf = pvutils.utilToBase(inputString.charCodeAt(i), 8);\n            const codeView = new Uint8Array(codeBuf);\n            if (codeView.length > 4)\n                continue;\n            const dif = 4 - codeView.length;\n            for (let j = (codeView.length - 1); j >= 0; j--)\n                valueHexView[i * 4 + j + dif] = codeView[j];\n        }\n        this.valueBlock.value = inputString;\n    }\n}\nLocalUniversalStringValueBlock.NAME = \"UniversalStringValueBlock\";\n\nvar _a$g;\nclass UniversalString extends LocalUniversalStringValueBlock {\n    constructor({ ...parameters } = {}) {\n        super(parameters);\n        this.idBlock.tagClass = 1;\n        this.idBlock.tagNumber = 28;\n    }\n}\n_a$g = UniversalString;\n(() => {\n    typeStore.UniversalString = _a$g;\n})();\nUniversalString.NAME = \"UniversalString\";\n\nvar _a$f;\nclass NumericString extends LocalSimpleStringBlock {\n    constructor(parameters = {}) {\n        super(parameters);\n        this.idBlock.tagClass = 1;\n        this.idBlock.tagNumber = 18;\n    }\n}\n_a$f = NumericString;\n(() => {\n    typeStore.NumericString = _a$f;\n})();\nNumericString.NAME = \"NumericString\";\n\nvar _a$e;\nclass PrintableString extends LocalSimpleStringBlock {\n    constructor(parameters = {}) {\n        super(parameters);\n        this.idBlock.tagClass = 1;\n        this.idBlock.tagNumber = 19;\n    }\n}\n_a$e = PrintableString;\n(() => {\n    typeStore.PrintableString = _a$e;\n})();\nPrintableString.NAME = \"PrintableString\";\n\nvar _a$d;\nclass TeletexString extends LocalSimpleStringBlock {\n    constructor(parameters = {}) {\n        super(parameters);\n        this.idBlock.tagClass = 1;\n        this.idBlock.tagNumber = 20;\n    }\n}\n_a$d = TeletexString;\n(() => {\n    typeStore.TeletexString = _a$d;\n})();\nTeletexString.NAME = \"TeletexString\";\n\nvar _a$c;\nclass VideotexString extends LocalSimpleStringBlock {\n    constructor(parameters = {}) {\n        super(parameters);\n        this.idBlock.tagClass = 1;\n        this.idBlock.tagNumber = 21;\n    }\n}\n_a$c = VideotexString;\n(() => {\n    typeStore.VideotexString = _a$c;\n})();\nVideotexString.NAME = \"VideotexString\";\n\nvar _a$b;\nclass IA5String extends LocalSimpleStringBlock {\n    constructor(parameters = {}) {\n        super(parameters);\n        this.idBlock.tagClass = 1;\n        this.idBlock.tagNumber = 22;\n    }\n}\n_a$b = IA5String;\n(() => {\n    typeStore.IA5String = _a$b;\n})();\nIA5String.NAME = \"IA5String\";\n\nvar _a$a;\nclass GraphicString extends LocalSimpleStringBlock {\n    constructor(parameters = {}) {\n        super(parameters);\n        this.idBlock.tagClass = 1;\n        this.idBlock.tagNumber = 25;\n    }\n}\n_a$a = GraphicString;\n(() => {\n    typeStore.GraphicString = _a$a;\n})();\nGraphicString.NAME = \"GraphicString\";\n\nvar _a$9;\nclass VisibleString extends LocalSimpleStringBlock {\n    constructor(parameters = {}) {\n        super(parameters);\n        this.idBlock.tagClass = 1;\n        this.idBlock.tagNumber = 26;\n    }\n}\n_a$9 = VisibleString;\n(() => {\n    typeStore.VisibleString = _a$9;\n})();\nVisibleString.NAME = \"VisibleString\";\n\nvar _a$8;\nclass GeneralString extends LocalSimpleStringBlock {\n    constructor(parameters = {}) {\n        super(parameters);\n        this.idBlock.tagClass = 1;\n        this.idBlock.tagNumber = 27;\n    }\n}\n_a$8 = GeneralString;\n(() => {\n    typeStore.GeneralString = _a$8;\n})();\nGeneralString.NAME = \"GeneralString\";\n\nvar _a$7;\nclass CharacterString extends LocalSimpleStringBlock {\n    constructor(parameters = {}) {\n        super(parameters);\n        this.idBlock.tagClass = 1;\n        this.idBlock.tagNumber = 29;\n    }\n}\n_a$7 = CharacterString;\n(() => {\n    typeStore.CharacterString = _a$7;\n})();\nCharacterString.NAME = \"CharacterString\";\n\nvar _a$6;\nclass UTCTime extends VisibleString {\n    constructor({ value, valueDate, ...parameters } = {}) {\n        super(parameters);\n        this.year = 0;\n        this.month = 0;\n        this.day = 0;\n        this.hour = 0;\n        this.minute = 0;\n        this.second = 0;\n        if (value) {\n            this.fromString(value);\n            this.valueBlock.valueHexView = new Uint8Array(value.length);\n            for (let i = 0; i < value.length; i++)\n                this.valueBlock.valueHexView[i] = value.charCodeAt(i);\n        }\n        if (valueDate) {\n            this.fromDate(valueDate);\n            this.valueBlock.valueHexView = new Uint8Array(this.toBuffer());\n        }\n        this.idBlock.tagClass = 1;\n        this.idBlock.tagNumber = 23;\n    }\n    fromBuffer(inputBuffer) {\n        this.fromString(String.fromCharCode.apply(null, pvtsutils.BufferSourceConverter.toUint8Array(inputBuffer)));\n    }\n    toBuffer() {\n        const str = this.toString();\n        const buffer = new ArrayBuffer(str.length);\n        const view = new Uint8Array(buffer);\n        for (let i = 0; i < str.length; i++)\n            view[i] = str.charCodeAt(i);\n        return buffer;\n    }\n    fromDate(inputDate) {\n        this.year = inputDate.getUTCFullYear();\n        this.month = inputDate.getUTCMonth() + 1;\n        this.day = inputDate.getUTCDate();\n        this.hour = inputDate.getUTCHours();\n        this.minute = inputDate.getUTCMinutes();\n        this.second = inputDate.getUTCSeconds();\n    }\n    toDate() {\n        return (new Date(Date.UTC(this.year, this.month - 1, this.day, this.hour, this.minute, this.second)));\n    }\n    fromString(inputString) {\n        const parser = /(\\d{2})(\\d{2})(\\d{2})(\\d{2})(\\d{2})(\\d{2})Z/ig;\n        const parserArray = parser.exec(inputString);\n        if (parserArray === null) {\n            this.error = \"Wrong input string for conversion\";\n            return;\n        }\n        const year = parseInt(parserArray[1], 10);\n        if (year >= 50)\n            this.year = 1900 + year;\n        else\n            this.year = 2000 + year;\n        this.month = parseInt(parserArray[2], 10);\n        this.day = parseInt(parserArray[3], 10);\n        this.hour = parseInt(parserArray[4], 10);\n        this.minute = parseInt(parserArray[5], 10);\n        this.second = parseInt(parserArray[6], 10);\n    }\n    toString(encoding = \"iso\") {\n        if (encoding === \"iso\") {\n            const outputArray = new Array(7);\n            outputArray[0] = pvutils.padNumber(((this.year < 2000) ? (this.year - 1900) : (this.year - 2000)), 2);\n            outputArray[1] = pvutils.padNumber(this.month, 2);\n            outputArray[2] = pvutils.padNumber(this.day, 2);\n            outputArray[3] = pvutils.padNumber(this.hour, 2);\n            outputArray[4] = pvutils.padNumber(this.minute, 2);\n            outputArray[5] = pvutils.padNumber(this.second, 2);\n            outputArray[6] = \"Z\";\n            return outputArray.join(\"\");\n        }\n        return super.toString(encoding);\n    }\n    onAsciiEncoding() {\n        return `${this.constructor.NAME} : ${this.toDate().toISOString()}`;\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            year: this.year,\n            month: this.month,\n            day: this.day,\n            hour: this.hour,\n            minute: this.minute,\n            second: this.second,\n        };\n    }\n}\n_a$6 = UTCTime;\n(() => {\n    typeStore.UTCTime = _a$6;\n})();\nUTCTime.NAME = \"UTCTime\";\n\nvar _a$5;\nclass GeneralizedTime extends UTCTime {\n    constructor(parameters = {}) {\n        var _b;\n        super(parameters);\n        (_b = this.millisecond) !== null && _b !== void 0 ? _b : (this.millisecond = 0);\n        this.idBlock.tagClass = 1;\n        this.idBlock.tagNumber = 24;\n    }\n    fromDate(inputDate) {\n        super.fromDate(inputDate);\n        this.millisecond = inputDate.getUTCMilliseconds();\n    }\n    toDate() {\n        const utcDate = Date.UTC(this.year, this.month - 1, this.day, this.hour, this.minute, this.second, this.millisecond);\n        return (new Date(utcDate));\n    }\n    fromString(inputString) {\n        let isUTC = false;\n        let timeString = \"\";\n        let dateTimeString = \"\";\n        let fractionPart = 0;\n        let parser;\n        let hourDifference = 0;\n        let minuteDifference = 0;\n        if (inputString[inputString.length - 1] === \"Z\") {\n            timeString = inputString.substring(0, inputString.length - 1);\n            isUTC = true;\n        }\n        else {\n            const number = new Number(inputString[inputString.length - 1]);\n            if (isNaN(number.valueOf()))\n                throw new Error(\"Wrong input string for conversion\");\n            timeString = inputString;\n        }\n        if (isUTC) {\n            if (timeString.indexOf(\"+\") !== -1)\n                throw new Error(\"Wrong input string for conversion\");\n            if (timeString.indexOf(\"-\") !== -1)\n                throw new Error(\"Wrong input string for conversion\");\n        }\n        else {\n            let multiplier = 1;\n            let differencePosition = timeString.indexOf(\"+\");\n            let differenceString = \"\";\n            if (differencePosition === -1) {\n                differencePosition = timeString.indexOf(\"-\");\n                multiplier = -1;\n            }\n            if (differencePosition !== -1) {\n                differenceString = timeString.substring(differencePosition + 1);\n                timeString = timeString.substring(0, differencePosition);\n                if ((differenceString.length !== 2) && (differenceString.length !== 4))\n                    throw new Error(\"Wrong input string for conversion\");\n                let number = parseInt(differenceString.substring(0, 2), 10);\n                if (isNaN(number.valueOf()))\n                    throw new Error(\"Wrong input string for conversion\");\n                hourDifference = multiplier * number;\n                if (differenceString.length === 4) {\n                    number = parseInt(differenceString.substring(2, 4), 10);\n                    if (isNaN(number.valueOf()))\n                        throw new Error(\"Wrong input string for conversion\");\n                    minuteDifference = multiplier * number;\n                }\n            }\n        }\n        let fractionPointPosition = timeString.indexOf(\".\");\n        if (fractionPointPosition === -1)\n            fractionPointPosition = timeString.indexOf(\",\");\n        if (fractionPointPosition !== -1) {\n            const fractionPartCheck = new Number(`0${timeString.substring(fractionPointPosition)}`);\n            if (isNaN(fractionPartCheck.valueOf()))\n                throw new Error(\"Wrong input string for conversion\");\n            fractionPart = fractionPartCheck.valueOf();\n            dateTimeString = timeString.substring(0, fractionPointPosition);\n        }\n        else\n            dateTimeString = timeString;\n        switch (true) {\n            case (dateTimeString.length === 8):\n                parser = /(\\d{4})(\\d{2})(\\d{2})/ig;\n                if (fractionPointPosition !== -1)\n                    throw new Error(\"Wrong input string for conversion\");\n                break;\n            case (dateTimeString.length === 10):\n                parser = /(\\d{4})(\\d{2})(\\d{2})(\\d{2})/ig;\n                if (fractionPointPosition !== -1) {\n                    let fractionResult = 60 * fractionPart;\n                    this.minute = Math.floor(fractionResult);\n                    fractionResult = 60 * (fractionResult - this.minute);\n                    this.second = Math.floor(fractionResult);\n                    fractionResult = 1000 * (fractionResult - this.second);\n                    this.millisecond = Math.floor(fractionResult);\n                }\n                break;\n            case (dateTimeString.length === 12):\n                parser = /(\\d{4})(\\d{2})(\\d{2})(\\d{2})(\\d{2})/ig;\n                if (fractionPointPosition !== -1) {\n                    let fractionResult = 60 * fractionPart;\n                    this.second = Math.floor(fractionResult);\n                    fractionResult = 1000 * (fractionResult - this.second);\n                    this.millisecond = Math.floor(fractionResult);\n                }\n                break;\n            case (dateTimeString.length === 14):\n                parser = /(\\d{4})(\\d{2})(\\d{2})(\\d{2})(\\d{2})(\\d{2})/ig;\n                if (fractionPointPosition !== -1) {\n                    const fractionResult = 1000 * fractionPart;\n                    this.millisecond = Math.floor(fractionResult);\n                }\n                break;\n            default:\n                throw new Error(\"Wrong input string for conversion\");\n        }\n        const parserArray = parser.exec(dateTimeString);\n        if (parserArray === null)\n            throw new Error(\"Wrong input string for conversion\");\n        for (let j = 1; j < parserArray.length; j++) {\n            switch (j) {\n                case 1:\n                    this.year = parseInt(parserArray[j], 10);\n                    break;\n                case 2:\n                    this.month = parseInt(parserArray[j], 10);\n                    break;\n                case 3:\n                    this.day = parseInt(parserArray[j], 10);\n                    break;\n                case 4:\n                    this.hour = parseInt(parserArray[j], 10) + hourDifference;\n                    break;\n                case 5:\n                    this.minute = parseInt(parserArray[j], 10) + minuteDifference;\n                    break;\n                case 6:\n                    this.second = parseInt(parserArray[j], 10);\n                    break;\n                default:\n                    throw new Error(\"Wrong input string for conversion\");\n            }\n        }\n        if (isUTC === false) {\n            const tempDate = new Date(this.year, this.month, this.day, this.hour, this.minute, this.second, this.millisecond);\n            this.year = tempDate.getUTCFullYear();\n            this.month = tempDate.getUTCMonth();\n            this.day = tempDate.getUTCDay();\n            this.hour = tempDate.getUTCHours();\n            this.minute = tempDate.getUTCMinutes();\n            this.second = tempDate.getUTCSeconds();\n            this.millisecond = tempDate.getUTCMilliseconds();\n        }\n    }\n    toString(encoding = \"iso\") {\n        if (encoding === \"iso\") {\n            const outputArray = [];\n            outputArray.push(pvutils.padNumber(this.year, 4));\n            outputArray.push(pvutils.padNumber(this.month, 2));\n            outputArray.push(pvutils.padNumber(this.day, 2));\n            outputArray.push(pvutils.padNumber(this.hour, 2));\n            outputArray.push(pvutils.padNumber(this.minute, 2));\n            outputArray.push(pvutils.padNumber(this.second, 2));\n            if (this.millisecond !== 0) {\n                outputArray.push(\".\");\n                outputArray.push(pvutils.padNumber(this.millisecond, 3));\n            }\n            outputArray.push(\"Z\");\n            return outputArray.join(\"\");\n        }\n        return super.toString(encoding);\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            millisecond: this.millisecond,\n        };\n    }\n}\n_a$5 = GeneralizedTime;\n(() => {\n    typeStore.GeneralizedTime = _a$5;\n})();\nGeneralizedTime.NAME = \"GeneralizedTime\";\n\nvar _a$4;\nclass DATE extends Utf8String {\n    constructor(parameters = {}) {\n        super(parameters);\n        this.idBlock.tagClass = 1;\n        this.idBlock.tagNumber = 31;\n    }\n}\n_a$4 = DATE;\n(() => {\n    typeStore.DATE = _a$4;\n})();\nDATE.NAME = \"DATE\";\n\nvar _a$3;\nclass TimeOfDay extends Utf8String {\n    constructor(parameters = {}) {\n        super(parameters);\n        this.idBlock.tagClass = 1;\n        this.idBlock.tagNumber = 32;\n    }\n}\n_a$3 = TimeOfDay;\n(() => {\n    typeStore.TimeOfDay = _a$3;\n})();\nTimeOfDay.NAME = \"TimeOfDay\";\n\nvar _a$2;\nclass DateTime extends Utf8String {\n    constructor(parameters = {}) {\n        super(parameters);\n        this.idBlock.tagClass = 1;\n        this.idBlock.tagNumber = 33;\n    }\n}\n_a$2 = DateTime;\n(() => {\n    typeStore.DateTime = _a$2;\n})();\nDateTime.NAME = \"DateTime\";\n\nvar _a$1;\nclass Duration extends Utf8String {\n    constructor(parameters = {}) {\n        super(parameters);\n        this.idBlock.tagClass = 1;\n        this.idBlock.tagNumber = 34;\n    }\n}\n_a$1 = Duration;\n(() => {\n    typeStore.Duration = _a$1;\n})();\nDuration.NAME = \"Duration\";\n\nvar _a;\nclass TIME extends Utf8String {\n    constructor(parameters = {}) {\n        super(parameters);\n        this.idBlock.tagClass = 1;\n        this.idBlock.tagNumber = 14;\n    }\n}\n_a = TIME;\n(() => {\n    typeStore.TIME = _a;\n})();\nTIME.NAME = \"TIME\";\n\nclass Any {\n    constructor({ name = EMPTY_STRING, optional = false } = {}) {\n        this.name = name;\n        this.optional = optional;\n    }\n}\n\nclass Choice extends Any {\n    constructor({ value = [], ...parameters } = {}) {\n        super(parameters);\n        this.value = value;\n    }\n}\n\nclass Repeated extends Any {\n    constructor({ value = new Any(), local = false, ...parameters } = {}) {\n        super(parameters);\n        this.value = value;\n        this.local = local;\n    }\n}\n\nclass RawData {\n    get data() {\n        return this.dataView.slice().buffer;\n    }\n    set data(value) {\n        this.dataView = pvtsutils.BufferSourceConverter.toUint8Array(value);\n    }\n    constructor({ data = EMPTY_VIEW } = {}) {\n        this.dataView = pvtsutils.BufferSourceConverter.toUint8Array(data);\n    }\n    fromBER(inputBuffer, inputOffset, inputLength) {\n        const endLength = inputOffset + inputLength;\n        this.dataView = pvtsutils.BufferSourceConverter.toUint8Array(inputBuffer).subarray(inputOffset, endLength);\n        return endLength;\n    }\n    toBER(_sizeOnly) {\n        return this.dataView.slice().buffer;\n    }\n}\n\nfunction compareSchema(root, inputData, inputSchema) {\n    if (inputSchema instanceof Choice) {\n        for (const element of inputSchema.value) {\n            const result = compareSchema(root, inputData, element);\n            if (result.verified) {\n                return {\n                    verified: true,\n                    result: root,\n                };\n            }\n        }\n        {\n            const _result = {\n                verified: false,\n                result: { error: \"Wrong values for Choice type\" },\n            };\n            if (inputSchema.hasOwnProperty(NAME))\n                _result.name = inputSchema.name;\n            return _result;\n        }\n    }\n    if (inputSchema instanceof Any) {\n        if (inputSchema.hasOwnProperty(NAME))\n            root[inputSchema.name] = inputData;\n        return {\n            verified: true,\n            result: root,\n        };\n    }\n    if ((root instanceof Object) === false) {\n        return {\n            verified: false,\n            result: { error: \"Wrong root object\" },\n        };\n    }\n    if ((inputData instanceof Object) === false) {\n        return {\n            verified: false,\n            result: { error: \"Wrong ASN.1 data\" },\n        };\n    }\n    if ((inputSchema instanceof Object) === false) {\n        return {\n            verified: false,\n            result: { error: \"Wrong ASN.1 schema\" },\n        };\n    }\n    if ((ID_BLOCK in inputSchema) === false) {\n        return {\n            verified: false,\n            result: { error: \"Wrong ASN.1 schema\" },\n        };\n    }\n    if ((FROM_BER in inputSchema.idBlock) === false) {\n        return {\n            verified: false,\n            result: { error: \"Wrong ASN.1 schema\" },\n        };\n    }\n    if ((TO_BER in inputSchema.idBlock) === false) {\n        return {\n            verified: false,\n            result: { error: \"Wrong ASN.1 schema\" },\n        };\n    }\n    const encodedId = inputSchema.idBlock.toBER(false);\n    if (encodedId.byteLength === 0) {\n        return {\n            verified: false,\n            result: { error: \"Error encoding idBlock for ASN.1 schema\" },\n        };\n    }\n    const decodedOffset = inputSchema.idBlock.fromBER(encodedId, 0, encodedId.byteLength);\n    if (decodedOffset === -1) {\n        return {\n            verified: false,\n            result: { error: \"Error decoding idBlock for ASN.1 schema\" },\n        };\n    }\n    if (inputSchema.idBlock.hasOwnProperty(TAG_CLASS) === false) {\n        return {\n            verified: false,\n            result: { error: \"Wrong ASN.1 schema\" },\n        };\n    }\n    if (inputSchema.idBlock.tagClass !== inputData.idBlock.tagClass) {\n        return {\n            verified: false,\n            result: root,\n        };\n    }\n    if (inputSchema.idBlock.hasOwnProperty(TAG_NUMBER) === false) {\n        return {\n            verified: false,\n            result: { error: \"Wrong ASN.1 schema\" },\n        };\n    }\n    if (inputSchema.idBlock.tagNumber !== inputData.idBlock.tagNumber) {\n        return {\n            verified: false,\n            result: root,\n        };\n    }\n    if (inputSchema.idBlock.hasOwnProperty(IS_CONSTRUCTED) === false) {\n        return {\n            verified: false,\n            result: { error: \"Wrong ASN.1 schema\" },\n        };\n    }\n    if (inputSchema.idBlock.isConstructed !== inputData.idBlock.isConstructed) {\n        return {\n            verified: false,\n            result: root,\n        };\n    }\n    if (!(IS_HEX_ONLY in inputSchema.idBlock)) {\n        return {\n            verified: false,\n            result: { error: \"Wrong ASN.1 schema\" },\n        };\n    }\n    if (inputSchema.idBlock.isHexOnly !== inputData.idBlock.isHexOnly) {\n        return {\n            verified: false,\n            result: root,\n        };\n    }\n    if (inputSchema.idBlock.isHexOnly) {\n        if ((VALUE_HEX_VIEW in inputSchema.idBlock) === false) {\n            return {\n                verified: false,\n                result: { error: \"Wrong ASN.1 schema\" },\n            };\n        }\n        const schemaView = inputSchema.idBlock.valueHexView;\n        const asn1View = inputData.idBlock.valueHexView;\n        if (schemaView.length !== asn1View.length) {\n            return {\n                verified: false,\n                result: root,\n            };\n        }\n        for (let i = 0; i < schemaView.length; i++) {\n            if (schemaView[i] !== asn1View[1]) {\n                return {\n                    verified: false,\n                    result: root,\n                };\n            }\n        }\n    }\n    if (inputSchema.name) {\n        inputSchema.name = inputSchema.name.replace(/^\\s+|\\s+$/g, EMPTY_STRING);\n        if (inputSchema.name)\n            root[inputSchema.name] = inputData;\n    }\n    if (inputSchema instanceof typeStore.Constructed) {\n        let admission = 0;\n        let result = {\n            verified: false,\n            result: { error: \"Unknown error\" },\n        };\n        let maxLength = inputSchema.valueBlock.value.length;\n        if (maxLength > 0) {\n            if (inputSchema.valueBlock.value[0] instanceof Repeated) {\n                maxLength = inputData.valueBlock.value.length;\n            }\n        }\n        if (maxLength === 0) {\n            return {\n                verified: true,\n                result: root,\n            };\n        }\n        if ((inputData.valueBlock.value.length === 0)\n            && (inputSchema.valueBlock.value.length !== 0)) {\n            let _optional = true;\n            for (let i = 0; i < inputSchema.valueBlock.value.length; i++)\n                _optional = _optional && (inputSchema.valueBlock.value[i].optional || false);\n            if (_optional) {\n                return {\n                    verified: true,\n                    result: root,\n                };\n            }\n            if (inputSchema.name) {\n                inputSchema.name = inputSchema.name.replace(/^\\s+|\\s+$/g, EMPTY_STRING);\n                if (inputSchema.name)\n                    delete root[inputSchema.name];\n            }\n            root.error = \"Inconsistent object length\";\n            return {\n                verified: false,\n                result: root,\n            };\n        }\n        for (let i = 0; i < maxLength; i++) {\n            if ((i - admission) >= inputData.valueBlock.value.length) {\n                if (inputSchema.valueBlock.value[i].optional === false) {\n                    const _result = {\n                        verified: false,\n                        result: root,\n                    };\n                    root.error = \"Inconsistent length between ASN.1 data and schema\";\n                    if (inputSchema.name) {\n                        inputSchema.name = inputSchema.name.replace(/^\\s+|\\s+$/g, EMPTY_STRING);\n                        if (inputSchema.name) {\n                            delete root[inputSchema.name];\n                            _result.name = inputSchema.name;\n                        }\n                    }\n                    return _result;\n                }\n            }\n            else {\n                if (inputSchema.valueBlock.value[0] instanceof Repeated) {\n                    result = compareSchema(root, inputData.valueBlock.value[i], inputSchema.valueBlock.value[0].value);\n                    if (result.verified === false) {\n                        if (inputSchema.valueBlock.value[0].optional)\n                            admission++;\n                        else {\n                            if (inputSchema.name) {\n                                inputSchema.name = inputSchema.name.replace(/^\\s+|\\s+$/g, EMPTY_STRING);\n                                if (inputSchema.name)\n                                    delete root[inputSchema.name];\n                            }\n                            return result;\n                        }\n                    }\n                    if ((NAME in inputSchema.valueBlock.value[0]) && (inputSchema.valueBlock.value[0].name.length > 0)) {\n                        let arrayRoot = {};\n                        if ((LOCAL in inputSchema.valueBlock.value[0]) && (inputSchema.valueBlock.value[0].local))\n                            arrayRoot = inputData;\n                        else\n                            arrayRoot = root;\n                        if (typeof arrayRoot[inputSchema.valueBlock.value[0].name] === \"undefined\")\n                            arrayRoot[inputSchema.valueBlock.value[0].name] = [];\n                        arrayRoot[inputSchema.valueBlock.value[0].name].push(inputData.valueBlock.value[i]);\n                    }\n                }\n                else {\n                    result = compareSchema(root, inputData.valueBlock.value[i - admission], inputSchema.valueBlock.value[i]);\n                    if (result.verified === false) {\n                        if (inputSchema.valueBlock.value[i].optional)\n                            admission++;\n                        else {\n                            if (inputSchema.name) {\n                                inputSchema.name = inputSchema.name.replace(/^\\s+|\\s+$/g, EMPTY_STRING);\n                                if (inputSchema.name)\n                                    delete root[inputSchema.name];\n                            }\n                            return result;\n                        }\n                    }\n                }\n            }\n        }\n        if (result.verified === false) {\n            const _result = {\n                verified: false,\n                result: root,\n            };\n            if (inputSchema.name) {\n                inputSchema.name = inputSchema.name.replace(/^\\s+|\\s+$/g, EMPTY_STRING);\n                if (inputSchema.name) {\n                    delete root[inputSchema.name];\n                    _result.name = inputSchema.name;\n                }\n            }\n            return _result;\n        }\n        return {\n            verified: true,\n            result: root,\n        };\n    }\n    if (inputSchema.primitiveSchema\n        && (VALUE_HEX_VIEW in inputData.valueBlock)) {\n        const asn1 = localFromBER(inputData.valueBlock.valueHexView);\n        if (asn1.offset === -1) {\n            const _result = {\n                verified: false,\n                result: asn1.result,\n            };\n            if (inputSchema.name) {\n                inputSchema.name = inputSchema.name.replace(/^\\s+|\\s+$/g, EMPTY_STRING);\n                if (inputSchema.name) {\n                    delete root[inputSchema.name];\n                    _result.name = inputSchema.name;\n                }\n            }\n            return _result;\n        }\n        return compareSchema(root, asn1.result, inputSchema.primitiveSchema);\n    }\n    return {\n        verified: true,\n        result: root,\n    };\n}\nfunction verifySchema(inputBuffer, inputSchema) {\n    if ((inputSchema instanceof Object) === false) {\n        return {\n            verified: false,\n            result: { error: \"Wrong ASN.1 schema type\" },\n        };\n    }\n    const asn1 = localFromBER(pvtsutils.BufferSourceConverter.toUint8Array(inputBuffer));\n    if (asn1.offset === -1) {\n        return {\n            verified: false,\n            result: asn1.result,\n        };\n    }\n    return compareSchema(asn1.result, asn1.result, inputSchema);\n}\n\nexport { Any, BaseBlock, BaseStringBlock, BitString, BmpString, Boolean, CharacterString, Choice, Constructed, DATE, DateTime, Duration, EndOfContent, Enumerated, GeneralString, GeneralizedTime, GraphicString, HexBlock, IA5String, Integer, Null, NumericString, ObjectIdentifier, OctetString, Primitive, PrintableString, RawData, RelativeObjectIdentifier, Repeated, Sequence, Set, TIME, TeletexString, TimeOfDay, UTCTime, UniversalString, Utf8String, ValueBlock, VideotexString, ViewWriter, VisibleString, compareSchema, fromBER, verifySchema };\n", "/*!\n Copyright (c) Peculiar Ventures, LLC\n*/\n\nfunction getUTCDate(date) {\r\n    return new Date(date.getTime() + (date.getTimezoneOffset() * 60000));\r\n}\r\nfunction getParametersValue(parameters, name, defaultValue) {\r\n    var _a;\r\n    if ((parameters instanceof Object) === false) {\r\n        return defaultValue;\r\n    }\r\n    return (_a = parameters[name]) !== null && _a !== void 0 ? _a : defaultValue;\r\n}\r\nfunction bufferToHexCodes(inputBuffer, inputOffset = 0, inputLength = (inputBuffer.byteLength - inputOffset), insertSpace = false) {\r\n    let result = \"\";\r\n    for (const item of (new Uint8Array(inputBuffer, inputOffset, inputLength))) {\r\n        const str = item.toString(16).toUpperCase();\r\n        if (str.length === 1) {\r\n            result += \"0\";\r\n        }\r\n        result += str;\r\n        if (insertSpace) {\r\n            result += \" \";\r\n        }\r\n    }\r\n    return result.trim();\r\n}\r\nfunction checkBufferParams(baseBlock, inputBuffer, inputOffset, inputLength) {\r\n    if (!(inputBuffer instanceof ArrayBuffer)) {\r\n        baseBlock.error = \"Wrong parameter: inputBuffer must be \\\"ArrayBuffer\\\"\";\r\n        return false;\r\n    }\r\n    if (!inputBuffer.byteLength) {\r\n        baseBlock.error = \"Wrong parameter: inputBuffer has zero length\";\r\n        return false;\r\n    }\r\n    if (inputOffset < 0) {\r\n        baseBlock.error = \"Wrong parameter: inputOffset less than zero\";\r\n        return false;\r\n    }\r\n    if (inputLength < 0) {\r\n        baseBlock.error = \"Wrong parameter: inputLength less than zero\";\r\n        return false;\r\n    }\r\n    if ((inputBuffer.byteLength - inputOffset - inputLength) < 0) {\r\n        baseBlock.error = \"End of input reached before message was fully decoded (inconsistent offset and length values)\";\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\nfunction utilFromBase(inputBuffer, inputBase) {\r\n    let result = 0;\r\n    if (inputBuffer.length === 1) {\r\n        return inputBuffer[0];\r\n    }\r\n    for (let i = (inputBuffer.length - 1); i >= 0; i--) {\r\n        result += inputBuffer[(inputBuffer.length - 1) - i] * Math.pow(2, inputBase * i);\r\n    }\r\n    return result;\r\n}\r\nfunction utilToBase(value, base, reserved = (-1)) {\r\n    const internalReserved = reserved;\r\n    let internalValue = value;\r\n    let result = 0;\r\n    let biggest = Math.pow(2, base);\r\n    for (let i = 1; i < 8; i++) {\r\n        if (value < biggest) {\r\n            let retBuf;\r\n            if (internalReserved < 0) {\r\n                retBuf = new ArrayBuffer(i);\r\n                result = i;\r\n            }\r\n            else {\r\n                if (internalReserved < i) {\r\n                    return (new ArrayBuffer(0));\r\n                }\r\n                retBuf = new ArrayBuffer(internalReserved);\r\n                result = internalReserved;\r\n            }\r\n            const retView = new Uint8Array(retBuf);\r\n            for (let j = (i - 1); j >= 0; j--) {\r\n                const basis = Math.pow(2, j * base);\r\n                retView[result - j - 1] = Math.floor(internalValue / basis);\r\n                internalValue -= (retView[result - j - 1]) * basis;\r\n            }\r\n            return retBuf;\r\n        }\r\n        biggest *= Math.pow(2, base);\r\n    }\r\n    return new ArrayBuffer(0);\r\n}\r\nfunction utilConcatBuf(...buffers) {\r\n    let outputLength = 0;\r\n    let prevLength = 0;\r\n    for (const buffer of buffers) {\r\n        outputLength += buffer.byteLength;\r\n    }\r\n    const retBuf = new ArrayBuffer(outputLength);\r\n    const retView = new Uint8Array(retBuf);\r\n    for (const buffer of buffers) {\r\n        retView.set(new Uint8Array(buffer), prevLength);\r\n        prevLength += buffer.byteLength;\r\n    }\r\n    return retBuf;\r\n}\r\nfunction utilConcatView(...views) {\r\n    let outputLength = 0;\r\n    let prevLength = 0;\r\n    for (const view of views) {\r\n        outputLength += view.length;\r\n    }\r\n    const retBuf = new ArrayBuffer(outputLength);\r\n    const retView = new Uint8Array(retBuf);\r\n    for (const view of views) {\r\n        retView.set(view, prevLength);\r\n        prevLength += view.length;\r\n    }\r\n    return retView;\r\n}\r\nfunction utilDecodeTC() {\r\n    const buf = new Uint8Array(this.valueHex);\r\n    if (this.valueHex.byteLength >= 2) {\r\n        const condition1 = (buf[0] === 0xFF) && (buf[1] & 0x80);\r\n        const condition2 = (buf[0] === 0x00) && ((buf[1] & 0x80) === 0x00);\r\n        if (condition1 || condition2) {\r\n            this.warnings.push(\"Needlessly long format\");\r\n        }\r\n    }\r\n    const bigIntBuffer = new ArrayBuffer(this.valueHex.byteLength);\r\n    const bigIntView = new Uint8Array(bigIntBuffer);\r\n    for (let i = 0; i < this.valueHex.byteLength; i++) {\r\n        bigIntView[i] = 0;\r\n    }\r\n    bigIntView[0] = (buf[0] & 0x80);\r\n    const bigInt = utilFromBase(bigIntView, 8);\r\n    const smallIntBuffer = new ArrayBuffer(this.valueHex.byteLength);\r\n    const smallIntView = new Uint8Array(smallIntBuffer);\r\n    for (let j = 0; j < this.valueHex.byteLength; j++) {\r\n        smallIntView[j] = buf[j];\r\n    }\r\n    smallIntView[0] &= 0x7F;\r\n    const smallInt = utilFromBase(smallIntView, 8);\r\n    return (smallInt - bigInt);\r\n}\r\nfunction utilEncodeTC(value) {\r\n    const modValue = (value < 0) ? (value * (-1)) : value;\r\n    let bigInt = 128;\r\n    for (let i = 1; i < 8; i++) {\r\n        if (modValue <= bigInt) {\r\n            if (value < 0) {\r\n                const smallInt = bigInt - modValue;\r\n                const retBuf = utilToBase(smallInt, 8, i);\r\n                const retView = new Uint8Array(retBuf);\r\n                retView[0] |= 0x80;\r\n                return retBuf;\r\n            }\r\n            let retBuf = utilToBase(modValue, 8, i);\r\n            let retView = new Uint8Array(retBuf);\r\n            if (retView[0] & 0x80) {\r\n                const tempBuf = retBuf.slice(0);\r\n                const tempView = new Uint8Array(tempBuf);\r\n                retBuf = new ArrayBuffer(retBuf.byteLength + 1);\r\n                retView = new Uint8Array(retBuf);\r\n                for (let k = 0; k < tempBuf.byteLength; k++) {\r\n                    retView[k + 1] = tempView[k];\r\n                }\r\n                retView[0] = 0x00;\r\n            }\r\n            return retBuf;\r\n        }\r\n        bigInt *= Math.pow(2, 8);\r\n    }\r\n    return (new ArrayBuffer(0));\r\n}\r\nfunction isEqualBuffer(inputBuffer1, inputBuffer2) {\r\n    if (inputBuffer1.byteLength !== inputBuffer2.byteLength) {\r\n        return false;\r\n    }\r\n    const view1 = new Uint8Array(inputBuffer1);\r\n    const view2 = new Uint8Array(inputBuffer2);\r\n    for (let i = 0; i < view1.length; i++) {\r\n        if (view1[i] !== view2[i]) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nfunction padNumber(inputNumber, fullLength) {\r\n    const str = inputNumber.toString(10);\r\n    if (fullLength < str.length) {\r\n        return \"\";\r\n    }\r\n    const dif = fullLength - str.length;\r\n    const padding = new Array(dif);\r\n    for (let i = 0; i < dif; i++) {\r\n        padding[i] = \"0\";\r\n    }\r\n    const paddingString = padding.join(\"\");\r\n    return paddingString.concat(str);\r\n}\r\nconst base64Template = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\r\nconst base64UrlTemplate = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=\";\r\nfunction toBase64(input, useUrlTemplate = false, skipPadding = false, skipLeadingZeros = false) {\r\n    let i = 0;\r\n    let flag1 = 0;\r\n    let flag2 = 0;\r\n    let output = \"\";\r\n    const template = (useUrlTemplate) ? base64UrlTemplate : base64Template;\r\n    if (skipLeadingZeros) {\r\n        let nonZeroPosition = 0;\r\n        for (let i = 0; i < input.length; i++) {\r\n            if (input.charCodeAt(i) !== 0) {\r\n                nonZeroPosition = i;\r\n                break;\r\n            }\r\n        }\r\n        input = input.slice(nonZeroPosition);\r\n    }\r\n    while (i < input.length) {\r\n        const chr1 = input.charCodeAt(i++);\r\n        if (i >= input.length) {\r\n            flag1 = 1;\r\n        }\r\n        const chr2 = input.charCodeAt(i++);\r\n        if (i >= input.length) {\r\n            flag2 = 1;\r\n        }\r\n        const chr3 = input.charCodeAt(i++);\r\n        const enc1 = chr1 >> 2;\r\n        const enc2 = ((chr1 & 0x03) << 4) | (chr2 >> 4);\r\n        let enc3 = ((chr2 & 0x0F) << 2) | (chr3 >> 6);\r\n        let enc4 = chr3 & 0x3F;\r\n        if (flag1 === 1) {\r\n            enc3 = enc4 = 64;\r\n        }\r\n        else {\r\n            if (flag2 === 1) {\r\n                enc4 = 64;\r\n            }\r\n        }\r\n        if (skipPadding) {\r\n            if (enc3 === 64) {\r\n                output += `${template.charAt(enc1)}${template.charAt(enc2)}`;\r\n            }\r\n            else {\r\n                if (enc4 === 64) {\r\n                    output += `${template.charAt(enc1)}${template.charAt(enc2)}${template.charAt(enc3)}`;\r\n                }\r\n                else {\r\n                    output += `${template.charAt(enc1)}${template.charAt(enc2)}${template.charAt(enc3)}${template.charAt(enc4)}`;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            output += `${template.charAt(enc1)}${template.charAt(enc2)}${template.charAt(enc3)}${template.charAt(enc4)}`;\r\n        }\r\n    }\r\n    return output;\r\n}\r\nfunction fromBase64(input, useUrlTemplate = false, cutTailZeros = false) {\r\n    const template = (useUrlTemplate) ? base64UrlTemplate : base64Template;\r\n    function indexOf(toSearch) {\r\n        for (let i = 0; i < 64; i++) {\r\n            if (template.charAt(i) === toSearch)\r\n                return i;\r\n        }\r\n        return 64;\r\n    }\r\n    function test(incoming) {\r\n        return ((incoming === 64) ? 0x00 : incoming);\r\n    }\r\n    let i = 0;\r\n    let output = \"\";\r\n    while (i < input.length) {\r\n        const enc1 = indexOf(input.charAt(i++));\r\n        const enc2 = (i >= input.length) ? 0x00 : indexOf(input.charAt(i++));\r\n        const enc3 = (i >= input.length) ? 0x00 : indexOf(input.charAt(i++));\r\n        const enc4 = (i >= input.length) ? 0x00 : indexOf(input.charAt(i++));\r\n        const chr1 = (test(enc1) << 2) | (test(enc2) >> 4);\r\n        const chr2 = ((test(enc2) & 0x0F) << 4) | (test(enc3) >> 2);\r\n        const chr3 = ((test(enc3) & 0x03) << 6) | test(enc4);\r\n        output += String.fromCharCode(chr1);\r\n        if (enc3 !== 64) {\r\n            output += String.fromCharCode(chr2);\r\n        }\r\n        if (enc4 !== 64) {\r\n            output += String.fromCharCode(chr3);\r\n        }\r\n    }\r\n    if (cutTailZeros) {\r\n        const outputLength = output.length;\r\n        let nonZeroStart = (-1);\r\n        for (let i = (outputLength - 1); i >= 0; i--) {\r\n            if (output.charCodeAt(i) !== 0) {\r\n                nonZeroStart = i;\r\n                break;\r\n            }\r\n        }\r\n        if (nonZeroStart !== (-1)) {\r\n            output = output.slice(0, nonZeroStart + 1);\r\n        }\r\n        else {\r\n            output = \"\";\r\n        }\r\n    }\r\n    return output;\r\n}\r\nfunction arrayBufferToString(buffer) {\r\n    let resultString = \"\";\r\n    const view = new Uint8Array(buffer);\r\n    for (const element of view) {\r\n        resultString += String.fromCharCode(element);\r\n    }\r\n    return resultString;\r\n}\r\nfunction stringToArrayBuffer(str) {\r\n    const stringLength = str.length;\r\n    const resultBuffer = new ArrayBuffer(stringLength);\r\n    const resultView = new Uint8Array(resultBuffer);\r\n    for (let i = 0; i < stringLength; i++) {\r\n        resultView[i] = str.charCodeAt(i);\r\n    }\r\n    return resultBuffer;\r\n}\r\nconst log2 = Math.log(2);\r\nfunction nearestPowerOf2(length) {\r\n    const base = (Math.log(length) / log2);\r\n    const floor = Math.floor(base);\r\n    const round = Math.round(base);\r\n    return ((floor === round) ? floor : round);\r\n}\r\nfunction clearProps(object, propsArray) {\r\n    for (const prop of propsArray) {\r\n        delete object[prop];\r\n    }\r\n}\n\nexport { arrayBufferToString, bufferToHexCodes, checkBufferParams, clearProps, fromBase64, getParametersValue, getUTCDate, isEqualBuffer, nearestPowerOf2, padNumber, stringToArrayBuffer, toBase64, utilConcatBuf, utilConcatView, utilDecodeTC, utilEncodeTC, utilFromBase, utilToBase };\n", "export var AsnTypeTypes;\n(function (AsnTypeTypes) {\n    AsnTypeTypes[AsnTypeTypes[\"Sequence\"] = 0] = \"Sequence\";\n    AsnTypeTypes[AsnTypeTypes[\"Set\"] = 1] = \"Set\";\n    AsnTypeTypes[AsnTypeTypes[\"Choice\"] = 2] = \"Choice\";\n})(AsnTypeTypes || (AsnTypeTypes = {}));\nexport var AsnPropTypes;\n(function (AsnPropTypes) {\n    AsnPropTypes[AsnPropTypes[\"Any\"] = 1] = \"Any\";\n    AsnPropTypes[AsnPropTypes[\"Boolean\"] = 2] = \"Boolean\";\n    AsnPropTypes[AsnPropTypes[\"OctetString\"] = 3] = \"OctetString\";\n    AsnPropTypes[AsnPropTypes[\"BitString\"] = 4] = \"BitString\";\n    AsnPropTypes[AsnPropTypes[\"Integer\"] = 5] = \"Integer\";\n    AsnPropTypes[AsnPropTypes[\"Enumerated\"] = 6] = \"Enumerated\";\n    AsnPropTypes[AsnPropTypes[\"ObjectIdentifier\"] = 7] = \"ObjectIdentifier\";\n    AsnPropTypes[AsnPropTypes[\"Utf8String\"] = 8] = \"Utf8String\";\n    AsnPropTypes[AsnPropTypes[\"BmpString\"] = 9] = \"BmpString\";\n    AsnPropTypes[AsnPropTypes[\"UniversalString\"] = 10] = \"UniversalString\";\n    AsnPropTypes[AsnPropTypes[\"NumericString\"] = 11] = \"NumericString\";\n    AsnPropTypes[AsnPropTypes[\"PrintableString\"] = 12] = \"PrintableString\";\n    AsnPropTypes[AsnPropTypes[\"TeletexString\"] = 13] = \"TeletexString\";\n    AsnPropTypes[AsnPropTypes[\"VideotexString\"] = 14] = \"VideotexString\";\n    AsnPropTypes[AsnPropTypes[\"IA5String\"] = 15] = \"IA5String\";\n    AsnPropTypes[AsnPropTypes[\"GraphicString\"] = 16] = \"GraphicString\";\n    AsnPropTypes[AsnPropTypes[\"VisibleString\"] = 17] = \"VisibleString\";\n    AsnPropTypes[AsnPropTypes[\"GeneralString\"] = 18] = \"GeneralString\";\n    AsnPropTypes[AsnPropTypes[\"CharacterString\"] = 19] = \"CharacterString\";\n    AsnPropTypes[AsnPropTypes[\"UTCTime\"] = 20] = \"UTCTime\";\n    AsnPropTypes[AsnPropTypes[\"GeneralizedTime\"] = 21] = \"GeneralizedTime\";\n    AsnPropTypes[AsnPropTypes[\"DATE\"] = 22] = \"DATE\";\n    AsnPropTypes[AsnPropTypes[\"TimeOfDay\"] = 23] = \"TimeOfDay\";\n    AsnPropTypes[AsnPropTypes[\"DateTime\"] = 24] = \"DateTime\";\n    AsnPropTypes[AsnPropTypes[\"Duration\"] = 25] = \"Duration\";\n    AsnPropTypes[AsnPropTypes[\"TIME\"] = 26] = \"TIME\";\n    AsnPropTypes[AsnPropTypes[\"Null\"] = 27] = \"Null\";\n})(AsnPropTypes || (AsnPropTypes = {}));\n", "export * from \"./bit_string\";\nexport * from \"./octet_string\";\n", "import * as asn1js from \"asn1js\";\nimport { BufferSourceConverter } from \"pvtsutils\";\nexport class BitString {\n    constructor(params, unusedBits = 0) {\n        this.unusedBits = 0;\n        this.value = new ArrayBuffer(0);\n        if (params) {\n            if (typeof params === \"number\") {\n                this.fromNumber(params);\n            }\n            else if (BufferSourceConverter.isBufferSource(params)) {\n                this.unusedBits = unusedBits;\n                this.value = BufferSourceConverter.toArrayBuffer(params);\n            }\n            else {\n                throw TypeError(\"Unsupported type of 'params' argument for BitString\");\n            }\n        }\n    }\n    fromASN(asn) {\n        if (!(asn instanceof asn1js.BitString)) {\n            throw new TypeError(\"Argument 'asn' is not instance of ASN.1 BitString\");\n        }\n        this.unusedBits = asn.valueBlock.unusedBits;\n        this.value = asn.valueBlock.valueHex;\n        return this;\n    }\n    toASN() {\n        return new asn1js.BitString({ unusedBits: this.unusedBits, valueHex: this.value });\n    }\n    toSchema(name) {\n        return new asn1js.BitString({ name });\n    }\n    toNumber() {\n        let res = \"\";\n        const uintArray = new Uint8Array(this.value);\n        for (const octet of uintArray) {\n            res += octet.toString(2).padStart(8, \"0\");\n        }\n        res = res.split(\"\").reverse().join(\"\");\n        if (this.unusedBits) {\n            res = res.slice(this.unusedBits).padStart(this.unusedBits, \"0\");\n        }\n        return parseInt(res, 2);\n    }\n    fromNumber(value) {\n        let bits = value.toString(2);\n        const octetSize = (bits.length + 7) >> 3;\n        this.unusedBits = (octetSize << 3) - bits.length;\n        const octets = new Uint8Array(octetSize);\n        bits = bits\n            .padStart(octetSize << 3, \"0\")\n            .split(\"\")\n            .reverse()\n            .join(\"\");\n        let index = 0;\n        while (index < octetSize) {\n            octets[index] = parseInt(bits.slice(index << 3, (index << 3) + 8), 2);\n            index++;\n        }\n        this.value = octets.buffer;\n    }\n}\n", "import * as asn1js from \"asn1js\";\nimport { BufferSourceConverter } from \"pvtsutils\";\nexport class OctetString {\n    get byteLength() {\n        return this.buffer.byteLength;\n    }\n    get byteOffset() {\n        return 0;\n    }\n    constructor(param) {\n        if (typeof param === \"number\") {\n            this.buffer = new ArrayBuffer(param);\n        }\n        else {\n            if (BufferSourceConverter.isBufferSource(param)) {\n                this.buffer = BufferSourceConverter.toArrayBuffer(param);\n            }\n            else if (Array.isArray(param)) {\n                this.buffer = new Uint8Array(param);\n            }\n            else {\n                this.buffer = new ArrayBuffer(0);\n            }\n        }\n    }\n    fromASN(asn) {\n        if (!(asn instanceof asn1js.OctetString)) {\n            throw new TypeError(\"Argument 'asn' is not instance of ASN.1 OctetString\");\n        }\n        this.buffer = asn.valueBlock.valueHex;\n        return this;\n    }\n    toASN() {\n        return new asn1js.OctetString({ valueHex: this.buffer });\n    }\n    toSchema(name) {\n        return new asn1js.OctetString({ name });\n    }\n}\n", "import * as converters from \"./converters\";\nimport { AsnTypeTypes } from \"./enums\";\nimport { schemaStorage } from \"./storage\";\nexport const AsnType = (options) => (target) => {\n    let schema;\n    if (!schemaStorage.has(target)) {\n        schema = schemaStorage.createDefault(target);\n        schemaStorage.set(target, schema);\n    }\n    else {\n        schema = schemaStorage.get(target);\n    }\n    Object.assign(schema, options);\n};\nexport const AsnChoiceType = () => AsnType({ type: AsnTypeTypes.Choice });\nexport const AsnSetType = (options) => AsnType({ type: AsnTypeTypes.Set, ...options });\nexport const AsnSequenceType = (options) => AsnType({ type: AsnTypeTypes.Sequence, ...options });\nexport const AsnProp = (options) => (target, propertyKey) => {\n    let schema;\n    if (!schemaStorage.has(target.constructor)) {\n        schema = schemaStorage.createDefault(target.constructor);\n        schemaStorage.set(target.constructor, schema);\n    }\n    else {\n        schema = schemaStorage.get(target.constructor);\n    }\n    const copyOptions = Object.assign({}, options);\n    if (typeof copyOptions.type === \"number\" && !copyOptions.converter) {\n        const defaultConverter = converters.defaultConverter(options.type);\n        if (!defaultConverter) {\n            throw new Error(`Cannot get default converter for property '${propertyKey}' of ${target.constructor.name}`);\n        }\n        copyOptions.converter = defaultConverter;\n    }\n    schema.items[propertyKey] = copyOptions;\n};\n", "import { AsnSchemaStorage } from \"./schema\";\nexport const schemaStorage = new AsnSchemaStorage();\n", "import * as asn1js from \"asn1js\";\nimport { AsnPropTypes, AsnTypeTypes } from \"./enums\";\nimport { isConvertible } from \"./helper\";\nexport class AsnSchemaStorage {\n    constructor() {\n        this.items = new WeakMap();\n    }\n    has(target) {\n        return this.items.has(target);\n    }\n    get(target, checkSchema = false) {\n        const schema = this.items.get(target);\n        if (!schema) {\n            throw new Error(`Cannot get schema for '${target.prototype.constructor.name}' target`);\n        }\n        if (checkSchema && !schema.schema) {\n            throw new Error(`Schema '${target.prototype.constructor.name}' doesn't contain ASN.1 schema. Call 'AsnSchemaStorage.cache'.`);\n        }\n        return schema;\n    }\n    cache(target) {\n        const schema = this.get(target);\n        if (!schema.schema) {\n            schema.schema = this.create(target, true);\n        }\n    }\n    createDefault(target) {\n        const schema = { type: AsnTypeTypes.Sequence, items: {} };\n        const parentSchema = this.findParentSchema(target);\n        if (parentSchema) {\n            Object.assign(schema, parentSchema);\n            schema.items = Object.assign({}, schema.items, parentSchema.items);\n        }\n        return schema;\n    }\n    create(target, useNames) {\n        const schema = this.items.get(target) || this.createDefault(target);\n        const asn1Value = [];\n        for (const key in schema.items) {\n            const item = schema.items[key];\n            const name = useNames ? key : \"\";\n            let asn1Item;\n            if (typeof item.type === \"number\") {\n                const Asn1TypeName = AsnPropTypes[item.type];\n                const Asn1Type = asn1js[Asn1TypeName];\n                if (!Asn1Type) {\n                    throw new Error(`Cannot get ASN1 class by name '${Asn1TypeName}'`);\n                }\n                asn1Item = new Asn1Type({ name });\n            }\n            else if (isConvertible(item.type)) {\n                const instance = new item.type();\n                asn1Item = instance.toSchema(name);\n            }\n            else if (item.optional) {\n                const itemSchema = this.get(item.type);\n                if (itemSchema.type === AsnTypeTypes.Choice) {\n                    asn1Item = new asn1js.Any({ name });\n                }\n                else {\n                    asn1Item = this.create(item.type, false);\n                    asn1Item.name = name;\n                }\n            }\n            else {\n                asn1Item = new asn1js.Any({ name });\n            }\n            const optional = !!item.optional || item.defaultValue !== undefined;\n            if (item.repeated) {\n                asn1Item.name = \"\";\n                const Container = item.repeated === \"set\" ? asn1js.Set : asn1js.Sequence;\n                asn1Item = new Container({\n                    name: \"\",\n                    value: [new asn1js.Repeated({ name, value: asn1Item })],\n                });\n            }\n            if (item.context !== null && item.context !== undefined) {\n                if (item.implicit) {\n                    if (typeof item.type === \"number\" || isConvertible(item.type)) {\n                        const Container = item.repeated ? asn1js.Constructed : asn1js.Primitive;\n                        asn1Value.push(new Container({ name, optional, idBlock: { tagClass: 3, tagNumber: item.context } }));\n                    }\n                    else {\n                        this.cache(item.type);\n                        const isRepeated = !!item.repeated;\n                        let value = !isRepeated ? this.get(item.type, true).schema : asn1Item;\n                        value =\n                            \"valueBlock\" in value\n                                ? value.valueBlock.value\n                                :\n                                    value.value;\n                        asn1Value.push(new asn1js.Constructed({\n                            name: !isRepeated ? name : \"\",\n                            optional,\n                            idBlock: { tagClass: 3, tagNumber: item.context },\n                            value: value,\n                        }));\n                    }\n                }\n                else {\n                    asn1Value.push(new asn1js.Constructed({\n                        optional,\n                        idBlock: { tagClass: 3, tagNumber: item.context },\n                        value: [asn1Item],\n                    }));\n                }\n            }\n            else {\n                asn1Item.optional = optional;\n                asn1Value.push(asn1Item);\n            }\n        }\n        switch (schema.type) {\n            case AsnTypeTypes.Sequence:\n                return new asn1js.Sequence({ value: asn1Value, name: \"\" });\n            case AsnTypeTypes.Set:\n                return new asn1js.Set({ value: asn1Value, name: \"\" });\n            case AsnTypeTypes.Choice:\n                return new asn1js.Choice({ value: asn1Value, name: \"\" });\n            default:\n                throw new Error(`Unsupported ASN1 type in use`);\n        }\n    }\n    set(target, schema) {\n        this.items.set(target, schema);\n        return this;\n    }\n    findParentSchema(target) {\n        const parent = Object.getPrototypeOf(target);\n        if (parent) {\n            const schema = this.items.get(parent);\n            return schema || this.findParentSchema(parent);\n        }\n        return null;\n    }\n}\n", "export function isConvertible(target) {\n    if (typeof target === \"function\" && target.prototype) {\n        if (target.prototype.toASN && target.prototype.fromASN) {\n            return true;\n        }\n        else {\n            return isConvertible(target.prototype);\n        }\n    }\n    else {\n        return !!(target && typeof target === \"object\" && \"toASN\" in target && \"fromASN\" in target);\n    }\n}\nexport function isTypeOfArray(target) {\n    var _a;\n    if (target) {\n        const proto = Object.getPrototypeOf(target);\n        if (((_a = proto === null || proto === void 0 ? void 0 : proto.prototype) === null || _a === void 0 ? void 0 : _a.constructor) === Array) {\n            return true;\n        }\n        return isTypeOfArray(proto);\n    }\n    return false;\n}\nexport function isArrayEqual(bytes1, bytes2) {\n    if (!(bytes1 && bytes2)) {\n        return false;\n    }\n    if (bytes1.byteLength !== bytes2.byteLength) {\n        return false;\n    }\n    const b1 = new Uint8Array(bytes1);\n    const b2 = new Uint8Array(bytes2);\n    for (let i = 0; i < bytes1.byteLength; i++) {\n        if (b1[i] !== b2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n", "import * as asn1js from \"asn1js\";\nimport { AsnPropTypes, AsnTypeTypes } from \"./enums\";\nimport * as converters from \"./converters\";\nimport { AsnSchemaValidationError } from \"./errors\";\nimport { isConvertible, isTypeOfArray } from \"./helper\";\nimport { schemaStorage } from \"./storage\";\nexport class AsnParser {\n    static parse(data, target) {\n        const asn1Parsed = asn1js.fromBER(data);\n        if (asn1Parsed.result.error) {\n            throw new Error(asn1Parsed.result.error);\n        }\n        const res = this.fromASN(asn1Parsed.result, target);\n        return res;\n    }\n    static fromASN(asn1Schema, target) {\n        try {\n            if (isConvertible(target)) {\n                const value = new target();\n                return value.fromASN(asn1Schema);\n            }\n            const schema = schemaStorage.get(target);\n            schemaStorage.cache(target);\n            let targetSchema = schema.schema;\n            const choiceResult = this.handleChoiceTypes(asn1Schema, schema, target, targetSchema);\n            if (choiceResult === null || choiceResult === void 0 ? void 0 : choiceResult.result) {\n                return choiceResult.result;\n            }\n            if (choiceResult === null || choiceResult === void 0 ? void 0 : choiceResult.targetSchema) {\n                targetSchema = choiceResult.targetSchema;\n            }\n            const sequenceResult = this.handleSequenceTypes(asn1Schema, schema, target, targetSchema);\n            if (sequenceResult && \"isManualMapping\" in sequenceResult) {\n                return sequenceResult.result;\n            }\n            const asn1ComparedSchema = sequenceResult;\n            const res = new target();\n            if (isTypeOfArray(target)) {\n                return this.handleArrayTypes(asn1Schema, schema, target);\n            }\n            this.processSchemaItems(schema, asn1ComparedSchema, res);\n            return res;\n        }\n        catch (error) {\n            if (error instanceof AsnSchemaValidationError) {\n                error.schemas.push(target.name);\n            }\n            throw error;\n        }\n    }\n    static handleChoiceTypes(asn1Schema, schema, target, targetSchema) {\n        if (asn1Schema.constructor === asn1js.Constructed &&\n            schema.type === AsnTypeTypes.Choice &&\n            asn1Schema.idBlock.tagClass === 3) {\n            for (const key in schema.items) {\n                const schemaItem = schema.items[key];\n                if (schemaItem.context === asn1Schema.idBlock.tagNumber && schemaItem.implicit) {\n                    if (typeof schemaItem.type === \"function\" &&\n                        schemaStorage.has(schemaItem.type)) {\n                        const fieldSchema = schemaStorage.get(schemaItem.type);\n                        if (fieldSchema && fieldSchema.type === AsnTypeTypes.Sequence) {\n                            const newSeq = new asn1js.Sequence();\n                            if (\"value\" in asn1Schema.valueBlock &&\n                                Array.isArray(asn1Schema.valueBlock.value) &&\n                                \"value\" in newSeq.valueBlock) {\n                                newSeq.valueBlock.value = asn1Schema.valueBlock.value;\n                                const fieldValue = this.fromASN(newSeq, schemaItem.type);\n                                const res = new target();\n                                res[key] = fieldValue;\n                                return { result: res };\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        else if (asn1Schema.constructor === asn1js.Constructed &&\n            schema.type !== AsnTypeTypes.Choice) {\n            const newTargetSchema = new asn1js.Constructed({\n                idBlock: {\n                    tagClass: 3,\n                    tagNumber: asn1Schema.idBlock.tagNumber,\n                },\n                value: schema.schema.valueBlock.value,\n            });\n            for (const key in schema.items) {\n                delete asn1Schema[key];\n            }\n            return { targetSchema: newTargetSchema };\n        }\n        return null;\n    }\n    static handleSequenceTypes(asn1Schema, schema, target, targetSchema) {\n        if (schema.type === AsnTypeTypes.Sequence) {\n            const optionalChoiceFields = Object.keys(schema.items).filter((key) => {\n                const item = schema.items[key];\n                return (item.optional &&\n                    typeof item.type === \"function\" &&\n                    schemaStorage.has(item.type) &&\n                    schemaStorage.get(item.type).type === AsnTypeTypes.Choice);\n            });\n            if (optionalChoiceFields.length > 0 &&\n                \"value\" in asn1Schema.valueBlock &&\n                Array.isArray(asn1Schema.valueBlock.value) &&\n                target.name === \"CertReqMsg\") {\n                return this.handleManualMapping(asn1Schema, schema, target);\n            }\n            const asn1ComparedSchema = asn1js.compareSchema({}, asn1Schema, targetSchema);\n            if (!asn1ComparedSchema.verified) {\n                throw new AsnSchemaValidationError(`Data does not match to ${target.name} ASN1 schema. ${asn1ComparedSchema.result.error}`);\n            }\n            return asn1ComparedSchema;\n        }\n        else {\n            const asn1ComparedSchema = asn1js.compareSchema({}, asn1Schema, targetSchema);\n            if (!asn1ComparedSchema.verified) {\n                throw new AsnSchemaValidationError(`Data does not match to ${target.name} ASN1 schema. ${asn1ComparedSchema.result.error}`);\n            }\n            return asn1ComparedSchema;\n        }\n    }\n    static handleManualMapping(asn1Schema, schema, target) {\n        const res = new target();\n        const asn1Elements = asn1Schema.valueBlock.value;\n        const schemaKeys = Object.keys(schema.items);\n        let asn1Index = 0;\n        for (let i = 0; i < schemaKeys.length; i++) {\n            const key = schemaKeys[i];\n            const schemaItem = schema.items[key];\n            if (asn1Index >= asn1Elements.length)\n                break;\n            if (schemaItem.repeated) {\n                res[key] = this.processRepeatedField(asn1Elements, asn1Index, schemaItem);\n                break;\n            }\n            else if (typeof schemaItem.type === \"number\") {\n                res[key] = this.processPrimitiveField(asn1Elements[asn1Index], schemaItem);\n                asn1Index++;\n            }\n            else if (this.isOptionalChoiceField(schemaItem)) {\n                const result = this.processOptionalChoiceField(asn1Elements[asn1Index], schemaItem);\n                if (result.processed) {\n                    res[key] = result.value;\n                    asn1Index++;\n                }\n            }\n            else {\n                res[key] = this.fromASN(asn1Elements[asn1Index], schemaItem.type);\n                asn1Index++;\n            }\n        }\n        return { result: res, verified: true, isManualMapping: true };\n    }\n    static processRepeatedField(asn1Elements, asn1Index, schemaItem) {\n        let elementsToProcess = asn1Elements.slice(asn1Index);\n        if (elementsToProcess.length === 1 && elementsToProcess[0].constructor.name === \"Sequence\") {\n            const seq = elementsToProcess[0];\n            if (seq.valueBlock && seq.valueBlock.value && Array.isArray(seq.valueBlock.value)) {\n                elementsToProcess = seq.valueBlock.value;\n            }\n        }\n        if (typeof schemaItem.type === \"number\") {\n            const converter = converters.defaultConverter(schemaItem.type);\n            if (!converter)\n                throw new Error(`No converter for ASN.1 type ${schemaItem.type}`);\n            return elementsToProcess\n                .filter((el) => el && el.valueBlock)\n                .map((el) => {\n                try {\n                    return converter.fromASN(el);\n                }\n                catch {\n                    return undefined;\n                }\n            })\n                .filter((v) => v !== undefined);\n        }\n        else {\n            return elementsToProcess\n                .filter((el) => el && el.valueBlock)\n                .map((el) => {\n                try {\n                    return this.fromASN(el, schemaItem.type);\n                }\n                catch {\n                    return undefined;\n                }\n            })\n                .filter((v) => v !== undefined);\n        }\n    }\n    static processPrimitiveField(asn1Element, schemaItem) {\n        const converter = converters.defaultConverter(schemaItem.type);\n        if (!converter)\n            throw new Error(`No converter for ASN.1 type ${schemaItem.type}`);\n        return converter.fromASN(asn1Element);\n    }\n    static isOptionalChoiceField(schemaItem) {\n        return (schemaItem.optional &&\n            typeof schemaItem.type === \"function\" &&\n            schemaStorage.has(schemaItem.type) &&\n            schemaStorage.get(schemaItem.type).type === AsnTypeTypes.Choice);\n    }\n    static processOptionalChoiceField(asn1Element, schemaItem) {\n        try {\n            const value = this.fromASN(asn1Element, schemaItem.type);\n            return { processed: true, value };\n        }\n        catch (err) {\n            if (err instanceof AsnSchemaValidationError &&\n                /Wrong values for Choice type/.test(err.message)) {\n                return { processed: false };\n            }\n            throw err;\n        }\n    }\n    static handleArrayTypes(asn1Schema, schema, target) {\n        if (!(\"value\" in asn1Schema.valueBlock && Array.isArray(asn1Schema.valueBlock.value))) {\n            throw new Error(`Cannot get items from the ASN.1 parsed value. ASN.1 object is not constructed.`);\n        }\n        const itemType = schema.itemType;\n        if (typeof itemType === \"number\") {\n            const converter = converters.defaultConverter(itemType);\n            if (!converter) {\n                throw new Error(`Cannot get default converter for array item of ${target.name} ASN1 schema`);\n            }\n            return target.from(asn1Schema.valueBlock.value, (element) => converter.fromASN(element));\n        }\n        else {\n            return target.from(asn1Schema.valueBlock.value, (element) => this.fromASN(element, itemType));\n        }\n    }\n    static processSchemaItems(schema, asn1ComparedSchema, res) {\n        for (const key in schema.items) {\n            const asn1SchemaValue = asn1ComparedSchema.result[key];\n            if (!asn1SchemaValue) {\n                continue;\n            }\n            const schemaItem = schema.items[key];\n            const schemaItemType = schemaItem.type;\n            if (typeof schemaItemType === \"number\" || isConvertible(schemaItemType)) {\n                res[key] = this.processPrimitiveSchemaItem(asn1SchemaValue, schemaItem, schemaItemType);\n            }\n            else {\n                res[key] = this.processComplexSchemaItem(asn1SchemaValue, schemaItem, schemaItemType);\n            }\n        }\n    }\n    static processPrimitiveSchemaItem(asn1SchemaValue, schemaItem, schemaItemType) {\n        var _a;\n        const converter = (_a = schemaItem.converter) !== null && _a !== void 0 ? _a : (isConvertible(schemaItemType)\n            ? new schemaItemType()\n            : null);\n        if (!converter) {\n            throw new Error(\"Converter is empty\");\n        }\n        if (schemaItem.repeated) {\n            return this.processRepeatedPrimitiveItem(asn1SchemaValue, schemaItem, converter);\n        }\n        else {\n            return this.processSinglePrimitiveItem(asn1SchemaValue, schemaItem, schemaItemType, converter);\n        }\n    }\n    static processRepeatedPrimitiveItem(asn1SchemaValue, schemaItem, converter) {\n        if (schemaItem.implicit) {\n            const Container = schemaItem.repeated === \"sequence\" ? asn1js.Sequence : asn1js.Set;\n            const newItem = new Container();\n            newItem.valueBlock = asn1SchemaValue.valueBlock;\n            const newItemAsn = asn1js.fromBER(newItem.toBER(false));\n            if (newItemAsn.offset === -1) {\n                throw new Error(`Cannot parse the child item. ${newItemAsn.result.error}`);\n            }\n            if (!(\"value\" in newItemAsn.result.valueBlock &&\n                Array.isArray(newItemAsn.result.valueBlock.value))) {\n                throw new Error(\"Cannot get items from the ASN.1 parsed value. ASN.1 object is not constructed.\");\n            }\n            const value = newItemAsn.result.valueBlock.value;\n            return Array.from(value, (element) => converter.fromASN(element));\n        }\n        else {\n            return Array.from(asn1SchemaValue, (element) => converter.fromASN(element));\n        }\n    }\n    static processSinglePrimitiveItem(asn1SchemaValue, schemaItem, schemaItemType, converter) {\n        let value = asn1SchemaValue;\n        if (schemaItem.implicit) {\n            let newItem;\n            if (isConvertible(schemaItemType)) {\n                newItem = new schemaItemType().toSchema(\"\");\n            }\n            else {\n                const Asn1TypeName = AsnPropTypes[schemaItemType];\n                const Asn1Type = asn1js[Asn1TypeName];\n                if (!Asn1Type) {\n                    throw new Error(`Cannot get '${Asn1TypeName}' class from asn1js module`);\n                }\n                newItem = new Asn1Type();\n            }\n            newItem.valueBlock = value.valueBlock;\n            value = asn1js.fromBER(newItem.toBER(false)).result;\n        }\n        return converter.fromASN(value);\n    }\n    static processComplexSchemaItem(asn1SchemaValue, schemaItem, schemaItemType) {\n        if (schemaItem.repeated) {\n            if (!Array.isArray(asn1SchemaValue)) {\n                throw new Error(\"Cannot get list of items from the ASN.1 parsed value. ASN.1 value should be iterable.\");\n            }\n            return Array.from(asn1SchemaValue, (element) => this.fromASN(element, schemaItemType));\n        }\n        else {\n            const valueToProcess = this.handleImplicitTagging(asn1SchemaValue, schemaItem, schemaItemType);\n            if (this.isOptionalChoiceField(schemaItem)) {\n                try {\n                    return this.fromASN(valueToProcess, schemaItemType);\n                }\n                catch (err) {\n                    if (err instanceof AsnSchemaValidationError &&\n                        /Wrong values for Choice type/.test(err.message)) {\n                        return undefined;\n                    }\n                    throw err;\n                }\n            }\n            else {\n                return this.fromASN(valueToProcess, schemaItemType);\n            }\n        }\n    }\n    static handleImplicitTagging(asn1SchemaValue, schemaItem, schemaItemType) {\n        if (schemaItem.implicit && typeof schemaItem.context === \"number\") {\n            const schema = schemaStorage.get(schemaItemType);\n            if (schema.type === AsnTypeTypes.Sequence) {\n                const newSeq = new asn1js.Sequence();\n                if (\"value\" in asn1SchemaValue.valueBlock &&\n                    Array.isArray(asn1SchemaValue.valueBlock.value) &&\n                    \"value\" in newSeq.valueBlock) {\n                    newSeq.valueBlock.value = asn1SchemaValue.valueBlock.value;\n                    return newSeq;\n                }\n            }\n            else if (schema.type === AsnTypeTypes.Set) {\n                const newSet = new asn1js.Set();\n                if (\"value\" in asn1SchemaValue.valueBlock &&\n                    Array.isArray(asn1SchemaValue.valueBlock.value) &&\n                    \"value\" in newSet.valueBlock) {\n                    newSet.valueBlock.value = asn1SchemaValue.valueBlock.value;\n                    return newSet;\n                }\n            }\n        }\n        return asn1SchemaValue;\n    }\n}\n", "export * from \"./schema_validation\";\n", "export class AsnSchemaValidationError extends Error {\n    constructor() {\n        super(...arguments);\n        this.schemas = [];\n    }\n}\n", "import * as asn1js from \"asn1js\";\nimport * as converters from \"./converters\";\nimport { AsnPropTypes, AsnTypeTypes } from \"./enums\";\nimport { isConvertible, isArrayEqual } from \"./helper\";\nimport { schemaStorage } from \"./storage\";\nexport class AsnSerializer {\n    static serialize(obj) {\n        if (obj instanceof asn1js.BaseBlock) {\n            return obj.toBER(false);\n        }\n        return this.toASN(obj).toBER(false);\n    }\n    static toASN(obj) {\n        if (obj && typeof obj === \"object\" && isConvertible(obj)) {\n            return obj.toASN();\n        }\n        if (!(obj && typeof obj === \"object\")) {\n            throw new TypeError(\"Parameter 1 should be type of Object.\");\n        }\n        const target = obj.constructor;\n        const schema = schemaStorage.get(target);\n        schemaStorage.cache(target);\n        let asn1Value = [];\n        if (schema.itemType) {\n            if (!Array.isArray(obj)) {\n                throw new TypeError(\"Parameter 1 should be type of Array.\");\n            }\n            if (typeof schema.itemType === \"number\") {\n                const converter = converters.defaultConverter(schema.itemType);\n                if (!converter) {\n                    throw new Error(`Cannot get default converter for array item of ${target.name} ASN1 schema`);\n                }\n                asn1Value = obj.map((o) => converter.toASN(o));\n            }\n            else {\n                asn1Value = obj.map((o) => this.toAsnItem({ type: schema.itemType }, \"[]\", target, o));\n            }\n        }\n        else {\n            for (const key in schema.items) {\n                const schemaItem = schema.items[key];\n                const objProp = obj[key];\n                if (objProp === undefined ||\n                    schemaItem.defaultValue === objProp ||\n                    (typeof schemaItem.defaultValue === \"object\" &&\n                        typeof objProp === \"object\" &&\n                        isArrayEqual(this.serialize(schemaItem.defaultValue), this.serialize(objProp)))) {\n                    continue;\n                }\n                const asn1Item = AsnSerializer.toAsnItem(schemaItem, key, target, objProp);\n                if (typeof schemaItem.context === \"number\") {\n                    if (schemaItem.implicit) {\n                        if (!schemaItem.repeated &&\n                            (typeof schemaItem.type === \"number\" || isConvertible(schemaItem.type))) {\n                            const value = {};\n                            value.valueHex =\n                                asn1Item instanceof asn1js.Null\n                                    ? asn1Item.valueBeforeDecodeView\n                                    : asn1Item.valueBlock.toBER();\n                            asn1Value.push(new asn1js.Primitive({\n                                optional: schemaItem.optional,\n                                idBlock: {\n                                    tagClass: 3,\n                                    tagNumber: schemaItem.context,\n                                },\n                                ...value,\n                            }));\n                        }\n                        else {\n                            asn1Value.push(new asn1js.Constructed({\n                                optional: schemaItem.optional,\n                                idBlock: {\n                                    tagClass: 3,\n                                    tagNumber: schemaItem.context,\n                                },\n                                value: asn1Item.valueBlock.value,\n                            }));\n                        }\n                    }\n                    else {\n                        asn1Value.push(new asn1js.Constructed({\n                            optional: schemaItem.optional,\n                            idBlock: {\n                                tagClass: 3,\n                                tagNumber: schemaItem.context,\n                            },\n                            value: [asn1Item],\n                        }));\n                    }\n                }\n                else if (schemaItem.repeated) {\n                    asn1Value = asn1Value.concat(asn1Item);\n                }\n                else {\n                    asn1Value.push(asn1Item);\n                }\n            }\n        }\n        let asnSchema;\n        switch (schema.type) {\n            case AsnTypeTypes.Sequence:\n                asnSchema = new asn1js.Sequence({ value: asn1Value });\n                break;\n            case AsnTypeTypes.Set:\n                asnSchema = new asn1js.Set({ value: asn1Value });\n                break;\n            case AsnTypeTypes.Choice:\n                if (!asn1Value[0]) {\n                    throw new Error(`Schema '${target.name}' has wrong data. Choice cannot be empty.`);\n                }\n                asnSchema = asn1Value[0];\n                break;\n        }\n        return asnSchema;\n    }\n    static toAsnItem(schemaItem, key, target, objProp) {\n        let asn1Item;\n        if (typeof schemaItem.type === \"number\") {\n            const converter = schemaItem.converter;\n            if (!converter) {\n                throw new Error(`Property '${key}' doesn't have converter for type ${AsnPropTypes[schemaItem.type]} in schema '${target.name}'`);\n            }\n            if (schemaItem.repeated) {\n                if (!Array.isArray(objProp)) {\n                    throw new TypeError(\"Parameter 'objProp' should be type of Array.\");\n                }\n                const items = Array.from(objProp, (element) => converter.toASN(element));\n                const Container = schemaItem.repeated === \"sequence\" ? asn1js.Sequence : asn1js.Set;\n                asn1Item = new Container({\n                    value: items,\n                });\n            }\n            else {\n                asn1Item = converter.toASN(objProp);\n            }\n        }\n        else {\n            if (schemaItem.repeated) {\n                if (!Array.isArray(objProp)) {\n                    throw new TypeError(\"Parameter 'objProp' should be type of Array.\");\n                }\n                const items = Array.from(objProp, (element) => this.toASN(element));\n                const Container = schemaItem.repeated === \"sequence\" ? asn1js.Sequence : asn1js.Set;\n                asn1Item = new Container({\n                    value: items,\n                });\n            }\n            else {\n                asn1Item = this.toASN(objProp);\n            }\n        }\n        return asn1Item;\n    }\n}\n", "export class AsnArray extends Array {\n    constructor(items = []) {\n        if (typeof items === \"number\") {\n            super(items);\n        }\n        else {\n            super();\n            for (const item of items) {\n                this.push(item);\n            }\n        }\n    }\n}\n", "import * as asn1js from \"asn1js\";\nimport { BufferSourceConverter } from \"pvtsutils\";\nimport { AsnParser } from \"./parser\";\nimport { AsnSerializer } from \"./serializer\";\nexport class AsnConvert {\n    static serialize(obj) {\n        return AsnSerializer.serialize(obj);\n    }\n    static parse(data, target) {\n        return AsnParser.parse(data, target);\n    }\n    static toString(data) {\n        const buf = BufferSourceConverter.isBufferSource(data)\n            ? BufferSourceConverter.toArrayBuffer(data)\n            : AsnConvert.serialize(data);\n        const asn = asn1js.fromBER(buf);\n        if (asn.offset === -1) {\n            throw new Error(`Cannot decode ASN.1 data. ${asn.result.error}`);\n        }\n        return asn.result.toString();\n    }\n}\n", "/******************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n/* global Reflect, Promise, SuppressedError, Symbol, Iterator */\n\nvar extendStatics = function(d, b) {\n  extendStatics = Object.setPrototypeOf ||\n      ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n      function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n  return extendStatics(d, b);\n};\n\nexport function __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null)\n      throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n  function __() { this.constructor = d; }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nexport var __assign = function() {\n  __assign = Object.assign || function __assign(t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n      return t;\n  }\n  return __assign.apply(this, arguments);\n}\n\nexport function __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n      t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n              t[p[i]] = s[p[i]];\n      }\n  return t;\n}\n\nexport function __decorate(decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\n\nexport function __param(paramIndex, decorator) {\n  return function (target, key) { decorator(target, key, paramIndex); }\n}\n\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\n  var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _, done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n      var context = {};\n      for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n      for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n      context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\n      var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\n      if (kind === \"accessor\") {\n          if (result === void 0) continue;\n          if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n          if (_ = accept(result.get)) descriptor.get = _;\n          if (_ = accept(result.set)) descriptor.set = _;\n          if (_ = accept(result.init)) initializers.unshift(_);\n      }\n      else if (_ = accept(result)) {\n          if (kind === \"field\") initializers.unshift(_);\n          else descriptor[key] = _;\n      }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\n\nexport function __runInitializers(thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n      value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\n\nexport function __propKey(x) {\n  return typeof x === \"symbol\" ? x : \"\".concat(x);\n};\n\nexport function __setFunctionName(f, name, prefix) {\n  if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n  return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\n};\n\nexport function __metadata(metadataKey, metadataValue) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\n\nexport function __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n  return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n      function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n      function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nexport function __generator(thisArg, body) {\n  var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\n  return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n  function verb(n) { return function (v) { return step([n, v]); }; }\n  function step(op) {\n      if (f) throw new TypeError(\"Generator is already executing.\");\n      while (g && (g = 0, op[0] && (_ = 0)), _) try {\n          if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n          if (y = 0, t) op = [op[0] & 2, t.value];\n          switch (op[0]) {\n              case 0: case 1: t = op; break;\n              case 4: _.label++; return { value: op[1], done: false };\n              case 5: _.label++; y = op[1]; op = [0]; continue;\n              case 7: op = _.ops.pop(); _.trys.pop(); continue;\n              default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                  if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                  if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                  if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                  if (t[2]) _.ops.pop();\n                  _.trys.pop(); continue;\n          }\n          op = body.call(thisArg, _);\n      } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n      if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n  }\n}\n\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n  }\n  Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nexport function __exportStar(m, o) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\n}\n\nexport function __values(o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n      next: function () {\n          if (o && i >= o.length) o = void 0;\n          return { value: o && o[i++], done: !o };\n      }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\n\nexport function __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o), r, ar = [], e;\n  try {\n      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  }\n  catch (error) { e = { error: error }; }\n  finally {\n      try {\n          if (r && !r.done && (m = i[\"return\"])) m.call(i);\n      }\n      finally { if (e) throw e.error; }\n  }\n  return ar;\n}\n\n/** @deprecated */\nexport function __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++)\n      ar = ar.concat(__read(arguments[i]));\n  return ar;\n}\n\n/** @deprecated */\nexport function __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++)\n      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n          r[k] = a[j];\n  return r;\n}\n\nexport function __spreadArray(to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n      if (ar || !(i in from)) {\n          if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n          ar[i] = from[i];\n      }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n}\n\nexport function __await(v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\n\nexport function __asyncGenerator(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []), i, q = [];\n  return i = Object.create((typeof AsyncIterator === \"function\" ? AsyncIterator : Object).prototype), verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\n  function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\n  function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\n  function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n  function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n  function fulfill(value) { resume(\"next\", value); }\n  function reject(value) { resume(\"throw\", value); }\n  function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n}\n\nexport function __asyncDelegator(o) {\n  var i, p;\n  return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n  function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n}\n\nexport function __asyncValues(o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator], i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n  function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n  function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n}\n\nexport function __makeTemplateObject(cooked, raw) {\n  if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n  return cooked;\n};\n\nvar __setModuleDefault = Object.create ? (function(o, v) {\n  Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n  o[\"default\"] = v;\n};\n\nvar ownKeys = function(o) {\n  ownKeys = Object.getOwnPropertyNames || function (o) {\n    var ar = [];\n    for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n    return ar;\n  };\n  return ownKeys(o);\n};\n\nexport function __importStar(mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n  __setModuleDefault(result, mod);\n  return result;\n}\n\nexport function __importDefault(mod) {\n  return (mod && mod.__esModule) ? mod : { default: mod };\n}\n\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\n\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n}\n\nexport function __classPrivateFieldIn(state, receiver) {\n  if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\n  return typeof state === \"function\" ? receiver === state : state.has(receiver);\n}\n\nexport function __addDisposableResource(env, value, async) {\n  if (value !== null && value !== void 0) {\n    if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n    var dispose, inner;\n    if (async) {\n      if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n      dispose = value[Symbol.asyncDispose];\n    }\n    if (dispose === void 0) {\n      if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n      dispose = value[Symbol.dispose];\n      if (async) inner = dispose;\n    }\n    if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n    if (inner) dispose = function() { try { inner.call(this); } catch (e) { return Promise.reject(e); } };\n    env.stack.push({ value: value, dispose: dispose, async: async });\n  }\n  else if (async) {\n    env.stack.push({ async: true });\n  }\n  return value;\n}\n\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\n\nexport function __disposeResources(env) {\n  function fail(e) {\n    env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n    env.hasError = true;\n  }\n  var r, s = 0;\n  function next() {\n    while (r = env.stack.pop()) {\n      try {\n        if (!r.async && s === 1) return s = 0, env.stack.push(r), Promise.resolve().then(next);\n        if (r.dispose) {\n          var result = r.dispose.call(r.value);\n          if (r.async) return s |= 2, Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\n        }\n        else s |= 1;\n      }\n      catch (e) {\n        fail(e);\n      }\n    }\n    if (s === 1) return env.hasError ? Promise.reject(env.error) : Promise.resolve();\n    if (env.hasError) throw env.error;\n  }\n  return next();\n}\n\nexport function __rewriteRelativeImportExtension(path, preserveJsx) {\n  if (typeof path === \"string\" && /^\\.\\.?\\//.test(path)) {\n      return path.replace(/\\.(tsx)$|((?:\\.d)?)((?:\\.[^./]+?)?)\\.([cm]?)ts$/i, function (m, tsx, d, ext, cm) {\n          return tsx ? preserveJsx ? \".jsx\" : \".js\" : d && (!ext || !cm) ? m : (d + ext + \".\" + cm.toLowerCase() + \"js\");\n      });\n  }\n  return path;\n}\n\nexport default {\n  __extends,\n  __assign,\n  __rest,\n  __decorate,\n  __param,\n  __esDecorate,\n  __runInitializers,\n  __propKey,\n  __setFunctionName,\n  __metadata,\n  __awaiter,\n  __generator,\n  __createBinding,\n  __exportStar,\n  __values,\n  __read,\n  __spread,\n  __spreadArrays,\n  __spreadArray,\n  __await,\n  __asyncGenerator,\n  __asyncDelegator,\n  __asyncValues,\n  __makeTemplateObject,\n  __importStar,\n  __importDefault,\n  __classPrivateFieldGet,\n  __classPrivateFieldSet,\n  __classPrivateFieldIn,\n  __addDisposableResource,\n  __disposeResources,\n  __rewriteRelativeImportExtension,\n};\n", "/**\n * Copyright (c) 2020, Peculiar Ventures, All rights reserved.\n */\n\nclass JsonError extends Error {\r\n    constructor(message, innerError) {\r\n        super(innerError\r\n            ? `${message}. See the inner exception for more details.`\r\n            : message);\r\n        this.message = message;\r\n        this.innerError = innerError;\r\n    }\r\n}\n\nclass TransformError extends JsonError {\r\n    constructor(schema, message, innerError) {\r\n        super(message, innerError);\r\n        this.schema = schema;\r\n    }\r\n}\n\nclass ParserError extends TransformError {\r\n    constructor(schema, message, innerError) {\r\n        super(schema, `JSON doesn't match to '${schema.target.name}' schema. ${message}`, innerError);\r\n    }\r\n}\n\nclass ValidationError extends JsonError {\r\n}\n\nclass SerializerError extends JsonError {\r\n    constructor(schemaName, message, innerError) {\r\n        super(`Cannot serialize by '${schemaName}' schema. ${message}`, innerError);\r\n        this.schemaName = schemaName;\r\n    }\r\n}\n\nclass KeyError extends ParserError {\r\n    constructor(schema, keys, errors = {}) {\r\n        super(schema, \"Some keys doesn't match to schema\");\r\n        this.keys = keys;\r\n        this.errors = errors;\r\n    }\r\n}\n\nvar JsonPropTypes;\r\n(function (JsonPropTypes) {\r\n    JsonPropTypes[JsonPropTypes[\"Any\"] = 0] = \"Any\";\r\n    JsonPropTypes[JsonPropTypes[\"Boolean\"] = 1] = \"Boolean\";\r\n    JsonPropTypes[JsonPropTypes[\"Number\"] = 2] = \"Number\";\r\n    JsonPropTypes[JsonPropTypes[\"String\"] = 3] = \"String\";\r\n})(JsonPropTypes || (JsonPropTypes = {}));\n\nfunction checkType(value, type) {\r\n    switch (type) {\r\n        case JsonPropTypes.Boolean:\r\n            return typeof value === \"boolean\";\r\n        case JsonPropTypes.Number:\r\n            return typeof value === \"number\";\r\n        case JsonPropTypes.String:\r\n            return typeof value === \"string\";\r\n    }\r\n    return true;\r\n}\r\nfunction throwIfTypeIsWrong(value, type) {\r\n    if (!checkType(value, type)) {\r\n        throw new TypeError(`Value must be ${JsonPropTypes[type]}`);\r\n    }\r\n}\r\nfunction isConvertible(target) {\r\n    if (target && target.prototype) {\r\n        if (target.prototype.toJSON && target.prototype.fromJSON) {\r\n            return true;\r\n        }\r\n        else {\r\n            return isConvertible(target.prototype);\r\n        }\r\n    }\r\n    else {\r\n        return !!(target && target.toJSON && target.fromJSON);\r\n    }\r\n}\n\nclass JsonSchemaStorage {\r\n    constructor() {\r\n        this.items = new Map();\r\n    }\r\n    has(target) {\r\n        return this.items.has(target) || !!this.findParentSchema(target);\r\n    }\r\n    get(target) {\r\n        const schema = this.items.get(target) || this.findParentSchema(target);\r\n        if (!schema) {\r\n            throw new Error(\"Cannot get schema for current target\");\r\n        }\r\n        return schema;\r\n    }\r\n    create(target) {\r\n        const schema = { names: {} };\r\n        const parentSchema = this.findParentSchema(target);\r\n        if (parentSchema) {\r\n            Object.assign(schema, parentSchema);\r\n            schema.names = {};\r\n            for (const name in parentSchema.names) {\r\n                schema.names[name] = Object.assign({}, parentSchema.names[name]);\r\n            }\r\n        }\r\n        schema.target = target;\r\n        return schema;\r\n    }\r\n    set(target, schema) {\r\n        this.items.set(target, schema);\r\n        return this;\r\n    }\r\n    findParentSchema(target) {\r\n        const parent = target.__proto__;\r\n        if (parent) {\r\n            const schema = this.items.get(parent);\r\n            return schema || this.findParentSchema(parent);\r\n        }\r\n        return null;\r\n    }\r\n}\n\nconst DEFAULT_SCHEMA = \"default\";\r\nconst schemaStorage = new JsonSchemaStorage();\n\nclass PatternValidation {\r\n    constructor(pattern) {\r\n        this.pattern = new RegExp(pattern);\r\n    }\r\n    validate(value) {\r\n        const pattern = new RegExp(this.pattern.source, this.pattern.flags);\r\n        if (typeof value !== \"string\") {\r\n            throw new ValidationError(\"Incoming value must be string\");\r\n        }\r\n        if (!pattern.exec(value)) {\r\n            throw new ValidationError(`Value doesn't match to pattern '${pattern.toString()}'`);\r\n        }\r\n    }\r\n}\n\nclass InclusiveValidation {\r\n    constructor(min = Number.MIN_VALUE, max = Number.MAX_VALUE) {\r\n        this.min = min;\r\n        this.max = max;\r\n    }\r\n    validate(value) {\r\n        throwIfTypeIsWrong(value, JsonPropTypes.Number);\r\n        if (!(this.min <= value && value <= this.max)) {\r\n            const min = this.min === Number.MIN_VALUE ? \"MIN\" : this.min;\r\n            const max = this.max === Number.MAX_VALUE ? \"MAX\" : this.max;\r\n            throw new ValidationError(`Value doesn't match to diapason [${min},${max}]`);\r\n        }\r\n    }\r\n}\n\nclass ExclusiveValidation {\r\n    constructor(min = Number.MIN_VALUE, max = Number.MAX_VALUE) {\r\n        this.min = min;\r\n        this.max = max;\r\n    }\r\n    validate(value) {\r\n        throwIfTypeIsWrong(value, JsonPropTypes.Number);\r\n        if (!(this.min < value && value < this.max)) {\r\n            const min = this.min === Number.MIN_VALUE ? \"MIN\" : this.min;\r\n            const max = this.max === Number.MAX_VALUE ? \"MAX\" : this.max;\r\n            throw new ValidationError(`Value doesn't match to diapason (${min},${max})`);\r\n        }\r\n    }\r\n}\n\nclass LengthValidation {\r\n    constructor(length, minLength, maxLength) {\r\n        this.length = length;\r\n        this.minLength = minLength;\r\n        this.maxLength = maxLength;\r\n    }\r\n    validate(value) {\r\n        if (this.length !== undefined) {\r\n            if (value.length !== this.length) {\r\n                throw new ValidationError(`Value length must be exactly ${this.length}.`);\r\n            }\r\n            return;\r\n        }\r\n        if (this.minLength !== undefined) {\r\n            if (value.length < this.minLength) {\r\n                throw new ValidationError(`Value length must be more than ${this.minLength}.`);\r\n            }\r\n        }\r\n        if (this.maxLength !== undefined) {\r\n            if (value.length > this.maxLength) {\r\n                throw new ValidationError(`Value length must be less than ${this.maxLength}.`);\r\n            }\r\n        }\r\n    }\r\n}\n\nclass EnumerationValidation {\r\n    constructor(enumeration) {\r\n        this.enumeration = enumeration;\r\n    }\r\n    validate(value) {\r\n        throwIfTypeIsWrong(value, JsonPropTypes.String);\r\n        if (!this.enumeration.includes(value)) {\r\n            throw new ValidationError(`Value must be one of ${this.enumeration.map((v) => `'${v}'`).join(\", \")}`);\r\n        }\r\n    }\r\n}\n\nclass JsonTransform {\r\n    static checkValues(data, schemaItem) {\r\n        const values = Array.isArray(data) ? data : [data];\r\n        for (const value of values) {\r\n            for (const validation of schemaItem.validations) {\r\n                if (validation instanceof LengthValidation && schemaItem.repeated) {\r\n                    validation.validate(data);\r\n                }\r\n                else {\r\n                    validation.validate(value);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    static checkTypes(value, schemaItem) {\r\n        if (schemaItem.repeated && !Array.isArray(value)) {\r\n            throw new TypeError(\"Value must be Array\");\r\n        }\r\n        if (typeof schemaItem.type === \"number\") {\r\n            const values = Array.isArray(value) ? value : [value];\r\n            for (const v of values) {\r\n                throwIfTypeIsWrong(v, schemaItem.type);\r\n            }\r\n        }\r\n    }\r\n    static getSchemaByName(schema, name = DEFAULT_SCHEMA) {\r\n        return { ...schema.names[DEFAULT_SCHEMA], ...schema.names[name] };\r\n    }\r\n}\n\nclass JsonSerializer extends JsonTransform {\r\n    static serialize(obj, options, replacer, space) {\r\n        const json = this.toJSON(obj, options);\r\n        return JSON.stringify(json, replacer, space);\r\n    }\r\n    static toJSON(obj, options = {}) {\r\n        let res;\r\n        let targetSchema = options.targetSchema;\r\n        const schemaName = options.schemaName || DEFAULT_SCHEMA;\r\n        if (isConvertible(obj)) {\r\n            return obj.toJSON();\r\n        }\r\n        if (Array.isArray(obj)) {\r\n            res = [];\r\n            for (const item of obj) {\r\n                res.push(this.toJSON(item, options));\r\n            }\r\n        }\r\n        else if (typeof obj === \"object\") {\r\n            if (targetSchema && !schemaStorage.has(targetSchema)) {\r\n                throw new JsonError(\"Cannot get schema for `targetSchema` param\");\r\n            }\r\n            targetSchema = (targetSchema || obj.constructor);\r\n            if (schemaStorage.has(targetSchema)) {\r\n                const schema = schemaStorage.get(targetSchema);\r\n                res = {};\r\n                const namedSchema = this.getSchemaByName(schema, schemaName);\r\n                for (const key in namedSchema) {\r\n                    try {\r\n                        const item = namedSchema[key];\r\n                        const objItem = obj[key];\r\n                        let value;\r\n                        if ((item.optional && objItem === undefined)\r\n                            || (item.defaultValue !== undefined && objItem === item.defaultValue)) {\r\n                            continue;\r\n                        }\r\n                        if (!item.optional && objItem === undefined) {\r\n                            throw new SerializerError(targetSchema.name, `Property '${key}' is required.`);\r\n                        }\r\n                        if (typeof item.type === \"number\") {\r\n                            if (item.converter) {\r\n                                if (item.repeated) {\r\n                                    value = objItem.map((el) => item.converter.toJSON(el, obj));\r\n                                }\r\n                                else {\r\n                                    value = item.converter.toJSON(objItem, obj);\r\n                                }\r\n                            }\r\n                            else {\r\n                                value = objItem;\r\n                            }\r\n                        }\r\n                        else {\r\n                            if (item.repeated) {\r\n                                value = objItem.map((el) => this.toJSON(el, { schemaName }));\r\n                            }\r\n                            else {\r\n                                value = this.toJSON(objItem, { schemaName });\r\n                            }\r\n                        }\r\n                        this.checkTypes(value, item);\r\n                        this.checkValues(value, item);\r\n                        res[item.name || key] = value;\r\n                    }\r\n                    catch (e) {\r\n                        if (e instanceof SerializerError) {\r\n                            throw e;\r\n                        }\r\n                        else {\r\n                            throw new SerializerError(schema.target.name, `Property '${key}' is wrong. ${e.message}`, e);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                res = {};\r\n                for (const key in obj) {\r\n                    res[key] = this.toJSON(obj[key], { schemaName });\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            res = obj;\r\n        }\r\n        return res;\r\n    }\r\n}\n\nclass JsonParser extends JsonTransform {\r\n    static parse(data, options) {\r\n        const obj = JSON.parse(data);\r\n        return this.fromJSON(obj, options);\r\n    }\r\n    static fromJSON(target, options) {\r\n        const targetSchema = options.targetSchema;\r\n        const schemaName = options.schemaName || DEFAULT_SCHEMA;\r\n        const obj = new targetSchema();\r\n        if (isConvertible(obj)) {\r\n            return obj.fromJSON(target);\r\n        }\r\n        const schema = schemaStorage.get(targetSchema);\r\n        const namedSchema = this.getSchemaByName(schema, schemaName);\r\n        const keyErrors = {};\r\n        if (options.strictProperty && !Array.isArray(target)) {\r\n            JsonParser.checkStrictProperty(target, namedSchema, schema);\r\n        }\r\n        for (const key in namedSchema) {\r\n            try {\r\n                const item = namedSchema[key];\r\n                const name = item.name || key;\r\n                const value = target[name];\r\n                if (value === undefined && (item.optional || item.defaultValue !== undefined)) {\r\n                    continue;\r\n                }\r\n                if (!item.optional && value === undefined) {\r\n                    throw new ParserError(schema, `Property '${name}' is required.`);\r\n                }\r\n                this.checkTypes(value, item);\r\n                this.checkValues(value, item);\r\n                if (typeof (item.type) === \"number\") {\r\n                    if (item.converter) {\r\n                        if (item.repeated) {\r\n                            obj[key] = value.map((el) => item.converter.fromJSON(el, obj));\r\n                        }\r\n                        else {\r\n                            obj[key] = item.converter.fromJSON(value, obj);\r\n                        }\r\n                    }\r\n                    else {\r\n                        obj[key] = value;\r\n                    }\r\n                }\r\n                else {\r\n                    const newOptions = {\r\n                        ...options,\r\n                        targetSchema: item.type,\r\n                        schemaName,\r\n                    };\r\n                    if (item.repeated) {\r\n                        obj[key] = value.map((el) => this.fromJSON(el, newOptions));\r\n                    }\r\n                    else {\r\n                        obj[key] = this.fromJSON(value, newOptions);\r\n                    }\r\n                }\r\n            }\r\n            catch (e) {\r\n                if (!(e instanceof ParserError)) {\r\n                    e = new ParserError(schema, `Property '${key}' is wrong. ${e.message}`, e);\r\n                }\r\n                if (options.strictAllKeys) {\r\n                    keyErrors[key] = e;\r\n                }\r\n                else {\r\n                    throw e;\r\n                }\r\n            }\r\n        }\r\n        const keys = Object.keys(keyErrors);\r\n        if (keys.length) {\r\n            throw new KeyError(schema, keys, keyErrors);\r\n        }\r\n        return obj;\r\n    }\r\n    static checkStrictProperty(target, namedSchema, schema) {\r\n        const jsonProps = Object.keys(target);\r\n        const schemaProps = Object.keys(namedSchema);\r\n        const keys = [];\r\n        for (const key of jsonProps) {\r\n            if (schemaProps.indexOf(key) === -1) {\r\n                keys.push(key);\r\n            }\r\n        }\r\n        if (keys.length) {\r\n            throw new KeyError(schema, keys);\r\n        }\r\n    }\r\n}\n\nfunction getValidations(item) {\r\n    const validations = [];\r\n    if (item.pattern) {\r\n        validations.push(new PatternValidation(item.pattern));\r\n    }\r\n    if (item.type === JsonPropTypes.Number || item.type === JsonPropTypes.Any) {\r\n        if (item.minInclusive !== undefined || item.maxInclusive !== undefined) {\r\n            validations.push(new InclusiveValidation(item.minInclusive, item.maxInclusive));\r\n        }\r\n        if (item.minExclusive !== undefined || item.maxExclusive !== undefined) {\r\n            validations.push(new ExclusiveValidation(item.minExclusive, item.maxExclusive));\r\n        }\r\n        if (item.enumeration !== undefined) {\r\n            validations.push(new EnumerationValidation(item.enumeration));\r\n        }\r\n    }\r\n    if (item.type === JsonPropTypes.String || item.repeated || item.type === JsonPropTypes.Any) {\r\n        if (item.length !== undefined || item.minLength !== undefined || item.maxLength !== undefined) {\r\n            validations.push(new LengthValidation(item.length, item.minLength, item.maxLength));\r\n        }\r\n    }\r\n    return validations;\r\n}\r\nconst JsonProp = (options = {}) => (target, propertyKey) => {\r\n    const errorMessage = `Cannot set type for ${propertyKey} property of ${target.constructor.name} schema`;\r\n    let schema;\r\n    if (!schemaStorage.has(target.constructor)) {\r\n        schema = schemaStorage.create(target.constructor);\r\n        schemaStorage.set(target.constructor, schema);\r\n    }\r\n    else {\r\n        schema = schemaStorage.get(target.constructor);\r\n        if (schema.target !== target.constructor) {\r\n            schema = schemaStorage.create(target.constructor);\r\n            schemaStorage.set(target.constructor, schema);\r\n        }\r\n    }\r\n    const defaultSchema = {\r\n        type: JsonPropTypes.Any,\r\n        validations: [],\r\n    };\r\n    const copyOptions = Object.assign(defaultSchema, options);\r\n    copyOptions.validations = getValidations(copyOptions);\r\n    if (typeof copyOptions.type !== \"number\") {\r\n        if (!schemaStorage.has(copyOptions.type) && !isConvertible(copyOptions.type)) {\r\n            throw new Error(`${errorMessage}. Assigning type doesn't have schema.`);\r\n        }\r\n    }\r\n    let schemaNames;\r\n    if (Array.isArray(options.schema)) {\r\n        schemaNames = options.schema;\r\n    }\r\n    else {\r\n        schemaNames = [options.schema || DEFAULT_SCHEMA];\r\n    }\r\n    for (const schemaName of schemaNames) {\r\n        if (!schema.names[schemaName]) {\r\n            schema.names[schemaName] = {};\r\n        }\r\n        const namedSchema = schema.names[schemaName];\r\n        namedSchema[propertyKey] = copyOptions;\r\n    }\r\n};\n\nexport { JsonError, JsonParser, JsonProp, JsonPropTypes, JsonSerializer, KeyError, ParserError, SerializerError, TransformError, ValidationError };\n", "export * from './registration/generateRegistrationOptions.js';\nexport * from './registration/verifyRegistrationResponse.js';\nexport * from './authentication/generateAuthenticationOptions.js';\nexport * from './authentication/verifyAuthenticationResponse.js';\nexport * from './services/metadataService.js';\nexport * from './services/settingsService.js';\nexport * from './metadata/mdsTypes.js';\nexport * from './types/index.js';\n", "import { generateChallenge } from '../helpers/generateChallenge.js';\nimport { generateUserID } from '../helpers/generateUserID.js';\nimport { isoBase64URL, isoUint8Array } from '../helpers/iso/index.js';\n/**\n * Supported crypto algo identifiers\n * See https://w3c.github.io/webauthn/#sctn-alg-identifier\n * and https://www.iana.org/assignments/cose/cose.xhtml#algorithms\n */\nexport const supportedCOSEAlgorithmIdentifiers = [\n    // EdDSA (In first position to encourage authenticators to use this over ES256)\n    -8,\n    // ECDSA w/ SHA-256\n    -7,\n    // ECDSA w/ SHA-512\n    -36,\n    // RSASSA-PSS w/ SHA-256\n    -37,\n    // RSASSA-PSS w/ SHA-384\n    -38,\n    // RSASSA-PSS w/ SHA-512\n    -39,\n    // RSASSA-PKCS1-v1_5 w/ SHA-256\n    -257,\n    // RSASSA-PKCS1-v1_5 w/ SHA-384\n    -258,\n    // RSASSA-PKCS1-v1_5 w/ SHA-512\n    -259,\n    // RSASSA-PKCS1-v1_5 w/ SHA-1 (Deprecated; here for legacy support)\n    -65535,\n];\n/**\n * Set up some default authenticator selection options as per the latest spec:\n * https://www.w3.org/TR/webauthn-2/#dictdef-authenticatorselectioncriteria\n *\n * Helps with some older platforms (e.g. Android 7.0 Nougat) that may not be aware of these\n * defaults.\n */\nconst defaultAuthenticatorSelection = {\n    residentKey: 'preferred',\n    userVerification: 'preferred',\n};\n/**\n * Use the most commonly-supported algorithms\n * See the following:\n *   - https://www.iana.org/assignments/cose/cose.xhtml#algorithms\n *   - https://w3c.github.io/webauthn/#dom-publickeycredentialcreationoptions-pubkeycredparams\n */\nconst defaultSupportedAlgorithmIDs = [-8, -7, -257];\n/**\n * Prepare a value to pass into navigator.credentials.create(...) for authenticator registration\n *\n * **Options:**\n *\n * @param rpName - User-visible, \"friendly\" website/service name\n * @param rpID - Valid domain name (after `https://`)\n * @param userName - User's website-specific username (email, etc...)\n * @param userID **(Optional)** - User's website-specific unique ID. Defaults to generating a random identifier\n * @param challenge **(Optional)** - Random value the authenticator needs to sign and pass back. Defaults to generating a random value\n * @param userDisplayName **(Optional)** - User's actual name. Defaults to `\"\"`\n * @param timeout **(Optional)** - How long (in ms) the user can take to complete attestation. Defaults to `60000`\n * @param attestationType **(Optional)** - Specific attestation statement. Defaults to `\"none\"`\n * @param excludeCredentials **(Optional)** - Authenticators registered by the user so the user can't register the same credential multiple times. Defaults to `[]`\n * @param authenticatorSelection **(Optional)** - Advanced criteria for restricting the types of authenticators that may be used. Defaults to `{ residentKey: 'preferred', userVerification: 'preferred' }`\n * @param extensions **(Optional)** - Additional plugins the authenticator or browser should use during attestation\n * @param supportedAlgorithmIDs **(Optional)** - Array of numeric COSE algorithm identifiers supported for attestation by this RP. See https://www.iana.org/assignments/cose/cose.xhtml#algorithms. Defaults to `[-8, -7, -257]`\n * @param preferredAuthenticatorType **(Optional)** - Encourage the browser to prompt the user to register a specific type of authenticator\n */\nexport async function generateRegistrationOptions(options) {\n    const { rpName, rpID, userName, userID, challenge = await generateChallenge(), userDisplayName = '', timeout = 60000, attestationType = 'none', excludeCredentials = [], authenticatorSelection = defaultAuthenticatorSelection, extensions, supportedAlgorithmIDs = defaultSupportedAlgorithmIDs, preferredAuthenticatorType, } = options;\n    /**\n     * Prepare pubKeyCredParams from the array of algorithm ID's\n     */\n    const pubKeyCredParams = supportedAlgorithmIDs.map((id) => ({\n        alg: id,\n        type: 'public-key',\n    }));\n    /**\n     * Capture some of the nuances of how `residentKey` and `requireResidentKey` how either is set\n     * depending on when either is defined in the options\n     */\n    if (authenticatorSelection.residentKey === undefined) {\n        /**\n         * `residentKey`: \"If no value is given then the effective value is `required` if\n         * requireResidentKey is true or `discouraged` if it is false or absent.\"\n         *\n         * See https://www.w3.org/TR/webauthn-2/#dom-authenticatorselectioncriteria-residentkey\n         */\n        if (authenticatorSelection.requireResidentKey) {\n            authenticatorSelection.residentKey = 'required';\n        }\n        else {\n            /**\n             * FIDO Conformance v1.7.2 fails the first test if we do this, even though this is\n             * technically compatible with the WebAuthn L2 spec...\n             */\n            // authenticatorSelection.residentKey = 'discouraged';\n        }\n    }\n    else {\n        /**\n         * `requireResidentKey`: \"Relying Parties SHOULD set it to true if, and only if, residentKey is\n         * set to \"required\"\"\n         *\n         * Spec says this property defaults to `false` so we should still be okay to assign `false` too\n         *\n         * See https://www.w3.org/TR/webauthn-2/#dom-authenticatorselectioncriteria-requireresidentkey\n         */\n        authenticatorSelection.requireResidentKey = authenticatorSelection.residentKey === 'required';\n    }\n    /**\n     * Preserve ability to specify `string` values for challenges\n     */\n    let _challenge = challenge;\n    if (typeof _challenge === 'string') {\n        _challenge = isoUint8Array.fromUTF8String(_challenge);\n    }\n    /**\n     * Explicitly disallow use of strings for userID anymore because `isoBase64URL.fromBuffer()` below\n     * will return an empty string if one gets through!\n     */\n    if (typeof userID === 'string') {\n        throw new Error(`String values for \\`userID\\` are no longer supported. See https://simplewebauthn.dev/docs/advanced/server/custom-user-ids`);\n    }\n    /**\n     * Generate a user ID if one is not provided\n     */\n    let _userID = userID;\n    if (!_userID) {\n        _userID = await generateUserID();\n    }\n    /**\n     * Map authenticator preference to hints. Map to authenticatorAttachment as well for\n     * backwards-compatibility.\n     */\n    const hints = [];\n    if (preferredAuthenticatorType) {\n        if (preferredAuthenticatorType === 'securityKey') {\n            hints.push('security-key');\n            authenticatorSelection.authenticatorAttachment = 'cross-platform';\n        }\n        else if (preferredAuthenticatorType === 'localDevice') {\n            hints.push('client-device');\n            authenticatorSelection.authenticatorAttachment = 'platform';\n        }\n        else if (preferredAuthenticatorType === 'remoteDevice') {\n            hints.push('hybrid');\n            authenticatorSelection.authenticatorAttachment = 'cross-platform';\n        }\n    }\n    return {\n        challenge: isoBase64URL.fromBuffer(_challenge),\n        rp: {\n            name: rpName,\n            id: rpID,\n        },\n        user: {\n            id: isoBase64URL.fromBuffer(_userID),\n            name: userName,\n            displayName: userDisplayName,\n        },\n        pubKeyCredParams,\n        timeout,\n        attestation: attestationType,\n        excludeCredentials: excludeCredentials.map((cred) => {\n            if (!isoBase64URL.isBase64URL(cred.id)) {\n                throw new Error(`excludeCredential id \"${cred.id}\" is not a valid base64url string`);\n            }\n            return {\n                ...cred,\n                id: isoBase64URL.trimPadding(cred.id),\n                type: 'public-key',\n            };\n        }),\n        authenticatorSelection,\n        extensions: {\n            ...extensions,\n            credProps: true,\n        },\n        hints,\n    };\n}\n", "import { isoCrypto } from './iso/index.js';\n/**\n * Generate a suitably random value to be used as an attestation or assertion challenge\n */\nexport async function generateChallenge() {\n    /**\n     * WebAuthn spec says that 16 bytes is a good minimum:\n     *\n     * \"In order to prevent replay attacks, the challenges MUST contain enough entropy to make\n     * guessing them infeasible. Challenges SHOULD therefore be at least 16 bytes long.\"\n     *\n     * Just in case, let's double it\n     */\n    const challenge = new Uint8Array(32);\n    await isoCrypto.getRandomValues(challenge);\n    return _generateChallengeInternals.stubThis(challenge);\n}\n/**\n * Make it possible to stub the return value during testing\n * @ignore Don't include this in docs output\n */\nexport const _generateChallengeInternals = {\n    stubThis: (value) => value,\n};\n", "/**\n * A collection of methods for isomorphic manipulation of trickier data types\n *\n * The goal with these is to make it easier to replace dependencies later that might not play well\n * with specific server-like runtimes that expose global Web APIs (CloudFlare Workers, Deno, Bun,\n * etc...), while also supporting execution in Node.\n */\nexport * as isoBase64URL from './isoBase64URL.js';\nexport * as isoCBOR from './isoCBOR.js';\nexport * as isoCrypto from './isoCrypto/index.js';\nexport * as isoUint8Array from './isoUint8Array.js';\n", "/**\n * A runtime-agnostic collection of methods for working with Base64URL encoding\n * @module\n */\nimport base64 from '@hexagon/base64';\n/**\n * Decode from a Base64URL-encoded string to an ArrayBuffer. Best used when converting a\n * credential ID from a JSON string to an ArrayBuffer, like in allowCredentials or\n * excludeCredentials.\n *\n * @param buffer Value to decode from base64\n * @param to (optional) The decoding to use, in case it's desirable to decode from base64 instead\n */\nexport function toBuffer(base64urlString, from = 'base64url') {\n    const _buffer = base64.toArrayBuffer(base64urlString, from === 'base64url');\n    return new Uint8Array(_buffer);\n}\n/**\n * Encode the given array buffer into a Base64URL-encoded string. Ideal for converting various\n * credential response ArrayBuffers to string for sending back to the server as JSON.\n *\n * @param buffer Value to encode to base64\n * @param to (optional) The encoding to use, in case it's desirable to encode to base64 instead\n */\nexport function fromBuffer(buffer, to = 'base64url') {\n    return base64.fromArrayBuffer(buffer, to === 'base64url');\n}\n/**\n * Convert a base64url string into base64\n */\nexport function toBase64(base64urlString) {\n    const fromBase64Url = base64.toArrayBuffer(base64urlString, true);\n    const toBase64 = base64.fromArrayBuffer(fromBase64Url);\n    return toBase64;\n}\n/**\n * Encode a UTF-8 string to base64url\n */\nexport function fromUTF8String(utf8String) {\n    return base64.fromString(utf8String, true);\n}\n/**\n * Decode a base64url string into its original UTF-8 string\n */\nexport function toUTF8String(base64urlString) {\n    return base64.toString(base64urlString, true);\n}\n/**\n * Confirm that the string is encoded into base64\n */\nexport function isBase64(input) {\n    return base64.validate(input, false);\n}\n/**\n * Confirm that the string is encoded into base64url, with support for optional padding\n */\nexport function isBase64URL(input) {\n    // Trim padding characters from the string if present\n    input = trimPadding(input);\n    return base64.validate(input, true);\n}\n/**\n * Remove optional padding from a base64url-encoded string\n */\nexport function trimPadding(input) {\n    return input.replace(/=/g, '');\n}\n", "/* ------------------------------------------------------------------------------------\n\n  base64 - MIT License - Hexagon <hexagon@56k.guru>\n\n  ------------------------------------------------------------------------------------\n\n  License:\n\n\tCopyright (c) 2021 Hexagon <hexagon@56k.guru>\n\n\tPermission is hereby granted, free of charge, to any person obtaining a copy\n\tof this software and associated documentation files (the \"Software\"), to deal\n\tin the Software without restriction, including without limitation the rights\n\tto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\tcopies of the Software, and to permit persons to whom the Software is\n\tfurnished to do so, subject to the following conditions:\n\tThe above copyright notice and this permission notice shall be included in\n\tall copies or substantial portions of the Software.\n\tTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\tIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\tFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\n\tAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\tLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\tOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\tTHE SOFTWARE.\n\n  ------------------------------------------------------------------------------------  */\n\nconst \n\t// Regular base64 characters\n\tchars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\",\n\n\t// Base64url characters\n\tcharsUrl = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_\",\n\n\tgenLookup = (target) => {\n\t\tconst lookupTemp = typeof Uint8Array === \"undefined\" ? [] : new Uint8Array(256);\n\t\tconst len = chars.length;\n\t\tfor (let i = 0; i < len; i++) {\n\t\t\tlookupTemp[target.charCodeAt(i)] = i;\n\t\t}\n\t\treturn lookupTemp;\n\t},\n  \n\t// Use a lookup table to find the index.\n\tlookup = genLookup(chars),\n\tlookupUrl = genLookup(charsUrl); \n\n/**\n * Pre-calculated regexes for validating base64 and base64url\n */\nconst base64UrlPattern = /^[-A-Za-z0-9\\-_]*$/;\nconst base64Pattern = /^[-A-Za-z0-9+/]*={0,3}$/;\n\n/**\n * @namespace base64\n */\nconst base64 = {};\n\n/**\n * Convenience function for converting a base64 encoded string to an ArrayBuffer instance\n * @public\n * \n * @param {string} data - Base64 representation of data\n * @param {boolean} [urlMode] - If set to true, URL mode string will be expected\n * @returns {ArrayBuffer} - Decoded data\n */\nbase64.toArrayBuffer = (data, urlMode) => {\n\tconst \n\t\tlen = data.length;\n\tlet bufferLength = data.length * 0.75,\n\t\ti,\n\t\tp = 0,\n\t\tencoded1,\n\t\tencoded2,\n\t\tencoded3,\n\t\tencoded4;\n\n\tif (data[data.length - 1] === \"=\") {\n\t\tbufferLength--;\n\t\tif (data[data.length - 2] === \"=\") {\n\t\t\tbufferLength--;\n\t\t}\n\t}\n\n\tconst \n\t\tarraybuffer = new ArrayBuffer(bufferLength),\n\t\tbytes = new Uint8Array(arraybuffer),\n\t\ttarget = urlMode ? lookupUrl : lookup;\n\n\tfor (i = 0; i < len; i += 4) {\n\t\tencoded1 = target[data.charCodeAt(i)];\n\t\tencoded2 = target[data.charCodeAt(i + 1)];\n\t\tencoded3 = target[data.charCodeAt(i + 2)];\n\t\tencoded4 = target[data.charCodeAt(i + 3)];\n\n\t\tbytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n\t\tbytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n\t\tbytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n\t}\n\n\treturn arraybuffer;\n\n};\n\n/**\n * Convenience function for creating a base64 encoded string from an ArrayBuffer instance\n * @public\n * \n * @param {ArrayBuffer} arrBuf - ArrayBuffer to be encoded\n * @param {boolean} [urlMode] - If set to true, URL mode string will be returned\n * @returns {string} - Base64 representation of data\n */\nbase64.fromArrayBuffer = (arrBuf, urlMode) => {\n\tconst bytes = new Uint8Array(arrBuf);\n\tlet\n\t\ti,\n\t\tresult = \"\";\n\n\tconst\n\t\tlen = bytes.length,\n\t\ttarget = urlMode ? charsUrl : chars;\n\n\tfor (i = 0; i < len; i += 3) {\n\t\tresult += target[bytes[i] >> 2];\n\t\tresult += target[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n\t\tresult += target[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n\t\tresult += target[bytes[i + 2] & 63];\n\t}\n\n\tconst remainder = len % 3;\n\tif (remainder === 2) {\n\t\tresult = result.substring(0, result.length - 1) + (urlMode ? \"\" : \"=\");\n\t} else if (remainder === 1) {\n\t\tresult = result.substring(0, result.length - 2) + (urlMode ? \"\" : \"==\");\n\t}\n\n\treturn result;\n\n};\n\n/**\n * Convenience function for converting base64 to string\n * @public\n * \n * @param {string} str - Base64 encoded string to be decoded\n * @param {boolean} [urlMode] - If set to true, URL mode string will be expected\n * @returns {string} - Decoded string\n */\nbase64.toString = (str, urlMode) => {\n\treturn new TextDecoder().decode(base64.toArrayBuffer(str, urlMode));\n};\n\n/**\n * Convenience function for converting a javascript string to base64\n * @public\n * \n * @param {string} str - String to be converted to base64\n * @param {boolean} [urlMode] - If set to true, URL mode string will be returned\n * @returns {string} - Base64 encoded string\n */\nbase64.fromString = (str, urlMode) => {\n\treturn base64.fromArrayBuffer(new TextEncoder().encode(str), urlMode);\n};\n\n/**\n * Function to validate base64\n * @public\n * @param {string} encoded - Base64 or Base64url encoded data\n * @param {boolean} [urlMode] - If set to true, base64url will be expected\n * @returns {boolean} - Valid base64/base64url?\n */\nbase64.validate = (encoded, urlMode) => {\n\n\t// Bail out if not string\n\tif (!(typeof encoded === \"string\" || encoded instanceof String)) {\n\t\treturn false;\n\t}\n\n\t// Go on validate\n\ttry {\n\t\treturn urlMode ? base64UrlPattern.test(encoded) : base64Pattern.test(encoded);\n\t} catch (_e) {\n\t\treturn false;\n\t}\n};\n\nbase64.base64 = base64;\nexport default base64;\nexport { base64 };", "/**\n * A runtime-agnostic collection of methods for working with CBOR encoding\n * @module\n */\nimport * as tinyCbor from '@levischuck/tiny-cbor';\n/**\n * Whatever CBOR encoder is used should keep CBOR data the same length when data is re-encoded\n *\n * MOST CRITICALLY, this means the following needs to be true of whatever CBOR library we use:\n * - CBOR Map type values MUST decode to JavaScript Maps\n * - CBOR tag 64 (uint8 Typed Array) MUST NOT be used when encoding Uint8Arrays back to CBOR\n *\n * So long as these requirements are maintained, then CBOR sequences can be encoded and decoded\n * freely while maintaining their lengths for the most accurate pointer movement across them.\n */\n/**\n * Decode and return the first item in a sequence of CBOR-encoded values\n *\n * @param input The CBOR data to decode\n * @param asObject (optional) Whether to convert any CBOR Maps into JavaScript Objects. Defaults to\n * `false`\n */\nexport function decodeFirst(input) {\n    // Make a copy so we don't mutate the original\n    const _input = new Uint8Array(input);\n    const decoded = tinyCbor.decodePartialCBOR(_input, 0);\n    const [first] = decoded;\n    return first;\n}\n/**\n * Encode data to CBOR\n */\nexport function encode(input) {\n    return tinyCbor.encodeCBOR(input);\n}\n", "export { CBORTag, decodeCBOR, decodePartialCBOR, encodeCBOR, } from \"./cbor/cbor.js\";\n", "import { decodeLength, encodeLength, MAJOR_TYPE_ARRAY, MAJOR_TYPE_BYTE_STRING, MAJOR_TYPE_MAP, MAJOR_TYPE_NEGATIVE_INTEGER, MAJOR_TYPE_SIMPLE_OR_FLOAT, MAJOR_TYPE_TAG, MAJOR_TYPE_TEXT_STRING, MAJOR_TYPE_UNSIGNED_INTEGER, } from \"./cbor_internal.js\";\n/**\n * A value which is wrapped with a CBOR Tag.\n * Several tags are registered with defined meanings like 0 for a date string.\n * These meanings are **not interpreted** when decoded or encoded.\n *\n * This class is an immutable record.\n * If the tag number or value needs to change, then construct a new tag\n */\nexport class CBORTag {\n    /**\n     * Wrap a value with a tag number.\n     * When encoded, this tag will be attached to the value.\n     *\n     * @param tag Tag number\n     * @param value Wrapped value\n     */\n    constructor(tag, value) {\n        Object.defineProperty(this, \"tagId\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"tagValue\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.tagId = tag;\n        this.tagValue = value;\n    }\n    /**\n     * Read the tag number\n     */\n    get tag() {\n        return this.tagId;\n    }\n    /**\n     * Read the value\n     */\n    get value() {\n        return this.tagValue;\n    }\n}\nfunction decodeUnsignedInteger(data, argument, index) {\n    return decodeLength(data, argument, index);\n}\nfunction decodeNegativeInteger(data, argument, index) {\n    const [value, length] = decodeUnsignedInteger(data, argument, index);\n    return [-value - 1, length];\n}\nfunction decodeByteString(data, argument, index) {\n    const [lengthValue, lengthConsumed] = decodeLength(data, argument, index);\n    const dataStartIndex = index + lengthConsumed;\n    return [\n        new Uint8Array(data.buffer.slice(dataStartIndex, dataStartIndex + lengthValue)),\n        lengthConsumed + lengthValue,\n    ];\n}\nconst TEXT_DECODER = new TextDecoder();\nfunction decodeString(data, argument, index) {\n    const [value, length] = decodeByteString(data, argument, index);\n    return [TEXT_DECODER.decode(value), length];\n}\nfunction decodeArray(data, argument, index) {\n    if (argument === 0) {\n        return [[], 1];\n    }\n    const [length, lengthConsumed] = decodeLength(data, argument, index);\n    let consumedLength = lengthConsumed;\n    const value = [];\n    for (let i = 0; i < length; i++) {\n        const remainingDataLength = data.byteLength - index - consumedLength;\n        if (remainingDataLength <= 0) {\n            throw new Error(\"array is not supported or well formed\");\n        }\n        const [decodedValue, consumed] = decodeNext(data, index + consumedLength);\n        value.push(decodedValue);\n        consumedLength += consumed;\n    }\n    return [value, consumedLength];\n}\nconst MAP_ERROR = \"Map is not supported or well formed\";\nfunction decodeMap(data, argument, index) {\n    if (argument === 0) {\n        return [new Map(), 1];\n    }\n    const [length, lengthConsumed] = decodeLength(data, argument, index);\n    let consumedLength = lengthConsumed;\n    const result = new Map();\n    for (let i = 0; i < length; i++) {\n        let remainingDataLength = data.byteLength - index - consumedLength;\n        if (remainingDataLength <= 0) {\n            throw new Error(MAP_ERROR);\n        }\n        // Load key\n        const [key, keyConsumed] = decodeNext(data, index + consumedLength);\n        consumedLength += keyConsumed;\n        remainingDataLength -= keyConsumed;\n        // Check that there's enough to have a value\n        if (remainingDataLength <= 0) {\n            throw new Error(MAP_ERROR);\n        }\n        // Technically CBOR maps can have any type as the key, and so can JS Maps\n        // However, JS Maps can only reference such keys as references which would\n        // require key iteration and pattern matching.\n        // For simplicity, since such keys are not in use with WebAuthn, this\n        // capability is not implemented and the types are restricted to strings\n        // and numbers.\n        if (typeof key !== \"string\" && typeof key !== \"number\") {\n            throw new Error(MAP_ERROR);\n        }\n        // CBOR Maps are not well formed if there are duplicate keys\n        if (result.has(key)) {\n            throw new Error(MAP_ERROR);\n        }\n        // Load value\n        const [value, valueConsumed] = decodeNext(data, index + consumedLength);\n        consumedLength += valueConsumed;\n        result.set(key, value);\n    }\n    return [result, consumedLength];\n}\nfunction decodeFloat16(data, index) {\n    if (index + 3 > data.byteLength) {\n        throw new Error(\"CBOR stream ended before end of Float 16\");\n    }\n    // Skip the first byte\n    const result = data.getUint16(index + 1, false);\n    // A minimal selection of supported values\n    if (result == 0x7c00) {\n        return [Infinity, 3];\n    }\n    else if (result == 0x7e00) {\n        return [NaN, 3];\n    }\n    else if (result == 0xfc00) {\n        return [-Infinity, 3];\n    }\n    throw new Error(\"Float16 data is unsupported\");\n}\nfunction decodeFloat32(data, index) {\n    if (index + 5 > data.byteLength) {\n        throw new Error(\"CBOR stream ended before end of Float 32\");\n    }\n    // Skip the first byte\n    const result = data.getFloat32(index + 1, false);\n    // First byte + 4 byte float\n    return [result, 5];\n}\nfunction decodeFloat64(data, index) {\n    if (index + 9 > data.byteLength) {\n        throw new Error(\"CBOR stream ended before end of Float 64\");\n    }\n    // Skip the first byte\n    const result = data.getFloat64(index + 1, false);\n    // First byte + 8 byte float\n    return [result, 9];\n}\nfunction decodeTag(data, argument, index) {\n    const [tag, tagBytes] = decodeLength(data, argument, index);\n    const [value, valueBytes] = decodeNext(data, index + tagBytes);\n    return [new CBORTag(tag, value), tagBytes + valueBytes];\n}\nfunction decodeNext(data, index) {\n    if (index >= data.byteLength) {\n        throw new Error(\"CBOR stream ended before tag value\");\n    }\n    const byte = data.getUint8(index);\n    const majorType = byte >> 5;\n    const argument = byte & 0x1f;\n    switch (majorType) {\n        case MAJOR_TYPE_UNSIGNED_INTEGER: {\n            return decodeUnsignedInteger(data, argument, index);\n        }\n        case MAJOR_TYPE_NEGATIVE_INTEGER: {\n            return decodeNegativeInteger(data, argument, index);\n        }\n        case MAJOR_TYPE_BYTE_STRING: {\n            return decodeByteString(data, argument, index);\n        }\n        case MAJOR_TYPE_TEXT_STRING: {\n            return decodeString(data, argument, index);\n        }\n        case MAJOR_TYPE_ARRAY: {\n            return decodeArray(data, argument, index);\n        }\n        case MAJOR_TYPE_MAP: {\n            return decodeMap(data, argument, index);\n        }\n        case MAJOR_TYPE_TAG: {\n            return decodeTag(data, argument, index);\n        }\n        case MAJOR_TYPE_SIMPLE_OR_FLOAT: {\n            switch (argument) {\n                case 20:\n                    return [false, 1];\n                case 21:\n                    return [true, 1];\n                case 22:\n                    return [null, 1];\n                case 23:\n                    return [undefined, 1];\n                // 24: Simple value (value 32..255 in following byte)\n                case 25: // IEEE 754 Half-Precision Float (16 bits follow)\n                    return decodeFloat16(data, index);\n                case 26: // IEEE 754 Single-Precision Float (32 bits follow)\n                    return decodeFloat32(data, index);\n                case 27: // IEEE 754 Double-Precision Float (64 bits follow)\n                    return decodeFloat64(data, index);\n                // 28-30: Reserved, not well-formed in the present document\n                // 31: \"break\" stop code for indefinite-length items\n            }\n        }\n    }\n    throw new Error(`Unsupported or not well formed at ${index}`);\n}\nfunction encodeSimple(data) {\n    if (data === true) {\n        return 0xf5;\n    }\n    else if (data === false) {\n        return 0xf4;\n    }\n    else if (data === null) {\n        return 0xf6;\n    }\n    // Else undefined\n    return 0xf7;\n}\nfunction encodeFloat(data) {\n    if (Math.fround(data) == data || !Number.isFinite(data) || Number.isNaN(data)) {\n        // Float32\n        const output = new Uint8Array(5);\n        output[0] = 0xfa;\n        const view = new DataView(output.buffer);\n        view.setFloat32(1, data, false);\n        return output;\n    }\n    else {\n        // Float64\n        const output = new Uint8Array(9);\n        output[0] = 0xfb;\n        const view = new DataView(output.buffer);\n        view.setFloat64(1, data, false);\n        return output;\n    }\n}\nfunction encodeNumber(data) {\n    if (typeof data == \"number\") {\n        if (Number.isSafeInteger(data)) {\n            // Encode integer\n            if (data < 0) {\n                return encodeLength(MAJOR_TYPE_NEGATIVE_INTEGER, Math.abs(data));\n            }\n            else {\n                return encodeLength(MAJOR_TYPE_UNSIGNED_INTEGER, data);\n            }\n        }\n        return [encodeFloat(data)];\n    }\n    else {\n        if (data < 0n) {\n            return encodeLength(MAJOR_TYPE_NEGATIVE_INTEGER, data * -1n);\n        }\n        else {\n            return encodeLength(MAJOR_TYPE_UNSIGNED_INTEGER, data);\n        }\n    }\n}\nconst ENCODER = new TextEncoder();\nfunction encodeString(data, output) {\n    output.push(...encodeLength(MAJOR_TYPE_TEXT_STRING, data.length));\n    output.push(ENCODER.encode(data));\n}\nfunction encodeBytes(data, output) {\n    output.push(...encodeLength(MAJOR_TYPE_BYTE_STRING, data.length));\n    output.push(data);\n}\nfunction encodeArray(data, output) {\n    output.push(...encodeLength(MAJOR_TYPE_ARRAY, data.length));\n    for (const element of data) {\n        encodePartialCBOR(element, output);\n    }\n}\nfunction encodeMap(data, output) {\n    output.push(new Uint8Array(encodeLength(MAJOR_TYPE_MAP, data.size)));\n    for (const [key, value] of data.entries()) {\n        encodePartialCBOR(key, output);\n        encodePartialCBOR(value, output);\n    }\n}\nfunction encodeTag(tag, output) {\n    output.push(...encodeLength(MAJOR_TYPE_TAG, tag.tag));\n    encodePartialCBOR(tag.value, output);\n}\nfunction encodePartialCBOR(data, output) {\n    if (typeof data == \"boolean\" || data === null || data == undefined) {\n        output.push(encodeSimple(data));\n        return;\n    }\n    if (typeof data == \"number\" || typeof data == \"bigint\") {\n        output.push(...encodeNumber(data));\n        return;\n    }\n    if (typeof data == \"string\") {\n        encodeString(data, output);\n        return;\n    }\n    if (data instanceof Uint8Array) {\n        encodeBytes(data, output);\n        return;\n    }\n    if (Array.isArray(data)) {\n        encodeArray(data, output);\n        return;\n    }\n    if (data instanceof Map) {\n        encodeMap(data, output);\n        return;\n    }\n    if (data instanceof CBORTag) {\n        encodeTag(data, output);\n        return;\n    }\n    throw new Error(\"Not implemented\");\n}\n/**\n * Like {decodeCBOR}, but the length of the data is unknown and there is likely\n * more -- possibly unrelated non-CBOR -- data afterwards.\n *\n * Examples:\n *\n * ```ts\n * import {decodePartialCBOR} from './cbor.ts'\n * decodePartialCBOR(new Uint8Array([1, 2, 245, 3, 4]), 2)\n * // returns [true, 1]\n * // It did not decode the leading [1, 2] or trailing [3, 4]\n * ```\n *\n * @param data a data stream to read data from\n * @param index where to start reading in the data stream\n * @returns a tuple of the value followed by bytes read.\n * @throws {Error}\n *   When the data stream ends early or the CBOR data is not well formed\n */\nexport function decodePartialCBOR(data, index) {\n    if (data.byteLength === 0 || data.byteLength <= index || index < 0) {\n        throw new Error(\"No data\");\n    }\n    if (data instanceof Uint8Array) {\n        return decodeNext(new DataView(data.buffer), index);\n    }\n    else if (data instanceof ArrayBuffer) {\n        return decodeNext(new DataView(data), index);\n    }\n    // otherwise, it is a data view\n    return decodeNext(data, index);\n}\n/**\n * Decode CBOR data from a binary stream\n *\n * The entire data stream from [0, length) will be consumed.\n * If you require a partial decoding, see {decodePartialCBOR}.\n *\n * Examples:\n *\n * ```ts\n * import {decodeCBOR, CBORTag, CBORType} from './cbor.ts'\n * decodeCBOR(new Uint8Array([162, 99, 107, 101, 121, 101, 118, 97, 108, 117, 101, 1, 109, 97, 110, 111, 116, 104, 101, 114, 32, 118, 97, 108, 117, 101]));\n * // returns new Map<string | number, CBORType>([\n * //   [\"key\", \"value\"],\n * //   [1, \"another value\"]\n * // ]);\n *\n * const taggedItem = new Uint8Array([217, 4, 210, 101, 104, 101, 108, 108, 111]);\n * decodeCBOR(new DataView(taggedItem.buffer))\n * // returns new CBORTag(1234, \"hello\")\n * ```\n *\n * @param data a data stream, multiple types are supported\n * @returns\n */\nexport function decodeCBOR(data) {\n    const [value, length] = decodePartialCBOR(data, 0);\n    if (length !== data.byteLength) {\n        throw new Error(`Data was decoded, but the whole stream was not processed ${length} != ${data.byteLength}`);\n    }\n    return value;\n}\n/**\n * Encode a supported structure to a CBOR byte string.\n *\n * Example:\n *\n * ```ts\n * import {encodeCBOR, CBORType, CBORTag} from './cbor.ts'\n * encodeCBOR(new Map<string | number, CBORType>([\n *   [\"key\", \"value\"],\n *   [1, \"another value\"]\n * ]));\n * // returns new Uint8Array([162, 99, 107, 101, 121, 101, 118, 97, 108, 117, 101, 1, 109, 97, 110, 111, 116, 104, 101, 114, 32 118, 97, 108, 117, 101])\n *\n * encodeCBOR(new CBORTag(1234, \"hello\"))\n * // returns new UInt8Array([217, 4, 210, 101, 104, 101, 108, 108, 111])\n * ```\n *\n * @param data Data to encode\n * @returns A byte string as a Uint8Array\n * @throws Error\n *   if unsupported data is found during encoding\n */\nexport function encodeCBOR(data) {\n    const results = [];\n    encodePartialCBOR(data, results);\n    let length = 0;\n    for (const result of results) {\n        if (typeof result == \"number\") {\n            length += 1;\n        }\n        else {\n            length += result.length;\n        }\n    }\n    const output = new Uint8Array(length);\n    let index = 0;\n    for (const result of results) {\n        if (typeof result == \"number\") {\n            output[index] = result;\n            index += 1;\n        }\n        else {\n            output.set(result, index);\n            index += result.length;\n        }\n    }\n    return output;\n}\n", "export function decodeLength(data, argument, index) {\n    if (argument < 24) {\n        return [argument, 1];\n    }\n    const remainingDataLength = data.byteLength - index - 1;\n    const view = new DataView(data.buffer, index + 1);\n    let output;\n    let bytes = 0;\n    switch (argument) {\n        case 24: {\n            if (remainingDataLength > 0) {\n                output = view.getUint8(0);\n                bytes = 2;\n            }\n            break;\n        }\n        case 25: {\n            if (remainingDataLength > 1) {\n                output = view.getUint16(0, false);\n                bytes = 3;\n            }\n            break;\n        }\n        case 26: {\n            if (remainingDataLength > 3) {\n                output = view.getUint32(0, false);\n                bytes = 5;\n            }\n            break;\n        }\n        case 27: {\n            if (remainingDataLength > 7) {\n                const bigOutput = view.getBigUint64(0, false);\n                // Bound it to [24, MAX_SAFE_INTEGER], where it is safe\n                // to encode as a javascript number\n                if (bigOutput >= 24n && bigOutput <= Number.MAX_SAFE_INTEGER) {\n                    return [Number(bigOutput), 9];\n                }\n            }\n            break;\n        }\n    }\n    if (output && output >= 24) {\n        return [output, bytes];\n    }\n    throw new Error(\"Length not supported or not well formed\");\n}\nexport const MAJOR_TYPE_UNSIGNED_INTEGER = 0;\nexport const MAJOR_TYPE_NEGATIVE_INTEGER = 1;\nexport const MAJOR_TYPE_BYTE_STRING = 2;\nexport const MAJOR_TYPE_TEXT_STRING = 3;\nexport const MAJOR_TYPE_ARRAY = 4;\nexport const MAJOR_TYPE_MAP = 5;\nexport const MAJOR_TYPE_TAG = 6;\nexport const MAJOR_TYPE_SIMPLE_OR_FLOAT = 7;\nexport function encodeLength(major, argument) {\n    const majorEncoded = major << 5;\n    if (argument < 0) {\n        throw new Error(\"CBOR Data Item argument must not be negative\");\n    }\n    // Convert to bigint first.\n    // Encode integers around and above 32 bits in big endian / network byte order\n    // is unreliable in javascript.\n    // https://tc39.es/ecma262/#sec-bitwise-shift-operators\n    // Bit shifting operations result in 32 bit signed numbers\n    let bigintArgument;\n    if (typeof argument == \"number\") {\n        if (!Number.isInteger(argument)) {\n            throw new Error(\"CBOR Data Item argument must be an integer\");\n        }\n        bigintArgument = BigInt(argument);\n    }\n    else {\n        bigintArgument = argument;\n    }\n    // Negative 0 is not a thing\n    if (major == MAJOR_TYPE_NEGATIVE_INTEGER) {\n        if (bigintArgument == 0n) {\n            throw new Error(\"CBOR Data Item argument cannot be zero when negative\");\n        }\n        bigintArgument = bigintArgument - 1n;\n    }\n    if (bigintArgument > 18446744073709551615n) {\n        throw new Error(\"CBOR number out of range\");\n    }\n    // Encode into 64 bits and extract the tail\n    const buffer = new Uint8Array(8);\n    const view = new DataView(buffer.buffer);\n    view.setBigUint64(0, bigintArgument, false);\n    if (bigintArgument <= 23) {\n        return [majorEncoded | buffer[7]];\n    }\n    else if (bigintArgument <= 255) {\n        return [majorEncoded | 24, buffer[7]];\n    }\n    else if (bigintArgument <= 65535) {\n        return [majorEncoded | 25, ...buffer.slice(6)];\n    }\n    else if (bigintArgument <= 4294967295) {\n        return [\n            majorEncoded | 26,\n            ...buffer.slice(4),\n        ];\n    }\n    else {\n        return [\n            majorEncoded | 27,\n            ...buffer,\n        ];\n    }\n}\n", "/**\n * A runtime-agnostic collection of methods for working with the WebCrypto API\n * @module\n */\nexport { digest } from './digest.js';\nexport { getRandomValues } from './getRandomValues.js';\nexport { verify } from './verify.js';\n", "import { mapCoseAlgToWebCryptoAlg } from './mapCoseAlgToWebCryptoAlg.js';\nimport { getWebCrypto } from './getWebCrypto.js';\n/**\n * Generate a digest of the provided data.\n *\n * @param data The data to generate a digest of\n * @param algorithm A COSE algorithm ID that maps to a desired SHA algorithm\n */\nexport async function digest(data, algorithm) {\n    const WebCrypto = await getWebCrypto();\n    const subtleAlgorithm = mapCoseAlgToWebCryptoAlg(algorithm);\n    const hashed = await WebCrypto.subtle.digest(subtleAlgorithm, data);\n    return new Uint8Array(hashed);\n}\n", "import { COSEALG } from '../../cose.js';\n/**\n * Convert a COSE alg ID into a corresponding string value that WebCrypto APIs expect\n */\nexport function mapCoseAlgToWebCryptoAlg(alg) {\n    if ([COSEALG.RS1].indexOf(alg) >= 0) {\n        return 'SHA-1';\n    }\n    else if ([COSEALG.ES256, COSEALG.PS256, COSEALG.RS256].indexOf(alg) >= 0) {\n        return 'SHA-256';\n    }\n    else if ([COSEALG.ES384, COSEALG.PS384, COSEALG.RS384].indexOf(alg) >= 0) {\n        return 'SHA-384';\n    }\n    else if ([COSEALG.ES512, COSEALG.PS512, COSEALG.RS512, COSEALG.EdDSA].indexOf(alg) >=\n        0) {\n        return 'SHA-512';\n    }\n    throw new Error(`Could not map COSE alg value of ${alg} to a WebCrypto alg`);\n}\n", "/**\n * Fundamental values that are needed to discern the more specific COSE public key types below.\n *\n * The use of `Maps` here is due to CBOR encoding being used with public keys, and the CBOR \"Map\"\n * type is being decoded to JavaScript's `Map` type instead of, say, a basic Object as us JS\n * developers might prefer.\n *\n * These types are an unorthodox way of saying \"these Maps should involve these discrete lists of\n * keys\", but it works.\n * @module\n */\n/**\n * A type guard for determining if a COSE public key is an OKP key pair\n */\nexport function isCOSEPublicKeyOKP(cosePublicKey) {\n    const kty = cosePublicKey.get(COSEKEYS.kty);\n    return isCOSEKty(kty) && kty === COSEKTY.OKP;\n}\n/**\n * A type guard for determining if a COSE public key is an EC2 key pair\n */\nexport function isCOSEPublicKeyEC2(cosePublicKey) {\n    const kty = cosePublicKey.get(COSEKEYS.kty);\n    return isCOSEKty(kty) && kty === COSEKTY.EC2;\n}\n/**\n * A type guard for determining if a COSE public key is an RSA key pair\n */\nexport function isCOSEPublicKeyRSA(cosePublicKey) {\n    const kty = cosePublicKey.get(COSEKEYS.kty);\n    return isCOSEKty(kty) && kty === COSEKTY.RSA;\n}\n/**\n * COSE Keys\n *\n * https://www.iana.org/assignments/cose/cose.xhtml#key-common-parameters\n * https://www.iana.org/assignments/cose/cose.xhtml#key-type-parameters\n */\nexport var COSEKEYS;\n(function (COSEKEYS) {\n    COSEKEYS[COSEKEYS[\"kty\"] = 1] = \"kty\";\n    COSEKEYS[COSEKEYS[\"alg\"] = 3] = \"alg\";\n    COSEKEYS[COSEKEYS[\"crv\"] = -1] = \"crv\";\n    COSEKEYS[COSEKEYS[\"x\"] = -2] = \"x\";\n    COSEKEYS[COSEKEYS[\"y\"] = -3] = \"y\";\n    COSEKEYS[COSEKEYS[\"n\"] = -1] = \"n\";\n    COSEKEYS[COSEKEYS[\"e\"] = -2] = \"e\";\n})(COSEKEYS || (COSEKEYS = {}));\n/**\n * COSE Key Types\n *\n * https://www.iana.org/assignments/cose/cose.xhtml#key-type\n */\nexport var COSEKTY;\n(function (COSEKTY) {\n    COSEKTY[COSEKTY[\"OKP\"] = 1] = \"OKP\";\n    COSEKTY[COSEKTY[\"EC2\"] = 2] = \"EC2\";\n    COSEKTY[COSEKTY[\"RSA\"] = 3] = \"RSA\";\n})(COSEKTY || (COSEKTY = {}));\nexport function isCOSEKty(kty) {\n    return Object.values(COSEKTY).indexOf(kty) >= 0;\n}\n/**\n * COSE Curves\n *\n * https://www.iana.org/assignments/cose/cose.xhtml#elliptic-curves\n */\nexport var COSECRV;\n(function (COSECRV) {\n    COSECRV[COSECRV[\"P256\"] = 1] = \"P256\";\n    COSECRV[COSECRV[\"P384\"] = 2] = \"P384\";\n    COSECRV[COSECRV[\"P521\"] = 3] = \"P521\";\n    COSECRV[COSECRV[\"ED25519\"] = 6] = \"ED25519\";\n    COSECRV[COSECRV[\"SECP256K1\"] = 8] = \"SECP256K1\";\n})(COSECRV || (COSECRV = {}));\nexport function isCOSECrv(crv) {\n    return Object.values(COSECRV).indexOf(crv) >= 0;\n}\n/**\n * COSE Algorithms\n *\n * https://www.iana.org/assignments/cose/cose.xhtml#algorithms\n */\nexport var COSEALG;\n(function (COSEALG) {\n    COSEALG[COSEALG[\"ES256\"] = -7] = \"ES256\";\n    COSEALG[COSEALG[\"EdDSA\"] = -8] = \"EdDSA\";\n    COSEALG[COSEALG[\"ES384\"] = -35] = \"ES384\";\n    COSEALG[COSEALG[\"ES512\"] = -36] = \"ES512\";\n    COSEALG[COSEALG[\"PS256\"] = -37] = \"PS256\";\n    COSEALG[COSEALG[\"PS384\"] = -38] = \"PS384\";\n    COSEALG[COSEALG[\"PS512\"] = -39] = \"PS512\";\n    COSEALG[COSEALG[\"ES256K\"] = -47] = \"ES256K\";\n    COSEALG[COSEALG[\"RS256\"] = -257] = \"RS256\";\n    COSEALG[COSEALG[\"RS384\"] = -258] = \"RS384\";\n    COSEALG[COSEALG[\"RS512\"] = -259] = \"RS512\";\n    COSEALG[COSEALG[\"RS1\"] = -65535] = \"RS1\";\n})(COSEALG || (COSEALG = {}));\nexport function isCOSEAlg(alg) {\n    return Object.values(COSEALG).indexOf(alg) >= 0;\n}\n", "let webCrypto = undefined;\n/**\n * Try to get an instance of the Crypto API from the current runtime. Should support Node,\n * as well as others, like Deno, that implement Web APIs.\n */\nexport function getWebCrypto() {\n    /**\n     * Hello there! If you came here wondering why this method is asynchronous when use of\n     * `globalThis.crypto` is not, it's to minimize a bunch of refactor related to making this\n     * synchronous. For example, `generateRegistrationOptions()` and `generateAuthenticationOptions()`\n     * become synchronous if we make this synchronous (since nothing else in that method is async)\n     * which represents a breaking API change in this library's core API.\n     *\n     * TODO: If it's after February 2025 when you read this then consider whether it still makes sense\n     * to keep this method asynchronous.\n     */\n    const toResolve = new Promise((resolve, reject) => {\n        if (webCrypto) {\n            return resolve(webCrypto);\n        }\n        /**\n         * Naively attempt to access Crypto as a global object, which popular ESM-centric run-times\n         * support (and Node v20+)\n         */\n        const _globalThisCrypto = _getWebCryptoInternals.stubThisGlobalThisCrypto();\n        if (_globalThisCrypto) {\n            webCrypto = _globalThisCrypto;\n            return resolve(webCrypto);\n        }\n        // We tried to access it both in Node and globally, so bail out\n        return reject(new MissingWebCrypto());\n    });\n    return toResolve;\n}\nexport class MissingWebCrypto extends Error {\n    constructor() {\n        const message = 'An instance of the Crypto API could not be located';\n        super(message);\n        this.name = 'MissingWebCrypto';\n    }\n}\n// Make it possible to stub return values during testing\nexport const _getWebCryptoInternals = {\n    stubThisGlobalThisCrypto: () => globalThis.crypto,\n    // Make it possible to reset the `webCrypto` at the top of the file\n    setCachedCrypto: (newCrypto) => {\n        webCrypto = newCrypto;\n    },\n};\n", "import { getWebCrypto } from './getWebCrypto.js';\n/**\n * Fill up the provided bytes array with random bytes equal to its length.\n *\n * @returns the same bytes array passed into the method\n */\nexport async function getRandomValues(array) {\n    const WebCrypto = await getWebCrypto();\n    WebCrypto.getRandomValues(array);\n    return array;\n}\n", "import { COSEKEYS, isCOSECrv, isCOSEPublicKeyEC2, isCOSEPublicKeyOKP, isCOSEPublicKeyRSA, } from '../../cose.js';\nimport { verifyEC2 } from './verifyEC2.js';\nimport { verifyRSA } from './verifyRSA.js';\nimport { verifyOKP } from './verifyOKP.js';\nimport { unwrapEC2Signature } from './unwrapEC2Signature.js';\n/**\n * Verify signatures with their public key. Supports EC2 and RSA public keys.\n */\nexport function verify(opts) {\n    const { cosePublicKey, signature, data, shaHashOverride } = opts;\n    if (isCOSEPublicKeyEC2(cosePublicKey)) {\n        const crv = cosePublicKey.get(COSEKEYS.crv);\n        if (!isCOSECrv(crv)) {\n            throw new Error(`unknown COSE curve ${crv}`);\n        }\n        const unwrappedSignature = unwrapEC2Signature(signature, crv);\n        return verifyEC2({\n            cosePublicKey,\n            signature: unwrappedSignature,\n            data,\n            shaHashOverride,\n        });\n    }\n    else if (isCOSEPublicKeyRSA(cosePublicKey)) {\n        return verifyRSA({ cosePublicKey, signature, data, shaHashOverride });\n    }\n    else if (isCOSEPublicKeyOKP(cosePublicKey)) {\n        return verifyOKP({ cosePublicKey, signature, data });\n    }\n    const kty = cosePublicKey.get(COSEKEYS.kty);\n    throw new Error(`Signature verification with public key of kty ${kty} is not supported by this method`);\n}\n", "import { COSECRV, COSEKEYS } from '../../cose.js';\nimport { mapCoseAlgToWebCryptoAlg } from './mapCoseAlgToWebCryptoAlg.js';\nimport { importKey } from './importKey.js';\nimport { isoBase64URL } from '../index.js';\nimport { getWebCrypto } from './getWebCrypto.js';\n/**\n * Verify a signature using an EC2 public key\n */\nexport async function verifyEC2(opts) {\n    const { cosePublicKey, signature, data, shaHashOverride } = opts;\n    const WebCrypto = await getWebCrypto();\n    // Import the public key\n    const alg = cosePublicKey.get(COSEKEYS.alg);\n    const crv = cosePublicKey.get(COSEKEYS.crv);\n    const x = cosePublicKey.get(COSEKEYS.x);\n    const y = cosePublicKey.get(COSEKEYS.y);\n    if (!alg) {\n        throw new Error('Public key was missing alg (EC2)');\n    }\n    if (!crv) {\n        throw new Error('Public key was missing crv (EC2)');\n    }\n    if (!x) {\n        throw new Error('Public key was missing x (EC2)');\n    }\n    if (!y) {\n        throw new Error('Public key was missing y (EC2)');\n    }\n    let _crv;\n    if (crv === COSECRV.P256) {\n        _crv = 'P-256';\n    }\n    else if (crv === COSECRV.P384) {\n        _crv = 'P-384';\n    }\n    else if (crv === COSECRV.P521) {\n        _crv = 'P-521';\n    }\n    else {\n        throw new Error(`Unexpected COSE crv value of ${crv} (EC2)`);\n    }\n    const keyData = {\n        kty: 'EC',\n        crv: _crv,\n        x: isoBase64URL.fromBuffer(x),\n        y: isoBase64URL.fromBuffer(y),\n        ext: false,\n    };\n    const keyAlgorithm = {\n        /**\n         * Note to future self: you can't use `mapCoseAlgToWebCryptoKeyAlgName()` here because some\n         * leaf certs from actual devices specified an RSA SHA value for `alg` (e.g. `-257`) which\n         * would then map here to `'RSASSA-PKCS1-v1_5'`. We always want `'ECDSA'` here so we'll\n         * hard-code this.\n         */\n        name: 'ECDSA',\n        namedCurve: _crv,\n    };\n    const key = await importKey({\n        keyData,\n        algorithm: keyAlgorithm,\n    });\n    // Determine which SHA algorithm to use for signature verification\n    let subtleAlg = mapCoseAlgToWebCryptoAlg(alg);\n    if (shaHashOverride) {\n        subtleAlg = mapCoseAlgToWebCryptoAlg(shaHashOverride);\n    }\n    const verifyAlgorithm = {\n        name: 'ECDSA',\n        hash: { name: subtleAlg },\n    };\n    return WebCrypto.subtle.verify(verifyAlgorithm, key, signature, data);\n}\n", "import { getWebCrypto } from './getWebCrypto.js';\nexport async function importKey(opts) {\n    const WebCrypto = await getWebCrypto();\n    const { keyData, algorithm } = opts;\n    return WebCrypto.subtle.importKey('jwk', keyData, algorithm, false, [\n        'verify',\n    ]);\n}\n", "import { COSEKEYS, isCOSEAlg } from '../../cose.js';\nimport { mapCoseAlgToWebCryptoAlg } from './mapCoseAlgToWebCryptoAlg.js';\nimport { importKey } from './importKey.js';\nimport { isoBase64URL } from '../index.js';\nimport { mapCoseAlgToWebCryptoKeyAlgName } from './mapCoseAlgToWebCryptoKeyAlgName.js';\nimport { getWebCrypto } from './getWebCrypto.js';\n/**\n * Verify a signature using an RSA public key\n */\nexport async function verifyRSA(opts) {\n    const { cosePublicKey, signature, data, shaHashOverride } = opts;\n    const WebCrypto = await getWebCrypto();\n    const alg = cosePublicKey.get(COSEKEYS.alg);\n    const n = cosePublicKey.get(COSEKEYS.n);\n    const e = cosePublicKey.get(COSEKEYS.e);\n    if (!alg) {\n        throw new Error('Public key was missing alg (RSA)');\n    }\n    if (!isCOSEAlg(alg)) {\n        throw new Error(`Public key had invalid alg ${alg} (RSA)`);\n    }\n    if (!n) {\n        throw new Error('Public key was missing n (RSA)');\n    }\n    if (!e) {\n        throw new Error('Public key was missing e (RSA)');\n    }\n    const keyData = {\n        kty: 'RSA',\n        alg: '',\n        n: isoBase64URL.fromBuffer(n),\n        e: isoBase64URL.fromBuffer(e),\n        ext: false,\n    };\n    const keyAlgorithm = {\n        name: mapCoseAlgToWebCryptoKeyAlgName(alg),\n        hash: { name: mapCoseAlgToWebCryptoAlg(alg) },\n    };\n    const verifyAlgorithm = {\n        name: mapCoseAlgToWebCryptoKeyAlgName(alg),\n    };\n    if (shaHashOverride) {\n        keyAlgorithm.hash.name = mapCoseAlgToWebCryptoAlg(shaHashOverride);\n    }\n    if (keyAlgorithm.name === 'RSASSA-PKCS1-v1_5') {\n        if (keyAlgorithm.hash.name === 'SHA-256') {\n            keyData.alg = 'RS256';\n        }\n        else if (keyAlgorithm.hash.name === 'SHA-384') {\n            keyData.alg = 'RS384';\n        }\n        else if (keyAlgorithm.hash.name === 'SHA-512') {\n            keyData.alg = 'RS512';\n        }\n        else if (keyAlgorithm.hash.name === 'SHA-1') {\n            keyData.alg = 'RS1';\n        }\n    }\n    else if (keyAlgorithm.name === 'RSA-PSS') {\n        /**\n         * salt length. The default value is 20 but the convention is to use hLen, the length of the\n         * output of the hash function in bytes. A salt length of zero is permitted and will result in\n         * a deterministic signature value. The actual salt length used can be determined from the\n         * signature value.\n         *\n         * From https://www.cryptosys.net/pki/manpki/pki_rsaschemes.html\n         */\n        let saltLength = 0;\n        if (keyAlgorithm.hash.name === 'SHA-256') {\n            keyData.alg = 'PS256';\n            saltLength = 32; // 256 bits => 32 bytes\n        }\n        else if (keyAlgorithm.hash.name === 'SHA-384') {\n            keyData.alg = 'PS384';\n            saltLength = 48; // 384 bits => 48 bytes\n        }\n        else if (keyAlgorithm.hash.name === 'SHA-512') {\n            keyData.alg = 'PS512';\n            saltLength = 64; // 512 bits => 64 bytes\n        }\n        verifyAlgorithm.saltLength = saltLength;\n    }\n    else {\n        throw new Error(`Unexpected RSA key algorithm ${alg} (${keyAlgorithm.name})`);\n    }\n    const key = await importKey({\n        keyData,\n        algorithm: keyAlgorithm,\n    });\n    return WebCrypto.subtle.verify(verifyAlgorithm, key, signature, data);\n}\n", "import { COSEALG } from '../../cose.js';\n/**\n * Convert a COSE alg ID into a corresponding key algorithm string value that WebCrypto APIs expect\n */\nexport function mapCoseAlgToWebCryptoKeyAlgName(alg) {\n    if ([COSEALG.EdDSA].indexOf(alg) >= 0) {\n        return 'Ed25519';\n    }\n    else if ([COSEALG.ES256, COSEALG.ES384, COSEALG.ES512, COSEALG.ES256K].indexOf(alg) >= 0) {\n        return 'ECDSA';\n    }\n    else if ([COSEALG.RS256, COSEALG.RS384, COSEALG.RS512, COSEALG.RS1].indexOf(alg) >= 0) {\n        return 'RSASSA-PKCS1-v1_5';\n    }\n    else if ([COSEALG.PS256, COSEALG.PS384, COSEALG.PS512].indexOf(alg) >= 0) {\n        return 'RSA-PSS';\n    }\n    throw new Error(`Could not map COSE alg value of ${alg} to a WebCrypto key alg name`);\n}\n", "import { COSECRV, COSEKEYS, isCOSEAlg } from '../../cose.js';\nimport { isoBase64URL } from '../../index.js';\nimport { importKey } from './importKey.js';\nimport { getWebCrypto } from './getWebCrypto.js';\nexport async function verifyOKP(opts) {\n    const { cosePublicKey, signature, data } = opts;\n    const WebCrypto = await getWebCrypto();\n    const alg = cosePublicKey.get(COSEKEYS.alg);\n    const crv = cosePublicKey.get(COSEKEYS.crv);\n    const x = cosePublicKey.get(COSEKEYS.x);\n    if (!alg) {\n        throw new Error('Public key was missing alg (OKP)');\n    }\n    if (!isCOSEAlg(alg)) {\n        throw new Error(`Public key had invalid alg ${alg} (OKP)`);\n    }\n    if (!crv) {\n        throw new Error('Public key was missing crv (OKP)');\n    }\n    if (!x) {\n        throw new Error('Public key was missing x (OKP)');\n    }\n    // Pulled key import steps from here:\n    // https://wicg.github.io/webcrypto-secure-curves/#ed25519-operations\n    let _crv;\n    if (crv === COSECRV.ED25519) {\n        _crv = 'Ed25519';\n    }\n    else {\n        throw new Error(`Unexpected COSE crv value of ${crv} (OKP)`);\n    }\n    const keyData = {\n        kty: 'OKP',\n        crv: _crv,\n        alg: 'EdDSA',\n        x: isoBase64URL.fromBuffer(x),\n        ext: false,\n    };\n    const keyAlgorithm = {\n        name: _crv,\n        namedCurve: _crv,\n    };\n    const key = await importKey({\n        keyData,\n        algorithm: keyAlgorithm,\n    });\n    const verifyAlgorithm = {\n        name: _crv,\n    };\n    return WebCrypto.subtle.verify(verifyAlgorithm, key, signature, data);\n}\n", "export * from './convertAAGUIDToString.js';\nexport * from './convertCertBufferToPEM.js';\nexport * from './convertCOSEtoPKCS.js';\nexport * from './decodeAttestationObject.js';\nexport * from './decodeClientDataJSON.js';\nexport * from './decodeCredentialPublicKey.js';\nexport * from './generateChallenge.js';\nexport * from './generateUserID.js';\nexport * from './getCertificateInfo.js';\nexport * from './isCertRevoked.js';\nexport * from './parseAuthenticatorData.js';\nexport * from './toHash.js';\nexport * from './validateCertificatePath.js';\nexport * from './verifySignature.js';\nexport * from './iso/index.js';\nexport * as cose from './cose.js';\n", "import { isoUint8Array } from './iso/index.js';\n/**\n * Convert the aaguid buffer in authData into a UUID string\n */\nexport function convertAAGUIDToString(aaguid) {\n    // Raw Hex: adce000235bcc60a648b0b25f1f05503\n    const hex = isoUint8Array.toHex(aaguid);\n    const segments = [\n        hex.slice(0, 8), // 8\n        hex.slice(8, 12), // 4\n        hex.slice(12, 16), // 4\n        hex.slice(16, 20), // 4\n        hex.slice(20, 32), // 8\n    ];\n    // Formatted: adce0002-35bc-c60a-648b-0b25f1f05503\n    return segments.join('-');\n}\n", "import { isoBase64URL } from './iso/index.js';\n/**\n * Convert buffer to an OpenSSL-compatible PEM text format.\n */\nexport function convertCertBufferToPEM(certBuffer) {\n    let b64cert;\n    /**\n     * Get certBuffer to a base64 representation\n     */\n    if (typeof certBuffer === 'string') {\n        if (isoBase64URL.isBase64URL(certBuffer)) {\n            b64cert = isoBase64URL.toBase64(certBuffer);\n        }\n        else if (isoBase64URL.isBase64(certBuffer)) {\n            b64cert = certBuffer;\n        }\n        else {\n            throw new Error('Certificate is not a valid base64 or base64url string');\n        }\n    }\n    else {\n        b64cert = isoBase64URL.fromBuffer(certBuffer, 'base64');\n    }\n    let PEMKey = '';\n    for (let i = 0; i < Math.ceil(b64cert.length / 64); i += 1) {\n        const start = 64 * i;\n        PEMKey += `${b64cert.substr(start, 64)}\\n`;\n    }\n    PEMKey = `-----BEGIN CERTIFICATE-----\\n${PEMKey}-----END CERTIFICATE-----\\n`;\n    return PEMKey;\n}\n", "import { isoCBOR, isoUint8Array } from './iso/index.js';\nimport { COSEKEYS } from './cose.js';\n/**\n * Takes COSE-encoded public key and converts it to PKCS key\n */\nexport function convertCOSEtoPKCS(cosePublicKey) {\n    // This is a little sloppy, I'm using COSEPublicKeyEC2 since it could have both x and y, but when\n    // there's no y it means it's probably better typed as COSEPublicKeyOKP. I'll leave this for now\n    // and revisit it later if it ever becomes an actual problem.\n    const struct = isoCBOR.decodeFirst(cosePublicKey);\n    const tag = Uint8Array.from([0x04]);\n    const x = struct.get(COSEKEYS.x);\n    const y = struct.get(COSEKEYS.y);\n    if (!x) {\n        throw new Error('COSE public key was missing x');\n    }\n    if (y) {\n        return isoUint8Array.concat([tag, x, y]);\n    }\n    return isoUint8Array.concat([tag, x]);\n}\n", "import { isoCBOR } from './iso/index.js';\n/**\n * Convert an AttestationObject buffer to a proper object\n *\n * @param base64AttestationObject Attestation Object buffer\n */\nexport function decodeAttestationObject(attestationObject) {\n    return _decodeAttestationObjectInternals.stubThis(isoCBOR.decodeFirst(attestationObject));\n}\n/**\n * Make it possible to stub the return value during testing\n * @ignore Don't include this in docs output\n */\nexport const _decodeAttestationObjectInternals = {\n    stubThis: (value) => value,\n};\n", "import { isoBase64URL } from './iso/index.js';\n/**\n * Decode an authenticator's base64url-encoded clientDataJSON to JSON\n */\nexport function decodeClientDataJSON(data) {\n    const toString = isoBase64URL.toUTF8String(data);\n    const clientData = JSON.parse(toString);\n    return _decodeClientDataJSONInternals.stubThis(clientData);\n}\n/**\n * Make it possible to stub the return value during testing\n * @ignore Don't include this in docs output\n */\nexport const _decodeClientDataJSONInternals = {\n    stubThis: (value) => value,\n};\n", "import { isoCBOR } from './iso/index.js';\nexport function decodeCredentialPublicKey(publicKey) {\n    return _decodeCredentialPublicKeyInternals.stubThis(isoCBOR.decodeFirst(publicKey));\n}\n/**\n * Make it possible to stub the return value during testing\n * @ignore Don't include this in docs output\n */\nexport const _decodeCredentialPublicKeyInternals = {\n    stubThis: (value) => value,\n};\n", "import { isoCrypto } from './iso/index.js';\n/**\n * Generate a suitably random value to be used as user ID\n */\nexport async function generateUserID() {\n    /**\n     * WebAuthn spec says user.id has a max length of 64 bytes. I prefer how 32 random bytes look\n     * after they're base64url-encoded so I'm choosing to go with that here.\n     */\n    const newUserID = new Uint8Array(32);\n    await isoCrypto.getRandomValues(newUserID);\n    return _generateUserIDInternals.stubThis(newUserID);\n}\n/**\n * Make it possible to stub the return value during testing\n * @ignore Don't include this in docs output\n */\nexport const _generateUserIDInternals = {\n    stubThis: (value) => value,\n};\n", "import { AsnParser } from '@peculiar/asn1-schema';\nimport { BasicConstraints, Certificate, id_ce_basicConstraints } from '@peculiar/asn1-x509';\nconst issuerSubjectIDKey = {\n    '2.5.4.6': 'C',\n    '2.5.4.10': 'O',\n    '2.5.4.11': 'OU',\n    '2.5.4.3': 'CN',\n};\n/**\n * Extract PEM certificate info\n *\n * @param pemCertificate Result from call to `convertASN1toPEM(x5c[0])`\n */\nexport function getCertificateInfo(leafCertBuffer) {\n    const x509 = AsnParser.parse(leafCertBuffer, Certificate);\n    const parsedCert = x509.tbsCertificate;\n    // Issuer\n    const issuer = { combined: '' };\n    parsedCert.issuer.forEach(([iss]) => {\n        const key = issuerSubjectIDKey[iss.type];\n        if (key) {\n            issuer[key] = iss.value.toString();\n        }\n    });\n    issuer.combined = issuerSubjectToString(issuer);\n    // Subject\n    const subject = { combined: '' };\n    parsedCert.subject.forEach(([iss]) => {\n        const key = issuerSubjectIDKey[iss.type];\n        if (key) {\n            subject[key] = iss.value.toString();\n        }\n    });\n    subject.combined = issuerSubjectToString(subject);\n    let basicConstraintsCA = false;\n    if (parsedCert.extensions) {\n        // console.log(parsedCert.extensions);\n        for (const ext of parsedCert.extensions) {\n            if (ext.extnID === id_ce_basicConstraints) {\n                const basicConstraints = AsnParser.parse(ext.extnValue, BasicConstraints);\n                basicConstraintsCA = basicConstraints.cA;\n            }\n        }\n    }\n    return {\n        issuer,\n        subject,\n        version: parsedCert.version,\n        basicConstraintsCA,\n        notBefore: parsedCert.validity.notBefore.getTime(),\n        notAfter: parsedCert.validity.notAfter.getTime(),\n        parsedCertificate: x509,\n    };\n}\n/**\n * Stringify the parts of Issuer or Subject info for easier comparison of subject issuers with\n * issuer subjects.\n *\n * The order might seem arbitrary, because it is. It should be enough that the two are stringified\n * in the same order.\n */\nfunction issuerSubjectToString(input) {\n    const parts = [];\n    if (input.C) {\n        parts.push(input.C);\n    }\n    if (input.O) {\n        parts.push(input.O);\n    }\n    if (input.OU) {\n        parts.push(input.OU);\n    }\n    if (input.CN) {\n        parts.push(input.CN);\n    }\n    return parts.join(' : ');\n}\n", "export * from \"./extensions\";\nexport * from \"./algorithm_identifier\";\nexport * from \"./attribute\";\nexport * from \"./certificate\";\nexport * from \"./certificate_list\";\nexport * from \"./extension\";\nexport * from \"./general_name\";\nexport * from \"./general_names\";\nexport * from \"./name\";\nexport * from \"./object_identifiers\";\nexport * from \"./subject_public_key_info\";\nexport * from \"./tbs_cert_list\";\nexport * from \"./tbs_certificate\";\nexport * from \"./time\";\nexport * from \"./types\";\nexport * from \"./validity\";\n", "export * from \"./authority_information_access\";\nexport * from \"./authority_key_identifier\";\nexport * from \"./basic_constraints\";\nexport * from \"./certificate_issuer\";\nexport * from \"./certificate_policies\";\nexport * from \"./crl_delta_indicator\";\nexport * from \"./crl_distribution_points\";\nexport * from \"./crl_freshest\";\nexport * from \"./crl_issuing_distribution_point\";\nexport * from \"./crl_number\";\nexport * from \"./crl_reason\";\nexport * from \"./extended_key_usage\";\nexport * from \"./inhibit_any_policy\";\nexport * from \"./invalidity_date\";\nexport * from \"./issuer_alternative_name\";\nexport * from \"./key_usage\";\nexport * from \"./name_constraints\";\nexport * from \"./policy_constraints\";\nexport * from \"./policy_mappings\";\nexport * from \"./subject_alternative_name\";\nexport * from \"./subject_directory_attributes\";\nexport * from \"./subject_key_identifier\";\nexport * from \"./private_key_usage_period\";\nexport * from \"./entrust_version_info\";\nexport * from \"./subject_info_access\";\n", "var AuthorityInfoAccessSyntax_1;\nimport { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnArray, AsnType, AsnTypeTypes } from \"@peculiar/asn1-schema\";\nimport { GeneralName } from \"../general_name\";\nimport { id_pe } from \"../object_identifiers\";\nexport const id_pe_authorityInfoAccess = `${id_pe}.1`;\nexport class AccessDescription {\n    constructor(params = {}) {\n        this.accessMethod = \"\";\n        this.accessLocation = new GeneralName();\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.ObjectIdentifier })\n], AccessDescription.prototype, \"accessMethod\", void 0);\n__decorate([\n    AsnProp({ type: GeneralName })\n], AccessDescription.prototype, \"accessLocation\", void 0);\nlet AuthorityInfoAccessSyntax = AuthorityInfoAccessSyntax_1 = class AuthorityInfoAccessSyntax extends AsnArray {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, AuthorityInfoAccessSyntax_1.prototype);\n    }\n};\nAuthorityInfoAccessSyntax = AuthorityInfoAccessSyntax_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence, itemType: AccessDescription })\n], AuthorityInfoAccessSyntax);\nexport { AuthorityInfoAccessSyntax };\n", "import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnType, AsnTypeTypes, AsnOctetStringConverter, } from \"@peculiar/asn1-schema\";\nimport { IpConverter } from \"./ip_converter\";\nimport { DirectoryString, Name } from \"./name\";\nexport const AsnIpConverter = {\n    fromASN: (value) => IpConverter.toString(AsnOctetStringConverter.fromASN(value)),\n    toASN: (value) => AsnOctetStringConverter.toASN(IpConverter.fromString(value)),\n};\nexport class OtherName {\n    constructor(params = {}) {\n        this.typeId = \"\";\n        this.value = new ArrayBuffer(0);\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.ObjectIdentifier })\n], OtherName.prototype, \"typeId\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Any, context: 0 })\n], OtherName.prototype, \"value\", void 0);\nexport class EDIPartyName {\n    constructor(params = {}) {\n        this.partyName = new DirectoryString();\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: DirectoryString, optional: true, context: 0, implicit: true })\n], EDIPartyName.prototype, \"nameAssigner\", void 0);\n__decorate([\n    AsnProp({ type: DirectoryString, context: 1, implicit: true })\n], EDIPartyName.prototype, \"partyName\", void 0);\nlet GeneralName = class GeneralName {\n    constructor(params = {}) {\n        Object.assign(this, params);\n    }\n};\n__decorate([\n    AsnProp({ type: OtherName, context: 0, implicit: true })\n], GeneralName.prototype, \"otherName\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.IA5String, context: 1, implicit: true })\n], GeneralName.prototype, \"rfc822Name\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.IA5String, context: 2, implicit: true })\n], GeneralName.prototype, \"dNSName\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Any, context: 3, implicit: true })\n], GeneralName.prototype, \"x400Address\", void 0);\n__decorate([\n    AsnProp({ type: Name, context: 4, implicit: false })\n], GeneralName.prototype, \"directoryName\", void 0);\n__decorate([\n    AsnProp({ type: EDIPartyName, context: 5 })\n], GeneralName.prototype, \"ediPartyName\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.IA5String, context: 6, implicit: true })\n], GeneralName.prototype, \"uniformResourceIdentifier\", void 0);\n__decorate([\n    AsnProp({\n        type: AsnPropTypes.OctetString,\n        context: 7,\n        implicit: true,\n        converter: AsnIpConverter,\n    })\n], GeneralName.prototype, \"iPAddress\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.ObjectIdentifier, context: 8, implicit: true })\n], GeneralName.prototype, \"registeredID\", void 0);\nGeneralName = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], GeneralName);\nexport { GeneralName };\n", "import { Convert } from \"pvtsutils\";\nexport class IpConverter {\n    static isIPv4(ip) {\n        return /^(\\d{1,3}\\.){3}\\d{1,3}$/.test(ip);\n    }\n    static parseIPv4(ip) {\n        const parts = ip.split(\".\");\n        if (parts.length !== 4) {\n            throw new Error(\"Invalid IPv4 address\");\n        }\n        return parts.map((part) => {\n            const num = parseInt(part, 10);\n            if (isNaN(num) || num < 0 || num > 255) {\n                throw new Error(\"Invalid IPv4 address part\");\n            }\n            return num;\n        });\n    }\n    static parseIPv6(ip) {\n        const expandedIP = this.expandIPv6(ip);\n        const parts = expandedIP.split(\":\");\n        if (parts.length !== 8) {\n            throw new Error(\"Invalid IPv6 address\");\n        }\n        return parts.reduce((bytes, part) => {\n            const num = parseInt(part, 16);\n            if (isNaN(num) || num < 0 || num > 0xffff) {\n                throw new Error(\"Invalid IPv6 address part\");\n            }\n            bytes.push((num >> 8) & 0xff);\n            bytes.push(num & 0xff);\n            return bytes;\n        }, []);\n    }\n    static expandIPv6(ip) {\n        if (!ip.includes(\"::\")) {\n            return ip;\n        }\n        const parts = ip.split(\"::\");\n        if (parts.length > 2) {\n            throw new Error(\"Invalid IPv6 address\");\n        }\n        const left = parts[0] ? parts[0].split(\":\") : [];\n        const right = parts[1] ? parts[1].split(\":\") : [];\n        const missing = 8 - (left.length + right.length);\n        if (missing < 0) {\n            throw new Error(\"Invalid IPv6 address\");\n        }\n        return [...left, ...Array(missing).fill(\"0\"), ...right].join(\":\");\n    }\n    static formatIPv6(bytes) {\n        const parts = [];\n        for (let i = 0; i < 16; i += 2) {\n            parts.push(((bytes[i] << 8) | bytes[i + 1]).toString(16));\n        }\n        return this.compressIPv6(parts.join(\":\"));\n    }\n    static compressIPv6(ip) {\n        const parts = ip.split(\":\");\n        let longestZeroStart = -1;\n        let longestZeroLength = 0;\n        let currentZeroStart = -1;\n        let currentZeroLength = 0;\n        for (let i = 0; i < parts.length; i++) {\n            if (parts[i] === \"0\") {\n                if (currentZeroStart === -1) {\n                    currentZeroStart = i;\n                }\n                currentZeroLength++;\n            }\n            else {\n                if (currentZeroLength > longestZeroLength) {\n                    longestZeroStart = currentZeroStart;\n                    longestZeroLength = currentZeroLength;\n                }\n                currentZeroStart = -1;\n                currentZeroLength = 0;\n            }\n        }\n        if (currentZeroLength > longestZeroLength) {\n            longestZeroStart = currentZeroStart;\n            longestZeroLength = currentZeroLength;\n        }\n        if (longestZeroLength > 1) {\n            const before = parts.slice(0, longestZeroStart).join(\":\");\n            const after = parts.slice(longestZeroStart + longestZeroLength).join(\":\");\n            return `${before}::${after}`;\n        }\n        return ip;\n    }\n    static parseCIDR(text) {\n        const [addr, prefixStr] = text.split(\"/\");\n        const prefix = parseInt(prefixStr, 10);\n        if (this.isIPv4(addr)) {\n            if (prefix < 0 || prefix > 32) {\n                throw new Error(\"Invalid IPv4 prefix length\");\n            }\n            return [this.parseIPv4(addr), prefix];\n        }\n        else {\n            if (prefix < 0 || prefix > 128) {\n                throw new Error(\"Invalid IPv6 prefix length\");\n            }\n            return [this.parseIPv6(addr), prefix];\n        }\n    }\n    static decodeIP(value) {\n        if (value.length === 64 && parseInt(value, 16) === 0) {\n            return \"::/0\";\n        }\n        if (value.length !== 16) {\n            return value;\n        }\n        const mask = parseInt(value.slice(8), 16)\n            .toString(2)\n            .split(\"\")\n            .reduce((a, k) => a + +k, 0);\n        let ip = value.slice(0, 8).replace(/(.{2})/g, (match) => `${parseInt(match, 16)}.`);\n        ip = ip.slice(0, -1);\n        return `${ip}/${mask}`;\n    }\n    static toString(buf) {\n        const uint8 = new Uint8Array(buf);\n        if (uint8.length === 4) {\n            return Array.from(uint8).join(\".\");\n        }\n        if (uint8.length === 16) {\n            return this.formatIPv6(uint8);\n        }\n        if (uint8.length === 8 || uint8.length === 32) {\n            const half = uint8.length / 2;\n            const addrBytes = uint8.slice(0, half);\n            const maskBytes = uint8.slice(half);\n            const isAllZeros = uint8.every((byte) => byte === 0);\n            if (isAllZeros) {\n                return uint8.length === 8 ? \"0.0.0.0/0\" : \"::/0\";\n            }\n            const prefixLen = maskBytes.reduce((a, b) => a + (b.toString(2).match(/1/g) || []).length, 0);\n            if (uint8.length === 8) {\n                const addrStr = Array.from(addrBytes).join(\".\");\n                return `${addrStr}/${prefixLen}`;\n            }\n            else {\n                const addrStr = this.formatIPv6(addrBytes);\n                return `${addrStr}/${prefixLen}`;\n            }\n        }\n        return this.decodeIP(Convert.ToHex(buf));\n    }\n    static fromString(text) {\n        if (text.includes(\"/\")) {\n            const [addr, prefix] = this.parseCIDR(text);\n            const maskBytes = new Uint8Array(addr.length);\n            let bitsLeft = prefix;\n            for (let i = 0; i < maskBytes.length; i++) {\n                if (bitsLeft >= 8) {\n                    maskBytes[i] = 0xff;\n                    bitsLeft -= 8;\n                }\n                else if (bitsLeft > 0) {\n                    maskBytes[i] = 0xff << (8 - bitsLeft);\n                    bitsLeft = 0;\n                }\n            }\n            const out = new Uint8Array(addr.length * 2);\n            out.set(addr, 0);\n            out.set(maskBytes, addr.length);\n            return out.buffer;\n        }\n        const bytes = this.isIPv4(text) ? this.parseIPv4(text) : this.parseIPv6(text);\n        return new Uint8Array(bytes).buffer;\n    }\n}\n", "var RelativeDistinguishedName_1, RDNSequence_1, Name_1;\nimport { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnType, AsnTypeTypes, AsnArray } from \"@peculiar/asn1-schema\";\nimport { Convert } from \"pvtsutils\";\nlet DirectoryString = class DirectoryString {\n    constructor(params = {}) {\n        Object.assign(this, params);\n    }\n    toString() {\n        return (this.bmpString ||\n            this.printableString ||\n            this.teletexString ||\n            this.universalString ||\n            this.utf8String ||\n            \"\");\n    }\n};\n__decorate([\n    AsnProp({ type: AsnPropTypes.TeletexString })\n], DirectoryString.prototype, \"teletexString\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.PrintableString })\n], DirectoryString.prototype, \"printableString\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.UniversalString })\n], DirectoryString.prototype, \"universalString\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Utf8String })\n], DirectoryString.prototype, \"utf8String\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.BmpString })\n], DirectoryString.prototype, \"bmpString\", void 0);\nDirectoryString = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], DirectoryString);\nexport { DirectoryString };\nlet AttributeValue = class AttributeValue extends DirectoryString {\n    constructor(params = {}) {\n        super(params);\n        Object.assign(this, params);\n    }\n    toString() {\n        return this.ia5String || (this.anyValue ? Convert.ToHex(this.anyValue) : super.toString());\n    }\n};\n__decorate([\n    AsnProp({ type: AsnPropTypes.IA5String })\n], AttributeValue.prototype, \"ia5String\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Any })\n], AttributeValue.prototype, \"anyValue\", void 0);\nAttributeValue = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], AttributeValue);\nexport { AttributeValue };\nexport class AttributeTypeAndValue {\n    constructor(params = {}) {\n        this.type = \"\";\n        this.value = new AttributeValue();\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.ObjectIdentifier })\n], AttributeTypeAndValue.prototype, \"type\", void 0);\n__decorate([\n    AsnProp({ type: AttributeValue })\n], AttributeTypeAndValue.prototype, \"value\", void 0);\nlet RelativeDistinguishedName = RelativeDistinguishedName_1 = class RelativeDistinguishedName extends AsnArray {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, RelativeDistinguishedName_1.prototype);\n    }\n};\nRelativeDistinguishedName = RelativeDistinguishedName_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Set, itemType: AttributeTypeAndValue })\n], RelativeDistinguishedName);\nexport { RelativeDistinguishedName };\nlet RDNSequence = RDNSequence_1 = class RDNSequence extends AsnArray {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, RDNSequence_1.prototype);\n    }\n};\nRDNSequence = RDNSequence_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence, itemType: RelativeDistinguishedName })\n], RDNSequence);\nexport { RDNSequence };\nlet Name = Name_1 = class Name extends RDNSequence {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, Name_1.prototype);\n    }\n};\nName = Name_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence })\n], Name);\nexport { Name };\n", "export const id_pkix = \"1.3.6.1.5.5.7\";\nexport const id_pe = `${id_pkix}.1`;\nexport const id_qt = `${id_pkix}.2`;\nexport const id_kp = `${id_pkix}.3`;\nexport const id_ad = `${id_pkix}.48`;\nexport const id_qt_csp = `${id_qt}.1`;\nexport const id_qt_unotice = `${id_qt}.2`;\nexport const id_ad_ocsp = `${id_ad}.1`;\nexport const id_ad_caIssuers = `${id_ad}.2`;\nexport const id_ad_timeStamping = `${id_ad}.3`;\nexport const id_ad_caRepository = `${id_ad}.5`;\nexport const id_ce = \"2.5.29\";\n", "import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnIntegerArrayBufferConverter, OctetString, } from \"@peculiar/asn1-schema\";\nimport { GeneralName } from \"../general_name\";\nimport { id_ce } from \"../object_identifiers\";\nexport const id_ce_authorityKeyIdentifier = `${id_ce}.35`;\nexport class KeyIdentifier extends OctetString {\n}\nexport class AuthorityKeyIdentifier {\n    constructor(params = {}) {\n        if (params) {\n            Object.assign(this, params);\n        }\n    }\n}\n__decorate([\n    AsnProp({ type: KeyIdentifier, context: 0, optional: true, implicit: true })\n], AuthorityKeyIdentifier.prototype, \"keyIdentifier\", void 0);\n__decorate([\n    AsnProp({ type: GeneralName, context: 1, optional: true, implicit: true, repeated: \"sequence\" })\n], AuthorityKeyIdentifier.prototype, \"authorityCertIssuer\", void 0);\n__decorate([\n    AsnProp({\n        type: AsnPropTypes.Integer,\n        context: 2,\n        optional: true,\n        implicit: true,\n        converter: AsnIntegerArrayBufferConverter,\n    })\n], AuthorityKeyIdentifier.prototype, \"authorityCertSerialNumber\", void 0);\n", "import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes } from \"@peculiar/asn1-schema\";\nimport { id_ce } from \"../object_identifiers\";\nexport const id_ce_basicConstraints = `${id_ce}.19`;\nexport class BasicConstraints {\n    constructor(params = {}) {\n        this.cA = false;\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.Boolean, defaultValue: false })\n], BasicConstraints.prototype, \"cA\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, optional: true })\n], BasicConstraints.prototype, \"pathLenConstraint\", void 0);\n", "var CertificateIssuer_1;\nimport { __decorate } from \"tslib\";\nimport { AsnType, AsnTypeTypes } from \"@peculiar/asn1-schema\";\nimport { GeneralNames } from \"../general_names\";\nimport { id_ce } from \"../object_identifiers\";\nexport const id_ce_certificateIssuer = `${id_ce}.29`;\nlet CertificateIssuer = CertificateIssuer_1 = class CertificateIssuer extends GeneralNames {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, CertificateIssuer_1.prototype);\n    }\n};\nCertificateIssuer = CertificateIssuer_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence })\n], CertificateIssuer);\nexport { CertificateIssuer };\n", "var GeneralNames_1;\nimport { __decorate } from \"tslib\";\nimport { AsnType, AsnTypeTypes } from \"@peculiar/asn1-schema\";\nimport { GeneralName } from \"./general_name\";\nimport { AsnArray } from \"@peculiar/asn1-schema\";\nlet GeneralNames = GeneralNames_1 = class GeneralNames extends AsnArray {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, GeneralNames_1.prototype);\n    }\n};\nGeneralNames = GeneralNames_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence, itemType: GeneralName })\n], GeneralNames);\nexport { GeneralNames };\n", "var CertificatePolicies_1;\nimport { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnType, AsnTypeTypes, AsnArray } from \"@peculiar/asn1-schema\";\nimport { id_ce } from \"../object_identifiers\";\nexport const id_ce_certificatePolicies = `${id_ce}.32`;\nexport const id_ce_certificatePolicies_anyPolicy = `${id_ce_certificatePolicies}.0`;\nlet DisplayText = class DisplayText {\n    constructor(params = {}) {\n        Object.assign(this, params);\n    }\n    toString() {\n        return this.ia5String || this.visibleString || this.bmpString || this.utf8String || \"\";\n    }\n};\n__decorate([\n    AsnProp({ type: AsnPropTypes.IA5String })\n], DisplayText.prototype, \"ia5String\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.VisibleString })\n], DisplayText.prototype, \"visibleString\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.BmpString })\n], DisplayText.prototype, \"bmpString\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Utf8String })\n], DisplayText.prototype, \"utf8String\", void 0);\nDisplayText = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], DisplayText);\nexport { DisplayText };\nexport class NoticeReference {\n    constructor(params = {}) {\n        this.organization = new DisplayText();\n        this.noticeNumbers = [];\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: DisplayText })\n], NoticeReference.prototype, \"organization\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, repeated: \"sequence\" })\n], NoticeReference.prototype, \"noticeNumbers\", void 0);\nexport class UserNotice {\n    constructor(params = {}) {\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: NoticeReference, optional: true })\n], UserNotice.prototype, \"noticeRef\", void 0);\n__decorate([\n    AsnProp({ type: DisplayText, optional: true })\n], UserNotice.prototype, \"explicitText\", void 0);\nlet Qualifier = class Qualifier {\n    constructor(params = {}) {\n        Object.assign(this, params);\n    }\n};\n__decorate([\n    AsnProp({ type: AsnPropTypes.IA5String })\n], Qualifier.prototype, \"cPSuri\", void 0);\n__decorate([\n    AsnProp({ type: UserNotice })\n], Qualifier.prototype, \"userNotice\", void 0);\nQualifier = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], Qualifier);\nexport { Qualifier };\nexport class PolicyQualifierInfo {\n    constructor(params = {}) {\n        this.policyQualifierId = \"\";\n        this.qualifier = new ArrayBuffer(0);\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.ObjectIdentifier })\n], PolicyQualifierInfo.prototype, \"policyQualifierId\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Any })\n], PolicyQualifierInfo.prototype, \"qualifier\", void 0);\nexport class PolicyInformation {\n    constructor(params = {}) {\n        this.policyIdentifier = \"\";\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.ObjectIdentifier })\n], PolicyInformation.prototype, \"policyIdentifier\", void 0);\n__decorate([\n    AsnProp({ type: PolicyQualifierInfo, repeated: \"sequence\", optional: true })\n], PolicyInformation.prototype, \"policyQualifiers\", void 0);\nlet CertificatePolicies = CertificatePolicies_1 = class CertificatePolicies extends AsnArray {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, CertificatePolicies_1.prototype);\n    }\n};\nCertificatePolicies = CertificatePolicies_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence, itemType: PolicyInformation })\n], CertificatePolicies);\nexport { CertificatePolicies };\n", "import { __decorate } from \"tslib\";\nimport { AsnType, AsnTypeTypes } from \"@peculiar/asn1-schema\";\nimport { id_ce } from \"../object_identifiers\";\nimport { CRLNumber } from \"./crl_number\";\nexport const id_ce_deltaCRLIndicator = `${id_ce}.27`;\nlet BaseCRLNumber = class BaseCRLNumber extends CRLNumber {\n};\nBaseCRLNumber = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], BaseCRLNumber);\nexport { BaseCRLNumber };\n", "import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnType, AsnTypeTypes } from \"@peculiar/asn1-schema\";\nimport { id_ce } from \"../object_identifiers\";\nexport const id_ce_cRLNumber = `${id_ce}.20`;\nlet CRLNumber = class CRLNumber {\n    constructor(value = 0) {\n        this.value = value;\n    }\n};\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer })\n], CRLNumber.prototype, \"value\", void 0);\nCRLNumber = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], CRLNumber);\nexport { CRLNumber };\n", "var CRLDistributionPoints_1;\nimport { __decorate } from \"tslib\";\nimport { AsnProp, AsnType, AsnTypeTypes, AsnArray, BitString } from \"@peculiar/asn1-schema\";\nimport { RelativeDistinguishedName } from \"../name\";\nimport { GeneralName } from \"../general_name\";\nimport { id_ce } from \"../object_identifiers\";\nexport const id_ce_cRLDistributionPoints = `${id_ce}.31`;\nexport var ReasonFlags;\n(function (ReasonFlags) {\n    ReasonFlags[ReasonFlags[\"unused\"] = 1] = \"unused\";\n    ReasonFlags[ReasonFlags[\"keyCompromise\"] = 2] = \"keyCompromise\";\n    ReasonFlags[ReasonFlags[\"cACompromise\"] = 4] = \"cACompromise\";\n    ReasonFlags[ReasonFlags[\"affiliationChanged\"] = 8] = \"affiliationChanged\";\n    ReasonFlags[ReasonFlags[\"superseded\"] = 16] = \"superseded\";\n    ReasonFlags[ReasonFlags[\"cessationOfOperation\"] = 32] = \"cessationOfOperation\";\n    ReasonFlags[ReasonFlags[\"certificateHold\"] = 64] = \"certificateHold\";\n    ReasonFlags[ReasonFlags[\"privilegeWithdrawn\"] = 128] = \"privilegeWithdrawn\";\n    ReasonFlags[ReasonFlags[\"aACompromise\"] = 256] = \"aACompromise\";\n})(ReasonFlags || (ReasonFlags = {}));\nexport class Reason extends BitString {\n    toJSON() {\n        const res = [];\n        const flags = this.toNumber();\n        if (flags & ReasonFlags.aACompromise) {\n            res.push(\"aACompromise\");\n        }\n        if (flags & ReasonFlags.affiliationChanged) {\n            res.push(\"affiliationChanged\");\n        }\n        if (flags & ReasonFlags.cACompromise) {\n            res.push(\"cACompromise\");\n        }\n        if (flags & ReasonFlags.certificateHold) {\n            res.push(\"certificateHold\");\n        }\n        if (flags & ReasonFlags.cessationOfOperation) {\n            res.push(\"cessationOfOperation\");\n        }\n        if (flags & ReasonFlags.keyCompromise) {\n            res.push(\"keyCompromise\");\n        }\n        if (flags & ReasonFlags.privilegeWithdrawn) {\n            res.push(\"privilegeWithdrawn\");\n        }\n        if (flags & ReasonFlags.superseded) {\n            res.push(\"superseded\");\n        }\n        if (flags & ReasonFlags.unused) {\n            res.push(\"unused\");\n        }\n        return res;\n    }\n    toString() {\n        return `[${this.toJSON().join(\", \")}]`;\n    }\n}\nlet DistributionPointName = class DistributionPointName {\n    constructor(params = {}) {\n        Object.assign(this, params);\n    }\n};\n__decorate([\n    AsnProp({ type: GeneralName, context: 0, repeated: \"sequence\", implicit: true })\n], DistributionPointName.prototype, \"fullName\", void 0);\n__decorate([\n    AsnProp({ type: RelativeDistinguishedName, context: 1, implicit: true })\n], DistributionPointName.prototype, \"nameRelativeToCRLIssuer\", void 0);\nDistributionPointName = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], DistributionPointName);\nexport { DistributionPointName };\nexport class DistributionPoint {\n    constructor(params = {}) {\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: DistributionPointName, context: 0, optional: true })\n], DistributionPoint.prototype, \"distributionPoint\", void 0);\n__decorate([\n    AsnProp({ type: Reason, context: 1, optional: true, implicit: true })\n], DistributionPoint.prototype, \"reasons\", void 0);\n__decorate([\n    AsnProp({ type: GeneralName, context: 2, optional: true, repeated: \"sequence\", implicit: true })\n], DistributionPoint.prototype, \"cRLIssuer\", void 0);\nlet CRLDistributionPoints = CRLDistributionPoints_1 = class CRLDistributionPoints extends AsnArray {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, CRLDistributionPoints_1.prototype);\n    }\n};\nCRLDistributionPoints = CRLDistributionPoints_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence, itemType: DistributionPoint })\n], CRLDistributionPoints);\nexport { CRLDistributionPoints };\n", "var FreshestCRL_1;\nimport { __decorate } from \"tslib\";\nimport { AsnType, AsnTypeTypes } from \"@peculiar/asn1-schema\";\nimport { id_ce } from \"../object_identifiers\";\nimport { CRLDistributionPoints, DistributionPoint } from \"./crl_distribution_points\";\nexport const id_ce_freshestCRL = `${id_ce}.46`;\nlet FreshestCRL = FreshestCRL_1 = class FreshestCRL extends CRLDistributionPoints {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, FreshestCRL_1.prototype);\n    }\n};\nFreshestCRL = FreshestCRL_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence, itemType: DistributionPoint })\n], FreshestCRL);\nexport { FreshestCRL };\n", "import { __decorate } from \"tslib\";\nimport { AsnProp } from \"@peculiar/asn1-schema\";\nimport { DistributionPointName, Reason } from \"./crl_distribution_points\";\nimport { id_ce } from \"../object_identifiers\";\nimport { AsnPropTypes } from \"@peculiar/asn1-schema\";\nexport const id_ce_issuingDistributionPoint = `${id_ce}.28`;\nexport class IssuingDistributionPoint {\n    constructor(params = {}) {\n        this.onlyContainsUserCerts = IssuingDistributionPoint.ONLY;\n        this.onlyContainsCACerts = IssuingDistributionPoint.ONLY;\n        this.indirectCRL = IssuingDistributionPoint.ONLY;\n        this.onlyContainsAttributeCerts = IssuingDistributionPoint.ONLY;\n        Object.assign(this, params);\n    }\n}\nIssuingDistributionPoint.ONLY = false;\n__decorate([\n    AsnProp({ type: DistributionPointName, context: 0, optional: true })\n], IssuingDistributionPoint.prototype, \"distributionPoint\", void 0);\n__decorate([\n    AsnProp({\n        type: AsnPropTypes.Boolean,\n        context: 1,\n        defaultValue: IssuingDistributionPoint.ONLY,\n        implicit: true,\n    })\n], IssuingDistributionPoint.prototype, \"onlyContainsUserCerts\", void 0);\n__decorate([\n    AsnProp({\n        type: AsnPropTypes.Boolean,\n        context: 2,\n        defaultValue: IssuingDistributionPoint.ONLY,\n        implicit: true,\n    })\n], IssuingDistributionPoint.prototype, \"onlyContainsCACerts\", void 0);\n__decorate([\n    AsnProp({ type: Reason, context: 3, optional: true, implicit: true })\n], IssuingDistributionPoint.prototype, \"onlySomeReasons\", void 0);\n__decorate([\n    AsnProp({\n        type: AsnPropTypes.Boolean,\n        context: 4,\n        defaultValue: IssuingDistributionPoint.ONLY,\n        implicit: true,\n    })\n], IssuingDistributionPoint.prototype, \"indirectCRL\", void 0);\n__decorate([\n    AsnProp({\n        type: AsnPropTypes.Boolean,\n        context: 5,\n        defaultValue: IssuingDistributionPoint.ONLY,\n        implicit: true,\n    })\n], IssuingDistributionPoint.prototype, \"onlyContainsAttributeCerts\", void 0);\n", "import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnType, AsnTypeTypes } from \"@peculiar/asn1-schema\";\nimport { id_ce } from \"../object_identifiers\";\nexport const id_ce_cRLReasons = `${id_ce}.21`;\nexport var CRLReasons;\n(function (CRLReasons) {\n    CRLReasons[CRLReasons[\"unspecified\"] = 0] = \"unspecified\";\n    CRLReasons[CRLReasons[\"keyCompromise\"] = 1] = \"keyCompromise\";\n    CRLReasons[CRLReasons[\"cACompromise\"] = 2] = \"cACompromise\";\n    CRLReasons[CRLReasons[\"affiliationChanged\"] = 3] = \"affiliationChanged\";\n    CRLReasons[CRLReasons[\"superseded\"] = 4] = \"superseded\";\n    CRLReasons[CRLReasons[\"cessationOfOperation\"] = 5] = \"cessationOfOperation\";\n    CRLReasons[CRLReasons[\"certificateHold\"] = 6] = \"certificateHold\";\n    CRLReasons[CRLReasons[\"removeFromCRL\"] = 8] = \"removeFromCRL\";\n    CRLReasons[CRLReasons[\"privilegeWithdrawn\"] = 9] = \"privilegeWithdrawn\";\n    CRLReasons[CRLReasons[\"aACompromise\"] = 10] = \"aACompromise\";\n})(CRLReasons || (CRLReasons = {}));\nlet CRLReason = class CRLReason {\n    constructor(reason = CRLReasons.unspecified) {\n        this.reason = CRLReasons.unspecified;\n        this.reason = reason;\n    }\n    toJSON() {\n        return CRLReasons[this.reason];\n    }\n    toString() {\n        return this.toJSON();\n    }\n};\n__decorate([\n    AsnProp({ type: AsnPropTypes.Enumerated })\n], CRLReason.prototype, \"reason\", void 0);\nCRLReason = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], CRLReason);\nexport { CRLReason };\n", "var ExtendedKeyUsage_1;\nimport { __decorate } from \"tslib\";\nimport { AsnPropTypes, AsnArray, AsnType, AsnTypeTypes } from \"@peculiar/asn1-schema\";\nimport { id_ce, id_kp } from \"../object_identifiers\";\nexport const id_ce_extKeyUsage = `${id_ce}.37`;\nlet ExtendedKeyUsage = ExtendedKeyUsage_1 = class ExtendedKeyUsage extends AsnArray {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, ExtendedKeyUsage_1.prototype);\n    }\n};\nExtendedKeyUsage = ExtendedKeyUsage_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence, itemType: AsnPropTypes.ObjectIdentifier })\n], ExtendedKeyUsage);\nexport { ExtendedKeyUsage };\nexport const anyExtendedKeyUsage = `${id_ce_extKeyUsage}.0`;\nexport const id_kp_serverAuth = `${id_kp}.1`;\nexport const id_kp_clientAuth = `${id_kp}.2`;\nexport const id_kp_codeSigning = `${id_kp}.3`;\nexport const id_kp_emailProtection = `${id_kp}.4`;\nexport const id_kp_timeStamping = `${id_kp}.8`;\nexport const id_kp_OCSPSigning = `${id_kp}.9`;\n", "import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnType, AsnTypeTypes, AsnIntegerArrayBufferConverter, } from \"@peculiar/asn1-schema\";\nimport { id_ce } from \"../object_identifiers\";\nexport const id_ce_inhibitAnyPolicy = `${id_ce}.54`;\nlet InhibitAnyPolicy = class InhibitAnyPolicy {\n    constructor(value = new ArrayBuffer(0)) {\n        this.value = value;\n    }\n};\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerArrayBufferConverter })\n], InhibitAnyPolicy.prototype, \"value\", void 0);\nInhibitAnyPolicy = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], InhibitAnyPolicy);\nexport { InhibitAnyPolicy };\n", "import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnType, AsnTypeTypes } from \"@peculiar/asn1-schema\";\nimport { id_ce } from \"../object_identifiers\";\nexport const id_ce_invalidityDate = `${id_ce}.24`;\nlet InvalidityDate = class InvalidityDate {\n    constructor(value) {\n        this.value = new Date();\n        if (value) {\n            this.value = value;\n        }\n    }\n};\n__decorate([\n    AsnProp({ type: AsnPropTypes.GeneralizedTime })\n], InvalidityDate.prototype, \"value\", void 0);\nInvalidityDate = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], InvalidityDate);\nexport { InvalidityDate };\n", "var IssueAlternativeName_1;\nimport { __decorate } from \"tslib\";\nimport { AsnType, AsnTypeTypes } from \"@peculiar/asn1-schema\";\nimport { GeneralNames } from \"../general_names\";\nimport { id_ce } from \"../object_identifiers\";\nexport const id_ce_issuerAltName = `${id_ce}.18`;\nlet IssueAlternativeName = IssueAlternativeName_1 = class IssueAlternativeName extends GeneralNames {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, IssueAlternativeName_1.prototype);\n    }\n};\nIssueAlternativeName = IssueAlternativeName_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence })\n], IssueAlternativeName);\nexport { IssueAlternativeName };\n", "import { BitString } from \"@peculiar/asn1-schema\";\nimport { id_ce } from \"../object_identifiers\";\nexport const id_ce_keyUsage = `${id_ce}.15`;\nexport var KeyUsageFlags;\n(function (KeyUsageFlags) {\n    KeyUsageFlags[KeyUsageFlags[\"digitalSignature\"] = 1] = \"digitalSignature\";\n    KeyUsageFlags[KeyUsageFlags[\"nonRepudiation\"] = 2] = \"nonRepudiation\";\n    KeyUsageFlags[KeyUsageFlags[\"keyEncipherment\"] = 4] = \"keyEncipherment\";\n    KeyUsageFlags[KeyUsageFlags[\"dataEncipherment\"] = 8] = \"dataEncipherment\";\n    KeyUsageFlags[KeyUsageFlags[\"keyAgreement\"] = 16] = \"keyAgreement\";\n    KeyUsageFlags[KeyUsageFlags[\"keyCertSign\"] = 32] = \"keyCertSign\";\n    KeyUsageFlags[KeyUsageFlags[\"cRLSign\"] = 64] = \"cRLSign\";\n    KeyUsageFlags[KeyUsageFlags[\"encipherOnly\"] = 128] = \"encipherOnly\";\n    KeyUsageFlags[KeyUsageFlags[\"decipherOnly\"] = 256] = \"decipherOnly\";\n})(KeyUsageFlags || (KeyUsageFlags = {}));\nexport class KeyUsage extends BitString {\n    toJSON() {\n        const flag = this.toNumber();\n        const res = [];\n        if (flag & KeyUsageFlags.cRLSign) {\n            res.push(\"crlSign\");\n        }\n        if (flag & KeyUsageFlags.dataEncipherment) {\n            res.push(\"dataEncipherment\");\n        }\n        if (flag & KeyUsageFlags.decipherOnly) {\n            res.push(\"decipherOnly\");\n        }\n        if (flag & KeyUsageFlags.digitalSignature) {\n            res.push(\"digitalSignature\");\n        }\n        if (flag & KeyUsageFlags.encipherOnly) {\n            res.push(\"encipherOnly\");\n        }\n        if (flag & KeyUsageFlags.keyAgreement) {\n            res.push(\"keyAgreement\");\n        }\n        if (flag & KeyUsageFlags.keyCertSign) {\n            res.push(\"keyCertSign\");\n        }\n        if (flag & KeyUsageFlags.keyEncipherment) {\n            res.push(\"keyEncipherment\");\n        }\n        if (flag & KeyUsageFlags.nonRepudiation) {\n            res.push(\"nonRepudiation\");\n        }\n        return res;\n    }\n    toString() {\n        return `[${this.toJSON().join(\", \")}]`;\n    }\n}\n", "var GeneralSubtrees_1;\nimport { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnArray, AsnType, AsnTypeTypes } from \"@peculiar/asn1-schema\";\nimport { GeneralName } from \"../general_name\";\nimport { id_ce } from \"../object_identifiers\";\nexport const id_ce_nameConstraints = `${id_ce}.30`;\nexport class GeneralSubtree {\n    constructor(params = {}) {\n        this.base = new GeneralName();\n        this.minimum = 0;\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: GeneralName })\n], GeneralSubtree.prototype, \"base\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, context: 0, defaultValue: 0, implicit: true })\n], GeneralSubtree.prototype, \"minimum\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, context: 1, optional: true, implicit: true })\n], GeneralSubtree.prototype, \"maximum\", void 0);\nlet GeneralSubtrees = GeneralSubtrees_1 = class GeneralSubtrees extends AsnArray {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, GeneralSubtrees_1.prototype);\n    }\n};\nGeneralSubtrees = GeneralSubtrees_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence, itemType: GeneralSubtree })\n], GeneralSubtrees);\nexport { GeneralSubtrees };\nexport class NameConstraints {\n    constructor(params = {}) {\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: GeneralSubtrees, context: 0, optional: true, implicit: true })\n], NameConstraints.prototype, \"permittedSubtrees\", void 0);\n__decorate([\n    AsnProp({ type: GeneralSubtrees, context: 1, optional: true, implicit: true })\n], NameConstraints.prototype, \"excludedSubtrees\", void 0);\n", "import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnIntegerArrayBufferConverter } from \"@peculiar/asn1-schema\";\nimport { id_ce } from \"../object_identifiers\";\nexport const id_ce_policyConstraints = `${id_ce}.36`;\nexport class PolicyConstraints {\n    constructor(params = {}) {\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({\n        type: AsnPropTypes.Integer,\n        context: 0,\n        implicit: true,\n        optional: true,\n        converter: AsnIntegerArrayBufferConverter,\n    })\n], PolicyConstraints.prototype, \"requireExplicitPolicy\", void 0);\n__decorate([\n    AsnProp({\n        type: AsnPropTypes.Integer,\n        context: 1,\n        implicit: true,\n        optional: true,\n        converter: AsnIntegerArrayBufferConverter,\n    })\n], PolicyConstraints.prototype, \"inhibitPolicyMapping\", void 0);\n", "var PolicyMappings_1;\nimport { __decorate } from \"tslib\";\nimport { AsnArray, AsnProp, AsnPropTypes, AsnType, AsnTypeTypes } from \"@peculiar/asn1-schema\";\nimport { id_ce } from \"../object_identifiers\";\nexport const id_ce_policyMappings = `${id_ce}.33`;\nexport class PolicyMapping {\n    constructor(params = {}) {\n        this.issuerDomainPolicy = \"\";\n        this.subjectDomainPolicy = \"\";\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.ObjectIdentifier })\n], PolicyMapping.prototype, \"issuerDomainPolicy\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.ObjectIdentifier })\n], PolicyMapping.prototype, \"subjectDomainPolicy\", void 0);\nlet PolicyMappings = PolicyMappings_1 = class PolicyMappings extends AsnArray {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, PolicyMappings_1.prototype);\n    }\n};\nPolicyMappings = PolicyMappings_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence, itemType: PolicyMapping })\n], PolicyMappings);\nexport { PolicyMappings };\n", "var SubjectAlternativeName_1;\nimport { __decorate } from \"tslib\";\nimport { AsnType, AsnTypeTypes } from \"@peculiar/asn1-schema\";\nimport { GeneralNames } from \"../general_names\";\nimport { id_ce } from \"../object_identifiers\";\nexport const id_ce_subjectAltName = `${id_ce}.17`;\nlet SubjectAlternativeName = SubjectAlternativeName_1 = class SubjectAlternativeName extends GeneralNames {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, SubjectAlternativeName_1.prototype);\n    }\n};\nSubjectAlternativeName = SubjectAlternativeName_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence })\n], SubjectAlternativeName);\nexport { SubjectAlternativeName };\n", "var SubjectDirectoryAttributes_1;\nimport { __decorate } from \"tslib\";\nimport { AsnArray, AsnType, AsnTypeTypes } from \"@peculiar/asn1-schema\";\nimport { Attribute } from \"../attribute\";\nimport { id_ce } from \"../object_identifiers\";\nexport const id_ce_subjectDirectoryAttributes = `${id_ce}.9`;\nlet SubjectDirectoryAttributes = SubjectDirectoryAttributes_1 = class SubjectDirectoryAttributes extends AsnArray {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, SubjectDirectoryAttributes_1.prototype);\n    }\n};\nSubjectDirectoryAttributes = SubjectDirectoryAttributes_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence, itemType: Attribute })\n], SubjectDirectoryAttributes);\nexport { SubjectDirectoryAttributes };\n", "import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes } from \"@peculiar/asn1-schema\";\nexport class Attribute {\n    constructor(params = {}) {\n        this.type = \"\";\n        this.values = [];\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.ObjectIdentifier })\n], Attribute.prototype, \"type\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Any, repeated: \"set\" })\n], Attribute.prototype, \"values\", void 0);\n", "import { id_ce } from \"../object_identifiers\";\nimport { KeyIdentifier } from \"./authority_key_identifier\";\nexport const id_ce_subjectKeyIdentifier = `${id_ce}.14`;\nexport class SubjectKeyIdentifier extends KeyIdentifier {\n}\n", "import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes } from \"@peculiar/asn1-schema\";\nimport { id_ce } from \"../object_identifiers\";\nexport const id_ce_privateKeyUsagePeriod = `${id_ce}.16`;\nexport class PrivateKeyUsagePeriod {\n    constructor(params = {}) {\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.GeneralizedTime, context: 0, implicit: true, optional: true })\n], PrivateKeyUsagePeriod.prototype, \"notBefore\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.GeneralizedTime, context: 1, implicit: true, optional: true })\n], PrivateKeyUsagePeriod.prototype, \"notAfter\", void 0);\n", "import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, BitString } from \"@peculiar/asn1-schema\";\nexport const id_entrust_entrustVersInfo = \"1.2.840.113533.7.65.0\";\nexport var EntrustInfoFlags;\n(function (EntrustInfoFlags) {\n    EntrustInfoFlags[EntrustInfoFlags[\"keyUpdateAllowed\"] = 1] = \"keyUpdateAllowed\";\n    EntrustInfoFlags[EntrustInfoFlags[\"newExtensions\"] = 2] = \"newExtensions\";\n    EntrustInfoFlags[EntrustInfoFlags[\"pKIXCertificate\"] = 4] = \"pKIXCertificate\";\n})(EntrustInfoFlags || (EntrustInfoFlags = {}));\nexport class EntrustInfo extends BitString {\n    toJSON() {\n        const res = [];\n        const flags = this.toNumber();\n        if (flags & EntrustInfoFlags.pKIXCertificate) {\n            res.push(\"pKIXCertificate\");\n        }\n        if (flags & EntrustInfoFlags.newExtensions) {\n            res.push(\"newExtensions\");\n        }\n        if (flags & EntrustInfoFlags.keyUpdateAllowed) {\n            res.push(\"keyUpdateAllowed\");\n        }\n        return res;\n    }\n    toString() {\n        return `[${this.toJSON().join(\", \")}]`;\n    }\n}\nexport class EntrustVersionInfo {\n    constructor(params = {}) {\n        this.entrustVers = \"\";\n        this.entrustInfoFlags = new EntrustInfo();\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.GeneralString })\n], EntrustVersionInfo.prototype, \"entrustVers\", void 0);\n__decorate([\n    AsnProp({ type: EntrustInfo })\n], EntrustVersionInfo.prototype, \"entrustInfoFlags\", void 0);\n", "var SubjectInfoAccessSyntax_1;\nimport { __decorate } from \"tslib\";\nimport { AsnArray, AsnType, AsnTypeTypes } from \"@peculiar/asn1-schema\";\nimport { id_pe } from \"../object_identifiers\";\nimport { AccessDescription } from \"./authority_information_access\";\nexport const id_pe_subjectInfoAccess = `${id_pe}.11`;\nlet SubjectInfoAccessSyntax = SubjectInfoAccessSyntax_1 = class SubjectInfoAccessSyntax extends AsnArray {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, SubjectInfoAccessSyntax_1.prototype);\n    }\n};\nSubjectInfoAccessSyntax = SubjectInfoAccessSyntax_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence, itemType: AccessDescription })\n], SubjectInfoAccessSyntax);\nexport { SubjectInfoAccessSyntax };\n", "import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes } from \"@peculiar/asn1-schema\";\nimport * as pvtsutils from \"pvtsutils\";\nexport class AlgorithmIdentifier {\n    constructor(params = {}) {\n        this.algorithm = \"\";\n        Object.assign(this, params);\n    }\n    isEqual(data) {\n        return (data instanceof AlgorithmIdentifier &&\n            data.algorithm == this.algorithm &&\n            ((data.parameters &&\n                this.parameters &&\n                pvtsutils.isEqual(data.parameters, this.parameters)) ||\n                data.parameters === this.parameters));\n    }\n}\n__decorate([\n    AsnProp({\n        type: AsnPropTypes.ObjectIdentifier,\n    })\n], AlgorithmIdentifier.prototype, \"algorithm\", void 0);\n__decorate([\n    AsnProp({\n        type: AsnPropTypes.Any,\n        optional: true,\n    })\n], AlgorithmIdentifier.prototype, \"parameters\", void 0);\n", "import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes } from \"@peculiar/asn1-schema\";\nimport { AlgorithmIdentifier } from \"./algorithm_identifier\";\nimport { TBSCertificate } from \"./tbs_certificate\";\nexport class Certificate {\n    constructor(params = {}) {\n        this.tbsCertificate = new TBSCertificate();\n        this.signatureAlgorithm = new AlgorithmIdentifier();\n        this.signatureValue = new ArrayBuffer(0);\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: TBSCertificate })\n], Certificate.prototype, \"tbsCertificate\", void 0);\n__decorate([\n    AsnProp({ type: AlgorithmIdentifier })\n], Certificate.prototype, \"signatureAlgorithm\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.BitString })\n], Certificate.prototype, \"signatureValue\", void 0);\n", "import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnIntegerArrayBufferConverter } from \"@peculiar/asn1-schema\";\nimport { AlgorithmIdentifier } from \"./algorithm_identifier\";\nimport { Name } from \"./name\";\nimport { SubjectPublicKeyInfo } from \"./subject_public_key_info\";\nimport { Validity } from \"./validity\";\nimport { Extensions } from \"./extension\";\nimport { Version } from \"./types\";\nexport class TBSCertificate {\n    constructor(params = {}) {\n        this.version = Version.v1;\n        this.serialNumber = new ArrayBuffer(0);\n        this.signature = new AlgorithmIdentifier();\n        this.issuer = new Name();\n        this.validity = new Validity();\n        this.subject = new Name();\n        this.subjectPublicKeyInfo = new SubjectPublicKeyInfo();\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({\n        type: AsnPropTypes.Integer,\n        context: 0,\n        defaultValue: Version.v1,\n    })\n], TBSCertificate.prototype, \"version\", void 0);\n__decorate([\n    AsnProp({\n        type: AsnPropTypes.Integer,\n        converter: AsnIntegerArrayBufferConverter,\n    })\n], TBSCertificate.prototype, \"serialNumber\", void 0);\n__decorate([\n    AsnProp({ type: AlgorithmIdentifier })\n], TBSCertificate.prototype, \"signature\", void 0);\n__decorate([\n    AsnProp({ type: Name })\n], TBSCertificate.prototype, \"issuer\", void 0);\n__decorate([\n    AsnProp({ type: Validity })\n], TBSCertificate.prototype, \"validity\", void 0);\n__decorate([\n    AsnProp({ type: Name })\n], TBSCertificate.prototype, \"subject\", void 0);\n__decorate([\n    AsnProp({ type: SubjectPublicKeyInfo })\n], TBSCertificate.prototype, \"subjectPublicKeyInfo\", void 0);\n__decorate([\n    AsnProp({\n        type: AsnPropTypes.BitString,\n        context: 1,\n        implicit: true,\n        optional: true,\n    })\n], TBSCertificate.prototype, \"issuerUniqueID\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.BitString, context: 2, implicit: true, optional: true })\n], TBSCertificate.prototype, \"subjectUniqueID\", void 0);\n__decorate([\n    AsnProp({ type: Extensions, context: 3, optional: true })\n], TBSCertificate.prototype, \"extensions\", void 0);\n", "import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes } from \"@peculiar/asn1-schema\";\nimport { AlgorithmIdentifier } from \"./algorithm_identifier\";\nexport class SubjectPublicKeyInfo {\n    constructor(params = {}) {\n        this.algorithm = new AlgorithmIdentifier();\n        this.subjectPublicKey = new ArrayBuffer(0);\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AlgorithmIdentifier })\n], SubjectPublicKeyInfo.prototype, \"algorithm\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.BitString })\n], SubjectPublicKeyInfo.prototype, \"subjectPublicKey\", void 0);\n", "import { __decorate } from \"tslib\";\nimport { AsnProp } from \"@peculiar/asn1-schema\";\nimport { Time } from \"./time\";\nexport class Validity {\n    constructor(params) {\n        this.notBefore = new Time(new Date());\n        this.notAfter = new Time(new Date());\n        if (params) {\n            this.notBefore = new Time(params.notBefore);\n            this.notAfter = new Time(params.notAfter);\n        }\n    }\n}\n__decorate([\n    AsnProp({ type: Time })\n], Validity.prototype, \"notBefore\", void 0);\n__decorate([\n    AsnProp({ type: Time })\n], Validity.prototype, \"notAfter\", void 0);\n", "import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnType, AsnTypeTypes } from \"@peculiar/asn1-schema\";\nlet Time = class Time {\n    constructor(time) {\n        if (time) {\n            if (typeof time === \"string\" || typeof time === \"number\" || time instanceof Date) {\n                const date = new Date(time);\n                if (date.getUTCFullYear() > 2049) {\n                    this.generalTime = date;\n                }\n                else {\n                    this.utcTime = date;\n                }\n            }\n            else {\n                Object.assign(this, time);\n            }\n        }\n    }\n    getTime() {\n        const time = this.utcTime || this.generalTime;\n        if (!time) {\n            throw new Error(\"Cannot get time from CHOICE object\");\n        }\n        return time;\n    }\n};\n__decorate([\n    AsnProp({\n        type: AsnPropTypes.UTCTime,\n    })\n], Time.prototype, \"utcTime\", void 0);\n__decorate([\n    AsnProp({\n        type: AsnPropTypes.GeneralizedTime,\n    })\n], Time.prototype, \"generalTime\", void 0);\nTime = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], Time);\nexport { Time };\n", "var Extensions_1;\nimport { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnArray, AsnType, AsnTypeTypes, OctetString, } from \"@peculiar/asn1-schema\";\nexport class Extension {\n    constructor(params = {}) {\n        this.extnID = \"\";\n        this.critical = Extension.CRITICAL;\n        this.extnValue = new OctetString();\n        Object.assign(this, params);\n    }\n}\nExtension.CRITICAL = false;\n__decorate([\n    AsnProp({ type: AsnPropTypes.ObjectIdentifier })\n], Extension.prototype, \"extnID\", void 0);\n__decorate([\n    AsnProp({\n        type: AsnPropTypes.Boolean,\n        defaultValue: Extension.CRITICAL,\n    })\n], Extension.prototype, \"critical\", void 0);\n__decorate([\n    AsnProp({ type: OctetString })\n], Extension.prototype, \"extnValue\", void 0);\nlet Extensions = Extensions_1 = class Extensions extends AsnArray {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, Extensions_1.prototype);\n    }\n};\nExtensions = Extensions_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence, itemType: Extension })\n], Extensions);\nexport { Extensions };\n", "export var Version;\n(function (Version) {\n    Version[Version[\"v1\"] = 0] = \"v1\";\n    Version[Version[\"v2\"] = 1] = \"v2\";\n    Version[Version[\"v3\"] = 2] = \"v3\";\n})(Version || (Version = {}));\n", "import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes } from \"@peculiar/asn1-schema\";\nimport { AlgorithmIdentifier } from \"./algorithm_identifier\";\nimport { TBSCertList } from \"./tbs_cert_list\";\nexport class CertificateList {\n    constructor(params = {}) {\n        this.tbsCertList = new TBSCertList();\n        this.signatureAlgorithm = new AlgorithmIdentifier();\n        this.signature = new ArrayBuffer(0);\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: TBSCertList })\n], CertificateList.prototype, \"tbsCertList\", void 0);\n__decorate([\n    AsnProp({ type: AlgorithmIdentifier })\n], CertificateList.prototype, \"signatureAlgorithm\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.BitString })\n], CertificateList.prototype, \"signature\", void 0);\n", "import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnIntegerArrayBufferConverter } from \"@peculiar/asn1-schema\";\nimport { AlgorithmIdentifier } from \"./algorithm_identifier\";\nimport { Name } from \"./name\";\nimport { Time } from \"./time\";\nimport { Extension } from \"./extension\";\nexport class RevokedCertificate {\n    constructor(params = {}) {\n        this.userCertificate = new ArrayBuffer(0);\n        this.revocationDate = new Time();\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerArrayBufferConverter })\n], RevokedCertificate.prototype, \"userCertificate\", void 0);\n__decorate([\n    AsnProp({ type: Time })\n], RevokedCertificate.prototype, \"revocationDate\", void 0);\n__decorate([\n    AsnProp({ type: Extension, optional: true, repeated: \"sequence\" })\n], RevokedCertificate.prototype, \"crlEntryExtensions\", void 0);\nexport class TBSCertList {\n    constructor(params = {}) {\n        this.signature = new AlgorithmIdentifier();\n        this.issuer = new Name();\n        this.thisUpdate = new Time();\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, optional: true })\n], TBSCertList.prototype, \"version\", void 0);\n__decorate([\n    AsnProp({ type: AlgorithmIdentifier })\n], TBSCertList.prototype, \"signature\", void 0);\n__decorate([\n    AsnProp({ type: Name })\n], TBSCertList.prototype, \"issuer\", void 0);\n__decorate([\n    AsnProp({ type: Time })\n], TBSCertList.prototype, \"thisUpdate\", void 0);\n__decorate([\n    AsnProp({ type: Time, optional: true })\n], TBSCertList.prototype, \"nextUpdate\", void 0);\n__decorate([\n    AsnProp({ type: RevokedCertificate, repeated: \"sequence\", optional: true })\n], TBSCertList.prototype, \"revokedCertificates\", void 0);\n__decorate([\n    AsnProp({ type: Extension, optional: true, context: 0, repeated: \"sequence\" })\n], TBSCertList.prototype, \"crlExtensions\", void 0);\n", "import { AsnParser } from '@peculiar/asn1-schema';\nimport { AuthorityKeyIdentifier, CertificateList, CRLDistributionPoints, id_ce_authorityKeyIdentifier, id_ce_cRLDistributionPoints, id_ce_subjectKeyIdentifier, SubjectKeyIdentifier, } from '@peculiar/asn1-x509';\nimport { isoUint8Array } from './iso/index.js';\nimport { fetch } from './fetch.js';\nconst cacheRevokedCerts = {};\n/**\n * A method to pull a CRL from a certificate and compare its serial number to the list of revoked\n * certificate serial numbers within the CRL.\n *\n * CRL certificate structure referenced from https://tools.ietf.org/html/rfc5280#page-117\n */\nexport async function isCertRevoked(cert) {\n    const { extensions } = cert.tbsCertificate;\n    if (!extensions) {\n        return false;\n    }\n    let extAuthorityKeyID;\n    let extSubjectKeyID;\n    let extCRLDistributionPoints;\n    extensions.forEach((ext) => {\n        if (ext.extnID === id_ce_authorityKeyIdentifier) {\n            extAuthorityKeyID = AsnParser.parse(ext.extnValue, AuthorityKeyIdentifier);\n        }\n        else if (ext.extnID === id_ce_subjectKeyIdentifier) {\n            extSubjectKeyID = AsnParser.parse(ext.extnValue, SubjectKeyIdentifier);\n        }\n        else if (ext.extnID === id_ce_cRLDistributionPoints) {\n            extCRLDistributionPoints = AsnParser.parse(ext.extnValue, CRLDistributionPoints);\n        }\n    });\n    // Check to see if we've got cached info for the cert's CA\n    let keyIdentifier = undefined;\n    if (extAuthorityKeyID && extAuthorityKeyID.keyIdentifier) {\n        keyIdentifier = isoUint8Array.toHex(new Uint8Array(extAuthorityKeyID.keyIdentifier.buffer));\n    }\n    else if (extSubjectKeyID) {\n        /**\n         * We might be dealing with a self-signed root certificate. Check the\n         * Subject key Identifier extension next.\n         */\n        keyIdentifier = isoUint8Array.toHex(new Uint8Array(extSubjectKeyID.buffer));\n    }\n    const certSerialHex = isoUint8Array.toHex(new Uint8Array(cert.tbsCertificate.serialNumber));\n    if (keyIdentifier) {\n        const cached = cacheRevokedCerts[keyIdentifier];\n        if (cached) {\n            const now = new Date();\n            // If there's a nextUpdate then make sure we're before it\n            if (!cached.nextUpdate || cached.nextUpdate > now) {\n                return cached.revokedCerts.indexOf(certSerialHex) >= 0;\n            }\n        }\n    }\n    const crlURL = extCRLDistributionPoints?.[0].distributionPoint?.fullName?.[0]\n        .uniformResourceIdentifier;\n    // If no URL is provided then we have nothing to check\n    if (!crlURL) {\n        return false;\n    }\n    // Download and read the CRL\n    let certListBytes;\n    try {\n        const respCRL = await fetch(crlURL);\n        certListBytes = await respCRL.arrayBuffer();\n    }\n    catch (_err) {\n        return false;\n    }\n    let data;\n    try {\n        data = AsnParser.parse(certListBytes, CertificateList);\n    }\n    catch (_err) {\n        // Something was malformed with the CRL, so pass\n        return false;\n    }\n    const newCached = {\n        revokedCerts: [],\n        nextUpdate: undefined,\n    };\n    // nextUpdate\n    if (data.tbsCertList.nextUpdate) {\n        newCached.nextUpdate = data.tbsCertList.nextUpdate.getTime();\n    }\n    // revokedCertificates\n    const revokedCerts = data.tbsCertList.revokedCertificates;\n    if (revokedCerts) {\n        for (const cert of revokedCerts) {\n            const revokedHex = isoUint8Array.toHex(new Uint8Array(cert.userCertificate));\n            newCached.revokedCerts.push(revokedHex);\n        }\n        // Cache the results\n        if (keyIdentifier) {\n            cacheRevokedCerts[keyIdentifier] = newCached;\n        }\n        return newCached.revokedCerts.indexOf(certSerialHex) >= 0;\n    }\n    return false;\n}\n", "/**\n * A simple method for requesting data via standard `fetch`. Should work\n * across multiple runtimes.\n */\nexport function fetch(url) {\n    return _fetchInternals.stubThis(url);\n}\n/**\n * Make it possible to stub the return value during testing\n * @ignore Don't include this in docs output\n */\nexport const _fetchInternals = {\n    stubThis: (url) => globalThis.fetch(url),\n};\n", "import { decodeAuthenticatorExtensions, } from './decodeAuthenticatorExtensions.js';\nimport { isoCBOR, isoUint8Array } from './iso/index.js';\n/**\n * Make sense of the authData buffer contained in an Attestation\n */\nexport function parseAuthenticatorData(authData) {\n    if (authData.byteLength < 37) {\n        throw new Error(`Authenticator data was ${authData.byteLength} bytes, expected at least 37 bytes`);\n    }\n    let pointer = 0;\n    const dataView = isoUint8Array.toDataView(authData);\n    const rpIdHash = authData.slice(pointer, pointer += 32);\n    const flagsBuf = authData.slice(pointer, pointer += 1);\n    const flagsInt = flagsBuf[0];\n    // Bit positions can be referenced here:\n    // https://www.w3.org/TR/webauthn-2/#flags\n    const flags = {\n        up: !!(flagsInt & (1 << 0)), // User Presence\n        uv: !!(flagsInt & (1 << 2)), // User Verified\n        be: !!(flagsInt & (1 << 3)), // Backup Eligibility\n        bs: !!(flagsInt & (1 << 4)), // Backup State\n        at: !!(flagsInt & (1 << 6)), // Attested Credential Data Present\n        ed: !!(flagsInt & (1 << 7)), // Extension Data Present\n        flagsInt,\n    };\n    const counterBuf = authData.slice(pointer, pointer + 4);\n    const counter = dataView.getUint32(pointer, false);\n    pointer += 4;\n    let aaguid = undefined;\n    let credentialID = undefined;\n    let credentialPublicKey = undefined;\n    if (flags.at) {\n        aaguid = authData.slice(pointer, pointer += 16);\n        const credIDLen = dataView.getUint16(pointer);\n        pointer += 2;\n        credentialID = authData.slice(pointer, pointer += credIDLen);\n        /**\n         * Firefox 117 incorrectly CBOR-encodes authData when EdDSA (-8) is used for the public key.\n         * A CBOR \"Map of 3 items\" (0xa3) should be \"Map of 4 items\" (0xa4), and if we manually adjust\n         * the single byte there's a good chance the authData can be correctly parsed.\n         *\n         * This browser release also incorrectly uses the string labels \"OKP\" and \"Ed25519\" instead of\n         * their integer representations for kty and crv respectively. That's why the COSE public key\n         * in the hex below looks so odd.\n         */\n        // Bytes decode to `{ 1: \"OKP\", 3: -8, -1: \"Ed25519\" }` (it's missing key -2 a.k.a. COSEKEYS.x)\n        const badEdDSACBOR = isoUint8Array.fromHex('a301634f4b500327206745643235353139');\n        const bytesAtCurrentPosition = authData.slice(pointer, pointer + badEdDSACBOR.byteLength);\n        let foundBadCBOR = false;\n        if (isoUint8Array.areEqual(badEdDSACBOR, bytesAtCurrentPosition)) {\n            // Change the bad CBOR 0xa3 to 0xa4 so that the credential public key can be recognized\n            foundBadCBOR = true;\n            authData[pointer] = 0xa4;\n        }\n        // Decode the next CBOR item in the buffer, then re-encode it back to a Buffer\n        const firstDecoded = isoCBOR.decodeFirst(authData.slice(pointer));\n        const firstEncoded = Uint8Array.from(\n        /**\n         * Casting to `Map` via `as unknown` here because TS doesn't make it possible to define Maps\n         * with discrete keys and properties with known types per pair, and CBOR libs typically parse\n         * CBOR Major Type 5 to `Map` because you can have numbers for keys. A `COSEPublicKey` can be\n         * generalized as \"a Map with numbers for keys and either numbers or bytes for values\" though.\n         * If this presumption falls apart then other parts of verification later on will fail so we\n         * should be safe doing this here.\n         */\n        isoCBOR.encode(firstDecoded));\n        if (foundBadCBOR) {\n            // Restore the bit we changed so that `authData` is the same as it came in and won't break\n            // signature verification.\n            authData[pointer] = 0xa3;\n        }\n        credentialPublicKey = firstEncoded;\n        pointer += firstEncoded.byteLength;\n    }\n    let extensionsData = undefined;\n    let extensionsDataBuffer = undefined;\n    if (flags.ed) {\n        const firstDecoded = isoCBOR.decodeFirst(authData.slice(pointer));\n        extensionsDataBuffer = Uint8Array.from(isoCBOR.encode(firstDecoded));\n        extensionsData = decodeAuthenticatorExtensions(extensionsDataBuffer);\n        pointer += extensionsDataBuffer.byteLength;\n    }\n    // Pointer should be at the end of the authenticator data, otherwise too much data was sent\n    if (authData.byteLength > pointer) {\n        throw new Error('Leftover bytes detected while parsing authenticator data');\n    }\n    return _parseAuthenticatorDataInternals.stubThis({\n        rpIdHash,\n        flagsBuf,\n        flags,\n        counter,\n        counterBuf,\n        aaguid,\n        credentialID,\n        credentialPublicKey,\n        extensionsData,\n        extensionsDataBuffer,\n    });\n}\n/**\n * Make it possible to stub the return value during testing\n * @ignore Don't include this in docs output\n */\nexport const _parseAuthenticatorDataInternals = {\n    stubThis: (value) => value,\n};\n", "import { isoCBOR } from './iso/index.js';\n/**\n * Convert authenticator extension data buffer to a proper object\n *\n * @param extensionData Authenticator Extension Data buffer\n */\nexport function decodeAuthenticatorExtensions(extensionData) {\n    let toCBOR;\n    try {\n        toCBOR = isoCBOR.decodeFirst(extensionData);\n    }\n    catch (err) {\n        const _err = err;\n        throw new Error(`Error decoding authenticator extensions: ${_err.message}`);\n    }\n    return convertMapToObjectDeep(toCBOR);\n}\n/**\n * CBOR-encoded extensions can be deeply-nested Maps, which are too deep for a simple\n * `Object.entries()`. This method will recursively make sure that all Maps are converted into\n * basic objects.\n */\nfunction convertMapToObjectDeep(input) {\n    const mapped = {};\n    for (const [key, value] of input) {\n        if (value instanceof Map) {\n            mapped[key] = convertMapToObjectDeep(value);\n        }\n        else {\n            mapped[key] = value;\n        }\n    }\n    return mapped;\n}\n", "import { isoCrypto, isoUint8Array } from './iso/index.js';\n/**\n * Returns hash digest of the given data, using the given algorithm when provided. Defaults to using\n * SHA-256.\n */\nexport function toHash(data, algorithm = -7) {\n    if (typeof data === 'string') {\n        data = isoUint8Array.fromUTF8String(data);\n    }\n    const digest = isoCrypto.digest(data, algorithm);\n    return digest;\n}\n", "import { AsnSerializer } from '@peculiar/asn1-schema';\nimport { isCertRevoked } from './isCertRevoked.js';\nimport { verifySignature } from './verifySignature.js';\nimport { mapX509SignatureAlgToCOSEAlg } from './mapX509SignatureAlgToCOSEAlg.js';\nimport { getCertificateInfo } from './getCertificateInfo.js';\nimport { convertPEMToBytes } from './convertPEMToBytes.js';\n/**\n * Traverse an array of PEM certificates and ensure they form a proper chain\n * @param x5cCertsPEM Typically the result of `x5c.map(convertASN1toPEM)`\n * @param trustAnchorsPEM PEM-formatted certs that an attestation statement x5c may chain back to\n */\nexport async function validateCertificatePath(x5cCertsPEM, trustAnchorsPEM = []) {\n    if (trustAnchorsPEM.length === 0) {\n        // We have no trust anchors to chain back to, so skip path validation\n        return true;\n    }\n    let invalidSubjectAndIssuerError = false;\n    let certificateNotYetValidOrExpiredErrorMessage = undefined;\n    for (const anchorPEM of trustAnchorsPEM) {\n        try {\n            const certsWithTrustAnchor = x5cCertsPEM.concat([anchorPEM]);\n            await _validatePath(certsWithTrustAnchor);\n            // If we successfully validated a path then there's no need to continue. Reset any existing\n            // errors that were thrown by earlier trust anchors\n            invalidSubjectAndIssuerError = false;\n            certificateNotYetValidOrExpiredErrorMessage = undefined;\n            break;\n        }\n        catch (err) {\n            if (err instanceof InvalidSubjectAndIssuer) {\n                invalidSubjectAndIssuerError = true;\n            }\n            else if (err instanceof CertificateNotYetValidOrExpired) {\n                certificateNotYetValidOrExpiredErrorMessage = err.message;\n            }\n            else {\n                throw err;\n            }\n        }\n    }\n    // We tried multiple trust anchors and none of them worked\n    if (invalidSubjectAndIssuerError) {\n        throw new InvalidSubjectAndIssuer();\n    }\n    else if (certificateNotYetValidOrExpiredErrorMessage) {\n        throw new CertificateNotYetValidOrExpired(certificateNotYetValidOrExpiredErrorMessage);\n    }\n    return true;\n}\n/**\n * @param x5cCerts X.509 `x5c` certs in PEM string format\n * @param anchorCert X.509 trust anchor cert in PEM string format\n */\nasync function _validatePath(x5cCertsWithTrustAnchorPEM) {\n    if (new Set(x5cCertsWithTrustAnchorPEM).size !== x5cCertsWithTrustAnchorPEM.length) {\n        throw new Error('Invalid certificate path: found duplicate certificates');\n    }\n    // Make sure no certs are revoked, and all are within their time validity window\n    for (const certificatePEM of x5cCertsWithTrustAnchorPEM) {\n        const certInfo = getCertificateInfo(convertPEMToBytes(certificatePEM));\n        await assertCertNotRevoked(certInfo.parsedCertificate);\n        assertCertIsWithinValidTimeWindow(certInfo, certificatePEM);\n    }\n    // Make sure each x5c cert is issued by the next certificate in the chain\n    for (let i = 0; i < (x5cCertsWithTrustAnchorPEM.length - 1); i += 1) {\n        const subjectPem = x5cCertsWithTrustAnchorPEM[i];\n        const issuerPem = x5cCertsWithTrustAnchorPEM[i + 1];\n        const subjectInfo = getCertificateInfo(convertPEMToBytes(subjectPem));\n        const issuerInfo = getCertificateInfo(convertPEMToBytes(issuerPem));\n        // Make sure subject issuer is issuer subject\n        if (subjectInfo.issuer.combined !== issuerInfo.subject.combined) {\n            throw new InvalidSubjectAndIssuer();\n        }\n        const issuerCertIsRootCert = issuerInfo.issuer.combined === issuerInfo.subject.combined;\n        await assertSubjectIsSignedByIssuer(subjectInfo.parsedCertificate, issuerPem);\n        // Perform one final check if the issuer cert is also a root certificate\n        if (issuerCertIsRootCert) {\n            await assertSubjectIsSignedByIssuer(issuerInfo.parsedCertificate, issuerPem);\n        }\n    }\n    return true;\n}\n/**\n * Check if the certificate is revoked or not. If it is, raise an error\n */\nasync function assertCertNotRevoked(certificate) {\n    // Check for certificate revocation\n    const subjectCertRevoked = await isCertRevoked(certificate);\n    if (subjectCertRevoked) {\n        throw new Error(`Found revoked certificate in certificate path`);\n    }\n}\n/**\n * Require the cert to be within its notBefore and notAfter time window\n *\n * @param certInfo Parsed cert information\n * @param certPEM PEM-formatted certificate, for error reporting\n */\nfunction assertCertIsWithinValidTimeWindow(certInfo, certPEM) {\n    const { notBefore, notAfter } = certInfo;\n    const now = new Date(Date.now());\n    if (notBefore > now || notAfter < now) {\n        throw new CertificateNotYetValidOrExpired(`Certificate is not yet valid or expired: ${certPEM}`);\n    }\n}\n/**\n * Ensure that the subject cert has been signed by the next cert in the chain\n */\nasync function assertSubjectIsSignedByIssuer(subjectCert, issuerPEM) {\n    // Verify the subject certificate's signature with the issuer cert's public key\n    const data = AsnSerializer.serialize(subjectCert.tbsCertificate);\n    const signature = subjectCert.signatureValue;\n    const signatureAlgorithm = mapX509SignatureAlgToCOSEAlg(subjectCert.signatureAlgorithm.algorithm);\n    const issuerCertBytes = convertPEMToBytes(issuerPEM);\n    const verified = await verifySignature({\n        data: new Uint8Array(data),\n        signature: new Uint8Array(signature),\n        x509Certificate: issuerCertBytes,\n        hashAlgorithm: signatureAlgorithm,\n    });\n    if (!verified) {\n        throw new InvalidSubjectSignatureForIssuer();\n    }\n}\n// Custom errors to help pass on certain errors\nclass InvalidSubjectAndIssuer extends Error {\n    constructor() {\n        const message = 'Subject issuer did not match issuer subject';\n        super(message);\n        this.name = 'InvalidSubjectAndIssuer';\n    }\n}\nclass InvalidSubjectSignatureForIssuer extends Error {\n    constructor() {\n        const message = 'Subject signature was invalid for issuer';\n        super(message);\n        this.name = 'InvalidSubjectSignatureForIssuer';\n    }\n}\nclass CertificateNotYetValidOrExpired extends Error {\n    constructor(message) {\n        super(message);\n        this.name = 'CertificateNotYetValidOrExpired';\n    }\n}\n", "import { isoCrypto } from './iso/index.js';\nimport { decodeCredentialPublicKey } from './decodeCredentialPublicKey.js';\nimport { convertX509PublicKeyToCOSE } from './convertX509PublicKeyToCOSE.js';\n/**\n * Verify an authenticator's signature\n */\nexport function verifySignature(opts) {\n    const { signature, data, credentialPublicKey, x509Certificate, hashAlgorithm, } = opts;\n    if (!x509Certificate && !credentialPublicKey) {\n        throw new Error('Must declare either \"leafCert\" or \"credentialPublicKey\"');\n    }\n    if (x509Certificate && credentialPublicKey) {\n        throw new Error('Must not declare both \"leafCert\" and \"credentialPublicKey\"');\n    }\n    let cosePublicKey = new Map();\n    if (credentialPublicKey) {\n        cosePublicKey = decodeCredentialPublicKey(credentialPublicKey);\n    }\n    else if (x509Certificate) {\n        cosePublicKey = convertX509PublicKeyToCOSE(x509Certificate);\n    }\n    return _verifySignatureInternals.stubThis(isoCrypto.verify({\n        cosePublicKey,\n        signature,\n        data,\n        shaHashOverride: hashAlgorithm,\n    }));\n}\n/**\n * Make it possible to stub the return value during testing\n * @ignore Don't include this in docs output\n */\nexport const _verifySignatureInternals = {\n    stubThis: (value) => value,\n};\n", "import { AsnParser } from '@peculiar/asn1-schema';\nimport { Certificate } from '@peculiar/asn1-x509';\nimport { ECParameters, id_ecPublicKey, id_secp256r1, id_secp384r1 } from '@peculiar/asn1-ecc';\nimport { COSECRV, COSEKEYS, COSEKTY, } from './cose.js';\nimport { RSAPublicKey } from '@peculiar/asn1-rsa';\nimport { mapX509SignatureAlgToCOSEAlg } from './mapX509SignatureAlgToCOSEAlg.js';\nexport function convertX509PublicKeyToCOSE(x509Certificate) {\n    let cosePublicKey = new Map();\n    /**\n     * Time to extract the public key from an X.509 certificate\n     */\n    const x509 = AsnParser.parse(x509Certificate, Certificate);\n    const { tbsCertificate } = x509;\n    const { subjectPublicKeyInfo, signature: _tbsSignature } = tbsCertificate;\n    const signatureAlgorithm = _tbsSignature.algorithm;\n    const publicKeyAlgorithmID = subjectPublicKeyInfo.algorithm.algorithm;\n    if (publicKeyAlgorithmID === id_ecPublicKey) {\n        /**\n         * EC2 Public Key\n         */\n        if (!subjectPublicKeyInfo.algorithm.parameters) {\n            throw new Error('Certificate public key was missing parameters (EC2)');\n        }\n        const ecParameters = AsnParser.parse(new Uint8Array(subjectPublicKeyInfo.algorithm.parameters), ECParameters);\n        let crv = -999;\n        const { namedCurve } = ecParameters;\n        if (namedCurve === id_secp256r1) {\n            crv = COSECRV.P256;\n        }\n        else if (namedCurve === id_secp384r1) {\n            crv = COSECRV.P384;\n        }\n        else {\n            throw new Error(`Certificate public key contained unexpected namedCurve ${namedCurve} (EC2)`);\n        }\n        const subjectPublicKey = new Uint8Array(subjectPublicKeyInfo.subjectPublicKey);\n        let x;\n        let y;\n        if (subjectPublicKey[0] === 0x04) {\n            // Public key is in \"uncompressed form\", so we can split the remaining bytes in half\n            let pointer = 1;\n            const halfLength = (subjectPublicKey.length - 1) / 2;\n            x = subjectPublicKey.slice(pointer, pointer += halfLength);\n            y = subjectPublicKey.slice(pointer);\n        }\n        else {\n            throw new Error('TODO: Figure out how to handle public keys in \"compressed form\"');\n        }\n        const coseEC2PubKey = new Map();\n        coseEC2PubKey.set(COSEKEYS.kty, COSEKTY.EC2);\n        coseEC2PubKey.set(COSEKEYS.alg, mapX509SignatureAlgToCOSEAlg(signatureAlgorithm));\n        coseEC2PubKey.set(COSEKEYS.crv, crv);\n        coseEC2PubKey.set(COSEKEYS.x, x);\n        coseEC2PubKey.set(COSEKEYS.y, y);\n        cosePublicKey = coseEC2PubKey;\n    }\n    else if (publicKeyAlgorithmID === '1.2.840.113549.1.1.1') {\n        /**\n         * RSA public key\n         */\n        const rsaPublicKey = AsnParser.parse(subjectPublicKeyInfo.subjectPublicKey, RSAPublicKey);\n        const coseRSAPubKey = new Map();\n        coseRSAPubKey.set(COSEKEYS.kty, COSEKTY.RSA);\n        coseRSAPubKey.set(COSEKEYS.alg, mapX509SignatureAlgToCOSEAlg(signatureAlgorithm));\n        coseRSAPubKey.set(COSEKEYS.n, new Uint8Array(rsaPublicKey.modulus));\n        coseRSAPubKey.set(COSEKEYS.e, new Uint8Array(rsaPublicKey.publicExponent));\n        cosePublicKey = coseRSAPubKey;\n    }\n    else {\n        throw new Error(`Certificate public key contained unexpected algorithm ID ${publicKeyAlgorithmID}`);\n    }\n    return cosePublicKey;\n}\n", "export * from \"./algorithms\";\nexport * from \"./ec_parameters\";\nexport * from \"./ec_private_key\";\nexport * from \"./ec_signature_value\";\nexport * from \"./object_identifiers\";\nexport * from \"./rfc3279\";\n", "import { AlgorithmIdentifier } from \"@peculiar/asn1-x509\";\nimport * as oid from \"./object_identifiers\";\nfunction create(algorithm) {\n    return new AlgorithmIdentifier({ algorithm });\n}\nexport const ecdsaWithSHA1 = create(oid.id_ecdsaWithSHA1);\nexport const ecdsaWithSHA224 = create(oid.id_ecdsaWithSHA224);\nexport const ecdsaWithSHA256 = create(oid.id_ecdsaWithSHA256);\nexport const ecdsaWithSHA384 = create(oid.id_ecdsaWithSHA384);\nexport const ecdsaWithSHA512 = create(oid.id_ecdsaWithSHA512);\n", "export const id_ecPublicKey = \"1.2.840.10045.2.1\";\nexport const id_ecDH = \"1.3.132.1.12\";\nexport const id_ecMQV = \"1.3.132.1.13\";\nexport const id_ecdsaWithSHA1 = \"1.2.840.10045.4.1\";\nexport const id_ecdsaWithSHA224 = \"1.2.840.10045.4.3.1\";\nexport const id_ecdsaWithSHA256 = \"1.2.840.10045.4.3.2\";\nexport const id_ecdsaWithSHA384 = \"1.2.840.10045.4.3.3\";\nexport const id_ecdsaWithSHA512 = \"1.2.840.10045.4.3.4\";\nexport const id_secp192r1 = \"1.2.840.10045.3.1.1\";\nexport const id_sect163k1 = \"1.3.132.0.1\";\nexport const id_sect163r2 = \"1.3.132.0.15\";\nexport const id_secp224r1 = \"1.3.132.0.33\";\nexport const id_sect233k1 = \"1.3.132.0.26\";\nexport const id_sect233r1 = \"1.3.132.0.27\";\nexport const id_secp256r1 = \"1.2.840.10045.3.1.7\";\nexport const id_sect283k1 = \"1.3.132.0.16\";\nexport const id_sect283r1 = \"1.3.132.0.17\";\nexport const id_secp384r1 = \"1.3.132.0.34\";\nexport const id_sect409k1 = \"1.3.132.0.36\";\nexport const id_sect409r1 = \"1.3.132.0.37\";\nexport const id_secp521r1 = \"1.3.132.0.35\";\nexport const id_sect571k1 = \"1.3.132.0.38\";\nexport const id_sect571r1 = \"1.3.132.0.39\";\n", "import { __decorate } from \"tslib\";\nimport { AsnType, AsnTypeTypes, AsnProp, AsnPropTypes } from \"@peculiar/asn1-schema\";\nimport { SpecifiedECDomain } from \"./rfc3279\";\nlet ECParameters = class ECParameters {\n    constructor(params = {}) {\n        Object.assign(this, params);\n    }\n};\n__decorate([\n    AsnProp({ type: AsnPropTypes.ObjectIdentifier })\n], ECParameters.prototype, \"namedCurve\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Null })\n], ECParameters.prototype, \"implicitCurve\", void 0);\n__decorate([\n    AsnProp({ type: SpecifiedECDomain })\n], ECParameters.prototype, \"specifiedCurve\", void 0);\nECParameters = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], ECParameters);\nexport { ECParameters };\n", "import { __decorate } from \"tslib\";\nimport { AsnType, AsnTypeTypes, AsnProp, AsnPropTypes, OctetString, AsnIntegerArrayBufferConverter, } from \"@peculiar/asn1-schema\";\nlet FieldID = class FieldID {\n    constructor(params = {}) {\n        Object.assign(this, params);\n    }\n};\n__decorate([\n    AsnProp({ type: AsnPropTypes.ObjectIdentifier })\n], FieldID.prototype, \"fieldType\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Any })\n], FieldID.prototype, \"parameters\", void 0);\nFieldID = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence })\n], FieldID);\nexport { FieldID };\nexport class ECPoint extends OctetString {\n}\nexport class FieldElement extends OctetString {\n}\nlet Curve = class Curve {\n    constructor(params = {}) {\n        Object.assign(this, params);\n    }\n};\n__decorate([\n    AsnProp({ type: AsnPropTypes.OctetString })\n], Curve.prototype, \"a\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.OctetString })\n], Curve.prototype, \"b\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.BitString, optional: true })\n], Curve.prototype, \"seed\", void 0);\nCurve = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence })\n], Curve);\nexport { Curve };\nexport var ECPVer;\n(function (ECPVer) {\n    ECPVer[ECPVer[\"ecpVer1\"] = 1] = \"ecpVer1\";\n})(ECPVer || (ECPVer = {}));\nlet SpecifiedECDomain = class SpecifiedECDomain {\n    constructor(params = {}) {\n        this.version = ECPVer.ecpVer1;\n        Object.assign(this, params);\n    }\n};\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer })\n], SpecifiedECDomain.prototype, \"version\", void 0);\n__decorate([\n    AsnProp({ type: FieldID })\n], SpecifiedECDomain.prototype, \"fieldID\", void 0);\n__decorate([\n    AsnProp({ type: Curve })\n], SpecifiedECDomain.prototype, \"curve\", void 0);\n__decorate([\n    AsnProp({ type: ECPoint })\n], SpecifiedECDomain.prototype, \"base\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerArrayBufferConverter })\n], SpecifiedECDomain.prototype, \"order\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, optional: true })\n], SpecifiedECDomain.prototype, \"cofactor\", void 0);\nSpecifiedECDomain = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence })\n], SpecifiedECDomain);\nexport { SpecifiedECDomain };\n", "import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, OctetString } from \"@peculiar/asn1-schema\";\nimport { ECParameters } from \"./ec_parameters\";\nexport class ECPrivateKey {\n    constructor(params = {}) {\n        this.version = 1;\n        this.privateKey = new OctetString();\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer })\n], ECPrivateKey.prototype, \"version\", void 0);\n__decorate([\n    AsnProp({ type: OctetString })\n], ECPrivateKey.prototype, \"privateKey\", void 0);\n__decorate([\n    AsnProp({ type: ECParameters, context: 0, optional: true })\n], ECPrivateKey.prototype, \"parameters\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.BitString, context: 1, optional: true })\n], ECPrivateKey.prototype, \"publicKey\", void 0);\n", "import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnIntegerArrayBufferConverter } from \"@peculiar/asn1-schema\";\nexport class ECDSASigValue {\n    constructor(params = {}) {\n        this.r = new ArrayBuffer(0);\n        this.s = new ArrayBuffer(0);\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerArrayBufferConverter })\n], ECDSASigValue.prototype, \"r\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerArrayBufferConverter })\n], ECDSASigValue.prototype, \"s\", void 0);\n", "export * from \"./parameters\";\nexport * from \"./algorithms\";\nexport * from \"./object_identifiers\";\nexport * from \"./other_prime_info\";\nexport * from \"./rsa_private_key\";\nexport * from \"./rsa_public_key\";\n", "export * from \"./rsaes_oaep\";\nexport * from \"./rsassa_pss\";\nexport * from \"./rsassa_pkcs1_v1_5\";\n", "import { __decorate } from \"tslib\";\nimport { AsnProp, AsnConvert } from \"@peculiar/asn1-schema\";\nimport { AlgorithmIdentifier } from \"@peculiar/asn1-x509\";\nimport { id_mgf1, id_RSAES_OAEP } from \"../object_identifiers\";\nimport { sha1, mgf1SHA1, pSpecifiedEmpty } from \"../algorithms\";\nexport class RsaEsOaepParams {\n    constructor(params = {}) {\n        this.hashAlgorithm = new AlgorithmIdentifier(sha1);\n        this.maskGenAlgorithm = new AlgorithmIdentifier({\n            algorithm: id_mgf1,\n            parameters: AsnConvert.serialize(sha1),\n        });\n        this.pSourceAlgorithm = new AlgorithmIdentifier(pSpecifiedEmpty);\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AlgorithmIdentifier, context: 0, defaultValue: sha1 })\n], RsaEsOaepParams.prototype, \"hashAlgorithm\", void 0);\n__decorate([\n    AsnProp({ type: AlgorithmIdentifier, context: 1, defaultValue: mgf1SHA1 })\n], RsaEsOaepParams.prototype, \"maskGenAlgorithm\", void 0);\n__decorate([\n    AsnProp({ type: AlgorithmIdentifier, context: 2, defaultValue: pSpecifiedEmpty })\n], RsaEsOaepParams.prototype, \"pSourceAlgorithm\", void 0);\nexport const RSAES_OAEP = new AlgorithmIdentifier({\n    algorithm: id_RSAES_OAEP,\n    parameters: AsnConvert.serialize(new RsaEsOaepParams()),\n});\n", "export const id_pkcs_1 = \"1.2.840.113549.1.1\";\nexport const id_rsaEncryption = `${id_pkcs_1}.1`;\nexport const id_RSAES_OAEP = `${id_pkcs_1}.7`;\nexport const id_pSpecified = `${id_pkcs_1}.9`;\nexport const id_RSASSA_PSS = `${id_pkcs_1}.10`;\nexport const id_md2WithRSAEncryption = `${id_pkcs_1}.2`;\nexport const id_md5WithRSAEncryption = `${id_pkcs_1}.4`;\nexport const id_sha1WithRSAEncryption = `${id_pkcs_1}.5`;\nexport const id_sha224WithRSAEncryption = `${id_pkcs_1}.14`;\nexport const id_ssha224WithRSAEncryption = id_sha224WithRSAEncryption;\nexport const id_sha256WithRSAEncryption = `${id_pkcs_1}.11`;\nexport const id_sha384WithRSAEncryption = `${id_pkcs_1}.12`;\nexport const id_sha512WithRSAEncryption = `${id_pkcs_1}.13`;\nexport const id_sha512_224WithRSAEncryption = `${id_pkcs_1}.15`;\nexport const id_sha512_256WithRSAEncryption = `${id_pkcs_1}.16`;\nexport const id_sha1 = \"1.3.14.3.2.26\";\nexport const id_sha224 = \"2.16.840.1.101.3.4.2.4\";\nexport const id_sha256 = \"2.16.840.1.101.3.4.2.1\";\nexport const id_sha384 = \"2.16.840.1.101.3.4.2.2\";\nexport const id_sha512 = \"2.16.840.1.101.3.4.2.3\";\nexport const id_sha512_224 = \"2.16.840.1.101.3.4.2.5\";\nexport const id_sha512_256 = \"2.16.840.1.101.3.4.2.6\";\nexport const id_md2 = \"1.2.840.113549.2.2\";\nexport const id_md5 = \"1.2.840.113549.2.5\";\nexport const id_mgf1 = `${id_pkcs_1}.8`;\n", "import { AsnConvert, AsnOctetStringConverter } from \"@peculiar/asn1-schema\";\nimport { AlgorithmIdentifier } from \"@peculiar/asn1-x509\";\nimport * as oid from \"./object_identifiers\";\nfunction create(algorithm) {\n    return new AlgorithmIdentifier({ algorithm, parameters: null });\n}\nexport const md2 = create(oid.id_md2);\nexport const md4 = create(oid.id_md5);\nexport const sha1 = create(oid.id_sha1);\nexport const sha224 = create(oid.id_sha224);\nexport const sha256 = create(oid.id_sha256);\nexport const sha384 = create(oid.id_sha384);\nexport const sha512 = create(oid.id_sha512);\nexport const sha512_224 = create(oid.id_sha512_224);\nexport const sha512_256 = create(oid.id_sha512_256);\nexport const mgf1SHA1 = new AlgorithmIdentifier({\n    algorithm: oid.id_mgf1,\n    parameters: AsnConvert.serialize(sha1),\n});\nexport const pSpecifiedEmpty = new AlgorithmIdentifier({\n    algorithm: oid.id_pSpecified,\n    parameters: AsnConvert.serialize(AsnOctetStringConverter.toASN(new Uint8Array([\n        0xda, 0x39, 0xa3, 0xee, 0x5e, 0x6b, 0x4b, 0x0d, 0x32, 0x55, 0xbf, 0xef, 0x95, 0x60, 0x18,\n        0x90, 0xaf, 0xd8, 0x07, 0x09,\n    ]).buffer)),\n});\nexport const rsaEncryption = create(oid.id_rsaEncryption);\nexport const md2WithRSAEncryption = create(oid.id_md2WithRSAEncryption);\nexport const md5WithRSAEncryption = create(oid.id_md5WithRSAEncryption);\nexport const sha1WithRSAEncryption = create(oid.id_sha1WithRSAEncryption);\nexport const sha224WithRSAEncryption = create(oid.id_sha512_224WithRSAEncryption);\nexport const sha256WithRSAEncryption = create(oid.id_sha512_256WithRSAEncryption);\nexport const sha384WithRSAEncryption = create(oid.id_sha384WithRSAEncryption);\nexport const sha512WithRSAEncryption = create(oid.id_sha512WithRSAEncryption);\nexport const sha512_224WithRSAEncryption = create(oid.id_sha512_224WithRSAEncryption);\nexport const sha512_256WithRSAEncryption = create(oid.id_sha512_256WithRSAEncryption);\n", "import { __decorate } from \"tslib\";\nimport { AsnProp, AsnConvert, AsnPropTypes } from \"@peculiar/asn1-schema\";\nimport { AlgorithmIdentifier } from \"@peculiar/asn1-x509\";\nimport { id_mgf1, id_RSASSA_PSS } from \"../object_identifiers\";\nimport { sha1, mgf1SHA1 } from \"../algorithms\";\nexport class RsaSaPssParams {\n    constructor(params = {}) {\n        this.hashAlgorithm = new AlgorithmIdentifier(sha1);\n        this.maskGenAlgorithm = new AlgorithmIdentifier({\n            algorithm: id_mgf1,\n            parameters: AsnConvert.serialize(sha1),\n        });\n        this.saltLength = 20;\n        this.trailerField = 1;\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AlgorithmIdentifier, context: 0, defaultValue: sha1 })\n], RsaSaPssParams.prototype, \"hashAlgorithm\", void 0);\n__decorate([\n    AsnProp({ type: AlgorithmIdentifier, context: 1, defaultValue: mgf1SHA1 })\n], RsaSaPssParams.prototype, \"maskGenAlgorithm\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, context: 2, defaultValue: 20 })\n], RsaSaPssParams.prototype, \"saltLength\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, context: 3, defaultValue: 1 })\n], RsaSaPssParams.prototype, \"trailerField\", void 0);\nexport const RSASSA_PSS = new AlgorithmIdentifier({\n    algorithm: id_RSASSA_PSS,\n    parameters: AsnConvert.serialize(new RsaSaPssParams()),\n});\n", "import { __decorate } from \"tslib\";\nimport { AlgorithmIdentifier } from \"@peculiar/asn1-x509\";\nimport { AsnProp, OctetString } from \"@peculiar/asn1-schema\";\nexport class DigestInfo {\n    constructor(params = {}) {\n        this.digestAlgorithm = new AlgorithmIdentifier();\n        this.digest = new OctetString();\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AlgorithmIdentifier })\n], DigestInfo.prototype, \"digestAlgorithm\", void 0);\n__decorate([\n    AsnProp({ type: OctetString })\n], DigestInfo.prototype, \"digest\", void 0);\n", "var OtherPrimeInfos_1;\nimport { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnIntegerArrayBufferConverter, AsnArray, AsnType, AsnTypeTypes, } from \"@peculiar/asn1-schema\";\nexport class OtherPrimeInfo {\n    constructor(params = {}) {\n        this.prime = new ArrayBuffer(0);\n        this.exponent = new ArrayBuffer(0);\n        this.coefficient = new ArrayBuffer(0);\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerArrayBufferConverter })\n], OtherPrimeInfo.prototype, \"prime\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerArrayBufferConverter })\n], OtherPrimeInfo.prototype, \"exponent\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerArrayBufferConverter })\n], OtherPrimeInfo.prototype, \"coefficient\", void 0);\nlet OtherPrimeInfos = OtherPrimeInfos_1 = class OtherPrimeInfos extends AsnArray {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, OtherPrimeInfos_1.prototype);\n    }\n};\nOtherPrimeInfos = OtherPrimeInfos_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence, itemType: OtherPrimeInfo })\n], OtherPrimeInfos);\nexport { OtherPrimeInfos };\n", "import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnIntegerArrayBufferConverter } from \"@peculiar/asn1-schema\";\nimport { OtherPrimeInfos } from \"./other_prime_info\";\nexport class RSAPrivateKey {\n    constructor(params = {}) {\n        this.version = 0;\n        this.modulus = new ArrayBuffer(0);\n        this.publicExponent = new ArrayBuffer(0);\n        this.privateExponent = new ArrayBuffer(0);\n        this.prime1 = new ArrayBuffer(0);\n        this.prime2 = new ArrayBuffer(0);\n        this.exponent1 = new ArrayBuffer(0);\n        this.exponent2 = new ArrayBuffer(0);\n        this.coefficient = new ArrayBuffer(0);\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer })\n], RSAPrivateKey.prototype, \"version\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerArrayBufferConverter })\n], RSAPrivateKey.prototype, \"modulus\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerArrayBufferConverter })\n], RSAPrivateKey.prototype, \"publicExponent\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerArrayBufferConverter })\n], RSAPrivateKey.prototype, \"privateExponent\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerArrayBufferConverter })\n], RSAPrivateKey.prototype, \"prime1\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerArrayBufferConverter })\n], RSAPrivateKey.prototype, \"prime2\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerArrayBufferConverter })\n], RSAPrivateKey.prototype, \"exponent1\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerArrayBufferConverter })\n], RSAPrivateKey.prototype, \"exponent2\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerArrayBufferConverter })\n], RSAPrivateKey.prototype, \"coefficient\", void 0);\n__decorate([\n    AsnProp({ type: OtherPrimeInfos, optional: true })\n], RSAPrivateKey.prototype, \"otherPrimeInfos\", void 0);\n", "import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnIntegerArrayBufferConverter } from \"@peculiar/asn1-schema\";\nexport class RSAPublicKey {\n    constructor(params = {}) {\n        this.modulus = new ArrayBuffer(0);\n        this.publicExponent = new ArrayBuffer(0);\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerArrayBufferConverter })\n], RSAPublicKey.prototype, \"modulus\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerArrayBufferConverter })\n], RSAPublicKey.prototype, \"publicExponent\", void 0);\n", "import { COSEALG } from './cose.js';\n/**\n * Map X.509 signature algorithm OIDs to COSE algorithm IDs\n *\n * - EC2 OIDs: https://oidref.com/1.2.840.10045.4.3\n * - RSA OIDs: https://oidref.com/1.2.840.113549.1.1\n */\nexport function mapX509SignatureAlgToCOSEAlg(signatureAlgorithm) {\n    let alg;\n    if (signatureAlgorithm === '1.2.840.10045.4.3.2') {\n        alg = COSEALG.ES256;\n    }\n    else if (signatureAlgorithm === '1.2.840.10045.4.3.3') {\n        alg = COSEALG.ES384;\n    }\n    else if (signatureAlgorithm === '1.2.840.10045.4.3.4') {\n        alg = COSEALG.ES512;\n    }\n    else if (signatureAlgorithm === '1.2.840.113549.1.1.11') {\n        alg = COSEALG.RS256;\n    }\n    else if (signatureAlgorithm === '1.2.840.113549.1.1.12') {\n        alg = COSEALG.RS384;\n    }\n    else if (signatureAlgorithm === '1.2.840.113549.1.1.13') {\n        alg = COSEALG.RS512;\n    }\n    else if (signatureAlgorithm === '1.2.840.113549.1.1.5') {\n        alg = COSEALG.RS1;\n    }\n    else {\n        throw new Error(`Unable to map X.509 signature algorithm ${signatureAlgorithm} to a COSE algorithm`);\n    }\n    return alg;\n}\n", "import { isoBase64URL } from './iso/index.js';\n/**\n * Take a certificate in PEM format and convert it to bytes\n */\nexport function convertPEMToBytes(pem) {\n    const certBase64 = pem\n        .replace('-----BEGIN CERTIFICATE-----', '')\n        .replace('-----END CERTIFICATE-----', '')\n        .replace(/[\\n ]/g, '');\n    return isoBase64URL.toBuffer(certBase64, 'base64');\n}\n", "import { AsnParser } from '@peculiar/asn1-schema';\nimport { ECDSASigValue } from '@peculiar/asn1-ecc';\nimport { COSECRV } from '../../cose.js';\nimport { isoUint8Array } from '../index.js';\n/**\n * In WebAuthn, EC2 signatures are wrapped in ASN.1 structure so we need to peel r and s apart.\n *\n * See https://www.w3.org/TR/webauthn-2/#sctn-signature-attestation-types\n */\nexport function unwrapEC2Signature(signature, crv) {\n    const parsedSignature = AsnParser.parse(signature, ECDSASigValue);\n    const rBytes = new Uint8Array(parsedSignature.r);\n    const sBytes = new Uint8Array(parsedSignature.s);\n    const componentLength = getSignatureComponentLength(crv);\n    const rNormalizedBytes = toNormalizedBytes(rBytes, componentLength);\n    const sNormalizedBytes = toNormalizedBytes(sBytes, componentLength);\n    const finalSignature = isoUint8Array.concat([\n        rNormalizedBytes,\n        sNormalizedBytes,\n    ]);\n    return finalSignature;\n}\n/**\n * The SubtleCrypto Web Crypto API expects ECDSA signatures with `r` and `s` values to be encoded\n * to a specific length depending on the order of the curve. This function returns the expected\n * byte-length for each of the `r` and `s` signature components.\n *\n * See <https://www.w3.org/TR/WebCryptoAPI/#ecdsa-operations>\n */\nfunction getSignatureComponentLength(crv) {\n    switch (crv) {\n        case COSECRV.P256:\n            return 32;\n        case COSECRV.P384:\n            return 48;\n        case COSECRV.P521:\n            return 66;\n        default:\n            throw new Error(`Unexpected COSE crv value of ${crv} (EC2)`);\n    }\n}\n/**\n * Converts the ASN.1 integer representation to bytes of a specific length `n`.\n *\n * DER encodes integers as big-endian byte arrays, with as small as possible representation and\n * requires a leading `0` byte to disambiguate between negative and positive numbers. This means\n * that `r` and `s` can potentially not be the expected byte-length that is needed by the\n * SubtleCrypto Web Crypto API: if there are leading `0`s it can be shorter than expected, and if\n * it has a leading `1` bit, it can be one byte longer.\n *\n * See <https://www.itu.int/rec/T-REC-X.690-202102-I/en>\n * See <https://www.w3.org/TR/WebCryptoAPI/#ecdsa-operations>\n */\nfunction toNormalizedBytes(bytes, componentLength) {\n    let normalizedBytes;\n    if (bytes.length < componentLength) {\n        // In case the bytes are shorter than expected, we need to pad it with leading `0`s.\n        normalizedBytes = new Uint8Array(componentLength);\n        normalizedBytes.set(bytes, componentLength - bytes.length);\n    }\n    else if (bytes.length === componentLength) {\n        normalizedBytes = bytes;\n    }\n    else if (bytes.length === componentLength + 1 && bytes[0] === 0 && (bytes[1] & 0x80) === 0x80) {\n        // The bytes contain a leading `0` to encode that the integer is positive. This leading `0`\n        // needs to be removed for compatibility with the SubtleCrypto Web Crypto API.\n        normalizedBytes = bytes.subarray(1);\n    }\n    else {\n        throw new Error(`Invalid signature component length ${bytes.length}, expected ${componentLength}`);\n    }\n    return normalizedBytes;\n}\n", "/**\n * A runtime-agnostic collection of methods for working with Uint8Arrays\n * @module\n */\n/**\n * Make sure two Uint8Arrays are deeply equivalent\n */\nexport function areEqual(array1, array2) {\n    if (array1.length != array2.length) {\n        return false;\n    }\n    return array1.every((val, i) => val === array2[i]);\n}\n/**\n * Convert a Uint8Array to Hexadecimal.\n *\n * A replacement for `Buffer.toString('hex')`\n */\nexport function toHex(array) {\n    const hexParts = Array.from(array, (i) => i.toString(16).padStart(2, '0'));\n    // adce000235bcc60a648b0b25f1f05503\n    return hexParts.join('');\n}\n/**\n * Convert a hexadecimal string to isoUint8Array.\n *\n * A replacement for `Buffer.from('...', 'hex')`\n */\nexport function fromHex(hex) {\n    if (!hex) {\n        return Uint8Array.from([]);\n    }\n    const isValid = hex.length !== 0 && hex.length % 2 === 0 &&\n        !/[^a-fA-F0-9]/u.test(hex);\n    if (!isValid) {\n        throw new Error('Invalid hex string');\n    }\n    const byteStrings = hex.match(/.{1,2}/g) ?? [];\n    return Uint8Array.from(byteStrings.map((byte) => parseInt(byte, 16)));\n}\n/**\n * Combine multiple Uint8Arrays into a single Uint8Array\n */\nexport function concat(arrays) {\n    let pointer = 0;\n    const totalLength = arrays.reduce((prev, curr) => prev + curr.length, 0);\n    const toReturn = new Uint8Array(totalLength);\n    arrays.forEach((arr) => {\n        toReturn.set(arr, pointer);\n        pointer += arr.length;\n    });\n    return toReturn;\n}\n/**\n * Convert bytes into a UTF-8 string\n */\nexport function toUTF8String(array) {\n    const decoder = new globalThis.TextDecoder('utf-8');\n    return decoder.decode(array);\n}\n/**\n * Convert a UTF-8 string back into bytes\n */\nexport function fromUTF8String(utf8String) {\n    const encoder = new globalThis.TextEncoder();\n    return encoder.encode(utf8String);\n}\n/**\n * Convert an ASCII string to Uint8Array\n */\nexport function fromASCIIString(value) {\n    return Uint8Array.from(value.split('').map((x) => x.charCodeAt(0)));\n}\n/**\n * Prepare a DataView we can slice our way around in as we parse the bytes in a Uint8Array\n */\nexport function toDataView(array) {\n    return new DataView(array.buffer, array.byteOffset, array.length);\n}\n", "import { decodeAttestationObject, } from '../helpers/decodeAttestationObject.js';\nimport { decodeClientDataJSON } from '../helpers/decodeClientDataJSON.js';\nimport { parseAuthenticatorData } from '../helpers/parseAuthenticatorData.js';\nimport { toHash } from '../helpers/toHash.js';\nimport { decodeCredentialPublicKey } from '../helpers/decodeCredentialPublicKey.js';\nimport { COSEKEYS } from '../helpers/cose.js';\nimport { convertAAGUIDToString } from '../helpers/convertAAGUIDToString.js';\nimport { parseBackupFlags } from '../helpers/parseBackupFlags.js';\nimport { matchExpectedRPID } from '../helpers/matchExpectedRPID.js';\nimport { isoBase64URL } from '../helpers/iso/index.js';\nimport { SettingsService } from '../services/settingsService.js';\nimport { supportedCOSEAlgorithmIdentifiers } from './generateRegistrationOptions.js';\nimport { verifyAttestationFIDOU2F } from './verifications/verifyAttestationFIDOU2F.js';\nimport { verifyAttestationPacked } from './verifications/verifyAttestationPacked.js';\nimport { verifyAttestationAndroidSafetyNet } from './verifications/verifyAttestationAndroidSafetyNet.js';\nimport { verifyAttestationTPM } from './verifications/tpm/verifyAttestationTPM.js';\nimport { verifyAttestationAndroidKey } from './verifications/verifyAttestationAndroidKey.js';\nimport { verifyAttestationApple } from './verifications/verifyAttestationApple.js';\n/**\n * Verify that the user has legitimately completed the registration process\n *\n * **Options:**\n *\n * @param response - Response returned by **@simplewebauthn/browser**'s `startAuthentication()`\n * @param expectedChallenge - The base64url-encoded `options.challenge` returned by `generateRegistrationOptions()`\n * @param expectedOrigin - Website URL (or array of URLs) that the registration should have occurred on\n * @param expectedRPID - RP ID (or array of IDs) that was specified in the registration options\n * @param expectedType **(Optional)** - The response type expected ('webauthn.create')\n * @param requireUserPresence **(Optional)** - Enforce user presence by the authenticator (or skip it during auto registration) Defaults to `true`\n * @param requireUserVerification **(Optional)** - Enforce user verification by the authenticator (via PIN, fingerprint, etc...) Defaults to `true`\n * @param supportedAlgorithmIDs **(Optional)** - Array of numeric COSE algorithm identifiers supported for attestation by this RP. See https://www.iana.org/assignments/cose/cose.xhtml#algorithms. Defaults to all supported algorithm IDs\n */\nexport async function verifyRegistrationResponse(options) {\n    const { response, expectedChallenge, expectedOrigin, expectedRPID, expectedType, requireUserPresence = true, requireUserVerification = true, supportedAlgorithmIDs = supportedCOSEAlgorithmIdentifiers, } = options;\n    const { id, rawId, type: credentialType, response: attestationResponse } = response;\n    // Ensure credential specified an ID\n    if (!id) {\n        throw new Error('Missing credential ID');\n    }\n    // Ensure ID is base64url-encoded\n    if (id !== rawId) {\n        throw new Error('Credential ID was not base64url-encoded');\n    }\n    // Make sure credential type is public-key\n    if (credentialType !== 'public-key') {\n        throw new Error(`Unexpected credential type ${credentialType}, expected \"public-key\"`);\n    }\n    const clientDataJSON = decodeClientDataJSON(attestationResponse.clientDataJSON);\n    const { type, origin, challenge, tokenBinding } = clientDataJSON;\n    // Make sure we're handling an registration\n    if (Array.isArray(expectedType)) {\n        if (!expectedType.includes(type)) {\n            const joinedExpectedType = expectedType.join(', ');\n            throw new Error(`Unexpected registration response type \"${type}\", expected one of: ${joinedExpectedType}`);\n        }\n    }\n    else if (expectedType) {\n        if (type !== expectedType) {\n            throw new Error(`Unexpected registration response type \"${type}\", expected \"${expectedType}\"`);\n        }\n    }\n    else if (type !== 'webauthn.create') {\n        throw new Error(`Unexpected registration response type: ${type}`);\n    }\n    // Ensure the device provided the challenge we gave it\n    if (typeof expectedChallenge === 'function') {\n        if (!(await expectedChallenge(challenge))) {\n            throw new Error(`Custom challenge verifier returned false for registration response challenge \"${challenge}\"`);\n        }\n    }\n    else if (challenge !== expectedChallenge) {\n        throw new Error(`Unexpected registration response challenge \"${challenge}\", expected \"${expectedChallenge}\"`);\n    }\n    // Check that the origin is our site\n    if (Array.isArray(expectedOrigin)) {\n        if (!expectedOrigin.includes(origin)) {\n            throw new Error(`Unexpected registration response origin \"${origin}\", expected one of: ${expectedOrigin.join(', ')}`);\n        }\n    }\n    else {\n        if (origin !== expectedOrigin) {\n            throw new Error(`Unexpected registration response origin \"${origin}\", expected \"${expectedOrigin}\"`);\n        }\n    }\n    if (tokenBinding) {\n        if (typeof tokenBinding !== 'object') {\n            throw new Error(`Unexpected value for TokenBinding \"${tokenBinding}\"`);\n        }\n        if (['present', 'supported', 'not-supported'].indexOf(tokenBinding.status) < 0) {\n            throw new Error(`Unexpected tokenBinding.status value of \"${tokenBinding.status}\"`);\n        }\n    }\n    const attestationObject = isoBase64URL.toBuffer(attestationResponse.attestationObject);\n    const decodedAttestationObject = decodeAttestationObject(attestationObject);\n    const fmt = decodedAttestationObject.get('fmt');\n    const authData = decodedAttestationObject.get('authData');\n    const attStmt = decodedAttestationObject.get('attStmt');\n    const parsedAuthData = parseAuthenticatorData(authData);\n    const { aaguid, rpIdHash, flags, credentialID, counter, credentialPublicKey, extensionsData, } = parsedAuthData;\n    // Make sure the response's RP ID is ours\n    let matchedRPID;\n    if (expectedRPID) {\n        let expectedRPIDs = [];\n        if (typeof expectedRPID === 'string') {\n            expectedRPIDs = [expectedRPID];\n        }\n        else {\n            expectedRPIDs = expectedRPID;\n        }\n        matchedRPID = await matchExpectedRPID(rpIdHash, expectedRPIDs);\n    }\n    // Make sure someone was physically present\n    if (requireUserPresence && !flags.up) {\n        throw new Error('User presence was required, but user was not present');\n    }\n    // Enforce user verification if specified\n    if (requireUserVerification && !flags.uv) {\n        throw new Error('User verification was required, but user could not be verified');\n    }\n    if (!credentialID) {\n        throw new Error('No credential ID was provided by authenticator');\n    }\n    if (!credentialPublicKey) {\n        throw new Error('No public key was provided by authenticator');\n    }\n    if (!aaguid) {\n        throw new Error('No AAGUID was present during registration');\n    }\n    const decodedPublicKey = decodeCredentialPublicKey(credentialPublicKey);\n    const alg = decodedPublicKey.get(COSEKEYS.alg);\n    if (typeof alg !== 'number') {\n        throw new Error('Credential public key was missing numeric alg');\n    }\n    // Make sure the key algorithm is one we specified within the registration options\n    if (!supportedAlgorithmIDs.includes(alg)) {\n        const supported = supportedAlgorithmIDs.join(', ');\n        throw new Error(`Unexpected public key alg \"${alg}\", expected one of \"${supported}\"`);\n    }\n    const clientDataHash = await toHash(isoBase64URL.toBuffer(attestationResponse.clientDataJSON));\n    const rootCertificates = SettingsService.getRootCertificates({\n        identifier: fmt,\n    });\n    // Prepare arguments to pass to the relevant verification method\n    const verifierOpts = {\n        aaguid,\n        attStmt,\n        authData,\n        clientDataHash,\n        credentialID,\n        credentialPublicKey,\n        rootCertificates,\n        rpIdHash,\n    };\n    /**\n     * Verification can only be performed when attestation = 'direct'\n     */\n    let verified = false;\n    if (fmt === 'fido-u2f') {\n        verified = await verifyAttestationFIDOU2F(verifierOpts);\n    }\n    else if (fmt === 'packed') {\n        verified = await verifyAttestationPacked(verifierOpts);\n    }\n    else if (fmt === 'android-safetynet') {\n        verified = await verifyAttestationAndroidSafetyNet(verifierOpts);\n    }\n    else if (fmt === 'android-key') {\n        verified = await verifyAttestationAndroidKey(verifierOpts);\n    }\n    else if (fmt === 'tpm') {\n        verified = await verifyAttestationTPM(verifierOpts);\n    }\n    else if (fmt === 'apple') {\n        verified = await verifyAttestationApple(verifierOpts);\n    }\n    else if (fmt === 'none') {\n        if (attStmt.size > 0) {\n            throw new Error('None attestation had unexpected attestation statement');\n        }\n        // This is the weaker of the attestations, so there's nothing else to really check\n        verified = true;\n    }\n    else {\n        throw new Error(`Unsupported Attestation Format: ${fmt}`);\n    }\n    const toReturn = {\n        verified,\n    };\n    if (toReturn.verified) {\n        const { credentialDeviceType, credentialBackedUp } = parseBackupFlags(flags);\n        toReturn.registrationInfo = {\n            fmt,\n            aaguid: convertAAGUIDToString(aaguid),\n            credentialType,\n            credential: {\n                id: isoBase64URL.fromBuffer(credentialID),\n                publicKey: credentialPublicKey,\n                counter,\n                transports: response.response.transports,\n            },\n            attestationObject,\n            userVerified: flags.uv,\n            credentialDeviceType,\n            credentialBackedUp,\n            origin: clientDataJSON.origin,\n            rpID: matchedRPID,\n            authenticatorExtensionResults: extensionsData,\n        };\n    }\n    return toReturn;\n}\n", "/**\n * Make sense of Bits 3 and 4 in authenticator indicating:\n *\n * - Whether the credential can be used on multiple devices\n * - Whether the credential is backed up or not\n *\n * Invalid configurations will raise an `Error`\n */\nexport function parseBackupFlags({ be, bs }) {\n    const credentialBackedUp = bs;\n    let credentialDeviceType = 'singleDevice';\n    if (be) {\n        credentialDeviceType = 'multiDevice';\n    }\n    if (credentialDeviceType === 'singleDevice' && credentialBackedUp) {\n        throw new InvalidBackupFlags('Single-device credential indicated that it was backed up, which should be impossible.');\n    }\n    return { credentialDeviceType, credentialBackedUp };\n}\nexport class InvalidBackupFlags extends Error {\n    constructor(message) {\n        super(message);\n        this.name = 'InvalidBackupFlags';\n    }\n}\n", "import { toHash } from './toHash.js';\nimport { isoUint8Array } from './iso/index.js';\n/**\n * Go through each expected RP ID and try to find one that matches. Returns the unhashed RP ID\n * that matched the hash in the response.\n *\n * Raises an `UnexpectedRPIDHash` error if no match is found\n */\nexport async function matchExpectedRPID(rpIDHash, expectedRPIDs) {\n    try {\n        const matchedRPID = await Promise.any(expectedRPIDs.map((expected) => {\n            return new Promise((resolve, reject) => {\n                toHash(isoUint8Array.fromASCIIString(expected)).then((expectedRPIDHash) => {\n                    if (isoUint8Array.areEqual(rpIDHash, expectedRPIDHash)) {\n                        resolve(expected);\n                    }\n                    else {\n                        reject();\n                    }\n                });\n            });\n        }));\n        return matchedRPID;\n    }\n    catch (err) {\n        const _err = err;\n        // This means no matches were found\n        if (_err.name === 'AggregateError') {\n            throw new UnexpectedRPIDHash();\n        }\n        // An unexpected error occurred\n        throw err;\n    }\n}\nclass UnexpectedRPIDHash extends Error {\n    constructor() {\n        const message = 'Unexpected RP ID hash';\n        super(message);\n        this.name = 'UnexpectedRPIDHash';\n    }\n}\n", "import { convertCertBufferToPEM } from '../helpers/convertCertBufferToPEM.js';\nimport { GlobalSign_Root_CA } from './defaultRootCerts/android-safetynet.js';\nimport { Google_Hardware_Attestation_Root_1, Google_Hardware_Attestation_Root_2, Google_Hardware_Attestation_Root_3, Google_Hardware_Attestation_Root_4, } from './defaultRootCerts/android-key.js';\nimport { Apple_WebAuthn_Root_CA } from './defaultRootCerts/apple.js';\nimport { GlobalSign_Root_CA_R3 } from './defaultRootCerts/mds.js';\nclass BaseSettingsService {\n    constructor() {\n        // Certificates are stored as PEM-formatted strings\n        Object.defineProperty(this, \"pemCertificates\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.pemCertificates = new Map();\n    }\n    setRootCertificates(opts) {\n        const { identifier, certificates } = opts;\n        const newCertificates = [];\n        for (const cert of certificates) {\n            if (cert instanceof Uint8Array) {\n                newCertificates.push(convertCertBufferToPEM(cert));\n            }\n            else {\n                newCertificates.push(cert);\n            }\n        }\n        this.pemCertificates.set(identifier, newCertificates);\n    }\n    getRootCertificates(opts) {\n        const { identifier } = opts;\n        return this.pemCertificates.get(identifier) ?? [];\n    }\n}\n/**\n * A basic service for specifying acceptable root certificates for all supported attestation\n * statement formats.\n *\n * In addition, default root certificates are included for the following statement formats:\n *\n * - `'android-key'`\n * - `'android-safetynet'`\n * - `'apple'`\n * - `'android-mds'`\n *\n * These can be overwritten as needed by setting alternative root certificates for their format\n * identifier using `setRootCertificates()`.\n */\nexport const SettingsService = new BaseSettingsService();\n// Initialize default certificates\nSettingsService.setRootCertificates({\n    identifier: 'android-key',\n    certificates: [\n        Google_Hardware_Attestation_Root_1,\n        Google_Hardware_Attestation_Root_2,\n        Google_Hardware_Attestation_Root_3,\n        Google_Hardware_Attestation_Root_4,\n    ],\n});\nSettingsService.setRootCertificates({\n    identifier: 'android-safetynet',\n    certificates: [GlobalSign_Root_CA],\n});\nSettingsService.setRootCertificates({\n    identifier: 'apple',\n    certificates: [Apple_WebAuthn_Root_CA],\n});\nSettingsService.setRootCertificates({\n    identifier: 'mds',\n    certificates: [GlobalSign_Root_CA_R3],\n});\n", "/**\n * GlobalSign Root CA\n *\n * Downloaded from https://pki.goog/roots.pem\n *\n * Valid until 2028-01-28 @ 04:00 PST\n *\n * SHA256 Fingerprint\n * EB:D4:10:40:E4:BB:3E:C7:42:C9:E3:81:D3:1E:F2:A4:1A:48:B6:68:5C:96:E7:CE:F3:C1:DF:6C:D4:33:1C:99\n */\nexport const GlobalSign_Root_CA = `-----BEGIN CERTIFICATE-----\nMIIDdTCCAl2gAwIBAgILBAAAAAABFUtaw5QwDQYJKoZIhvcNAQEFBQAwVzELMAkG\nA1UEBhMCQkUxGTAXBgNVBAoTEEdsb2JhbFNpZ24gbnYtc2ExEDAOBgNVBAsTB1Jv\nb3QgQ0ExGzAZBgNVBAMTEkdsb2JhbFNpZ24gUm9vdCBDQTAeFw05ODA5MDExMjAw\nMDBaFw0yODAxMjgxMjAwMDBaMFcxCzAJBgNVBAYTAkJFMRkwFwYDVQQKExBHbG9i\nYWxTaWduIG52LXNhMRAwDgYDVQQLEwdSb290IENBMRswGQYDVQQDExJHbG9iYWxT\naWduIFJvb3QgQ0EwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDaDuaZ\njc6j40+Kfvvxi4Mla+pIH/EqsLmVEQS98GPR4mdmzxzdzxtIK+6NiY6arymAZavp\nxy0Sy6scTHAHoT0KMM0VjU/43dSMUBUc71DuxC73/OlS8pF94G3VNTCOXkNz8kHp\n1Wrjsok6Vjk4bwY8iGlbKk3Fp1S4bInMm/k8yuX9ifUSPJJ4ltbcdG6TRGHRjcdG\nsnUOhugZitVtbNV4FpWi6cgKOOvyJBNPc1STE4U6G7weNLWLBYy5d4ux2x8gkasJ\nU26Qzns3dLlwR5EiUWMWea6xrkEmCMgZK9FGqkjWZCrXgzT/LCrBbBlDSgeF59N8\n9iFo7+ryUp9/k5DPAgMBAAGjQjBAMA4GA1UdDwEB/wQEAwIBBjAPBgNVHRMBAf8E\nBTADAQH/MB0GA1UdDgQWBBRge2YaRQ2XyolQL30EzTSo//z9SzANBgkqhkiG9w0B\nAQUFAAOCAQEA1nPnfE920I2/7LqivjTFKDK1fPxsnCwrvQmeU79rXqoRSLblCKOz\nyj1hTdNGCbM+w6DjY1Ub8rrvrTnhQ7k4o+YviiY776BQVvnGCv04zcQLcFGUl5gE\n38NflNUVyRRBnMRddWQVDf9VMOyGj/8N7yy5Y0b2qvzfvGn9LhJIZJrglfCm7ymP\nAbEVtQwdpf5pLGkkeB6zpxxxYu7KyJesF12KwvhHhm4qxFYxldBniYUr+WymXUad\nDKqC5JlR3XC321Y9YeRq4VzW9v493kHMB65jUr9TU/Qr6cf9tveCX4XSQRjbgbME\nHMUfpIBvFSDJ3gyICh3WZlXi/EjJKSZp4A==\n-----END CERTIFICATE-----\n`;\n", "/**\n * Google Hardware Attestation Root 1\n *\n * Downloaded from https://developer.android.com/training/articles/security-key-attestation#root_certificate\n * (first entry)\n *\n * Valid until 2026-05-24 @ 09:28 PST\n *\n * SHA256 Fingerprint\n * C1:98:4A:3E:F4:5C:1E:2A:91:85:51:DE:10:60:3C:86:F7:05:1B:22:49:C4:89:1C:AE:32:30:EA:BD:0C:97:D5\n */\nexport const Google_Hardware_Attestation_Root_1 = `-----BEGIN CERTIFICATE-----\nMIIFYDCCA0igAwIBAgIJAOj6GWMU0voYMA0GCSqGSIb3DQEBCwUAMBsxGTAXBgNV\nBAUTEGY5MjAwOWU4NTNiNmIwNDUwHhcNMTYwNTI2MTYyODUyWhcNMjYwNTI0MTYy\nODUyWjAbMRkwFwYDVQQFExBmOTIwMDllODUzYjZiMDQ1MIICIjANBgkqhkiG9w0B\nAQEFAAOCAg8AMIICCgKCAgEAr7bHgiuxpwHsK7Qui8xUFmOr75gvMsd/dTEDDJdS\nSxtf6An7xyqpRR90PL2abxM1dEqlXnf2tqw1Ne4Xwl5jlRfdnJLmN0pTy/4lj4/7\ntv0Sk3iiKkypnEUtR6WfMgH0QZfKHM1+di+y9TFRtv6y//0rb+T+W8a9nsNL/ggj\nnar86461qO0rOs2cXjp3kOG1FEJ5MVmFmBGtnrKpa73XpXyTqRxB/M0n1n/W9nGq\nC4FSYa04T6N5RIZGBN2z2MT5IKGbFlbC8UrW0DxW7AYImQQcHtGl/m00QLVWutHQ\noVJYnFPlXTcHYvASLu+RhhsbDmxMgJJ0mcDpvsC4PjvB+TxywElgS70vE0XmLD+O\nJtvsBslHZvPBKCOdT0MS+tgSOIfga+z1Z1g7+DVagf7quvmag8jfPioyKvxnK/Eg\nsTUVi2ghzq8wm27ud/mIM7AY2qEORR8Go3TVB4HzWQgpZrt3i5MIlCaY504LzSRi\nigHCzAPlHws+W0rB5N+er5/2pJKnfBSDiCiFAVtCLOZ7gLiMm0jhO2B6tUXHI/+M\nRPjy02i59lINMRRev56GKtcd9qO/0kUJWdZTdA2XoS82ixPvZtXQpUpuL12ab+9E\naDK8Z4RHJYYfCT3Q5vNAXaiWQ+8PTWm2QgBR/bkwSWc+NpUFgNPN9PvQi8WEg5Um\nAGMCAwEAAaOBpjCBozAdBgNVHQ4EFgQUNmHhAHyIBQlRi0RsR/8aTMnqTxIwHwYD\nVR0jBBgwFoAUNmHhAHyIBQlRi0RsR/8aTMnqTxIwDwYDVR0TAQH/BAUwAwEB/zAO\nBgNVHQ8BAf8EBAMCAYYwQAYDVR0fBDkwNzA1oDOgMYYvaHR0cHM6Ly9hbmRyb2lk\nLmdvb2dsZWFwaXMuY29tL2F0dGVzdGF0aW9uL2NybC8wDQYJKoZIhvcNAQELBQAD\nggIBACDIw41L3KlXG0aMiS//cqrG+EShHUGo8HNsw30W1kJtjn6UBwRM6jnmiwfB\nPb8VA91chb2vssAtX2zbTvqBJ9+LBPGCdw/E53Rbf86qhxKaiAHOjpvAy5Y3m00m\nqC0w/Zwvju1twb4vhLaJ5NkUJYsUS7rmJKHHBnETLi8GFqiEsqTWpG/6ibYCv7rY\nDBJDcR9W62BW9jfIoBQcxUCUJouMPH25lLNcDc1ssqvC2v7iUgI9LeoM1sNovqPm\nQUiG9rHli1vXxzCyaMTjwftkJLkf6724DFhuKug2jITV0QkXvaJWF4nUaHOTNA4u\nJU9WDvZLI1j83A+/xnAJUucIv/zGJ1AMH2boHqF8CY16LpsYgBt6tKxxWH00XcyD\nCdW2KlBCeqbQPcsFmWyWugxdcekhYsAWyoSf818NUsZdBWBaR/OukXrNLfkQ79Iy\nZohZbvabO/X+MVT3rriAoKc8oE2Uws6DF+60PV7/WIPjNvXySdqspImSN78mflxD\nqwLqRBYkA3I75qppLGG9rp7UCdRjxMl8ZDBld+7yvHVgt1cVzJx9xnyGCC23Uaic\nMDSXYrB4I4WHXPGjxhZuCuPBLTdOLU8YRvMYdEvYebWHMpvwGCF6bAx3JBpIeOQ1\nwDB5y0USicV3YgYGmi+NZfhA4URSh77Yd6uuJOJENRaNVTzk\n-----END CERTIFICATE-----\n`;\n/**\n * Google Hardware Attestation Root 2\n *\n * Downloaded from https://developer.android.com/training/articles/security-key-attestation#root_certificate\n * (second entry)\n *\n * Valid until 2034-11-18 @ 12:37 PST\n *\n * SHA256 Fingerprint\n * 1E:F1:A0:4B:8B:A5:8A:B9:45:89:AC:49:8C:89:82:A7:83:F2:4E:A7:30:7E:01:59:A0:C3:A7:3B:37:7D:87:CC\n */\nexport const Google_Hardware_Attestation_Root_2 = `-----BEGIN CERTIFICATE-----\nMIIFHDCCAwSgAwIBAgIJANUP8luj8tazMA0GCSqGSIb3DQEBCwUAMBsxGTAXBgNV\nBAUTEGY5MjAwOWU4NTNiNmIwNDUwHhcNMTkxMTIyMjAzNzU4WhcNMzQxMTE4MjAz\nNzU4WjAbMRkwFwYDVQQFExBmOTIwMDllODUzYjZiMDQ1MIICIjANBgkqhkiG9w0B\nAQEFAAOCAg8AMIICCgKCAgEAr7bHgiuxpwHsK7Qui8xUFmOr75gvMsd/dTEDDJdS\nSxtf6An7xyqpRR90PL2abxM1dEqlXnf2tqw1Ne4Xwl5jlRfdnJLmN0pTy/4lj4/7\ntv0Sk3iiKkypnEUtR6WfMgH0QZfKHM1+di+y9TFRtv6y//0rb+T+W8a9nsNL/ggj\nnar86461qO0rOs2cXjp3kOG1FEJ5MVmFmBGtnrKpa73XpXyTqRxB/M0n1n/W9nGq\nC4FSYa04T6N5RIZGBN2z2MT5IKGbFlbC8UrW0DxW7AYImQQcHtGl/m00QLVWutHQ\noVJYnFPlXTcHYvASLu+RhhsbDmxMgJJ0mcDpvsC4PjvB+TxywElgS70vE0XmLD+O\nJtvsBslHZvPBKCOdT0MS+tgSOIfga+z1Z1g7+DVagf7quvmag8jfPioyKvxnK/Eg\nsTUVi2ghzq8wm27ud/mIM7AY2qEORR8Go3TVB4HzWQgpZrt3i5MIlCaY504LzSRi\nigHCzAPlHws+W0rB5N+er5/2pJKnfBSDiCiFAVtCLOZ7gLiMm0jhO2B6tUXHI/+M\nRPjy02i59lINMRRev56GKtcd9qO/0kUJWdZTdA2XoS82ixPvZtXQpUpuL12ab+9E\naDK8Z4RHJYYfCT3Q5vNAXaiWQ+8PTWm2QgBR/bkwSWc+NpUFgNPN9PvQi8WEg5Um\nAGMCAwEAAaNjMGEwHQYDVR0OBBYEFDZh4QB8iAUJUYtEbEf/GkzJ6k8SMB8GA1Ud\nIwQYMBaAFDZh4QB8iAUJUYtEbEf/GkzJ6k8SMA8GA1UdEwEB/wQFMAMBAf8wDgYD\nVR0PAQH/BAQDAgIEMA0GCSqGSIb3DQEBCwUAA4ICAQBOMaBc8oumXb2voc7XCWnu\nXKhBBK3e2KMGz39t7lA3XXRe2ZLLAkLM5y3J7tURkf5a1SutfdOyXAmeE6SRo83U\nh6WszodmMkxK5GM4JGrnt4pBisu5igXEydaW7qq2CdC6DOGjG+mEkN8/TA6p3cno\nL/sPyz6evdjLlSeJ8rFBH6xWyIZCbrcpYEJzXaUOEaxxXxgYz5/cTiVKN2M1G2ok\nQBUIYSY6bjEL4aUN5cfo7ogP3UvliEo3Eo0YgwuzR2v0KR6C1cZqZJSTnghIC/vA\nD32KdNQ+c3N+vl2OTsUVMC1GiWkngNx1OO1+kXW+YTnnTUOtOIswUP/Vqd5SYgAI\nmMAfY8U9/iIgkQj6T2W6FsScy94IN9fFhE1UtzmLoBIuUFsVXJMTz+Jucth+IqoW\nFua9v1R93/k98p41pjtFX+H8DslVgfP097vju4KDlqN64xV1grw3ZLl4CiOe/A91\noeLm2UHOq6wn3esB4r2EIQKb6jTVGu5sYCcdWpXr0AUVqcABPdgL+H7qJguBw09o\njm6xNIrw2OocrDKsudk/okr/AwqEyPKw9WnMlQgLIKw1rODG2NvU9oR3GVGdMkUB\nZutL8VuFkERQGt6vQ2OCw0sV47VMkuYbacK/xyZFiRcrPJPb41zgbQj9XAEyLKCH\nex0SdDrx+tWUDqG8At2JHA==\n-----END CERTIFICATE-----\n`;\n/**\n * Google Hardware Attestation Root 3\n *\n * Downloaded from https://developer.android.com/training/articles/security-key-attestation#root_certificate\n * (third entry)\n *\n * Valid until 2036-11-13 @ 15:10 PST\n *\n * SHA256 Fingerprint\n * AB:66:41:17:8A:36:E1:79:AA:0C:1C:DD:DF:9A:16:EB:45:FA:20:94:3E:2B:8C:D7:C7:C0:5C:26:CF:8B:48:7A\n */\nexport const Google_Hardware_Attestation_Root_3 = `\n-----BEGIN CERTIFICATE-----\nMIIFHDCCAwSgAwIBAgIJAMNrfES5rhgxMA0GCSqGSIb3DQEBCwUAMBsxGTAXBgNV\nBAUTEGY5MjAwOWU4NTNiNmIwNDUwHhcNMjExMTE3MjMxMDQyWhcNMzYxMTEzMjMx\nMDQyWjAbMRkwFwYDVQQFExBmOTIwMDllODUzYjZiMDQ1MIICIjANBgkqhkiG9w0B\nAQEFAAOCAg8AMIICCgKCAgEAr7bHgiuxpwHsK7Qui8xUFmOr75gvMsd/dTEDDJdS\nSxtf6An7xyqpRR90PL2abxM1dEqlXnf2tqw1Ne4Xwl5jlRfdnJLmN0pTy/4lj4/7\ntv0Sk3iiKkypnEUtR6WfMgH0QZfKHM1+di+y9TFRtv6y//0rb+T+W8a9nsNL/ggj\nnar86461qO0rOs2cXjp3kOG1FEJ5MVmFmBGtnrKpa73XpXyTqRxB/M0n1n/W9nGq\nC4FSYa04T6N5RIZGBN2z2MT5IKGbFlbC8UrW0DxW7AYImQQcHtGl/m00QLVWutHQ\noVJYnFPlXTcHYvASLu+RhhsbDmxMgJJ0mcDpvsC4PjvB+TxywElgS70vE0XmLD+O\nJtvsBslHZvPBKCOdT0MS+tgSOIfga+z1Z1g7+DVagf7quvmag8jfPioyKvxnK/Eg\nsTUVi2ghzq8wm27ud/mIM7AY2qEORR8Go3TVB4HzWQgpZrt3i5MIlCaY504LzSRi\nigHCzAPlHws+W0rB5N+er5/2pJKnfBSDiCiFAVtCLOZ7gLiMm0jhO2B6tUXHI/+M\nRPjy02i59lINMRRev56GKtcd9qO/0kUJWdZTdA2XoS82ixPvZtXQpUpuL12ab+9E\naDK8Z4RHJYYfCT3Q5vNAXaiWQ+8PTWm2QgBR/bkwSWc+NpUFgNPN9PvQi8WEg5Um\nAGMCAwEAAaNjMGEwHQYDVR0OBBYEFDZh4QB8iAUJUYtEbEf/GkzJ6k8SMB8GA1Ud\nIwQYMBaAFDZh4QB8iAUJUYtEbEf/GkzJ6k8SMA8GA1UdEwEB/wQFMAMBAf8wDgYD\nVR0PAQH/BAQDAgIEMA0GCSqGSIb3DQEBCwUAA4ICAQBTNNZe5cuf8oiq+jV0itTG\nzWVhSTjOBEk2FQvh11J3o3lna0o7rd8RFHnN00q4hi6TapFhh4qaw/iG6Xg+xOan\n63niLWIC5GOPFgPeYXM9+nBb3zZzC8ABypYuCusWCmt6Tn3+Pjbz3MTVhRGXuT/T\nQH4KGFY4PhvzAyXwdjTOCXID+aHud4RLcSySr0Fq/L+R8TWalvM1wJJPhyRjqRCJ\nerGtfBagiALzvhnmY7U1qFcS0NCnKjoO7oFedKdWlZz0YAfu3aGCJd4KHT0MsGiL\nZez9WP81xYSrKMNEsDK+zK5fVzw6jA7cxmpXcARTnmAuGUeI7VVDhDzKeVOctf3a\n0qQLwC+d0+xrETZ4r2fRGNw2YEs2W8Qj6oDcfPvq9JySe7pJ6wcHnl5EZ0lwc4xH\n7Y4Dx9RA1JlfooLMw3tOdJZH0enxPXaydfAD3YifeZpFaUzicHeLzVJLt9dvGB0b\nHQLE4+EqKFgOZv2EoP686DQqbVS1u+9k0p2xbMA105TBIk7npraa8VM0fnrRKi7w\nlZKwdH+aNAyhbXRW9xsnODJ+g8eF452zvbiKKngEKirK5LGieoXBX7tZ9D1GNBH2\nOb3bKOwwIWdEFle/YF/h6zWgdeoaNGDqVBrLr2+0DtWoiB1aDEjLWl9FmyIUyUm7\nmD/vFDkzF+wm7cyWpQpCVQ==\n-----END CERTIFICATE-----\n`;\n/**\n * Google Hardware Attestation Root 4\n *\n * Downloaded from https://developer.android.com/training/articles/security-key-attestation#root_certificate\n * (fourth entry)\n *\n * Valid until 2042-03-15 @ 11:07 PDT\n *\n * SHA256 Fingerprint\n * CE:DB:1C:B6:DC:89:6A:E5:EC:79:73:48:BC:E9:28:67:53:C2:B3:8E:E7:1C:E0:FB:E3:4A:9A:12:48:80:0D:FC\n */\nexport const Google_Hardware_Attestation_Root_4 = `\n-----BEGIN CERTIFICATE-----\nMIIFHDCCAwSgAwIBAgIJAPHBcqaZ6vUdMA0GCSqGSIb3DQEBCwUAMBsxGTAXBgNV\nBAUTEGY5MjAwOWU4NTNiNmIwNDUwHhcNMjIwMzIwMTgwNzQ4WhcNNDIwMzE1MTgw\nNzQ4WjAbMRkwFwYDVQQFExBmOTIwMDllODUzYjZiMDQ1MIICIjANBgkqhkiG9w0B\nAQEFAAOCAg8AMIICCgKCAgEAr7bHgiuxpwHsK7Qui8xUFmOr75gvMsd/dTEDDJdS\nSxtf6An7xyqpRR90PL2abxM1dEqlXnf2tqw1Ne4Xwl5jlRfdnJLmN0pTy/4lj4/7\ntv0Sk3iiKkypnEUtR6WfMgH0QZfKHM1+di+y9TFRtv6y//0rb+T+W8a9nsNL/ggj\nnar86461qO0rOs2cXjp3kOG1FEJ5MVmFmBGtnrKpa73XpXyTqRxB/M0n1n/W9nGq\nC4FSYa04T6N5RIZGBN2z2MT5IKGbFlbC8UrW0DxW7AYImQQcHtGl/m00QLVWutHQ\noVJYnFPlXTcHYvASLu+RhhsbDmxMgJJ0mcDpvsC4PjvB+TxywElgS70vE0XmLD+O\nJtvsBslHZvPBKCOdT0MS+tgSOIfga+z1Z1g7+DVagf7quvmag8jfPioyKvxnK/Eg\nsTUVi2ghzq8wm27ud/mIM7AY2qEORR8Go3TVB4HzWQgpZrt3i5MIlCaY504LzSRi\nigHCzAPlHws+W0rB5N+er5/2pJKnfBSDiCiFAVtCLOZ7gLiMm0jhO2B6tUXHI/+M\nRPjy02i59lINMRRev56GKtcd9qO/0kUJWdZTdA2XoS82ixPvZtXQpUpuL12ab+9E\naDK8Z4RHJYYfCT3Q5vNAXaiWQ+8PTWm2QgBR/bkwSWc+NpUFgNPN9PvQi8WEg5Um\nAGMCAwEAAaNjMGEwHQYDVR0OBBYEFDZh4QB8iAUJUYtEbEf/GkzJ6k8SMB8GA1Ud\nIwQYMBaAFDZh4QB8iAUJUYtEbEf/GkzJ6k8SMA8GA1UdEwEB/wQFMAMBAf8wDgYD\nVR0PAQH/BAQDAgIEMA0GCSqGSIb3DQEBCwUAA4ICAQB8cMqTllHc8U+qCrOlg3H7\n174lmaCsbo/bJ0C17JEgMLb4kvrqsXZs01U3mB/qABg/1t5Pd5AORHARs1hhqGIC\nW/nKMav574f9rZN4PC2ZlufGXb7sIdJpGiO9ctRhiLuYuly10JccUZGEHpHSYM2G\ntkgYbZba6lsCPYAAP83cyDV+1aOkTf1RCp/lM0PKvmxYN10RYsK631jrleGdcdkx\noSK//mSQbgcWnmAEZrzHoF1/0gso1HZgIn0YLzVhLSA/iXCX4QT2h3J5z3znluKG\n1nv8NQdxei2DIIhASWfu804CA96cQKTTlaae2fweqXjdN1/v2nqOhngNyz1361mF\nmr4XmaKH/ItTwOe72NI9ZcwS1lVaCvsIkTDCEXdm9rCNPAY10iTunIHFXRh+7KPz\nlHGewCq/8TOohBRn0/NNfh7uRslOSZ/xKbN9tMBtw37Z8d2vvnXq/YWdsm1+JLVw\nn6yYD/yacNJBlwpddla8eaVMjsF6nBnIgQOf9zKSe06nSTqvgwUHosgOECZJZ1Eu\nzbH4yswbt02tKtKEFhx+v+OTge/06V+jGsqTWLsfrOCNLuA8H++z+pUENmpqnnHo\nvaI47gC+TNpkgYGkkBT6B/m/U01BuOBBTzhIlMEZq9qkDWuM2cA5kW5V3FJUcfHn\nw1IdYIg2Wxg7yHcQZemFQg==\n-----END CERTIFICATE-----\n`;\n", "/**\n * Apple WebAuthn Root CA\n *\n * Downloaded from https://www.apple.com/certificateauthority/Apple_WebAuthn_Root_CA.pem\n *\n * Valid until 2045-03-14 @ 17:00 PST\n *\n * SHA256 Fingerprint\n * 09:15:DD:5C:07:A2:8D:B5:49:D1:F6:77:BB:5A:75:D4:BF:BE:95:61:A7:73:42:43:27:76:2E:9E:02:F9:BB:29\n */\nexport const Apple_WebAuthn_Root_CA = `-----BEGIN CERTIFICATE-----\nMIICEjCCAZmgAwIBAgIQaB0BbHo84wIlpQGUKEdXcTAKBggqhkjOPQQDAzBLMR8w\nHQYDVQQDDBZBcHBsZSBXZWJBdXRobiBSb290IENBMRMwEQYDVQQKDApBcHBsZSBJ\nbmMuMRMwEQYDVQQIDApDYWxpZm9ybmlhMB4XDTIwMDMxODE4MjEzMloXDTQ1MDMx\nNTAwMDAwMFowSzEfMB0GA1UEAwwWQXBwbGUgV2ViQXV0aG4gUm9vdCBDQTETMBEG\nA1UECgwKQXBwbGUgSW5jLjETMBEGA1UECAwKQ2FsaWZvcm5pYTB2MBAGByqGSM49\nAgEGBSuBBAAiA2IABCJCQ2pTVhzjl4Wo6IhHtMSAzO2cv+H9DQKev3//fG59G11k\nxu9eI0/7o6V5uShBpe1u6l6mS19S1FEh6yGljnZAJ+2GNP1mi/YK2kSXIuTHjxA/\npcoRf7XkOtO4o1qlcaNCMEAwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUJtdk\n2cV4wlpn0afeaxLQG2PxxtcwDgYDVR0PAQH/BAQDAgEGMAoGCCqGSM49BAMDA2cA\nMGQCMFrZ+9DsJ1PW9hfNdBywZDsWDbWFp28it1d/5w2RPkRX3Bbn/UbDTNLx7Jr3\njAGGiQIwHFj+dJZYUJR786osByBelJYsVZd2GbHQu209b5RCmGQ21gpSAk9QZW4B\n1bWeT0vT\n-----END CERTIFICATE-----\n`;\n", "/**\n * GlobalSign Root CA - R3\n *\n * Downloaded from https://valid.r3.roots.globalsign.com/\n *\n * Valid until 2029-03-18 @ 00:00 PST\n *\n * SHA256 Fingerprint\n * CB:B5:22:D7:B7:F1:27:AD:6A:01:13:86:5B:DF:1C:D4:10:2E:7D:07:59:AF:63:5A:7C:F4:72:0D:C9:63:C5:3B\n */\nexport const GlobalSign_Root_CA_R3 = `-----BEGIN CERTIFICATE-----\n MIIDXzCCAkegAwIBAgILBAAAAAABIVhTCKIwDQYJKoZIhvcNAQELBQAwTDEgMB4G\n A1UECxMXR2xvYmFsU2lnbiBSb290IENBIC0gUjMxEzARBgNVBAoTCkdsb2JhbFNp\n Z24xEzARBgNVBAMTCkdsb2JhbFNpZ24wHhcNMDkwMzE4MTAwMDAwWhcNMjkwMzE4\n MTAwMDAwWjBMMSAwHgYDVQQLExdHbG9iYWxTaWduIFJvb3QgQ0EgLSBSMzETMBEG\n A1UEChMKR2xvYmFsU2lnbjETMBEGA1UEAxMKR2xvYmFsU2lnbjCCASIwDQYJKoZI\n hvcNAQEBBQADggEPADCCAQoCggEBAMwldpB5BngiFvXAg7aEyiie/QV2EcWtiHL8\n RgJDx7KKnQRfJMsuS+FggkbhUqsMgUdwbN1k0ev1LKMPgj0MK66X17YUhhB5uzsT\n gHeMCOFJ0mpiLx9e+pZo34knlTifBtc+ycsmWQ1z3rDI6SYOgxXG71uL0gRgykmm\n KPZpO/bLyCiR5Z2KYVc3rHQU3HTgOu5yLy6c+9C7v/U9AOEGM+iCK65TpjoWc4zd\n QQ4gOsC0p6Hpsk+QLjJg6VfLuQSSaGjlOCZgdbKfd/+RFO+uIEn8rUAVSNECMWEZ\n XriX7613t2Saer9fwRPvm2L7DWzgVGkWqQPabumDk3F2xmmFghcCAwEAAaNCMEAw\n DgYDVR0PAQH/BAQDAgEGMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFI/wS3+o\n LkUkrk1Q+mOai97i3Ru8MA0GCSqGSIb3DQEBCwUAA4IBAQBLQNvAUKr+yAzv95ZU\n RUm7lgAJQayzE4aGKAczymvmdLm6AC2upArT9fHxD4q/c2dKg8dEe3jgr25sbwMp\n jjM5RcOO5LlXbKr8EpbsU8Yt5CRsuZRj+9xTaGdWPoO4zzUhw8lo/s7awlOqzJCK\n 6fBdRoyV3XpYKBovHd7NADdBj+1EbddTKJd+82cEHhXXipa0095MJ6RMG3NzdvQX\n mcIfeg7jLQitChws/zyrVQ4PkX4268NXSb7hLi18YIvDQVETI53O9zJrlAGomecs\n Mx86OyXShkDOOyyGeMlhLxS67ttVb9+E7gUJTb0o2HLO02JQZR7rkpeDMdmztcpH\n WD9f\n -----END CERTIFICATE-----\n `;\n", "import { convertCOSEtoPKCS } from '../../helpers/convertCOSEtoPKCS.js';\nimport { convertCertBufferToPEM } from '../../helpers/convertCertBufferToPEM.js';\nimport { validateCertificatePath } from '../../helpers/validateCertificatePath.js';\nimport { verifySignature } from '../../helpers/verifySignature.js';\nimport { isoUint8Array } from '../../helpers/iso/index.js';\nimport { COSEALG } from '../../helpers/cose.js';\n/**\n * Verify an attestation response with fmt 'fido-u2f'\n */\nexport async function verifyAttestationFIDOU2F(options) {\n    const { attStmt, clientDataHash, rpIdHash, credentialID, credentialPublicKey, aaguid, rootCertificates, } = options;\n    const reservedByte = Uint8Array.from([0x00]);\n    const publicKey = convertCOSEtoPKCS(credentialPublicKey);\n    const signatureBase = isoUint8Array.concat([\n        reservedByte,\n        rpIdHash,\n        clientDataHash,\n        credentialID,\n        publicKey,\n    ]);\n    const sig = attStmt.get('sig');\n    const x5c = attStmt.get('x5c');\n    if (!x5c) {\n        throw new Error('No attestation certificate provided in attestation statement (FIDOU2F)');\n    }\n    if (!sig) {\n        throw new Error('No attestation signature provided in attestation statement (FIDOU2F)');\n    }\n    // FIDO spec says that aaguid _must_ equal 0x00 here to be legit\n    const aaguidToHex = Number.parseInt(isoUint8Array.toHex(aaguid), 16);\n    if (aaguidToHex !== 0x00) {\n        throw new Error(`AAGUID \"${aaguidToHex}\" was not expected value`);\n    }\n    try {\n        // Try validating the certificate path using the root certificates set via SettingsService\n        await validateCertificatePath(x5c.map(convertCertBufferToPEM), rootCertificates);\n    }\n    catch (err) {\n        const _err = err;\n        throw new Error(`${_err.message} (FIDOU2F)`);\n    }\n    return verifySignature({\n        signature: sig,\n        data: signatureBase,\n        x509Certificate: x5c[0],\n        hashAlgorithm: COSEALG.ES256,\n    });\n}\n", "import { isCOSEAlg } from '../../helpers/cose.js';\nimport { convertCertBufferToPEM } from '../../helpers/convertCertBufferToPEM.js';\nimport { validateCertificatePath } from '../../helpers/validateCertificatePath.js';\nimport { getCertificateInfo } from '../../helpers/getCertificateInfo.js';\nimport { verifySignature } from '../../helpers/verifySignature.js';\nimport { isoUint8Array } from '../../helpers/iso/index.js';\nimport { validateExtFIDOGenCEAAGUID } from '../../helpers/validateExtFIDOGenCEAAGUID.js';\nimport { MetadataService } from '../../services/metadataService.js';\nimport { verifyAttestationWithMetadata } from '../../metadata/verifyAttestationWithMetadata.js';\n/**\n * Verify an attestation response with fmt 'packed'\n */\nexport async function verifyAttestationPacked(options) {\n    const { attStmt, clientDataHash, authData, credentialPublicKey, aaguid, rootCertificates, } = options;\n    const sig = attStmt.get('sig');\n    const x5c = attStmt.get('x5c');\n    const alg = attStmt.get('alg');\n    if (!sig) {\n        throw new Error('No attestation signature provided in attestation statement (Packed)');\n    }\n    if (!alg) {\n        throw new Error('Attestation statement did not contain alg (Packed)');\n    }\n    if (!isCOSEAlg(alg)) {\n        throw new Error(`Attestation statement contained invalid alg ${alg} (Packed)`);\n    }\n    const signatureBase = isoUint8Array.concat([authData, clientDataHash]);\n    let verified = false;\n    if (x5c) {\n        const { subject, basicConstraintsCA, version, notBefore, notAfter, parsedCertificate, } = getCertificateInfo(x5c[0]);\n        const { OU, CN, O, C } = subject;\n        if (OU !== 'Authenticator Attestation') {\n            throw new Error('Certificate OU was not \"Authenticator Attestation\" (Packed|Full)');\n        }\n        if (!CN) {\n            throw new Error('Certificate CN was empty (Packed|Full)');\n        }\n        if (!O) {\n            throw new Error('Certificate O was empty (Packed|Full)');\n        }\n        if (!C || C.length !== 2) {\n            throw new Error('Certificate C was not two-character ISO 3166 code (Packed|Full)');\n        }\n        if (basicConstraintsCA) {\n            throw new Error('Certificate basic constraints CA was not `false` (Packed|Full)');\n        }\n        if (version !== 2) {\n            throw new Error('Certificate version was not `3` (ASN.1 value of 2) (Packed|Full)');\n        }\n        let now = new Date();\n        if (notBefore > now) {\n            throw new Error(`Certificate not good before \"${notBefore.toString()}\" (Packed|Full)`);\n        }\n        now = new Date();\n        if (notAfter < now) {\n            throw new Error(`Certificate not good after \"${notAfter.toString()}\" (Packed|Full)`);\n        }\n        // Validate attestation statement AAGUID against leaf cert AAGUID\n        try {\n            await validateExtFIDOGenCEAAGUID(parsedCertificate.tbsCertificate.extensions, aaguid);\n        }\n        catch (err) {\n            const _err = err;\n            throw new Error(`${_err.message} (Packed|Full)`);\n        }\n        // If available, validate attestation alg and x5c with info in the metadata statement\n        const statement = await MetadataService.getStatement(aaguid);\n        if (statement) {\n            // The presence of x5c means this is a full attestation. Check to see if attestationTypes\n            // includes packed attestations.\n            if (statement.attestationTypes.indexOf('basic_full') < 0) {\n                throw new Error('Metadata does not indicate support for full attestations (Packed|Full)');\n            }\n            try {\n                await verifyAttestationWithMetadata({\n                    statement,\n                    credentialPublicKey,\n                    x5c,\n                    attestationStatementAlg: alg,\n                });\n            }\n            catch (err) {\n                const _err = err;\n                throw new Error(`${_err.message} (Packed|Full)`);\n            }\n        }\n        else {\n            try {\n                // Try validating the certificate path using the root certificates set via SettingsService\n                await validateCertificatePath(x5c.map(convertCertBufferToPEM), rootCertificates);\n            }\n            catch (err) {\n                const _err = err;\n                throw new Error(`${_err.message} (Packed|Full)`);\n            }\n        }\n        verified = await verifySignature({\n            signature: sig,\n            data: signatureBase,\n            x509Certificate: x5c[0],\n        });\n    }\n    else {\n        verified = await verifySignature({\n            signature: sig,\n            data: signatureBase,\n            credentialPublicKey,\n            hashAlgorithm: alg,\n        });\n    }\n    return verified;\n}\n", "import { AsnParser, OctetString } from '@peculiar/asn1-schema';\nimport { isoUint8Array } from './iso/index.js';\n/**\n * Attestation Certificate Extension OID: `id-fido-gen-ce-aaguid`\n *\n * Sourced from https://fidoalliance.org/specs/fido-v2.0-ps-20150904/fido-key-attestation-v2.0-ps-20150904.html#verifying-an-attestation-statement\n */\nconst id_fido_gen_ce_aaguid = '1.3.6.1.4.1.45724.1.1.4';\n/**\n * Look for the id-fido-gen-ce-aaguid certificate extension. If it's present then check it against\n * the attestation statement AAGUID.\n */\nexport function validateExtFIDOGenCEAAGUID(certExtensions, aaguid) {\n    // The certificate had no extensions so there's nothing to validate\n    if (!certExtensions) {\n        return true;\n    }\n    const extFIDOGenCEAAGUID = certExtensions.find((ext) => ext.extnID === id_fido_gen_ce_aaguid);\n    // The extension isn't present so there's nothing to validate\n    if (!extFIDOGenCEAAGUID) {\n        return true;\n    }\n    // Parse the extension value\n    const parsedExtFIDOGenCEAAGUID = AsnParser.parse(extFIDOGenCEAAGUID.extnValue, OctetString);\n    const extValue = new Uint8Array(parsedExtFIDOGenCEAAGUID.buffer);\n    // Compare the two values\n    const aaguidAndExtAreEqual = isoUint8Array.areEqual(aaguid, extValue);\n    if (!aaguidAndExtAreEqual) {\n        const _debugExtHex = isoUint8Array.toHex(extValue);\n        const _debugAAGUIDHex = isoUint8Array.toHex(aaguid);\n        throw new Error(`Certificate extension id-fido-gen-ce-aaguid (${id_fido_gen_ce_aaguid}) value of \"${_debugExtHex}\" was present but not equal to attestation statement AAGUID value of \"${_debugAAGUIDHex}\"`);\n    }\n    return true;\n}\n", "import { validateCertificatePath } from '../helpers/validateCertificatePath.js';\nimport { convertCertBufferToPEM } from '../helpers/convertCertBufferToPEM.js';\nimport { convertAAGUIDToString } from '../helpers/convertAAGUIDToString.js';\nimport { SettingsService } from './settingsService.js';\nimport { getLogger } from '../helpers/logging.js';\nimport { convertPEMToBytes } from '../helpers/convertPEMToBytes.js';\nimport { fetch } from '../helpers/fetch.js';\nimport { parseJWT } from '../metadata/parseJWT.js';\nimport { verifyJWT } from '../metadata/verifyJWT.js';\nconst defaultURLMDS = 'https://mds.fidoalliance.org/'; // v3\nvar SERVICE_STATE;\n(function (SERVICE_STATE) {\n    SERVICE_STATE[SERVICE_STATE[\"DISABLED\"] = 0] = \"DISABLED\";\n    SERVICE_STATE[SERVICE_STATE[\"REFRESHING\"] = 1] = \"REFRESHING\";\n    SERVICE_STATE[SERVICE_STATE[\"READY\"] = 2] = \"READY\";\n})(SERVICE_STATE || (SERVICE_STATE = {}));\nconst log = getLogger('MetadataService');\n/**\n * An implementation of `MetadataService` that can download and parse BLOBs, and support on-demand\n * requesting and caching of individual metadata statements.\n *\n * https://fidoalliance.org/metadata/\n */\nexport class BaseMetadataService {\n    constructor() {\n        Object.defineProperty(this, \"mdsCache\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {}\n        });\n        Object.defineProperty(this, \"statementCache\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {}\n        });\n        Object.defineProperty(this, \"state\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: SERVICE_STATE.DISABLED\n        });\n        Object.defineProperty(this, \"verificationMode\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'strict'\n        });\n    }\n    async initialize(opts = {}) {\n        const { mdsServers = [defaultURLMDS], statements, verificationMode } = opts;\n        this.setState(SERVICE_STATE.REFRESHING);\n        // If metadata statements are provided, load them into the cache first\n        if (statements?.length) {\n            let statementsAdded = 0;\n            statements.forEach((statement) => {\n                // Only cache statements that are for FIDO2-compatible authenticators\n                if (statement.aaguid) {\n                    this.statementCache[statement.aaguid] = {\n                        entry: {\n                            metadataStatement: statement,\n                            statusReports: [],\n                            timeOfLastStatusChange: '1970-01-01',\n                        },\n                        url: '',\n                    };\n                    statementsAdded += 1;\n                }\n            });\n            log(`Cached ${statementsAdded} local statements`);\n        }\n        // If MDS servers are provided, then process them and add their statements to the cache\n        if (mdsServers?.length) {\n            // Get a current count so we know how many new statements we've added from MDS servers\n            const currentCacheCount = Object.keys(this.statementCache).length;\n            let numServers = mdsServers.length;\n            for (const url of mdsServers) {\n                try {\n                    await this.downloadBlob({\n                        url,\n                        no: 0,\n                        nextUpdate: new Date(0),\n                    });\n                }\n                catch (err) {\n                    // Notify of the error and move on\n                    log(`Could not download BLOB from ${url}:`, err);\n                    numServers -= 1;\n                }\n            }\n            // Calculate the difference to get the total number of new statements we successfully added\n            const newCacheCount = Object.keys(this.statementCache).length;\n            const cacheDiff = newCacheCount - currentCacheCount;\n            log(`Cached ${cacheDiff} statements from ${numServers} metadata server(s)`);\n        }\n        if (verificationMode) {\n            this.verificationMode = verificationMode;\n        }\n        this.setState(SERVICE_STATE.READY);\n    }\n    async getStatement(aaguid) {\n        if (this.state === SERVICE_STATE.DISABLED) {\n            return;\n        }\n        if (!aaguid) {\n            return;\n        }\n        if (aaguid instanceof Uint8Array) {\n            aaguid = convertAAGUIDToString(aaguid);\n        }\n        // If a cache refresh is in progress then pause this until the service is ready\n        await this.pauseUntilReady();\n        // Try to grab a cached statement\n        const cachedStatement = this.statementCache[aaguid];\n        if (!cachedStatement) {\n            if (this.verificationMode === 'strict') {\n                // FIDO conformance requires RP's to only support registered AAGUID's\n                throw new Error(`No metadata statement found for aaguid \"${aaguid}\"`);\n            }\n            // Allow registration verification to continue without using metadata\n            return;\n        }\n        // If the statement points to an MDS API, check the MDS' nextUpdate to see if we need to refresh\n        if (cachedStatement.url) {\n            const mds = this.mdsCache[cachedStatement.url];\n            const now = new Date();\n            if (now > mds.nextUpdate) {\n                try {\n                    this.setState(SERVICE_STATE.REFRESHING);\n                    await this.downloadBlob(mds);\n                }\n                finally {\n                    this.setState(SERVICE_STATE.READY);\n                }\n            }\n        }\n        const { entry } = cachedStatement;\n        // Check to see if the this aaguid has a status report with a \"compromised\" status\n        for (const report of entry.statusReports) {\n            const { status } = report;\n            if (status === 'USER_VERIFICATION_BYPASS' ||\n                status === 'ATTESTATION_KEY_COMPROMISE' ||\n                status === 'USER_KEY_REMOTE_COMPROMISE' ||\n                status === 'USER_KEY_PHYSICAL_COMPROMISE') {\n                throw new Error(`Detected compromised aaguid \"${aaguid}\"`);\n            }\n        }\n        return entry.metadataStatement;\n    }\n    /**\n     * Download and process the latest BLOB from MDS\n     */\n    async downloadBlob(mds) {\n        const { url, no } = mds;\n        // Get latest \"BLOB\" (FIDO's terminology, not mine)\n        const resp = await fetch(url);\n        const data = await resp.text();\n        // Parse the JWT\n        const parsedJWT = parseJWT(data);\n        const header = parsedJWT[0];\n        const payload = parsedJWT[1];\n        if (payload.no <= no) {\n            // From FIDO MDS docs: \"also ignore the file if its number (no) is less or equal to the\n            // number of the last BLOB cached locally.\"\n            throw new Error(`Latest BLOB no. \"${payload.no}\" is not greater than previous ${no}`);\n        }\n        const headerCertsPEM = header.x5c.map(convertCertBufferToPEM);\n        try {\n            // Validate the certificate chain\n            const rootCerts = SettingsService.getRootCertificates({\n                identifier: 'mds',\n            });\n            await validateCertificatePath(headerCertsPEM, rootCerts);\n        }\n        catch (error) {\n            const _error = error;\n            // From FIDO MDS docs: \"ignore the file if the chain cannot be verified or if one of the\n            // chain certificates is revoked\"\n            throw new Error(`BLOB certificate path could not be validated: ${_error.message}`);\n        }\n        // Verify the BLOB JWT signature\n        const leafCert = headerCertsPEM[0];\n        const verified = await verifyJWT(data, convertPEMToBytes(leafCert));\n        if (!verified) {\n            // From FIDO MDS docs: \"The FIDO Server SHOULD ignore the file if the signature is invalid.\"\n            throw new Error('BLOB signature could not be verified');\n        }\n        // Cache statements for FIDO2 devices\n        for (const entry of payload.entries) {\n            // Only cache entries with an `aaguid`\n            if (entry.aaguid) {\n                this.statementCache[entry.aaguid] = { entry, url };\n            }\n        }\n        // Remember info about the server so we can refresh later\n        const [year, month, day] = payload.nextUpdate.split('-');\n        this.mdsCache[url] = {\n            ...mds,\n            // Store the payload `no` to make sure we're getting the next BLOB in the sequence\n            no: payload.no,\n            // Convert the nextUpdate property into a Date so we can determine when to re-download\n            nextUpdate: new Date(parseInt(year, 10), \n            // Months need to be zero-indexed\n            parseInt(month, 10) - 1, parseInt(day, 10)),\n        };\n    }\n    /**\n     * A helper method to pause execution until the service is ready\n     */\n    pauseUntilReady() {\n        if (this.state === SERVICE_STATE.READY) {\n            return new Promise((resolve) => {\n                resolve();\n            });\n        }\n        // State isn't ready, so set up polling\n        const readyPromise = new Promise((resolve, reject) => {\n            const totalTimeoutMS = 70000;\n            const intervalMS = 100;\n            let iterations = totalTimeoutMS / intervalMS;\n            // Check service state every `intervalMS` milliseconds\n            const intervalID = globalThis.setInterval(() => {\n                if (iterations < 1) {\n                    clearInterval(intervalID);\n                    reject(`State did not become ready in ${totalTimeoutMS / 1000} seconds`);\n                }\n                else if (this.state === SERVICE_STATE.READY) {\n                    clearInterval(intervalID);\n                    resolve();\n                }\n                iterations -= 1;\n            }, intervalMS);\n        });\n        return readyPromise;\n    }\n    /**\n     * Report service status on change\n     */\n    setState(newState) {\n        this.state = newState;\n        if (newState === SERVICE_STATE.DISABLED) {\n            log('MetadataService is DISABLED');\n        }\n        else if (newState === SERVICE_STATE.REFRESHING) {\n            log('MetadataService is REFRESHING');\n        }\n        else if (newState === SERVICE_STATE.READY) {\n            log('MetadataService is READY');\n        }\n    }\n}\n/**\n * A basic service for coordinating interactions with the FIDO Metadata Service. This includes BLOB\n * download and parsing, and on-demand requesting and caching of individual metadata statements.\n *\n * https://fidoalliance.org/metadata/\n */\nexport const MetadataService = new BaseMetadataService();\n", "// const defaultLogger = debug('SimpleWebAuthn');\n/**\n * Generate an instance of a `debug` logger that extends off of the \"simplewebauthn\" namespace for\n * consistent naming.\n *\n * See https://www.npmjs.com/package/debug for information on how to control logging output when\n * using @simplewebauthn/server\n *\n * Example:\n *\n * ```\n * const log = getLogger('mds');\n * log('hello'); // simplewebauthn:mds hello +0ms\n * ```\n */\nexport function getLogger(_name) {\n    // This is a noop for now while I search for a better debug logger technique\n    return (_message, ..._rest) => { };\n}\n", "import { isoBase64URL } from '../helpers/iso/index.js';\n/**\n * Process a JWT into Javascript-friendly data structures\n */\nexport function parseJWT(jwt) {\n    const parts = jwt.split('.');\n    return [\n        JSON.parse(isoBase64URL.toUTF8String(parts[0])),\n        JSON.parse(isoBase64URL.toUTF8String(parts[1])),\n        parts[2],\n    ];\n}\n", "import { convertX509PublicKeyToCOSE } from '../helpers/convertX509PublicKeyToCOSE.js';\nimport { isoBase64URL, isoUint8Array } from '../helpers/iso/index.js';\nimport { COSEALG, COSEKEYS, isCOSEPublicKeyEC2, isCOSEPublicKeyRSA } from '../helpers/cose.js';\nimport { verifyEC2 } from '../helpers/iso/isoCrypto/verifyEC2.js';\nimport { verifyRSA } from '../helpers/iso/isoCrypto/verifyRSA.js';\n/**\n * Lightweight verification for FIDO MDS JWTs. Supports use of EC2 and RSA.\n *\n * If this ever needs to support more JWS algorithms, here's the list of them:\n *\n * https://www.rfc-editor.org/rfc/rfc7518.html#section-3.1\n *\n * (Pulled from https://www.rfc-editor.org/rfc/rfc7515#section-4.1.1)\n */\nexport function verifyJWT(jwt, leafCert) {\n    const [header, payload, signature] = jwt.split('.');\n    const certCOSE = convertX509PublicKeyToCOSE(leafCert);\n    const data = isoUint8Array.fromUTF8String(`${header}.${payload}`);\n    const signatureBytes = isoBase64URL.toBuffer(signature);\n    if (isCOSEPublicKeyEC2(certCOSE)) {\n        return verifyEC2({\n            data,\n            signature: signatureBytes,\n            cosePublicKey: certCOSE,\n            shaHashOverride: COSEALG.ES256,\n        });\n    }\n    else if (isCOSEPublicKeyRSA(certCOSE)) {\n        return verifyRSA({\n            data,\n            signature: signatureBytes,\n            cosePublicKey: certCOSE,\n        });\n    }\n    const kty = certCOSE.get(COSEKEYS.kty);\n    throw new Error(`JWT verification with public key of kty ${kty} is not supported by this method`);\n}\n", "import { convertCertBufferToPEM } from '../helpers/convertCertBufferToPEM.js';\nimport { validateCertificatePath } from '../helpers/validateCertificatePath.js';\nimport { decodeCredentialPublicKey } from '../helpers/decodeCredentialPublicKey.js';\nimport { COSEKEYS, COSEKTY, isCOSEPublicKeyEC2, } from '../helpers/cose.js';\n/**\n * Match properties of the authenticator's attestation statement against expected values as\n * registered with the FIDO Alliance Metadata Service\n */\nexport async function verifyAttestationWithMetadata({ statement, credentialPublicKey, x5c, attestationStatementAlg, }) {\n    const { authenticationAlgorithms, authenticatorGetInfo, attestationRootCertificates, } = statement;\n    // Make sure the alg in the attestation statement matches one of the ones specified in metadata\n    const keypairCOSEAlgs = new Set();\n    authenticationAlgorithms.forEach((algSign) => {\n        // Map algSign string to { kty, alg, crv }\n        const algSignCOSEINFO = algSignToCOSEInfoMap[algSign];\n        // Keeping this statement here just in case MDS returns something unexpected\n        if (algSignCOSEINFO) {\n            keypairCOSEAlgs.add(algSignCOSEINFO);\n        }\n    });\n    // Extract the public key's COSE info for comparison\n    const decodedPublicKey = decodeCredentialPublicKey(credentialPublicKey);\n    const kty = decodedPublicKey.get(COSEKEYS.kty);\n    const alg = decodedPublicKey.get(COSEKEYS.alg);\n    if (!kty) {\n        throw new Error('Credential public key was missing kty');\n    }\n    if (!alg) {\n        throw new Error('Credential public key was missing alg');\n    }\n    if (!kty) {\n        throw new Error('Credential public key was missing kty');\n    }\n    // Assume everything is a number because these values should be\n    const publicKeyCOSEInfo = { kty, alg };\n    if (isCOSEPublicKeyEC2(decodedPublicKey)) {\n        const crv = decodedPublicKey.get(COSEKEYS.crv);\n        publicKeyCOSEInfo.crv = crv;\n    }\n    /**\n     * Attempt to match the credential public key's algorithm to one specified in the device's\n     * metadata\n     */\n    let foundMatch = false;\n    for (const keypairAlg of keypairCOSEAlgs) {\n        // Make sure algorithm and key type match\n        if (keypairAlg.alg === publicKeyCOSEInfo.alg &&\n            keypairAlg.kty === publicKeyCOSEInfo.kty) {\n            // If not an RSA keypair then make sure curve numbers match too\n            if ((keypairAlg.kty === COSEKTY.EC2 || keypairAlg.kty === COSEKTY.OKP) &&\n                keypairAlg.crv === publicKeyCOSEInfo.crv) {\n                foundMatch = true;\n            }\n            else {\n                // We've matched an RSA public key's properties\n                foundMatch = true;\n            }\n        }\n        if (foundMatch) {\n            break;\n        }\n    }\n    // Make sure the public key is one of the allowed algorithms\n    if (!foundMatch) {\n        /**\n         * Craft some useful error output from the MDS algorithms\n         *\n         * Example:\n         *\n         * ```\n         * [\n         *   'rsassa_pss_sha256_raw' (COSE info: { kty: 3, alg: -37 }),\n         *   'secp256k1_ecdsa_sha256_raw' (COSE info: { kty: 2, alg: -47, crv: 8 })\n         * ]\n         * ```\n         */\n        const debugMDSAlgs = authenticationAlgorithms.map((algSign) => `'${algSign}' (COSE info: ${stringifyCOSEInfo(algSignToCOSEInfoMap[algSign])})`);\n        const strMDSAlgs = JSON.stringify(debugMDSAlgs, null, 2).replace(/\"/g, '');\n        /**\n         * Construct useful error output about the public key\n         */\n        const strPubKeyAlg = stringifyCOSEInfo(publicKeyCOSEInfo);\n        throw new Error(`Public key parameters ${strPubKeyAlg} did not match any of the following metadata algorithms:\\n${strMDSAlgs}`);\n    }\n    /**\n     * Confirm the attestation statement's algorithm is one supported according to metadata\n     */\n    if (attestationStatementAlg !== undefined &&\n        authenticatorGetInfo?.algorithms !== undefined) {\n        const getInfoAlgs = authenticatorGetInfo.algorithms.map((_alg) => _alg.alg);\n        if (getInfoAlgs.indexOf(attestationStatementAlg) < 0) {\n            throw new Error(`Attestation statement alg ${attestationStatementAlg} did not match one of ${getInfoAlgs}`);\n        }\n    }\n    // Prepare to check the certificate chain\n    const authenticatorCerts = x5c.map(convertCertBufferToPEM);\n    const statementRootCerts = attestationRootCertificates.map(convertCertBufferToPEM);\n    /**\n     * If an authenticator returns exactly one certificate in its x5c, and that cert is found in the\n     * metadata statement then the authenticator is \"self-referencing\". In this case we forego\n     * certificate chain validation.\n     */\n    let authenticatorIsSelfReferencing = false;\n    if (authenticatorCerts.length === 1 &&\n        statementRootCerts.indexOf(authenticatorCerts[0]) >= 0) {\n        authenticatorIsSelfReferencing = true;\n    }\n    if (!authenticatorIsSelfReferencing) {\n        try {\n            await validateCertificatePath(authenticatorCerts, statementRootCerts);\n        }\n        catch (err) {\n            const _err = err;\n            throw new Error(`Could not validate certificate path with any metadata root certificates: ${_err.message}`);\n        }\n    }\n    return true;\n}\n/**\n * Convert ALG_SIGN values to COSE info\n *\n * Values pulled from `ALG_KEY_COSE` definitions in the FIDO Registry of Predefined Values\n *\n * https://fidoalliance.org/specs/common-specs/fido-registry-v2.2-ps-20220523.html#authentication-algorithms\n */\nexport const algSignToCOSEInfoMap = {\n    secp256r1_ecdsa_sha256_raw: { kty: 2, alg: -7, crv: 1 },\n    secp256r1_ecdsa_sha256_der: { kty: 2, alg: -7, crv: 1 },\n    rsassa_pss_sha256_raw: { kty: 3, alg: -37 },\n    rsassa_pss_sha256_der: { kty: 3, alg: -37 },\n    secp256k1_ecdsa_sha256_raw: { kty: 2, alg: -47, crv: 8 },\n    secp256k1_ecdsa_sha256_der: { kty: 2, alg: -47, crv: 8 },\n    rsassa_pss_sha384_raw: { kty: 3, alg: -38 },\n    rsassa_pkcsv15_sha256_raw: { kty: 3, alg: -257 },\n    rsassa_pkcsv15_sha384_raw: { kty: 3, alg: -258 },\n    rsassa_pkcsv15_sha512_raw: { kty: 3, alg: -259 },\n    rsassa_pkcsv15_sha1_raw: { kty: 3, alg: -65535 },\n    secp384r1_ecdsa_sha384_raw: { kty: 2, alg: -35, crv: 2 },\n    secp512r1_ecdsa_sha256_raw: { kty: 2, alg: -36, crv: 3 },\n    ed25519_eddsa_sha512_raw: { kty: 1, alg: -8, crv: 6 },\n};\n/**\n * A helper to format COSEInfo a little nicer than we can achieve with JSON.stringify()\n *\n * Input: `{ \"kty\": 3, \"alg\": -257 }`\n *\n * Output: `\"{ kty: 3, alg: -257 }\"`\n */\nfunction stringifyCOSEInfo(info) {\n    const { kty, alg, crv } = info;\n    let toReturn = '';\n    if (kty !== COSEKTY.RSA) {\n        toReturn = `{ kty: ${kty}, alg: ${alg}, crv: ${crv} }`;\n    }\n    else {\n        toReturn = `{ kty: ${kty}, alg: ${alg} }`;\n    }\n    return toReturn;\n}\n", "import { toHash } from '../../helpers/toHash.js';\nimport { verifySignature } from '../../helpers/verifySignature.js';\nimport { getCertificateInfo } from '../../helpers/getCertificateInfo.js';\nimport { validateCertificatePath } from '../../helpers/validateCertificatePath.js';\nimport { convertCertBufferToPEM } from '../../helpers/convertCertBufferToPEM.js';\nimport { isoBase64URL, isoUint8Array } from '../../helpers/iso/index.js';\nimport { MetadataService } from '../../services/metadataService.js';\nimport { verifyAttestationWithMetadata } from '../../metadata/verifyAttestationWithMetadata.js';\n/**\n * Verify an attestation response with fmt 'android-safetynet'\n */\nexport async function verifyAttestationAndroidSafetyNet(options) {\n    const { attStmt, clientDataHash, authData, aaguid, rootCertificates, verifyTimestampMS = true, credentialPublicKey, } = options;\n    const alg = attStmt.get('alg');\n    const response = attStmt.get('response');\n    const ver = attStmt.get('ver');\n    if (!ver) {\n        throw new Error('No ver value in attestation (SafetyNet)');\n    }\n    if (!response) {\n        throw new Error('No response was included in attStmt by authenticator (SafetyNet)');\n    }\n    // Prepare to verify a JWT\n    const jwt = isoUint8Array.toUTF8String(response);\n    const jwtParts = jwt.split('.');\n    const HEADER = JSON.parse(isoBase64URL.toUTF8String(jwtParts[0]));\n    const PAYLOAD = JSON.parse(isoBase64URL.toUTF8String(jwtParts[1]));\n    const SIGNATURE = jwtParts[2];\n    /**\n     * START Verify PAYLOAD\n     */\n    const { nonce, ctsProfileMatch, timestampMs } = PAYLOAD;\n    if (verifyTimestampMS) {\n        // Make sure timestamp is in the past\n        let now = Date.now();\n        if (timestampMs > Date.now()) {\n            throw new Error(`Payload timestamp \"${timestampMs}\" was later than \"${now}\" (SafetyNet)`);\n        }\n        // Consider a SafetyNet attestation valid within a minute of it being performed\n        const timestampPlusDelay = timestampMs + 60 * 1000;\n        now = Date.now();\n        if (timestampPlusDelay < now) {\n            throw new Error(`Payload timestamp \"${timestampPlusDelay}\" has expired (SafetyNet)`);\n        }\n    }\n    const nonceBase = isoUint8Array.concat([authData, clientDataHash]);\n    const nonceBuffer = await toHash(nonceBase);\n    const expectedNonce = isoBase64URL.fromBuffer(nonceBuffer, 'base64');\n    if (nonce !== expectedNonce) {\n        throw new Error('Could not verify payload nonce (SafetyNet)');\n    }\n    if (!ctsProfileMatch) {\n        throw new Error('Could not verify device integrity (SafetyNet)');\n    }\n    /**\n     * END Verify PAYLOAD\n     */\n    /**\n     * START Verify Header\n     */\n    // `HEADER.x5c[0]` is definitely a base64 string\n    const leafCertBuffer = isoBase64URL.toBuffer(HEADER.x5c[0], 'base64');\n    const leafCertInfo = getCertificateInfo(leafCertBuffer);\n    const { subject } = leafCertInfo;\n    // Ensure the certificate was issued to this hostname\n    // See https://developer.android.com/training/safetynet/attestation#verify-attestation-response\n    if (subject.CN !== 'attest.android.com') {\n        throw new Error('Certificate common name was not \"attest.android.com\" (SafetyNet)');\n    }\n    const statement = await MetadataService.getStatement(aaguid);\n    if (statement) {\n        try {\n            await verifyAttestationWithMetadata({\n                statement,\n                credentialPublicKey,\n                x5c: HEADER.x5c,\n                attestationStatementAlg: alg,\n            });\n        }\n        catch (err) {\n            const _err = err;\n            throw new Error(`${_err.message} (SafetyNet)`);\n        }\n    }\n    else {\n        try {\n            // Try validating the certificate path using the root certificates set via SettingsService\n            await validateCertificatePath(HEADER.x5c.map(convertCertBufferToPEM), rootCertificates);\n        }\n        catch (err) {\n            const _err = err;\n            throw new Error(`${_err.message} (SafetyNet)`);\n        }\n    }\n    /**\n     * END Verify Header\n     */\n    /**\n     * START Verify Signature\n     */\n    const signatureBaseBuffer = isoUint8Array.fromUTF8String(`${jwtParts[0]}.${jwtParts[1]}`);\n    const signatureBuffer = isoBase64URL.toBuffer(SIGNATURE);\n    const verified = await verifySignature({\n        signature: signatureBuffer,\n        data: signatureBaseBuffer,\n        x509Certificate: leafCertBuffer,\n    });\n    /**\n     * END Verify Signature\n     */\n    return verified;\n}\n", "import { AsnParser } from '@peculiar/asn1-schema';\nimport { Certificate, ExtendedKeyUsage, id_ce_extKeyUsage, id_ce_subjectAltName, SubjectAlternativeName, } from '@peculiar/asn1-x509';\nimport { decodeCredentialPublicKey } from '../../../helpers/decodeCredentialPublicKey.js';\nimport { COSEALG, COSEKEYS, isCOSEAlg, isCOSEPublicKeyEC2, isCOSEPublicKeyRSA, } from '../../../helpers/cose.js';\nimport { toHash } from '../../../helpers/toHash.js';\nimport { convertCertBufferToPEM } from '../../../helpers/convertCertBufferToPEM.js';\nimport { validateCertificatePath } from '../../../helpers/validateCertificatePath.js';\nimport { getCertificateInfo } from '../../../helpers/getCertificateInfo.js';\nimport { verifySignature } from '../../../helpers/verifySignature.js';\nimport { isoUint8Array } from '../../../helpers/iso/index.js';\nimport { validateExtFIDOGenCEAAGUID } from '../../../helpers/validateExtFIDOGenCEAAGUID.js';\nimport { MetadataService } from '../../../services/metadataService.js';\nimport { verifyAttestationWithMetadata } from '../../../metadata/verifyAttestationWithMetadata.js';\nimport { TPM_ECC_CURVE_COSE_CRV_MAP, TPM_MANUFACTURERS } from './constants.js';\nimport { parseCertInfo } from './parseCertInfo.js';\nimport { parsePubArea } from './parsePubArea.js';\nexport async function verifyAttestationTPM(options) {\n    const { aaguid, attStmt, authData, credentialPublicKey, clientDataHash, rootCertificates, } = options;\n    const ver = attStmt.get('ver');\n    const sig = attStmt.get('sig');\n    const alg = attStmt.get('alg');\n    const x5c = attStmt.get('x5c');\n    const pubArea = attStmt.get('pubArea');\n    const certInfo = attStmt.get('certInfo');\n    /**\n     * Verify structures\n     */\n    if (ver !== '2.0') {\n        throw new Error(`Unexpected ver \"${ver}\", expected \"2.0\" (TPM)`);\n    }\n    if (!sig) {\n        throw new Error('No attestation signature provided in attestation statement (TPM)');\n    }\n    if (!alg) {\n        throw new Error(`Attestation statement did not contain alg (TPM)`);\n    }\n    if (!isCOSEAlg(alg)) {\n        throw new Error(`Attestation statement contained invalid alg ${alg} (TPM)`);\n    }\n    if (!x5c) {\n        throw new Error('No attestation certificate provided in attestation statement (TPM)');\n    }\n    if (!pubArea) {\n        throw new Error('Attestation statement did not contain pubArea (TPM)');\n    }\n    if (!certInfo) {\n        throw new Error('Attestation statement did not contain certInfo (TPM)');\n    }\n    const parsedPubArea = parsePubArea(pubArea);\n    const { unique, type: pubType, parameters } = parsedPubArea;\n    // Verify that the public key specified by the parameters and unique fields of pubArea is\n    // identical to the credentialPublicKey in the attestedCredentialData in authenticatorData.\n    const cosePublicKey = decodeCredentialPublicKey(credentialPublicKey);\n    if (pubType === 'TPM_ALG_RSA') {\n        if (!isCOSEPublicKeyRSA(cosePublicKey)) {\n            throw new Error(`Credential public key with kty ${cosePublicKey.get(COSEKEYS.kty)} did not match ${pubType}`);\n        }\n        const n = cosePublicKey.get(COSEKEYS.n);\n        const e = cosePublicKey.get(COSEKEYS.e);\n        if (!n) {\n            throw new Error('COSE public key missing n (TPM|RSA)');\n        }\n        if (!e) {\n            throw new Error('COSE public key missing e (TPM|RSA)');\n        }\n        if (!isoUint8Array.areEqual(unique, n)) {\n            throw new Error('PubArea unique is not same as credentialPublicKey (TPM|RSA)');\n        }\n        if (!parameters.rsa) {\n            throw new Error(`Parsed pubArea type is RSA, but missing parameters.rsa (TPM|RSA)`);\n        }\n        const eBuffer = e;\n        // If `exponent` is equal to 0x00, then exponent is the default RSA exponent of 2^16+1 (65537)\n        const pubAreaExponent = parameters.rsa.exponent || 65537;\n        // Do some bit shifting to get to an integer\n        const eSum = eBuffer[0] + (eBuffer[1] << 8) + (eBuffer[2] << 16);\n        if (pubAreaExponent !== eSum) {\n            throw new Error(`Unexpected public key exp ${eSum}, expected ${pubAreaExponent} (TPM|RSA)`);\n        }\n    }\n    else if (pubType === 'TPM_ALG_ECC') {\n        if (!isCOSEPublicKeyEC2(cosePublicKey)) {\n            throw new Error(`Credential public key with kty ${cosePublicKey.get(COSEKEYS.kty)} did not match ${pubType}`);\n        }\n        const crv = cosePublicKey.get(COSEKEYS.crv);\n        const x = cosePublicKey.get(COSEKEYS.x);\n        const y = cosePublicKey.get(COSEKEYS.y);\n        if (!crv) {\n            throw new Error('COSE public key missing crv (TPM|ECC)');\n        }\n        if (!x) {\n            throw new Error('COSE public key missing x (TPM|ECC)');\n        }\n        if (!y) {\n            throw new Error('COSE public key missing y (TPM|ECC)');\n        }\n        if (!isoUint8Array.areEqual(unique, isoUint8Array.concat([x, y]))) {\n            throw new Error('PubArea unique is not same as public key x and y (TPM|ECC)');\n        }\n        if (!parameters.ecc) {\n            throw new Error(`Parsed pubArea type is ECC, but missing parameters.ecc (TPM|ECC)`);\n        }\n        const pubAreaCurveID = parameters.ecc.curveID;\n        const pubAreaCurveIDMapToCOSECRV = TPM_ECC_CURVE_COSE_CRV_MAP[pubAreaCurveID];\n        if (pubAreaCurveIDMapToCOSECRV !== crv) {\n            throw new Error(`Public area key curve ID \"${pubAreaCurveID}\" mapped to \"${pubAreaCurveIDMapToCOSECRV}\" which did not match public key crv of \"${crv}\" (TPM|ECC)`);\n        }\n    }\n    else {\n        throw new Error(`Unsupported pubArea.type \"${pubType}\"`);\n    }\n    const parsedCertInfo = parseCertInfo(certInfo);\n    const { magic, type: certType, attested, extraData } = parsedCertInfo;\n    if (magic !== 0xff544347) {\n        throw new Error(`Unexpected magic value \"${magic}\", expected \"0xff544347\" (TPM)`);\n    }\n    if (certType !== 'TPM_ST_ATTEST_CERTIFY') {\n        throw new Error(`Unexpected type \"${certType}\", expected \"TPM_ST_ATTEST_CERTIFY\" (TPM)`);\n    }\n    // Hash pubArea to create pubAreaHash using the nameAlg in attested\n    const pubAreaHash = await toHash(pubArea, attestedNameAlgToCOSEAlg(attested.nameAlg));\n    // Concatenate attested.nameAlg and pubAreaHash to create attestedName.\n    const attestedName = isoUint8Array.concat([\n        attested.nameAlgBuffer,\n        pubAreaHash,\n    ]);\n    // Check that certInfo.attested.name is equals to attestedName.\n    if (!isoUint8Array.areEqual(attested.name, attestedName)) {\n        throw new Error(`Attested name comparison failed (TPM)`);\n    }\n    // Concatenate authData with clientDataHash to create attToBeSigned\n    const attToBeSigned = isoUint8Array.concat([authData, clientDataHash]);\n    // Hash attToBeSigned using the algorithm specified in attStmt.alg to create attToBeSignedHash\n    const attToBeSignedHash = await toHash(attToBeSigned, alg);\n    // Check that certInfo.extraData is equals to attToBeSignedHash.\n    if (!isoUint8Array.areEqual(extraData, attToBeSignedHash)) {\n        throw new Error('CertInfo extra data did not equal hashed attestation (TPM)');\n    }\n    /**\n     * Verify signature\n     */\n    if (x5c.length < 1) {\n        throw new Error('No certificates present in x5c array (TPM)');\n    }\n    // Pick a leaf AIK certificate of the x5c array and parse it.\n    const leafCertInfo = getCertificateInfo(x5c[0]);\n    const { basicConstraintsCA, version, subject, notAfter, notBefore } = leafCertInfo;\n    if (basicConstraintsCA) {\n        throw new Error('Certificate basic constraints CA was not `false` (TPM)');\n    }\n    // Check that certificate is of version 3 (value must be set to 2).\n    if (version !== 2) {\n        throw new Error('Certificate version was not `3` (ASN.1 value of 2) (TPM)');\n    }\n    // Check that Subject sequence is empty.\n    if (subject.combined.length > 0) {\n        throw new Error('Certificate subject was not empty (TPM)');\n    }\n    // Check that certificate is currently valid\n    let now = new Date();\n    if (notBefore > now) {\n        throw new Error(`Certificate not good before \"${notBefore.toString()}\" (TPM)`);\n    }\n    // Check that certificate has not expired\n    now = new Date();\n    if (notAfter < now) {\n        throw new Error(`Certificate not good after \"${notAfter.toString()}\" (TPM)`);\n    }\n    /**\n     * Plumb the depths of the certificate's ASN.1-formatted data for some values we need to verify\n     */\n    const parsedCert = AsnParser.parse(x5c[0], Certificate);\n    if (!parsedCert.tbsCertificate.extensions) {\n        throw new Error('Certificate was missing extensions (TPM)');\n    }\n    let subjectAltNamePresent;\n    let extKeyUsage;\n    parsedCert.tbsCertificate.extensions.forEach((ext) => {\n        if (ext.extnID === id_ce_subjectAltName) {\n            subjectAltNamePresent = AsnParser.parse(ext.extnValue, SubjectAlternativeName);\n        }\n        else if (ext.extnID === id_ce_extKeyUsage) {\n            extKeyUsage = AsnParser.parse(ext.extnValue, ExtendedKeyUsage);\n        }\n    });\n    // Check that certificate contains subjectAltName (2.5.29.17) extension,\n    if (!subjectAltNamePresent) {\n        throw new Error('Certificate did not contain subjectAltName extension (TPM)');\n    }\n    // TPM-specific values are buried within `directoryName`, so first make sure there are values\n    // there.\n    if (!subjectAltNamePresent[0].directoryName?.[0].length) {\n        throw new Error('Certificate subjectAltName extension directoryName was empty (TPM)');\n    }\n    const { tcgAtTpmManufacturer, tcgAtTpmModel, tcgAtTpmVersion } = getTcgAtTpmValues(subjectAltNamePresent[0].directoryName);\n    if (!tcgAtTpmManufacturer || !tcgAtTpmModel || !tcgAtTpmVersion) {\n        throw new Error('Certificate contained incomplete subjectAltName data (TPM)');\n    }\n    if (!extKeyUsage) {\n        throw new Error('Certificate did not contain ExtendedKeyUsage extension (TPM)');\n    }\n    // Check that tcpaTpmManufacturer (2.23.133.2.1) field is set to a valid manufacturer ID.\n    if (!TPM_MANUFACTURERS[tcgAtTpmManufacturer]) {\n        throw new Error(`Could not match TPM manufacturer \"${tcgAtTpmManufacturer}\" (TPM)`);\n    }\n    // Check that certificate contains extKeyUsage (2.5.29.37) extension and it must contain\n    // tcg-kp-AIKCertificate (2.23.133.8.3) OID.\n    if (extKeyUsage[0] !== '2.23.133.8.3') {\n        throw new Error(`Unexpected extKeyUsage \"${extKeyUsage[0]}\", expected \"2.23.133.8.3\" (TPM)`);\n    }\n    // Validate attestation statement AAGUID against leaf cert AAGUID\n    try {\n        await validateExtFIDOGenCEAAGUID(parsedCert.tbsCertificate.extensions, aaguid);\n    }\n    catch (err) {\n        const _err = err;\n        throw new Error(`${_err.message} (TPM)`);\n    }\n    // Run some metadata checks if a statement exists for this authenticator\n    const statement = await MetadataService.getStatement(aaguid);\n    if (statement) {\n        try {\n            await verifyAttestationWithMetadata({\n                statement,\n                credentialPublicKey,\n                x5c,\n                attestationStatementAlg: alg,\n            });\n        }\n        catch (err) {\n            const _err = err;\n            throw new Error(`${_err.message} (TPM)`);\n        }\n    }\n    else {\n        try {\n            // Try validating the certificate path using the root certificates set via SettingsService\n            await validateCertificatePath(x5c.map(convertCertBufferToPEM), rootCertificates);\n        }\n        catch (err) {\n            const _err = err;\n            throw new Error(`${_err.message} (TPM)`);\n        }\n    }\n    // Verify signature over certInfo with the public key extracted from AIK certificate.\n    // In the wise words of Yuriy Ackermann: \"Get Martini friend, you are done!\"\n    return verifySignature({\n        signature: sig,\n        data: certInfo,\n        x509Certificate: x5c[0],\n        hashAlgorithm: alg,\n    });\n}\n/**\n * Contain logic for pulling TPM-specific values out of subjectAlternativeName extension\n */\nfunction getTcgAtTpmValues(root) {\n    const oidManufacturer = '2.23.133.2.1';\n    const oidModel = '2.23.133.2.2';\n    const oidVersion = '2.23.133.2.3';\n    let tcgAtTpmManufacturer;\n    let tcgAtTpmModel;\n    let tcgAtTpmVersion;\n    /**\n     * Iterate through the following potential structures:\n     *\n     * (Good, follows the spec)\n     * https://trustedcomputinggroup.org/wp-content/uploads/TCG_IWG_EKCredentialProfile_v2p3_r2_pub.pdf (page 33)\n     * Name [\n     *   RelativeDistinguishedName [\n     *     AttributeTypeAndValue { type, value }\n     *   ]\n     *   RelativeDistinguishedName [\n     *     AttributeTypeAndValue { type, value }\n     *   ]\n     *   RelativeDistinguishedName [\n     *     AttributeTypeAndValue { type, value }\n     *   ]\n     * ]\n     *\n     * (Bad, does not follow the spec)\n     * Name [\n     *   RelativeDistinguishedName [\n     *     AttributeTypeAndValue { type, value }\n     *     AttributeTypeAndValue { type, value }\n     *     AttributeTypeAndValue { type, value }\n     *   ]\n     * ]\n     *\n     * Both structures have been seen in the wild and need to be supported\n     */\n    root.forEach((relName) => {\n        relName.forEach((attr) => {\n            if (attr.type === oidManufacturer) {\n                tcgAtTpmManufacturer = attr.value.toString();\n            }\n            else if (attr.type === oidModel) {\n                tcgAtTpmModel = attr.value.toString();\n            }\n            else if (attr.type === oidVersion) {\n                tcgAtTpmVersion = attr.value.toString();\n            }\n        });\n    });\n    return {\n        tcgAtTpmManufacturer,\n        tcgAtTpmModel,\n        tcgAtTpmVersion,\n    };\n}\n/**\n * Convert TPM-specific SHA algorithm ID's with COSE-specific equivalents. Note that the choice to\n * use ECDSA SHA IDs is arbitrary; any such COSEALG that would map to SHA-256 in\n * `mapCoseAlgToWebCryptoAlg()`\n *\n * SHA IDs referenced from here:\n *\n * https://trustedcomputinggroup.org/wp-content/uploads/TCG_TPM2_r1p59_Part2_Structures_pub.pdf\n */\nfunction attestedNameAlgToCOSEAlg(alg) {\n    if (alg === 'TPM_ALG_SHA256') {\n        return COSEALG.ES256;\n    }\n    else if (alg === 'TPM_ALG_SHA384') {\n        return COSEALG.ES384;\n    }\n    else if (alg === 'TPM_ALG_SHA512') {\n        return COSEALG.ES512;\n    }\n    throw new Error(`Unexpected TPM attested name alg ${alg}`);\n}\n", "// deno-lint-ignore-file no-dupe-keys\n/**\n * A whole lotta domain knowledge is captured here, with hazy connections to source\n * documents. Good places to start searching for more info on these values are the\n * following Trusted Computing Group TPM Library docs linked in the WebAuthn API:\n *\n * - https://www.trustedcomputinggroup.org/wp-content/uploads/TPM-Rev-2.0-Part-1-Architecture-01.38.pdf\n * - https://www.trustedcomputinggroup.org/wp-content/uploads/TPM-Rev-2.0-Part-2-Structures-01.38.pdf\n * - https://www.trustedcomputinggroup.org/wp-content/uploads/TPM-Rev-2.0-Part-3-Commands-01.38.pdf\n */\n/**\n * 6.9 TPM_ST (Structure Tags)\n */\nexport const TPM_ST = {\n    0x00c4: 'TPM_ST_RSP_COMMAND',\n    0x8000: 'TPM_ST_NULL',\n    0x8001: 'TPM_ST_NO_SESSIONS',\n    0x8002: 'TPM_ST_SESSIONS',\n    0x8014: 'TPM_ST_ATTEST_NV',\n    0x8015: 'TPM_ST_ATTEST_COMMAND_AUDIT',\n    0x8016: 'TPM_ST_ATTEST_SESSION_AUDIT',\n    0x8017: 'TPM_ST_ATTEST_CERTIFY',\n    0x8018: 'TPM_ST_ATTEST_QUOTE',\n    0x8019: 'TPM_ST_ATTEST_TIME',\n    0x801a: 'TPM_ST_ATTEST_CREATION',\n    0x8021: 'TPM_ST_CREATION',\n    0x8022: 'TPM_ST_VERIFIED',\n    0x8023: 'TPM_ST_AUTH_SECRET',\n    0x8024: 'TPM_ST_HASHCHECK',\n    0x8025: 'TPM_ST_AUTH_SIGNED',\n    0x8029: 'TPM_ST_FU_MANIFEST',\n};\n/**\n * 6.3 TPM_ALG_ID\n */\nexport const TPM_ALG = {\n    0x0000: 'TPM_ALG_ERROR',\n    0x0001: 'TPM_ALG_RSA',\n    0x0004: 'TPM_ALG_SHA',\n    // @ts-ignore 2300\n    0x0004: 'TPM_ALG_SHA1',\n    0x0005: 'TPM_ALG_HMAC',\n    0x0006: 'TPM_ALG_AES',\n    0x0007: 'TPM_ALG_MGF1',\n    0x0008: 'TPM_ALG_KEYEDHASH',\n    0x000a: 'TPM_ALG_XOR',\n    0x000b: 'TPM_ALG_SHA256',\n    0x000c: 'TPM_ALG_SHA384',\n    0x000d: 'TPM_ALG_SHA512',\n    0x0010: 'TPM_ALG_NULL',\n    0x0012: 'TPM_ALG_SM3_256',\n    0x0013: 'TPM_ALG_SM4',\n    0x0014: 'TPM_ALG_RSASSA',\n    0x0015: 'TPM_ALG_RSAES',\n    0x0016: 'TPM_ALG_RSAPSS',\n    0x0017: 'TPM_ALG_OAEP',\n    0x0018: 'TPM_ALG_ECDSA',\n    0x0019: 'TPM_ALG_ECDH',\n    0x001a: 'TPM_ALG_ECDAA',\n    0x001b: 'TPM_ALG_SM2',\n    0x001c: 'TPM_ALG_ECSCHNORR',\n    0x001d: 'TPM_ALG_ECMQV',\n    0x0020: 'TPM_ALG_KDF1_SP800_56A',\n    0x0021: 'TPM_ALG_KDF2',\n    0x0022: 'TPM_ALG_KDF1_SP800_108',\n    0x0023: 'TPM_ALG_ECC',\n    0x0025: 'TPM_ALG_SYMCIPHER',\n    0x0026: 'TPM_ALG_CAMELLIA',\n    0x0040: 'TPM_ALG_CTR',\n    0x0041: 'TPM_ALG_OFB',\n    0x0042: 'TPM_ALG_CBC',\n    0x0043: 'TPM_ALG_CFB',\n    0x0044: 'TPM_ALG_ECB',\n};\n/**\n * 6.4 TPM_ECC_CURVE\n */\nexport const TPM_ECC_CURVE = {\n    0x0000: 'TPM_ECC_NONE',\n    0x0001: 'TPM_ECC_NIST_P192',\n    0x0002: 'TPM_ECC_NIST_P224',\n    0x0003: 'TPM_ECC_NIST_P256',\n    0x0004: 'TPM_ECC_NIST_P384',\n    0x0005: 'TPM_ECC_NIST_P521',\n    0x0010: 'TPM_ECC_BN_P256',\n    0x0011: 'TPM_ECC_BN_P638',\n    0x0020: 'TPM_ECC_SM2_P256',\n};\n/**\n * Sourced from https://trustedcomputinggroup.org/resource/vendor-id-registry/\n *\n * Latest version:\n * https://trustedcomputinggroup.org/wp-content/uploads/TCG-TPM-Vendor-ID-Registry-Version-1.02-Revision-1.00.pdf\n */\nexport const TPM_MANUFACTURERS = {\n    'id:414D4400': { name: 'AMD', id: 'AMD' },\n    'id:414E5400': { name: 'Ant Group', id: 'ANT' },\n    'id:41544D4C': { name: 'Atmel', id: 'ATML' },\n    'id:4252434D': { name: 'Broadcom', id: 'BRCM' },\n    'id:4353434F': { name: 'Cisco', id: 'CSCO' },\n    'id:464C5953': { name: 'Flyslice Technologies', id: 'FLYS' },\n    'id:524F4343': { name: 'Fuzhou Rockchip', id: 'ROCC' },\n    'id:474F4F47': { name: 'Google', id: 'GOOG' },\n    'id:48504900': { name: 'HPI', id: 'HPI' },\n    'id:48504500': { name: 'HPE', id: 'HPE' },\n    'id:48495349': { name: 'Huawei', id: 'HISI' },\n    'id:49424d00': { name: 'IBM', id: 'IBM' },\n    'id:49424D00': { name: 'IBM', id: 'IBM' }, // Same ID for IBM as above, except the \"D\" is capitalized as per TPM spec\n    'id:49465800': { name: 'Infineon', id: 'IFX' },\n    'id:494E5443': { name: 'Intel', id: 'INTC' },\n    'id:4C454E00': { name: 'Lenovo', id: 'LEN' },\n    'id:4D534654': { name: 'Microsoft', id: 'MSFT' },\n    'id:4E534D20': { name: 'National Semiconductor', id: 'NSM' },\n    'id:4E545A00': { name: 'Nationz', id: 'NTZ' },\n    'id:4E534700': { name: 'NSING', id: 'NSG' },\n    'id:4E544300': { name: 'Nuvoton Technology', id: 'NTC' },\n    'id:51434F4D': { name: 'Qualcomm', id: 'QCOM' },\n    'id:534D534E': { name: 'Samsung', id: 'SMSN' },\n    'id:53454345': { name: 'SecEdge', id: 'SECE' },\n    'id:534E5300': { name: 'Sinosun', id: 'SNS' },\n    'id:534D5343': { name: 'SMSC', id: 'SMSC' },\n    'id:53544D20': { name: 'STMicroelectronics', id: 'STM' },\n    'id:54584E00': { name: 'Texas Instruments', id: 'TXN' },\n    'id:57454300': { name: 'Winbond', id: 'WEC' },\n    'id:5345414C': { name: 'Wisekey', id: 'SEAL' },\n    'id:FFFFF1D0': { name: 'FIDO Alliance', id: 'FIDO' }, // FIDO Conformance\n};\n/**\n * Match TPM public area curve ID's to `crv` numbers used in COSE public keys\n */\nexport const TPM_ECC_CURVE_COSE_CRV_MAP = {\n    TPM_ECC_NIST_P256: 1, // p256\n    TPM_ECC_NIST_P384: 2, // p384\n    TPM_ECC_NIST_P521: 3, // p521\n    TPM_ECC_BN_P256: 1, // p256\n    TPM_ECC_SM2_P256: 1, // p256\n};\n", "import { TPM_ALG, TPM_ST } from './constants.js';\nimport { isoUint8Array } from '../../../helpers/iso/index.js';\n/**\n * Cut up a TPM attestation's certInfo into intelligible chunks\n */\nexport function parseCertInfo(certInfo) {\n    let pointer = 0;\n    const dataView = isoUint8Array.toDataView(certInfo);\n    // Get a magic constant\n    const magic = dataView.getUint32(pointer);\n    pointer += 4;\n    // Determine the algorithm used for attestation\n    const typeBuffer = dataView.getUint16(pointer);\n    pointer += 2;\n    const type = TPM_ST[typeBuffer];\n    // The name of a parent entity, can be ignored\n    const qualifiedSignerLength = dataView.getUint16(pointer);\n    pointer += 2;\n    const qualifiedSigner = certInfo.slice(pointer, pointer += qualifiedSignerLength);\n    // Get the expected hash of `attsToBeSigned`\n    const extraDataLength = dataView.getUint16(pointer);\n    pointer += 2;\n    const extraData = certInfo.slice(pointer, pointer += extraDataLength);\n    // Information about the TPM device's internal clock, can be ignored\n    const clock = certInfo.slice(pointer, pointer += 8);\n    const resetCount = dataView.getUint32(pointer);\n    pointer += 4;\n    const restartCount = dataView.getUint32(pointer);\n    pointer += 4;\n    const safe = !!certInfo.slice(pointer, pointer += 1);\n    const clockInfo = { clock, resetCount, restartCount, safe };\n    // TPM device firmware version\n    const firmwareVersion = certInfo.slice(pointer, pointer += 8);\n    // Attested Name\n    const attestedNameLength = dataView.getUint16(pointer);\n    pointer += 2;\n    const attestedName = certInfo.slice(pointer, pointer += attestedNameLength);\n    const attestedNameDataView = isoUint8Array.toDataView(attestedName);\n    // Attested qualified name, can be ignored\n    const qualifiedNameLength = dataView.getUint16(pointer);\n    pointer += 2;\n    const qualifiedName = certInfo.slice(pointer, pointer += qualifiedNameLength);\n    const attested = {\n        nameAlg: TPM_ALG[attestedNameDataView.getUint16(0)],\n        nameAlgBuffer: attestedName.slice(0, 2),\n        name: attestedName,\n        qualifiedName,\n    };\n    return {\n        magic,\n        type,\n        qualifiedSigner,\n        extraData,\n        clockInfo,\n        firmwareVersion,\n        attested,\n    };\n}\n", "import { TPM_ALG, TPM_ECC_CURVE } from './constants.js';\nimport { isoUint8Array } from '../../../helpers/iso/index.js';\n/**\n * Break apart a TPM attestation's pubArea buffer\n *\n * See 12.2.4 TPMT_PUBLIC here:\n * https://trustedcomputinggroup.org/wp-content/uploads/TPM-Rev-2.0-Part-2-Structures-00.96-130315.pdf\n */\nexport function parsePubArea(pubArea) {\n    let pointer = 0;\n    const dataView = isoUint8Array.toDataView(pubArea);\n    const type = TPM_ALG[dataView.getUint16(pointer)];\n    pointer += 2;\n    const nameAlg = TPM_ALG[dataView.getUint16(pointer)];\n    pointer += 2;\n    // Get some authenticator attributes(?)\n    // const objectAttributesInt = pubArea.slice(pointer, (pointer += 4)).readUInt32BE(0);\n    const objectAttributesInt = dataView.getUint32(pointer);\n    pointer += 4;\n    const objectAttributes = {\n        fixedTPM: !!(objectAttributesInt & 1),\n        stClear: !!(objectAttributesInt & 2),\n        fixedParent: !!(objectAttributesInt & 8),\n        sensitiveDataOrigin: !!(objectAttributesInt & 16),\n        userWithAuth: !!(objectAttributesInt & 32),\n        adminWithPolicy: !!(objectAttributesInt & 64),\n        noDA: !!(objectAttributesInt & 512),\n        encryptedDuplication: !!(objectAttributesInt & 1024),\n        restricted: !!(objectAttributesInt & 32768),\n        decrypt: !!(objectAttributesInt & 65536),\n        signOrEncrypt: !!(objectAttributesInt & 131072),\n    };\n    // Slice out the authPolicy of dynamic length\n    const authPolicyLength = dataView.getUint16(pointer);\n    pointer += 2;\n    const authPolicy = pubArea.slice(pointer, pointer += authPolicyLength);\n    // Extract additional curve params according to type\n    const parameters = {};\n    let unique = Uint8Array.from([]);\n    if (type === 'TPM_ALG_RSA') {\n        const symmetric = TPM_ALG[dataView.getUint16(pointer)];\n        pointer += 2;\n        const scheme = TPM_ALG[dataView.getUint16(pointer)];\n        pointer += 2;\n        const keyBits = dataView.getUint16(pointer);\n        pointer += 2;\n        const exponent = dataView.getUint32(pointer);\n        pointer += 4;\n        parameters.rsa = { symmetric, scheme, keyBits, exponent };\n        /**\n         * See 11.2.4.5 TPM2B_PUBLIC_KEY_RSA here:\n         * https://trustedcomputinggroup.org/wp-content/uploads/TPM-Rev-2.0-Part-2-Structures-00.96-130315.pdf\n         */\n        // const uniqueLength = pubArea.slice(pointer, (pointer += 2)).readUInt16BE(0);\n        const uniqueLength = dataView.getUint16(pointer);\n        pointer += 2;\n        unique = pubArea.slice(pointer, pointer += uniqueLength);\n    }\n    else if (type === 'TPM_ALG_ECC') {\n        const symmetric = TPM_ALG[dataView.getUint16(pointer)];\n        pointer += 2;\n        const scheme = TPM_ALG[dataView.getUint16(pointer)];\n        pointer += 2;\n        const curveID = TPM_ECC_CURVE[dataView.getUint16(pointer)];\n        pointer += 2;\n        const kdf = TPM_ALG[dataView.getUint16(pointer)];\n        pointer += 2;\n        parameters.ecc = { symmetric, scheme, curveID, kdf };\n        /**\n         * See 11.2.5.1 TPM2B_ECC_PARAMETER here:\n         * https://trustedcomputinggroup.org/wp-content/uploads/TPM-Rev-2.0-Part-2-Structures-00.96-130315.pdf\n         */\n        // Retrieve X\n        const uniqueXLength = dataView.getUint16(pointer);\n        pointer += 2;\n        const uniqueX = pubArea.slice(pointer, pointer += uniqueXLength);\n        // Retrieve Y\n        const uniqueYLength = dataView.getUint16(pointer);\n        pointer += 2;\n        const uniqueY = pubArea.slice(pointer, pointer += uniqueYLength);\n        unique = isoUint8Array.concat([uniqueX, uniqueY]);\n    }\n    else {\n        throw new Error(`Unexpected type \"${type}\" (TPM)`);\n    }\n    return {\n        type,\n        nameAlg,\n        objectAttributes,\n        authPolicy,\n        parameters,\n        unique,\n    };\n}\n", "import { AsnParser } from '@peculiar/asn1-schema';\nimport { Certificate } from '@peculiar/asn1-x509';\nimport { id_ce_keyDescription, KeyDescription } from '@peculiar/asn1-android';\nimport { convertCertBufferToPEM } from '../../helpers/convertCertBufferToPEM.js';\nimport { validateCertificatePath } from '../../helpers/validateCertificatePath.js';\nimport { verifySignature } from '../../helpers/verifySignature.js';\nimport { convertCOSEtoPKCS } from '../../helpers/convertCOSEtoPKCS.js';\nimport { isCOSEAlg } from '../../helpers/cose.js';\nimport { isoUint8Array } from '../../helpers/iso/index.js';\nimport { MetadataService } from '../../services/metadataService.js';\nimport { verifyAttestationWithMetadata } from '../../metadata/verifyAttestationWithMetadata.js';\n/**\n * Verify an attestation response with fmt 'android-key'\n */\nexport async function verifyAttestationAndroidKey(options) {\n    const { authData, clientDataHash, attStmt, credentialPublicKey, aaguid, rootCertificates, } = options;\n    const x5c = attStmt.get('x5c');\n    const sig = attStmt.get('sig');\n    const alg = attStmt.get('alg');\n    if (!x5c) {\n        throw new Error('No attestation certificate provided in attestation statement (Android Key)');\n    }\n    if (!sig) {\n        throw new Error('No attestation signature provided in attestation statement (Android Key)');\n    }\n    if (!alg) {\n        throw new Error(`Attestation statement did not contain alg (Android Key)`);\n    }\n    if (!isCOSEAlg(alg)) {\n        throw new Error(`Attestation statement contained invalid alg ${alg} (Android Key)`);\n    }\n    /**\n     * Verify that the public key in the first certificate in x5c matches the credentialPublicKey in\n     * the attestedCredentialData in authenticatorData.\n     */\n    // Find the public cert in the certificate as PKCS\n    const parsedCert = AsnParser.parse(x5c[0], Certificate);\n    const parsedCertPubKey = new Uint8Array(parsedCert.tbsCertificate.subjectPublicKeyInfo.subjectPublicKey);\n    // Convert the credentialPublicKey to PKCS\n    const credPubKeyPKCS = convertCOSEtoPKCS(credentialPublicKey);\n    if (!isoUint8Array.areEqual(credPubKeyPKCS, parsedCertPubKey)) {\n        throw new Error('Credential public key does not equal leaf cert public key (Android Key)');\n    }\n    /**\n     * Verify that the attestationChallenge field in the attestation certificate extension data is\n     * identical to clientDataHash.\n     */\n    // Find Android KeyStore Extension in certificate extensions\n    const extKeyStore = parsedCert.tbsCertificate.extensions?.find((ext) => ext.extnID === id_ce_keyDescription);\n    if (!extKeyStore) {\n        throw new Error('Certificate did not contain extKeyStore (Android Key)');\n    }\n    const parsedExtKeyStore = AsnParser.parse(extKeyStore.extnValue, KeyDescription);\n    // Verify extKeyStore values\n    const { attestationChallenge, teeEnforced, softwareEnforced } = parsedExtKeyStore;\n    if (!isoUint8Array.areEqual(new Uint8Array(attestationChallenge.buffer), clientDataHash)) {\n        throw new Error('Attestation challenge was not equal to client data hash (Android Key)');\n    }\n    /**\n     * The AuthorizationList.allApplications field is not present on either authorization list\n     * (softwareEnforced nor teeEnforced), since PublicKeyCredential MUST be scoped to the RP ID.\n     *\n     * (i.e. These shouldn't contain the [600] tag)\n     */\n    if (teeEnforced.allApplications !== undefined) {\n        throw new Error('teeEnforced contained \"allApplications [600]\" tag (Android Key)');\n    }\n    if (softwareEnforced.allApplications !== undefined) {\n        throw new Error('teeEnforced contained \"allApplications [600]\" tag (Android Key)');\n    }\n    const statement = await MetadataService.getStatement(aaguid);\n    if (statement) {\n        try {\n            await verifyAttestationWithMetadata({\n                statement,\n                credentialPublicKey,\n                x5c,\n                attestationStatementAlg: alg,\n            });\n        }\n        catch (err) {\n            const _err = err;\n            throw new Error(`${_err.message} (Android Key)`);\n        }\n    }\n    else {\n        /**\n         * Verify that x5c contains a full certificate path.\n         */\n        const x5cNoRootPEM = x5c.slice(0, -1).map(convertCertBufferToPEM);\n        const x5cRootPEM = x5c.slice(-1).map(convertCertBufferToPEM);\n        try {\n            await validateCertificatePath(x5cNoRootPEM, x5cRootPEM);\n        }\n        catch (err) {\n            const _err = err;\n            throw new Error(`${_err.message} (Android Key)`);\n        }\n        /**\n         * Make sure the root certificate is one of the Google Hardware Attestation Root certificates\n         *\n         * https://developer.android.com/privacy-and-security/security-key-attestation#root_certificate\n         */\n        if (rootCertificates.length > 0 && rootCertificates.indexOf(x5cRootPEM[0]) < 0) {\n            throw new Error('x5c root certificate was not a known root certificate (Android Key)');\n        }\n    }\n    /**\n     * Verify that sig is a valid signature over the concatenation of authenticatorData and\n     * clientDataHash using the public key in the first certificate in x5c with the algorithm\n     * specified in alg.\n     */\n    const signatureBase = isoUint8Array.concat([authData, clientDataHash]);\n    return verifySignature({\n        signature: sig,\n        data: signatureBase,\n        x509Certificate: x5c[0],\n        hashAlgorithm: alg,\n    });\n}\n", "export * from \"./key_description\";\nexport * from \"./nonstandard\";\nexport * from \"./attestation\";\n", "var IntegerSet_1;\nimport { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnArray, AsnType, AsnTypeTypes, OctetString, } from \"@peculiar/asn1-schema\";\nexport const id_ce_keyDescription = \"1.3.6.1.4.1.11129.2.1.17\";\nexport var VerifiedBootState;\n(function (VerifiedBootState) {\n    VerifiedBootState[VerifiedBootState[\"verified\"] = 0] = \"verified\";\n    VerifiedBootState[VerifiedBootState[\"selfSigned\"] = 1] = \"selfSigned\";\n    VerifiedBootState[VerifiedBootState[\"unverified\"] = 2] = \"unverified\";\n    VerifiedBootState[VerifiedBootState[\"failed\"] = 3] = \"failed\";\n})(VerifiedBootState || (VerifiedBootState = {}));\nexport class RootOfTrust {\n    constructor(params = {}) {\n        this.verifiedBootKey = new OctetString();\n        this.deviceLocked = false;\n        this.verifiedBootState = VerifiedBootState.verified;\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: OctetString })\n], RootOfTrust.prototype, \"verifiedBootKey\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Boolean })\n], RootOfTrust.prototype, \"deviceLocked\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Enumerated })\n], RootOfTrust.prototype, \"verifiedBootState\", void 0);\n__decorate([\n    AsnProp({ type: OctetString, optional: true })\n], RootOfTrust.prototype, \"verifiedBootHash\", void 0);\nlet IntegerSet = IntegerSet_1 = class IntegerSet extends AsnArray {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, IntegerSet_1.prototype);\n    }\n};\nIntegerSet = IntegerSet_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Set, itemType: AsnPropTypes.Integer })\n], IntegerSet);\nexport { IntegerSet };\nexport class AuthorizationList {\n    constructor(params = {}) {\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ context: 1, type: IntegerSet, optional: true })\n], AuthorizationList.prototype, \"purpose\", void 0);\n__decorate([\n    AsnProp({ context: 2, type: AsnPropTypes.Integer, optional: true })\n], AuthorizationList.prototype, \"algorithm\", void 0);\n__decorate([\n    AsnProp({ context: 3, type: AsnPropTypes.Integer, optional: true })\n], AuthorizationList.prototype, \"keySize\", void 0);\n__decorate([\n    AsnProp({ context: 5, type: IntegerSet, optional: true })\n], AuthorizationList.prototype, \"digest\", void 0);\n__decorate([\n    AsnProp({ context: 6, type: IntegerSet, optional: true })\n], AuthorizationList.prototype, \"padding\", void 0);\n__decorate([\n    AsnProp({ context: 10, type: AsnPropTypes.Integer, optional: true })\n], AuthorizationList.prototype, \"ecCurve\", void 0);\n__decorate([\n    AsnProp({ context: 200, type: AsnPropTypes.Integer, optional: true })\n], AuthorizationList.prototype, \"rsaPublicExponent\", void 0);\n__decorate([\n    AsnProp({ context: 203, type: IntegerSet, optional: true })\n], AuthorizationList.prototype, \"mgfDigest\", void 0);\n__decorate([\n    AsnProp({ context: 303, type: AsnPropTypes.Null, optional: true })\n], AuthorizationList.prototype, \"rollbackResistance\", void 0);\n__decorate([\n    AsnProp({ context: 305, type: AsnPropTypes.Null, optional: true })\n], AuthorizationList.prototype, \"earlyBootOnly\", void 0);\n__decorate([\n    AsnProp({ context: 400, type: AsnPropTypes.Integer, optional: true })\n], AuthorizationList.prototype, \"activeDateTime\", void 0);\n__decorate([\n    AsnProp({ context: 401, type: AsnPropTypes.Integer, optional: true })\n], AuthorizationList.prototype, \"originationExpireDateTime\", void 0);\n__decorate([\n    AsnProp({ context: 402, type: AsnPropTypes.Integer, optional: true })\n], AuthorizationList.prototype, \"usageExpireDateTime\", void 0);\n__decorate([\n    AsnProp({ context: 405, type: AsnPropTypes.Integer, optional: true })\n], AuthorizationList.prototype, \"usageCountLimit\", void 0);\n__decorate([\n    AsnProp({ context: 503, type: AsnPropTypes.Null, optional: true })\n], AuthorizationList.prototype, \"noAuthRequired\", void 0);\n__decorate([\n    AsnProp({ context: 504, type: AsnPropTypes.Integer, optional: true })\n], AuthorizationList.prototype, \"userAuthType\", void 0);\n__decorate([\n    AsnProp({ context: 505, type: AsnPropTypes.Integer, optional: true })\n], AuthorizationList.prototype, \"authTimeout\", void 0);\n__decorate([\n    AsnProp({ context: 506, type: AsnPropTypes.Null, optional: true })\n], AuthorizationList.prototype, \"allowWhileOnBody\", void 0);\n__decorate([\n    AsnProp({ context: 507, type: AsnPropTypes.Null, optional: true })\n], AuthorizationList.prototype, \"trustedUserPresenceRequired\", void 0);\n__decorate([\n    AsnProp({ context: 508, type: AsnPropTypes.Null, optional: true })\n], AuthorizationList.prototype, \"trustedConfirmationRequired\", void 0);\n__decorate([\n    AsnProp({ context: 509, type: AsnPropTypes.Null, optional: true })\n], AuthorizationList.prototype, \"unlockedDeviceRequired\", void 0);\n__decorate([\n    AsnProp({ context: 600, type: AsnPropTypes.Null, optional: true })\n], AuthorizationList.prototype, \"allApplications\", void 0);\n__decorate([\n    AsnProp({ context: 601, type: OctetString, optional: true })\n], AuthorizationList.prototype, \"applicationId\", void 0);\n__decorate([\n    AsnProp({ context: 701, type: AsnPropTypes.Integer, optional: true })\n], AuthorizationList.prototype, \"creationDateTime\", void 0);\n__decorate([\n    AsnProp({ context: 702, type: AsnPropTypes.Integer, optional: true })\n], AuthorizationList.prototype, \"origin\", void 0);\n__decorate([\n    AsnProp({ context: 703, type: AsnPropTypes.Null, optional: true })\n], AuthorizationList.prototype, \"rollbackResistant\", void 0);\n__decorate([\n    AsnProp({ context: 704, type: RootOfTrust, optional: true })\n], AuthorizationList.prototype, \"rootOfTrust\", void 0);\n__decorate([\n    AsnProp({ context: 705, type: AsnPropTypes.Integer, optional: true })\n], AuthorizationList.prototype, \"osVersion\", void 0);\n__decorate([\n    AsnProp({ context: 706, type: AsnPropTypes.Integer, optional: true })\n], AuthorizationList.prototype, \"osPatchLevel\", void 0);\n__decorate([\n    AsnProp({ context: 709, type: OctetString, optional: true })\n], AuthorizationList.prototype, \"attestationApplicationId\", void 0);\n__decorate([\n    AsnProp({ context: 710, type: OctetString, optional: true })\n], AuthorizationList.prototype, \"attestationIdBrand\", void 0);\n__decorate([\n    AsnProp({ context: 711, type: OctetString, optional: true })\n], AuthorizationList.prototype, \"attestationIdDevice\", void 0);\n__decorate([\n    AsnProp({ context: 712, type: OctetString, optional: true })\n], AuthorizationList.prototype, \"attestationIdProduct\", void 0);\n__decorate([\n    AsnProp({ context: 713, type: OctetString, optional: true })\n], AuthorizationList.prototype, \"attestationIdSerial\", void 0);\n__decorate([\n    AsnProp({ context: 714, type: OctetString, optional: true })\n], AuthorizationList.prototype, \"attestationIdImei\", void 0);\n__decorate([\n    AsnProp({ context: 715, type: OctetString, optional: true })\n], AuthorizationList.prototype, \"attestationIdMeid\", void 0);\n__decorate([\n    AsnProp({ context: 716, type: OctetString, optional: true })\n], AuthorizationList.prototype, \"attestationIdManufacturer\", void 0);\n__decorate([\n    AsnProp({ context: 717, type: OctetString, optional: true })\n], AuthorizationList.prototype, \"attestationIdModel\", void 0);\n__decorate([\n    AsnProp({ context: 718, type: AsnPropTypes.Integer, optional: true })\n], AuthorizationList.prototype, \"vendorPatchLevel\", void 0);\n__decorate([\n    AsnProp({ context: 719, type: AsnPropTypes.Integer, optional: true })\n], AuthorizationList.prototype, \"bootPatchLevel\", void 0);\n__decorate([\n    AsnProp({ context: 720, type: AsnPropTypes.Null, optional: true })\n], AuthorizationList.prototype, \"deviceUniqueAttestation\", void 0);\n__decorate([\n    AsnProp({ context: 723, type: OctetString, optional: true })\n], AuthorizationList.prototype, \"attestationIdSecondImei\", void 0);\n__decorate([\n    AsnProp({ context: 724, type: OctetString, optional: true })\n], AuthorizationList.prototype, \"moduleHash\", void 0);\nexport var SecurityLevel;\n(function (SecurityLevel) {\n    SecurityLevel[SecurityLevel[\"software\"] = 0] = \"software\";\n    SecurityLevel[SecurityLevel[\"trustedEnvironment\"] = 1] = \"trustedEnvironment\";\n    SecurityLevel[SecurityLevel[\"strongBox\"] = 2] = \"strongBox\";\n})(SecurityLevel || (SecurityLevel = {}));\nexport var Version;\n(function (Version) {\n    Version[Version[\"KM2\"] = 1] = \"KM2\";\n    Version[Version[\"KM3\"] = 2] = \"KM3\";\n    Version[Version[\"KM4\"] = 3] = \"KM4\";\n    Version[Version[\"KM4_1\"] = 4] = \"KM4_1\";\n    Version[Version[\"keyMint1\"] = 100] = \"keyMint1\";\n    Version[Version[\"keyMint2\"] = 200] = \"keyMint2\";\n    Version[Version[\"keyMint3\"] = 300] = \"keyMint3\";\n    Version[Version[\"keyMint4\"] = 400] = \"keyMint4\";\n})(Version || (Version = {}));\nexport class KeyDescription {\n    constructor(params = {}) {\n        this.attestationVersion = Version.KM4;\n        this.attestationSecurityLevel = SecurityLevel.software;\n        this.keymasterVersion = 0;\n        this.keymasterSecurityLevel = SecurityLevel.software;\n        this.attestationChallenge = new OctetString();\n        this.uniqueId = new OctetString();\n        this.softwareEnforced = new AuthorizationList();\n        this.teeEnforced = new AuthorizationList();\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer })\n], KeyDescription.prototype, \"attestationVersion\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Enumerated })\n], KeyDescription.prototype, \"attestationSecurityLevel\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer })\n], KeyDescription.prototype, \"keymasterVersion\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Enumerated })\n], KeyDescription.prototype, \"keymasterSecurityLevel\", void 0);\n__decorate([\n    AsnProp({ type: OctetString })\n], KeyDescription.prototype, \"attestationChallenge\", void 0);\n__decorate([\n    AsnProp({ type: OctetString })\n], KeyDescription.prototype, \"uniqueId\", void 0);\n__decorate([\n    AsnProp({ type: AuthorizationList })\n], KeyDescription.prototype, \"softwareEnforced\", void 0);\n__decorate([\n    AsnProp({ type: AuthorizationList })\n], KeyDescription.prototype, \"teeEnforced\", void 0);\nexport class KeyMintKeyDescription {\n    constructor(params = {}) {\n        this.attestationVersion = Version.keyMint4;\n        this.attestationSecurityLevel = SecurityLevel.software;\n        this.keyMintVersion = 0;\n        this.keyMintSecurityLevel = SecurityLevel.software;\n        this.attestationChallenge = new OctetString();\n        this.uniqueId = new OctetString();\n        this.softwareEnforced = new AuthorizationList();\n        this.hardwareEnforced = new AuthorizationList();\n        Object.assign(this, params);\n    }\n    toLegacyKeyDescription() {\n        return new KeyDescription({\n            attestationVersion: this.attestationVersion,\n            attestationSecurityLevel: this.attestationSecurityLevel,\n            keymasterVersion: this.keyMintVersion,\n            keymasterSecurityLevel: this.keyMintSecurityLevel,\n            attestationChallenge: this.attestationChallenge,\n            uniqueId: this.uniqueId,\n            softwareEnforced: this.softwareEnforced,\n            teeEnforced: this.hardwareEnforced,\n        });\n    }\n    static fromLegacyKeyDescription(keyDesc) {\n        return new KeyMintKeyDescription({\n            attestationVersion: keyDesc.attestationVersion,\n            attestationSecurityLevel: keyDesc.attestationSecurityLevel,\n            keyMintVersion: keyDesc.keymasterVersion,\n            keyMintSecurityLevel: keyDesc.keymasterSecurityLevel,\n            attestationChallenge: keyDesc.attestationChallenge,\n            uniqueId: keyDesc.uniqueId,\n            softwareEnforced: keyDesc.softwareEnforced,\n            hardwareEnforced: keyDesc.teeEnforced,\n        });\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer })\n], KeyMintKeyDescription.prototype, \"attestationVersion\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Enumerated })\n], KeyMintKeyDescription.prototype, \"attestationSecurityLevel\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer })\n], KeyMintKeyDescription.prototype, \"keyMintVersion\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Enumerated })\n], KeyMintKeyDescription.prototype, \"keyMintSecurityLevel\", void 0);\n__decorate([\n    AsnProp({ type: OctetString })\n], KeyMintKeyDescription.prototype, \"attestationChallenge\", void 0);\n__decorate([\n    AsnProp({ type: OctetString })\n], KeyMintKeyDescription.prototype, \"uniqueId\", void 0);\n__decorate([\n    AsnProp({ type: AuthorizationList })\n], KeyMintKeyDescription.prototype, \"softwareEnforced\", void 0);\n__decorate([\n    AsnProp({ type: AuthorizationList })\n], KeyMintKeyDescription.prototype, \"hardwareEnforced\", void 0);\n", "var NonStandardAuthorizationList_1;\nimport { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnArray, AsnType, AsnTypeTypes, OctetString, } from \"@peculiar/asn1-schema\";\nimport { AuthorizationList, SecurityLevel, Version } from \"./key_description\";\nlet NonStandardAuthorization = class NonStandardAuthorization extends AuthorizationList {\n};\nNonStandardAuthorization = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], NonStandardAuthorization);\nexport { NonStandardAuthorization };\nlet NonStandardAuthorizationList = NonStandardAuthorizationList_1 = class NonStandardAuthorizationList extends AsnArray {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, NonStandardAuthorizationList_1.prototype);\n    }\n    findProperty(key) {\n        const prop = this.find((o) => key in o);\n        if (prop) {\n            return prop[key];\n        }\n        return undefined;\n    }\n};\nNonStandardAuthorizationList = NonStandardAuthorizationList_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence, itemType: NonStandardAuthorization })\n], NonStandardAuthorizationList);\nexport { NonStandardAuthorizationList };\nexport class NonStandardKeyDescription {\n    get keyMintVersion() {\n        return this.keymasterVersion;\n    }\n    set keyMintVersion(value) {\n        this.keymasterVersion = value;\n    }\n    get keyMintSecurityLevel() {\n        return this.keymasterSecurityLevel;\n    }\n    set keyMintSecurityLevel(value) {\n        this.keymasterSecurityLevel = value;\n    }\n    get hardwareEnforced() {\n        return this.teeEnforced;\n    }\n    set hardwareEnforced(value) {\n        this.teeEnforced = value;\n    }\n    constructor(params = {}) {\n        this.attestationVersion = Version.KM4;\n        this.attestationSecurityLevel = SecurityLevel.software;\n        this.keymasterVersion = 0;\n        this.keymasterSecurityLevel = SecurityLevel.software;\n        this.attestationChallenge = new OctetString();\n        this.uniqueId = new OctetString();\n        this.softwareEnforced = new NonStandardAuthorizationList();\n        this.teeEnforced = new NonStandardAuthorizationList();\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer })\n], NonStandardKeyDescription.prototype, \"attestationVersion\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Enumerated })\n], NonStandardKeyDescription.prototype, \"attestationSecurityLevel\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer })\n], NonStandardKeyDescription.prototype, \"keymasterVersion\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Enumerated })\n], NonStandardKeyDescription.prototype, \"keymasterSecurityLevel\", void 0);\n__decorate([\n    AsnProp({ type: OctetString })\n], NonStandardKeyDescription.prototype, \"attestationChallenge\", void 0);\n__decorate([\n    AsnProp({ type: OctetString })\n], NonStandardKeyDescription.prototype, \"uniqueId\", void 0);\n__decorate([\n    AsnProp({ type: NonStandardAuthorizationList })\n], NonStandardKeyDescription.prototype, \"softwareEnforced\", void 0);\n__decorate([\n    AsnProp({ type: NonStandardAuthorizationList })\n], NonStandardKeyDescription.prototype, \"teeEnforced\", void 0);\nlet NonStandardKeyMintKeyDescription = class NonStandardKeyMintKeyDescription extends NonStandardKeyDescription {\n    constructor(params = {}) {\n        if (\"keymasterVersion\" in params && !(\"keyMintVersion\" in params)) {\n            params.keyMintVersion = params.keymasterVersion;\n        }\n        if (\"keymasterSecurityLevel\" in params && !(\"keyMintSecurityLevel\" in params)) {\n            params.keyMintSecurityLevel = params.keymasterSecurityLevel;\n        }\n        if (\"teeEnforced\" in params && !(\"hardwareEnforced\" in params)) {\n            params.hardwareEnforced = params.teeEnforced;\n        }\n        super(params);\n    }\n};\nNonStandardKeyMintKeyDescription = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence })\n], NonStandardKeyMintKeyDescription);\nexport { NonStandardKeyMintKeyDescription };\n", "import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes } from \"@peculiar/asn1-schema\";\nexport class AttestationPackageInfo {\n    constructor(params = {}) {\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.OctetString })\n], AttestationPackageInfo.prototype, \"packageName\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer })\n], AttestationPackageInfo.prototype, \"version\", void 0);\nexport class AttestationApplicationId {\n    constructor(params = {}) {\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AttestationPackageInfo, repeated: \"set\" })\n], AttestationApplicationId.prototype, \"packageInfos\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.OctetString, repeated: \"set\" })\n], AttestationApplicationId.prototype, \"signatureDigests\", void 0);\n", "import { AsnParser } from '@peculiar/asn1-schema';\nimport { Certificate } from '@peculiar/asn1-x509';\nimport { validateCertificatePath } from '../../helpers/validateCertificatePath.js';\nimport { convertCertBufferToPEM } from '../../helpers/convertCertBufferToPEM.js';\nimport { toHash } from '../../helpers/toHash.js';\nimport { convertCOSEtoPKCS } from '../../helpers/convertCOSEtoPKCS.js';\nimport { isoUint8Array } from '../../helpers/iso/index.js';\nexport async function verifyAttestationApple(options) {\n    const { attStmt, authData, clientDataHash, credentialPublicKey, rootCertificates, } = options;\n    const x5c = attStmt.get('x5c');\n    if (!x5c) {\n        throw new Error('No attestation certificate provided in attestation statement (Apple)');\n    }\n    /**\n     * Verify certificate path\n     */\n    try {\n        await validateCertificatePath(x5c.map(convertCertBufferToPEM), rootCertificates);\n    }\n    catch (err) {\n        const _err = err;\n        throw new Error(`${_err.message} (Apple)`);\n    }\n    /**\n     * Compare nonce in certificate extension to computed nonce\n     */\n    const parsedCredCert = AsnParser.parse(x5c[0], Certificate);\n    const { extensions, subjectPublicKeyInfo } = parsedCredCert.tbsCertificate;\n    if (!extensions) {\n        throw new Error('credCert missing extensions (Apple)');\n    }\n    const extCertNonce = extensions.find((ext) => ext.extnID === '1.2.840.113635.100.8.2');\n    if (!extCertNonce) {\n        throw new Error('credCert missing \"1.2.840.113635.100.8.2\" extension (Apple)');\n    }\n    const nonceToHash = isoUint8Array.concat([authData, clientDataHash]);\n    const nonce = await toHash(nonceToHash);\n    /**\n     * Ignore the first six ASN.1 structure bytes that define the nonce as an OCTET STRING. Should\n     * trim off <Buffer 30 24 a1 22 04 20>\n     *\n     * TODO: Try and get @peculiar (GitHub) to add a schema for \"1.2.840.113635.100.8.2\" when we\n     * find out where it's defined (doesn't seem to be publicly documented at the moment...)\n     */\n    const extNonce = new Uint8Array(extCertNonce.extnValue.buffer).slice(6);\n    if (!isoUint8Array.areEqual(nonce, extNonce)) {\n        throw new Error(`credCert nonce was not expected value (Apple)`);\n    }\n    /**\n     * Verify credential public key matches the Subject Public Key of credCert\n     */\n    const credPubKeyPKCS = convertCOSEtoPKCS(credentialPublicKey);\n    const credCertSubjectPublicKey = new Uint8Array(subjectPublicKeyInfo.subjectPublicKey);\n    if (!isoUint8Array.areEqual(credPubKeyPKCS, credCertSubjectPublicKey)) {\n        throw new Error('Credential public key does not equal credCert public key (Apple)');\n    }\n    return true;\n}\n", "import { isoBase64URL, isoUint8Array } from '../helpers/iso/index.js';\nimport { generateChallenge } from '../helpers/generateChallenge.js';\n/**\n * Prepare a value to pass into navigator.credentials.get(...) for authenticator authentication\n *\n * **Options:**\n *\n * @param rpID - Valid domain name (after `https://`)\n * @param allowCredentials **(Optional)** - Authenticators previously registered by the user, if any. If undefined the client will ask the user which credential they want to use\n * @param challenge **(Optional)** - Random value the authenticator needs to sign and pass back user for authentication. Defaults to generating a random value\n * @param timeout **(Optional)** - How long (in ms) the user can take to complete authentication. Defaults to `60000`\n * @param userVerification **(Optional)** - Set to `'discouraged'` when asserting as part of a 2FA flow, otherwise set to `'preferred'` or `'required'` as desired. Defaults to `\"preferred\"`\n * @param extensions **(Optional)** - Additional plugins the authenticator or browser should use during authentication\n */\nexport async function generateAuthenticationOptions(options) {\n    const { allowCredentials, challenge = await generateChallenge(), timeout = 60000, userVerification = 'preferred', extensions, rpID, } = options;\n    /**\n     * Preserve ability to specify `string` values for challenges\n     */\n    let _challenge = challenge;\n    if (typeof _challenge === 'string') {\n        _challenge = isoUint8Array.fromUTF8String(_challenge);\n    }\n    return {\n        rpId: rpID,\n        challenge: isoBase64URL.fromBuffer(_challenge),\n        allowCredentials: allowCredentials?.map((cred) => {\n            if (!isoBase64URL.isBase64URL(cred.id)) {\n                throw new Error(`allowCredential id \"${cred.id}\" is not a valid base64url string`);\n            }\n            return {\n                ...cred,\n                id: isoBase64URL.trimPadding(cred.id),\n                type: 'public-key',\n            };\n        }),\n        timeout,\n        userVerification,\n        extensions,\n    };\n}\n", "import { decodeClientDataJSON } from '../helpers/decodeClientDataJSON.js';\nimport { toHash } from '../helpers/toHash.js';\nimport { verifySignature } from '../helpers/verifySignature.js';\nimport { parseAuthenticatorData } from '../helpers/parseAuthenticatorData.js';\nimport { parseBackupFlags } from '../helpers/parseBackupFlags.js';\nimport { matchExpectedRPID } from '../helpers/matchExpectedRPID.js';\nimport { isoBase64URL, isoUint8Array } from '../helpers/iso/index.js';\n/**\n * Verify that the user has legitimately completed the authentication process\n *\n * **Options:**\n *\n * @param response - Response returned by **@simplewebauthn/browser**'s `startAssertion()`\n * @param expectedChallenge - The base64url-encoded `options.challenge` returned by `generateAuthenticationOptions()`\n * @param expectedOrigin - Website URL (or array of URLs) that the registration should have occurred on\n * @param expectedRPID - RP ID (or array of IDs) that was specified in the registration options\n * @param credential - An internal {@link WebAuthnCredential} corresponding to `id` in the authentication response\n * @param expectedType **(Optional)** - The response type expected ('webauthn.get')\n * @param requireUserVerification **(Optional)** - Enforce user verification by the authenticator (via PIN, fingerprint, etc...) Defaults to `true`\n * @param advancedFIDOConfig **(Optional)** - Options for satisfying more stringent FIDO RP feature requirements\n * @param advancedFIDOConfig.userVerification **(Optional)** - Enable alternative rules for evaluating the User Presence and User Verified flags in authenticator data: UV (and UP) flags are optional unless this value is `\"required\"`\n */\nexport async function verifyAuthenticationResponse(options) {\n    const { response, expectedChallenge, expectedOrigin, expectedRPID, expectedType, credential, requireUserVerification = true, advancedFIDOConfig, } = options;\n    const { id, rawId, type: credentialType, response: assertionResponse } = response;\n    // Ensure credential specified an ID\n    if (!id) {\n        throw new Error('Missing credential ID');\n    }\n    // Ensure ID is base64url-encoded\n    if (id !== rawId) {\n        throw new Error('Credential ID was not base64url-encoded');\n    }\n    // Make sure credential type is public-key\n    if (credentialType !== 'public-key') {\n        throw new Error(`Unexpected credential type ${credentialType}, expected \"public-key\"`);\n    }\n    if (!response) {\n        throw new Error('Credential missing response');\n    }\n    if (typeof assertionResponse?.clientDataJSON !== 'string') {\n        throw new Error('Credential response clientDataJSON was not a string');\n    }\n    const clientDataJSON = decodeClientDataJSON(assertionResponse.clientDataJSON);\n    const { type, origin, challenge, tokenBinding } = clientDataJSON;\n    // Make sure we're handling an authentication\n    if (Array.isArray(expectedType)) {\n        if (!expectedType.includes(type)) {\n            const joinedExpectedType = expectedType.join(', ');\n            throw new Error(`Unexpected authentication response type \"${type}\", expected one of: ${joinedExpectedType}`);\n        }\n    }\n    else if (expectedType) {\n        if (type !== expectedType) {\n            throw new Error(`Unexpected authentication response type \"${type}\", expected \"${expectedType}\"`);\n        }\n    }\n    else if (type !== 'webauthn.get') {\n        throw new Error(`Unexpected authentication response type: ${type}`);\n    }\n    // Ensure the device provided the challenge we gave it\n    if (typeof expectedChallenge === 'function') {\n        if (!(await expectedChallenge(challenge))) {\n            throw new Error(`Custom challenge verifier returned false for registration response challenge \"${challenge}\"`);\n        }\n    }\n    else if (challenge !== expectedChallenge) {\n        throw new Error(`Unexpected authentication response challenge \"${challenge}\", expected \"${expectedChallenge}\"`);\n    }\n    // Check that the origin is our site\n    if (Array.isArray(expectedOrigin)) {\n        if (!expectedOrigin.includes(origin)) {\n            const joinedExpectedOrigin = expectedOrigin.join(', ');\n            throw new Error(`Unexpected authentication response origin \"${origin}\", expected one of: ${joinedExpectedOrigin}`);\n        }\n    }\n    else {\n        if (origin !== expectedOrigin) {\n            throw new Error(`Unexpected authentication response origin \"${origin}\", expected \"${expectedOrigin}\"`);\n        }\n    }\n    if (!isoBase64URL.isBase64URL(assertionResponse.authenticatorData)) {\n        throw new Error('Credential response authenticatorData was not a base64url string');\n    }\n    if (!isoBase64URL.isBase64URL(assertionResponse.signature)) {\n        throw new Error('Credential response signature was not a base64url string');\n    }\n    if (assertionResponse.userHandle &&\n        typeof assertionResponse.userHandle !== 'string') {\n        throw new Error('Credential response userHandle was not a string');\n    }\n    if (tokenBinding) {\n        if (typeof tokenBinding !== 'object') {\n            throw new Error('ClientDataJSON tokenBinding was not an object');\n        }\n        if (['present', 'supported', 'notSupported'].indexOf(tokenBinding.status) < 0) {\n            throw new Error(`Unexpected tokenBinding status ${tokenBinding.status}`);\n        }\n    }\n    const authDataBuffer = isoBase64URL.toBuffer(assertionResponse.authenticatorData);\n    const parsedAuthData = parseAuthenticatorData(authDataBuffer);\n    const { rpIdHash, flags, counter, extensionsData } = parsedAuthData;\n    // Make sure the response's RP ID is ours\n    let expectedRPIDs = [];\n    if (typeof expectedRPID === 'string') {\n        expectedRPIDs = [expectedRPID];\n    }\n    else {\n        expectedRPIDs = expectedRPID;\n    }\n    const matchedRPID = await matchExpectedRPID(rpIdHash, expectedRPIDs);\n    if (advancedFIDOConfig !== undefined) {\n        const { userVerification: fidoUserVerification } = advancedFIDOConfig;\n        /**\n         * Use FIDO Conformance-defined rules for verifying UP and UV flags\n         */\n        if (fidoUserVerification === 'required') {\n            // Require `flags.uv` be true (implies `flags.up` is true)\n            if (!flags.uv) {\n                throw new Error('User verification required, but user could not be verified');\n            }\n        }\n        else if (fidoUserVerification === 'preferred' ||\n            fidoUserVerification === 'discouraged') {\n            // Ignore `flags.uv`\n        }\n    }\n    else {\n        /**\n         * Use WebAuthn spec-defined rules for verifying UP and UV flags\n         */\n        // WebAuthn only requires the user presence flag be true\n        if (!flags.up) {\n            throw new Error('User not present during authentication');\n        }\n        // Enforce user verification if required\n        if (requireUserVerification && !flags.uv) {\n            throw new Error('User verification required, but user could not be verified');\n        }\n    }\n    const clientDataHash = await toHash(isoBase64URL.toBuffer(assertionResponse.clientDataJSON));\n    const signatureBase = isoUint8Array.concat([authDataBuffer, clientDataHash]);\n    const signature = isoBase64URL.toBuffer(assertionResponse.signature);\n    if ((counter > 0 || credential.counter > 0) &&\n        counter <= credential.counter) {\n        // Error out when the counter in the DB is greater than or equal to the counter in the\n        // dataStruct. It's related to how the authenticator maintains the number of times its been\n        // used for this client. If this happens, then someone's somehow increased the counter\n        // on the device without going through this site\n        throw new Error(`Response counter value ${counter} was lower than expected ${credential.counter}`);\n    }\n    const { credentialDeviceType, credentialBackedUp } = parseBackupFlags(flags);\n    const toReturn = {\n        verified: await verifySignature({\n            signature,\n            data: signatureBase,\n            credentialPublicKey: credential.publicKey,\n        }),\n        authenticationInfo: {\n            newCounter: counter,\n            credentialID: credential.id,\n            userVerified: flags.uv,\n            credentialDeviceType,\n            credentialBackedUp,\n            authenticatorExtensionResults: extensionsData,\n            origin: clientDataJSON.origin,\n            rpID: matchedRPID,\n        },\n    };\n    return toReturn;\n}\n", "const AlgSign = [\n    'secp256r1_ecdsa_sha256_raw',\n    'secp256r1_ecdsa_sha256_der',\n    'rsassa_pss_sha256_raw',\n    'rsassa_pss_sha256_der',\n    'secp256k1_ecdsa_sha256_raw',\n    'secp256k1_ecdsa_sha256_der',\n    'rsassa_pss_sha384_raw',\n    'rsassa_pkcsv15_sha256_raw',\n    'rsassa_pkcsv15_sha384_raw',\n    'rsassa_pkcsv15_sha512_raw',\n    'rsassa_pkcsv15_sha1_raw',\n    'secp384r1_ecdsa_sha384_raw',\n    'secp512r1_ecdsa_sha256_raw',\n    'ed25519_eddsa_sha512_raw',\n];\nexport {};\n", "export {};\n", "import type { Middleware } from \"./common\";\n\nconst drainBody: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} finally {\n\t\ttry {\n\t\t\tif (request.body !== null && !request.bodyUsed) {\n\t\t\t\tconst reader = request.body.getReader();\n\t\t\t\twhile (!(await reader.read()).done) {}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Failed to drain the unused request body.\", e);\n\t\t}\n\t}\n};\n\nexport default drainBody;\n", "import type { Middleware } from \"./common\";\n\ninterface JsonError {\n\tmessage?: string;\n\tname?: string;\n\tstack?: string;\n\tcause?: JsonError;\n}\n\nfunction reduceError(e: any): JsonError {\n\treturn {\n\t\tname: e?.name,\n\t\tmessage: e?.message ?? String(e),\n\t\tstack: e?.stack,\n\t\tcause: e?.cause === undefined ? undefined : reduceError(e.cause),\n\t};\n}\n\n// See comment in `bundle.ts` for details on why this is needed\nconst jsonError: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} catch (e: any) {\n\t\tconst error = reduceError(e);\n\t\treturn Response.json(error, {\n\t\t\tstatus: 500,\n\t\t\theaders: { \"MF-Experimental-Error-Stack\": \"true\" },\n\t\t});\n\t}\n};\n\nexport default jsonError;\n", "export type Awaitable<T> = T | Promise<T>;\n// TODO: allow dispatching more events?\nexport type Dispatcher = (\n\ttype: \"scheduled\",\n\tinit: { cron?: string }\n) => Awaitable<void>;\n\nexport type IncomingRequest = Request<\n\tunknown,\n\tIncomingRequestCfProperties<unknown>\n>;\n\nexport interface MiddlewareContext {\n\tdispatch: Dispatcher;\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\n}\n\nexport type Middleware = (\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tmiddlewareCtx: MiddlewareContext\n) => Awaitable<Response>;\n\nconst __facade_middleware__: Middleware[] = [];\n\n// The register functions allow for the insertion of one or many middleware,\n// We register internal middleware first in the stack, but have no way of controlling\n// the order that addMiddleware is run in service workers so need an internal function.\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\n\t__facade_middleware__.push(...args.flat());\n}\nexport function __facade_registerInternal__(\n\t...args: (Middleware | Middleware[])[]\n) {\n\t__facade_middleware__.unshift(...args.flat());\n}\n\nfunction __facade_invokeChain__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tmiddlewareChain: Middleware[]\n): Awaitable<Response> {\n\tconst [head, ...tail] = middlewareChain;\n\tconst middlewareCtx: MiddlewareContext = {\n\t\tdispatch,\n\t\tnext(newRequest, newEnv) {\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\n\t\t},\n\t};\n\treturn head(request, env, ctx, middlewareCtx);\n}\n\nexport function __facade_invoke__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tfinalMiddleware: Middleware\n): Awaitable<Response> {\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\n\t\t...__facade_middleware__,\n\t\tfinalMiddleware,\n\t]);\n}\n"],
  "mappings": "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AAA,MACT;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MACT;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MACT;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MACT;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MACT;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MACT;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MACT;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MACT;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MACT;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MACT;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MACT;AAAA,MAAG;AAAA,MAAG;AAAA,MAAI;AAAA,MACV;AAAA,MAAG;AAAA,MAAG;AAAA,MAAI;AAAA,MACV;AAAA,MAAG;AAAA,MAAG;AAAA,MAAI;AAAA,MACV;AAAA,MAAG;AAAA,MAAI;AAAA,MAAI;AAAA,MACX;AAAA,MAAG;AAAA,MAAI;AAAA,MAAI;AAAA,MACX;AAAA,MAAG;AAAA,MAAI;AAAA,MAAI;AAAA,MACX;AAAA,MAAG;AAAA,MAAI;AAAA,MAAI;AAAA,MACX;AAAA,MAAG;AAAA,MAAI;AAAA,MAAI;AAAA,MACX;AAAA,MAAG;AAAA,MAAI;AAAA,MAAI;AAAA,MACX;AAAA,MAAG;AAAA,MAAI;AAAA,MAAI;AAAA,MACX;AAAA,MAAG;AAAA,MAAI;AAAA,MAAI;AAAA,MACX;AAAA,MAAG;AAAA,MAAI;AAAA,MAAI;AAAA,MACX;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MACZ;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MACZ;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MACZ;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MACZ;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MACZ;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MACZ;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MACZ;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;A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AAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5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",
  "names": ["init_performance", "init_performance", "PerformanceMark", "e", "init_performance", "init_performance", "init_performance", "init_performance", "clear", "count", "countReset", "createTask", "debug", "dir", "dirxml", "error", "group", "groupCollapsed", "groupEnd", "info", "log", "profile", "profileEnd", "table", "time", "timeEnd", "timeLog", "timeStamp", "trace", "warn", "init_console", "init_performance", "init_console", "init_performance", "hrtime", "init_performance", "init_performance", "dir", "x", "y", "env", "count", "init_performance", "init_performance", "init_performance", "cwd", "hrtime", "assert", "init_process", "init_performance", "init_process", "init_performance", "init_performance", "Reflect", "factory", "_", "i", "O", "P", "hasOwn", "_a", "x", "y", "V", "iterator", "f", "prototype", "metadataRegistry", "metadata", "OrdinaryDefineOwnMetadata", "OrdinaryHasOwnMetadata", "OrdinaryGetOwnMetadata", "OrdinaryOwnMetadataKeys", "k", "e", "defineMetadata", "hasOwnMetadata", "getOwnMetadata", "getOwnMetadataKeys", "deleteMetadata", "MapIterator", "error", "Map", "Set", "WeakMap", "table", "create", "array", "init_performance", "libDefault", "init_performance", "init_performance", "hasOwnProperty", "string", "c", "p", "i", "match", "o", "init_performance", "path", "v", "match", "context", "i", "d", "o", "e", "self", "c", "libDefault", "init_performance", "libDefault", "init_performance", "libDefault", "init_performance", "libDefault", "init_performance", "libDefault", "init_performance", "libDefault", "init_performance", "libDefault", "init_performance", "init_performance", "domain", "i", "path", "a", "b", "require_package", "libDefault", "init_performance", "init_performance", "E", "libDefault", "init_performance", "libDefault", "init_performance", "init_performance", "networkInterfaces", "i", "resolver", "err", "addresses", "defaults", "c", "E", "init_performance", "path", "libDefault", "init_performance", "init_performance", "error", "array", "domain", "string", "k", "i", "j", "w", "t", "encode", "m", "q", "init_performance", "encode", "init_performance", "encode", "i", "match", "init_performance", "base64", "i", "key", "match", "value", "s", "c", "init_performance", "i", "address", "addresses", "init_performance", "init_performance", "i", "init_performance", "i", "init_performance", "crypto", "base64", "i", "key", "stream", "returned", "raw", "c", "a", "domain", "init_performance", "o", "c", "i", "init_performance", "i", "E", "init_performance", "crypto", "i", "c", "init_performance", "crypto", "i", "init_performance", "path", "crypto", "libDefault", "init_performance", "init_performance", "match", "init_performance", "defaults", "key", "i", "value", "comment", "init_performance", "EventEmitter", "crypto", "defaults", "log", "err", "info", "match", "init_performance", "i", "init_performance", "EventEmitter", "crypto", "error", "E", "resolve", "reject", "info", "stream", "err", "i", "match", "str", "init_performance", "crypto", "error", "E", "init_performance", "EventEmitter", "err", "info", "init_performance", "domain", "filter", "init_performance", "EventEmitter", "i", "E", "info", "err", "init_performance", "EventEmitter", "err", "info", "E", "init_performance", "init_performance", "init_performance", "spawn", "E", "init_performance", "E", "init_performance", "init_performance", "EventEmitter", "raw", "err", "init_performance", "defaults", "error", "E", "info", "m", "init_performance", "removeDiacritics", "i", "chars", "j", "c", "require_package", "init_performance", "path", "crypto", "version", "match", "i", "error", "debug", "e", "config", "libDefault", "init_performance", "init_performance", "Buffer", "require_data_stream", "init_performance", "Buffer", "init_performance", "init_performance", "Buffer", "base64", "o", "init_performance", "Buffer", "a", "b", "c", "i", "init_performance", "Buffer", "crypto", "base64", "toBase64", "i", "timingSafeEqual", "a", "b", "verify", "match", "init_performance", "Buffer", "toString", "init_performance", "Buffer", "toString", "string", "e", "init_performance", "Buffer", "toString", "isObject", "e", "string", "verify", "init_performance", "init_performance", "jwt", "e", "init_performance", "error", "init_performance", "date", "init_performance", "init_performance", "s", "m", "h", "d", "w", "y", "match", "init_performance", "time", "init_performance", "init_performance", "debug", "init_performance", "debug", "t", "R", "init_performance", "init_performance", "a", "b", "init_performance", "debug", "t", "version", "m", "i", "a", "b", "release", "match", "init_performance", "version", "init_performance", "version", "v", "init_performance", "version", "s", "init_performance", "version", "release", "init_performance", "v2", "init_performance", "a", "init_performance", "a", "init_performance", "a", "init_performance", "version", "init_performance", "compare", "a", "b", "init_performance", "compare", "a", "b", "init_performance", "compare", "a", "b", "init_performance", "a", "b", "init_performance", "a", "b", "init_performance", "a", "b", "init_performance", "compare", "gt", "a", "b", "init_performance", "compare", "lt", "a", "b", "init_performance", "compare", "a", "b", "init_performance", "compare", "a", "b", "init_performance", "compare", "a", "b", "init_performance", "compare", "a", "b", "init_performance", "gt", "lt", "a", "b", "init_performance", "t", "version", "match", "init_performance", "init_performance", "r", "c", "i", "k", "t", "debug", "version", "_", "M", "m", "p", "z", "init_performance", "debug", "r", "t", "m", "version", "init_performance", "version", "init_performance", "c", "init_performance", "versions", "v", "init_performance", "versions", "v", "init_performance", "gt", "i", "require_valid", "init_performance", "init_performance", "gt", "lt", "version", "i", "init_performance", "version", "init_performance", "version", "init_performance", "r2", "init_performance", "compare", "versions", "v", "a", "b", "version", "init_performance", "compare", "gt", "lt", "c", "a", "b", "require_semver", "init_performance", "compare", "gt", "lt", "init_performance", "init_performance", "init_performance", "init_performance", "init_performance", "header", "secretOrPublicKey", "_", "e", "match", "init_performance", "array", "object", "hasOwnProperty", "isArray", "isString", "isFunction", "isObject", "toNumber", "require_lodash", "init_performance", "isBoolean", "require_lodash", "init_performance", "isObject", "toNumber", "require_lodash", "init_performance", "isNumber", "require_lodash", "init_performance", "e", "hasOwnProperty", "isPlainObject", "require_lodash", "init_performance", "isArray", "isString", "require_lodash", "init_performance", "once", "isObject", "toNumber", "require_sign", "init_performance", "isBoolean", "isNumber", "isPlainObject", "isString", "once", "object", "_", "error", "init_performance", "init_performance", "require_utils", "init_performance", "version", "f", "init_performance", "string", "e", "init_performance", "i", "init_performance", "init_performance", "version", "i", "j", "init_performance", "version", "init_performance", "module", "i", "k", "j", "p", "init_performance", "version", "init_performance", "x", "i", "log", "y", "init_performance", "p2", "i", "j", "init_performance", "encode", "init_performance", "version", "init_performance", "init_performance", "version", "toString", "string", "e", "init_performance", "version", "d", "init_performance", "d", "init_performance", "i", "group", "init_performance", "i", "init_performance", "i", "l", "init_performance", "i", "init_performance", "s", "d", "u", "v", "T", "t", "a", "b", "init_performance", "s2", "i", "version", "table", "j", "array", "path", "init_performance", "Version", "version", "i", "r", "c", "b", "create", "require_utils", "init_performance", "c", "i", "j", "init_performance", "e", "init_performance", "x", "y", "path", "i", "init_performance", "e", "_", "init_performance", "split", "normalizePath", "path", "getter", "forEach", "isArray", "init_performance", "join", "d", "camelCase", "snakeCase", "init_performance", "toposort", "i", "e", "init_performance", "init_performance", "toStringTag", "O", "isArray", "isRegExp", "s", "i", "isNumber", "isBoolean", "isString", "isDate", "isPlainObject", "e", "f", "m", "x", "l", "c", "k", "j", "init_performance", "channel", "init_performance", "init_performance", "init_performance", "require_range", "init_performance", "init_performance", "init_performance", "init_performance", "init_performance", "init_performance", "init_performance", "init_performance", "init_performance", "init_performance", "init_performance", "isNaN", "a", "require_sign", "init_performance", "number", "init_performance", "init_performance", "e", "init_performance", "e", "init_performance", "_", "init_performance", "init_performance", "init_performance", "init_performance", "concatty", "a", "b", "i", "j", "slicy", "bind", "Empty", "init_performance", "init_performance", "init_performance", "init_performance", "init_performance", "bind", "init_performance", "bind", "init_performance", "e", "init_performance", "O", "init_performance", "bind", "init_performance", "undefined", "e", "doEval", "bind", "stringToPath", "string", "match", "number", "getBaseIntrinsic", "i", "init_performance", "init_performance", "channel", "init_performance", "channel", "init_performance", "channel", "init_performance", "require_utils", "init_performance", "isArray", "array", "i", "compactQueue", "j", "arrayToObject", "merge", "e", "encode", "string", "c", "compact", "isRegExp", "isBuffer", "combine", "a", "b", "maybeMap", "init_performance", "isArray", "defaults", "date", "isNonNullishPrimitive", "v", "stringify", "object", "filter", "value", "j", "normalizeStringifyOptions", "i", "require_parse", "init_performance", "isArray", "defaults", "i", "normalizeParseOptions", "init_performance", "stringify", "init_performance", "BufferSourceConverter", "a", "b", "i", "s", "Convert", "base64", "c", "combine", "isEqual", "b2", "init_performance", "init_performance", "init_performance", "init_performance", "import_reflect_metadata", "init_performance", "init_performance", "islazyServiceIdentifierSymbol", "Symbol", "for", "LazyServiceIdentifier", "buildServiceId", "this", "value", "unwrap", "init_performance", "getReflectMetadata", "target", "metadataKey", "Reflect", "getMetadata", "updateReflectMetadata", "defaultValue", "callback", "updatedMetadata", "defineMetadata", "NAMED_TAG", "NAME_TAG", "UNMANAGED_TAG", "OPTIONAL_TAG", "INJECT_TAG", "MULTI_INJECT_TAG", "POST_CONSTRUCT", "PRE_DESTROY", "NON_CUSTOM_TAG_KEYS", "isAppErrorSymbol", "Symbol", "for", "InversifyCoreError", "Error", "kind", "message", "options", "super", "this", "value", "is", "InversifyCoreErrorKind", "ClassElementMetadataKind", "assertConstructorMetadataArrayFilled", "type", "undefinedIndexes", "i", "length", "push", "missingInjectionDecorator", "name", "join", "getClassElementMetadataFromNewable", "singleInjection", "optional", "tags", "Map", "targetName", "getClassElementMetadataFromLegacyMetadata", "metadataList", "injectMetadata", "find", "metadata", "key", "multiInjectMetadata", "unmanaged", "nameMetadata", "optionalMetadata", "targetNameMetadata", "multipleInjection", "filter", "every", "customTagKey", "map", "getConstructorArgumentMetadataFromLegacyMetadata", "index", "error", "isErrorOfKind", "toString", "cause", "getClassMetadataConstructorArguments", "typescriptMetadataList", "getReflectMetadata", "constructorParametersLegacyMetadata", "constructorArgumentsMetadata", "stringifiedIndex", "Object", "entries", "parseInt", "typescriptMetadata", "getPropertyMetadataFromLegacyMetadata", "getClassMetadataProperties", "propertiesLegacyMetadata", "propertiesMetadata", "property", "Reflect", "ownKeys", "legacyMetadata", "set", "getClassMetadata", "postConstructMetadata", "preDestroyMetadata", "constructorArguments", "lifecycle", "postConstructMethodName", "preDestroyMethodName", "properties", "getClassMetadataConstructorArgumentsFromMetadataReader", "metadataReader", "legacyConstructorMetadata", "getConstructorMetadata", "userGeneratedMetadata", "compilerGeneratedMetadata", "getClassMetadataPropertiesFromMetadataReader", "getPropertiesMetadata", "getClassMetadataFromMetadataReader", "getBaseType", "prototype", "getPrototypeOf", "baseType", "constructor", "getLegacyMetadata", "classElementMetadata", "legacyMetadataList", "getManagedKindLegacyMetadata", "tagKey", "tagValue", "kindLegacyMetadata", "LegacyQueryableStringImpl", "str", "searchString", "startsWith", "endsWith", "includes", "compareString", "ID_METADATA", "LegacyTargetImpl", "id", "identifier", "lazyLegacyMetadata", "targetId", "Number", "MAX_SAFE_INTEGER", "updateReflectMetadata", "MIN_SAFE_INTEGER", "getTargetId", "slice", "serviceIdentifier", "LazyServiceIdentifier", "unwrap", "getCustomTags", "getNamedTag", "some", "isArray", "isNamed", "isOptional", "isTagged", "size", "getTargets", "classMetadata", "classMetadataProperties", "propertyKey", "propertyValue", "has", "targets", "constructorArgument", "getTargetsFromMetadataProviders", "NAMED_TAG", "NAME_TAG", "UNMANAGED_TAG", "OPTIONAL_TAG", "INJECT_TAG", "MULTI_INJECT_TAG", "TAGGED", "TAGGED_PROP", "PARAM_TYPES", "DESIGN_PARAM_TYPES", "POST_CONSTRUCT", "PRE_DESTROY", "NON_CUSTOM_TAG_KEYS", "BindingScopeEnum", "Request", "Singleton", "Transient", "BindingTypeEnum", "ConstantValue", "Constructor", "DynamicValue", "Factory", "Function", "Instance", "Invalid", "Provider", "TargetTypeEnum", "ClassProperty", "ConstructorArgument", "Variable", "idCounter", "id", "Binding", "moduleId", "activated", "serviceIdentifier", "implementationType", "cache", "dynamicValue", "scope", "type", "factory", "provider", "constraint", "onActivation", "onDeactivation", "this", "_request", "clone", "DUPLICATED_METADATA", "NULL_ARGUMENT", "KEY_NOT_FOUND", "AMBIGUOUS_MATCH", "NOT_REGISTERED", "INVALID_DECORATOR_OPERATION", "ON_DEACTIVATION_ERROR", "clazz", "errorMessage", "MetadataReader", "constructorFunc", "compilerGeneratedMetadata", "Reflect", "getMetadata", "METADATA_KEY.DESIGN_PARAM_TYPES", "userGeneratedMetadata", "METADATA_KEY.TAGGED", "METADATA_KEY.TAGGED_PROP", "BindingCount", "isStackOverflowException", "error", "RangeError", "message", "getServiceIdentifierAsString", "name", "toString", "listRegisteredBindingsForServiceIdentifier", "container", "getBindings", "registeredBindingsList", "registeredBindings", "length", "forEach", "binding", "getFunctionName", "metaData", "alreadyDependencyChain", "request", "parentRequest", "circularDependencyToException", "childRequests", "childRequest", "services", "stringArr", "_createStringArr", "req", "result", "push", "reverse", "join", "Error", "func", "match", "stringifyMetadata", "metadata", "key", "value", "Context", "plan", "currentRequest", "Metadata", "METADATA_KEY.NAMED_TAG", "String", "Plan", "parentContext", "rootRequest", "getBaseClassDependencyCount", "metadataReader", "baseConstructor", "prototype", "Object", "getPrototypeOf", "baseType", "constructor", "targets", "getTargets", "map", "t", "filter", "m", "METADATA_KEY.UNMANAGED_TAG", "unmanagedCount", "concat", "apply", "dependencyCount", "bindings", "target", "requestScope", "Array", "isArray", "Map", "child", "getBindingDictionary", "cntnr", "_bindingDictionary", "_getActiveBindings", "avoidConstraints", "context", "activeBindings", "NoBindingsAvailable", "options", "autoBindInjectable", "getConstructorMetadata", "bind", "toSelf", "isOptional", "serviceIdentifierString", "msg", "ERROR_MSGS.NOT_REGISTERED", "isTagged", "isNamed", "namedTag", "getNamedTag", "otherTags", "getCustomTags", "tag", "OnlyOneBindingAvailable", "MultipleBindingsAvailable", "ERROR_MSGS.AMBIGUOUS_MATCH", "_getTargetMetadata", "metadataKey", "isMultiInject", "METADATA_KEY.MULTI_INJECT_TAG", "METADATA_KEY.INJECT_TAG", "metadataList", "customTag", "METADATA_KEY.OPTIONAL_TAG", "_createSubRequests", "thePlan", "addPlan", "addChildRequest", "subChildRequest", "dependencies", "skipBaseClassChecks", "baseClassDependencyCount", "dependency", "bindingDictionary", "hasKey", "get", "parent", "targetType", "classElementMetadata", "getClassElementMetadataFromLegacyMetadata", "kind", "ClassElementMetadataKind", "unmanaged", "TargetImpl", "isPromise", "object", "then", "isPromiseOrContainsPromise", "some", "_saveToRequestScope", "has", "set", "_saveToSingletonScope", "_saveAsyncResultToSingletonScope", "async", "asyncResult", "ex", "FactoryType", "_createInstance", "constr", "childRequests", "resolveRequest", "result", "length", "resolved", "reduce", "resolvedRequests", "childRequest", "injection", "target", "type", "TargetTypeEnum", "ConstructorArgument", "constructorInjections", "push", "propertyRequests", "propertyInjections", "isAsync", "isPromiseOrContainsPromise", "createInstanceWithInjectionsArg", "async", "args", "possiblyWaitInjections", "createInstanceWithInjections", "instance", "forEach", "r", "index", "property", "identifier", "isOptional", "possiblePromiseinjections", "injections", "Array", "isArray", "Promise", "all", "_getInstanceAfterPostConstruct", "postConstructResult", "Reflect", "hasMetadata", "METADATA_KEY.POST_CONSTRUCT", "data", "getMetadata", "value", "e", "Error", "clazz", "name", "errorMessage", "message", "isPromise", "then", "_validateInstanceResolution", "binding", "scope", "BindingScopeEnum", "Singleton", "scopeErrorMessage", "Request", "onDeactivation", "ON_DEACTIVATION_ERROR", "METADATA_KEY.PRE_DESTROY", "_resolveRequest", "requestScope", "request", "parentContext", "setCurrentRequest", "bindings", "targetIsAnArray", "targetParentIsNotAnArray", "parentRequest", "matchesArray", "serviceIdentifier", "map", "_resolveBinding", "_resolveFactoryFromBinding", "context", "factoryDetails", "BindingTypeEnum", "Factory", "factory", "factoryType", "FactoryType", "Provider", "provider", "DynamicValue", "dynamicValue", "fn", "errorCallback", "error", "isStackOverflowException", "bind", "currentRequest", "toString", "_getResolvedFromBinding", "boundValue", "ConstantValue", "Function", "cache", "Constructor", "Instance", "implementationType", "serviceIdentifierAsString", "getServiceIdentifierAsString", "resolvedResult", "_resolveInScope", "resolveFromBinding", "activated", "has", "id", "get", "_saveToSingletonScope", "_saveToRequestScope", "_onActivation", "_bindingActivation", "containersIterator", "_getContainersIterator", "container", "containersIteratorResult", "next", "activationsIterator", "_getContainerActivationsForService", "_activateContainerAsync", "_activateContainer", "done", "getBindingDictionary", "hasKey", "previousResult", "onActivation", "activation", "resultPromise", "activations", "_activations", "values", "containersStack", "parent", "nextContainer", "pop", "undefined", "traverseAncerstors", "constraint", "taggedConstraint", "key", "matchesTag", "metaData", "Metadata", "namedConstraint", "METADATA_KEY.NAMED_TAG", "typeConstraint", "constructor", "BindingWhenSyntax", "_binding", "this", "BindingOnSyntax", "whenTargetIsDefault", "isNamed", "isTagged", "tag", "ancestor", "handler", "BindingWhenOnSyntax", "_bindingWhenSyntax", "_bindingOnSyntax", "when", "whenTargetNamed", "whenTargetTagged", "whenInjectedInto", "whenParentNamed", "whenParentTagged", "whenAnyAncestorIs", "whenNoAncestorIs", "whenAnyAncestorNamed", "whenAnyAncestorTagged", "whenNoAncestorNamed", "whenNoAncestorTagged", "whenAnyAncestorMatches", "whenNoAncestorMatches", "BindingInSyntax", "inRequestScope", "inSingletonScope", "inTransientScope", "Transient", "BindingInWhenOnSyntax", "_bindingInSyntax", "BindingToSyntax", "toSelf", "self", "to", "func", "bindingWhenOnSyntax", "toConstantValue", "named", "getNamed", "service", "Object", "defineProperty", "configurable", "enumerable", "_value", "_error", "getAsync", "ContainerSnapshot", "deactivations", "middleware", "moduleActivationStore", "snapshot", "Lookup", "_map", "Map", "getMap", "_checkNonNulish", "ERROR_MSGS.NULL_ARGUMENT", "entry", "set", "ERROR_MSGS.KEY_NOT_FOUND", "delete", "lookup", "traverse", "lookupActivations", "filteredValues", "filter", "lookupValue", "some", "moduleActivation", "_setValue", "condition", "removals", "entries", "updatedEntries", "clone", "copy", "b", "obj", "add", "ModuleActivationStore", "moduleId", "handlers", "_getEmptyHandlersStore", "_getModuleActivationHandlers", "onDeactivations", "onActivations", "handlersStore", "moduleActivationHandlers", "Container", "options", "_middleware", "_bindingDictionary", "_deactivations", "_snapshots", "_metadataReader", "_moduleActivationStore", "containerOptions", "defaultScope", "autoBindInjectable", "skipBaseClassChecks", "MetadataReader", "container1", "container2", "containers", "targetContainers", "targetContainer", "bindingDictionary", "targetBindingDictionary", "destination", "_key", "modules", "getHelpers", "_getContainerModuleHelpersFactory", "currentModule", "containerModuleHelpers", "registry", "bindFunction", "unbindFunction", "isboundFunction", "rebindFunction", "unbindAsyncFunction", "onActivationFunction", "onDeactivationFunction", "module", "_removeModuleBindings", "_deactivateSingletons", "_removeModuleHandlers", "_deactivateSingletonsAsync", "_bind", "_buildBinding", "unbind", "unbindAsync", "_removeServiceFromDictionary", "unbindAll", "unbindAllAsync", "promises", "bound", "isBound", "isBoundTagged", "metadata", "metadataList", "_getTargetMetadata", "classElementMetadata", "getClassElementMetadataFromLegacyMetadata", "kind", "ClassElementMetadataKind", "unmanaged", "TargetImpl", "Context", "customTag", "isMultiInject", "of", "restore", "child", "middlewares", "initial", "_planAndResolve", "prev", "curr", "metadataReader", "getArgs", "_getNotAllArgs", "_getButThrowIfAsync", "_get", "getTagged", "getTaggedAsync", "_getAllArgs", "_getAll", "getAllTagged", "getAllTaggedAsync", "constructorFunction", "tryGetTagged", "tryGetTaggedAsync", "tryGetAllTagged", "tryGetAllTaggedAsync", "moduleActivationsHandlers", "remove", "removeIntersection", "removeByCondition", "getPrototypeOf", "_deactivateContainer", "_handleDeactivationError", "_propagateContainerDeactivationThenBindingAndPreDestroyAsync", "propagateDeactivationResult", "_propagateContainerDeactivationThenBindingAndPreDestroy", "ex", "ERROR_MSGS.ON_DEACTIVATION_ERROR", "asyncResult", "deactivationsIterator", "deactivation", "_deactivateContainerAsync", "getBindFunction", "getUnbindFunction", "getUnbindAsyncFunction", "getIsboundFunction", "getRebindFunction", "getOnActivationFunction", "addActivation", "getOnDeactivationFunction", "addDeactivation", "mId", "Binding", "planAndResolveArgs", "contextInterceptor", "targetType", "Variable", "middlewareResult", "avoidConstraints", "enforceBindingConstraints", "planMetadata", "plan", "_getPlanMetadataFromNextArgs", "rootRequest", "_deactivate", "_deactivateIfSingleton", "_bindingDeactivationAndPreDestroy", "_bindingDeactivationAndPreDestroyAsync", "_e", "_preDestroy", "tagParameter", "annotationTarget", "parameterName", "parameterIndex", "metadata", "Error", "ERROR_MSGS.INVALID_DECORATOR_OPERATION", "_tagParameterOrProperty", "METADATA_KEY.TAGGED", "toString", "_ensureNoMetadataKeyDuplicates", "metadatas", "Array", "isArray", "duplicate", "array", "seenValues", "Set", "entry", "has", "add", "map", "md", "key", "ERROR_MSGS.DUPLICATED_METADATA", "metadataKey", "paramsOrPropertiesMetadata", "Reflect", "hasOwnMetadata", "getMetadata", "paramOrPropertyMetadata", "m", "some", "push", "defineMetadata", "createTaggedDecorator", "target", "targetKey", "indexOrPropertyDescriptor", "propertyName", "prototype", "METADATA_KEY.TAGGED_PROP", "constructor", "injectable", "target", "Reflect", "hasOwnMetadata", "METADATA_KEY.PARAM_TYPES", "Error", "types", "getMetadata", "METADATA_KEY.DESIGN_PARAM_TYPES", "defineMetadata", "injectBase", "metadataKey", "serviceIdentifier", "target", "targetKey", "indexOrPropertyDescriptor", "className", "name", "constructor", "Error", "createTaggedDecorator", "Metadata", "inject", "METADATA_KEY.INJECT_TAG", "multiInject", "injectBase", "METADATA_KEY.MULTI_INJECT_TAG", "propertyEventDecorator", "eventKey", "errorMessage", "target", "propertyKey", "metadata", "Metadata", "Reflect", "hasOwnMetadata", "constructor", "Error", "defineMetadata", "postConstruct", "METADATA_KEY.POST_CONSTRUCT", "preDestroy", "METADATA_KEY.PRE_DESTROY", "init_performance", "init_performance", "init_performance", "init_performance", "init_performance", "i", "init_performance", "init_performance", "init_performance", "i", "init_performance", "init_performance", "import_reflect_metadata", "init_performance", "crypto", "init_performance", "crypto", "init_performance", "init_performance", "init_performance", "init_performance", "error", "i", "init_performance", "init_performance", "i", "init_performance", "init_performance", "buildUpdateFields", "buildUpdateFields", "toDbBool", "init_performance", "init_performance", "u", "init_performance", "controller", "init_performance", "nodemailer", "ejs", "init_performance", "init_performance", "init_performance", "init_performance", "app", "buildUpdateFields", "v", "init_performance", "init_performance", "init_performance", "init_performance", "init_performance", "prototype", "e", "i", "l", "_key", "context", "a", "b", "descriptors", "filter", "m", "p2", "hasOwnProperty", "init_performance", "init_performance", "init_performance", "init_performance", "init_performance", "config", "error", "filter", "init_performance", "path", "i", "match", "prototype", "toString", "encode", "init_performance", "h", "init_performance", "init_performance", "init_performance", "init_performance", "init_performance", "init_performance", "init_performance", "init_performance", "init_performance", "init_performance", "init_performance", "path", "init_performance", "match", "i", "path", "e", "isFormData", "isFileList", "transitional", "init_performance", "init_performance", "i", "match", "context", "filter", "w", "self", "i", "prototype", "config", "context", "init_performance", "init_performance", "config", "init_performance", "init_performance", "init_performance", "validateStatus", "init_performance", "match", "init_performance", "init_performance", "i", "init_performance", "e", "init_performance", "init_performance", "origin", "init_performance", "path", "domain", "match", "init_performance", "init_performance", "init_performance", "init_performance", "config2", "config", "a", "b", "merge", "config", "config", "transitional", "init_performance", "init_performance", "controller", "signal", "init_performance", "iterator", "e", "controller", "done", "isFunction", "fetch", "Request", "Response", "ReadableStream", "TextEncoder", "e", "env", "config", "i", "e", "adapter", "config", "i", "s", "config", "adapter", "init_performance", "init_performance", "i", "version", "validators", "config", "e", "transitional", "i", "error", "httpMethod", "init_performance", "i", "config", "controller", "abort", "c", "init_performance", "init_performance", "init_performance", "context", "create", "Axios", "AxiosError", "CanceledError", "isCancel", "CancelToken", "VERSION", "all", "isAxiosError", "spread", "toFormData", "AxiosHeaders", "HttpStatusCode", "mergeConfig", "match", "e", "init_performance", "crypto", "init_performance", "s", "init_performance", "crypto", "crypto", "u", "s", "crypto", "init_performance", "init_performance", "f", "i", "t", "init_performance", "crypto", "init_performance", "init_performance", "jwt", "removeDiacritics", "c", "u", "crypto", "a", "b", "import_reflect_metadata", "init_performance", "init_performance", "crypto", "i", "s", "config", "crypto", "__defProp", "config", "init_performance", "init_performance", "import_reflect_metadata", "init_performance", "path", "init_performance", "init_performance", "init_performance", "init_performance", "init_performance", "context", "i", "init_performance", "init_performance", "init_performance", "init_performance", "init_performance", "all", "init_performance", "path", "match", "i", "j", "path", "v", "i", "a", "path", "raw", "init_performance", "context", "c", "k", "v", "v2", "object", "init_performance", "init_performance", "c", "path", "p", "m", "clone", "app", "r", "env", "context", "init_performance", "init_performance", "init_performance", "path", "path2", "init_performance", "a", "b", "context", "k", "c", "init_performance", "path", "i", "m", "j", "_", "path", "_", "i", "j", "h", "e", "k", "a", "b", "p", "m", "path2", "r", "init_performance", "init_performance", "init_performance", "path", "i", "i2", "e", "init_performance", "init_performance", "init_performance", "Node", "m", "path", "i", "p", "v", "a", "i2", "j", "k", "b", "Node", "path", "i", "Hono", "container", "Hono", "error", "path", "c", "method", "init_performance", "c", "s", "c", "error", "init_performance", "c", "error", "init_performance", "init_performance", "info", "c", "init_performance", "init_performance", "config", "c", "k", "v", "init_performance", "init_performance", "toString", "value", "result", "toArray", "ValidationError", "path", "_", "config", "ref", "context", "config", "path", "test", "error", "ValidationError", "isArray", "i", "k", "v", "s", "path", "test", "count", "_", "error", "ValidationError", "toArray", "c", "date", "t", "isDate", "ref", "a", "b", "toposort", "p", "isObject", "c", "error", "g", "init_performance", "c", "error", "g", "init_performance", "c", "error", "init_performance", "init_performance", "c", "s", "transferOwnershipRateLimit", "c", "error", "totalAvailable", "item", "sellValue", "isOwner", "i", "init_performance", "c", "error", "init_performance", "c", "error", "controller", "init_performance", "c", "error", "q", "init_performance", "c", "error", "app", "init_performance", "init_performance", "f", "c", "error", "g", "v", "init_performance", "init_performance", "init_performance", "init_performance", "init_performance", "init_performance", "o", "d", "path", "emitWarning", "normalizeHeader", "isObject", "path", "number", "init_performance", "path", "_", "abort", "path", "init_performance", "init_performance", "i", "c", "r", "v", "a", "b", "i", "init_performance", "init_performance", "init_performance", "raw", "_a", "init_performance", "e", "error", "genKey", "emitWarning", "m", "path", "headers", "authenticator", "_a", "data", "init_performance", "init_performance", "init_performance", "result", "iterator", "_a", "encode", "data", "path", "urlData", "x", "init_performance", "e", "signature", "init_performance", "Accounts", "ConfirmationTokens", "Customers", "Disputes", "Events", "Products", "Refunds", "Tokens", "init_performance", "init_performance", "init_performance", "stripeMethod", "init_performance", "stripeMethod", "init_performance", "stripeMethod", "init_performance", "stripeMethod", "init_performance", "stripeMethod", "Authorizations", "init_performance", "stripeMethod", "init_performance", "stripeMethod", "init_performance", "stripeMethod", "init_performance", "stripeMethod", "Cards", "init_performance", "stripeMethod", "init_performance", "stripeMethod", "Configurations", "init_performance", "stripeMethod", "init_performance", "stripeMethod", "init_performance", "stripeMethod", "init_performance", "stripeMethod", "init_performance", "stripeMethod", "init_performance", "stripeMethod", "init_performance", "stripeMethod", "init_performance", "stripeMethod", "init_performance", "stripeMethod", "init_performance", "stripeMethod", "init_performance", "stripeMethod", "init_performance", "stripeMethod", "init_performance", "stripeMethod", "init_performance", "stripeMethod", "init_performance", "stripeMethod", "init_performance", "stripeMethod", "InboundTransfers", "init_performance", "stripeMethod", "init_performance", "stripeMethod", "init_performance", "stripeMethod", "MeterEventAdjustments", "init_performance", "stripeMethod", "init_performance", "stripeMethod", "init_performance", "stripeMethod", "init_performance", "stripeMethod", "MeterEvents", "init_performance", "stripeMethod", "init_performance", "stripeMethod", "init_performance", "stripeMethod", "init_performance", "stripeMethod", "OutboundPayments", "init_performance", "stripeMethod", "init_performance", "stripeMethod", "OutboundTransfers", "init_performance", "stripeMethod", "init_performance", "stripeMethod", "PersonalizationDesigns", "init_performance", "stripeMethod", "init_performance", "stripeMethod", "init_performance", "stripeMethod", "init_performance", "stripeMethod", "Readers", "init_performance", "stripeMethod", "init_performance", "stripeMethod", "ReceivedCredits", "init_performance", "stripeMethod", "init_performance", "stripeMethod", "ReceivedDebits", "init_performance", "stripeMethod", "init_performance", "stripeMethod", "init_performance", "stripeMethod", "init_performance", "stripeMethod", "init_performance", "stripeMethod", "init_performance", "stripeMethod", "init_performance", "stripeMethod", "init_performance", "stripeMethod", "init_performance", "stripeMethod", "Sessions", "init_performance", "stripeMethod", "Sessions", "init_performance", "stripeMethod", "init_performance", "stripeMethod", "init_performance", "stripeMethod", "init_performance", "stripeMethod", "init_performance", "stripeMethod", "init_performance", "stripeMethod", "init_performance", "stripeMethod", "Transactions", "init_performance", "stripeMethod", "Transactions", "init_performance", "stripeMethod", "Transactions", "init_performance", "stripeMethod", "Transactions", "init_performance", "stripeMethod", "init_performance", "stripeMethod", "init_performance", "stripeMethod", "init_performance", "stripeMethod", "init_performance", "stripeMethod", "Accounts", "init_performance", "stripeMethod", "init_performance", "stripeMethod", "init_performance", "stripeMethod", "init_performance", "stripeMethod", "init_performance", "stripeMethod", "init_performance", "stripeMethod", "init_performance", "stripeMethod", "init_performance", "stripeMethod", "ConfirmationTokens", "init_performance", "stripeMethod", "init_performance", "stripeMethod", "init_performance", "stripeMethod", "init_performance", "stripeMethod", "init_performance", "stripeMethod", "Customers", "init_performance", "stripeMethod", "Disputes", "init_performance", "stripeMethod", "init_performance", "stripeMethod", "Events", "init_performance", "stripeMethod", "init_performance", "stripeMethod", "init_performance", "init_performance", "l", "q", "s", "k", "v", "stripeMethod", "init_performance", "stripeMethod", "init_performance", "stripeMethod", "init_performance", "stripeMethod", "init_performance", "stripeMethod", "init_performance", "stripeMethod", "init_performance", "stripeMethod", "path", "init_performance", "stripeMethod", "init_performance", "stripeMethod", "init_performance", "stripeMethod", "init_performance", "stripeMethod", "init_performance", "stripeMethod", "init_performance", "stripeMethod", "init_performance", "stripeMethod", "init_performance", "stripeMethod", "init_performance", "stripeMethod", "Products", "init_performance", "stripeMethod", "init_performance", "stripeMethod", "init_performance", "stripeMethod", "Refunds", "init_performance", "stripeMethod", "init_performance", "stripeMethod", "init_performance", "stripeMethod", "init_performance", "stripeMethod", "init_performance", "stripeMethod", "init_performance", "stripeMethod", "init_performance", "stripeMethod", "init_performance", "stripeMethod", "init_performance", "stripeMethod", "init_performance", "stripeMethod", "init_performance", "stripeMethod", "init_performance", "stripeMethod", "Tokens", "init_performance", "stripeMethod", "init_performance", "stripeMethod", "init_performance", "stripeMethod", "Sessions", "Transactions", "Authorizations", "Cards", "PersonalizationDesigns", "Configurations", "Readers", "InboundTransfers", "OutboundPayments", "OutboundTransfers", "ReceivedCredits", "ReceivedDebits", "MeterEventAdjustments", "MeterEvents", "Stripe", "config", "path", "info", "c", "_a", "isString", "isObject", "t", "sendError", "c", "error", "init_performance", "c", "error", "s", "init_performance", "c", "error", "init_performance", "init_performance", "callback", "nextTick", "salt", "unknown", "i", "hash", "string", "c", "c2", "k", "b", "off", "s", "o", "P", "S", "l", "r", "j", "r2", "err", "crypto", "init_performance", "c", "error", "u", "crypto", "s", "profile", "q", "user", "init_performance", "init_performance", "init_performance", "init_performance", "import_pvtsutils", "init_performance", "init_performance", "Boolean", "Set", "init_performance", "init_performance", "i", "j", "i", "j", "retBuf", "retView", "k", "log2", "i", "_a", "error", "retView", "number", "count", "tempBufferView", "object", "o", "Boolean", "array", "c", "p", "b", "v", "string", "Set", "j", "init_performance", "AsnTypeTypes", "AsnPropTypes", "init_performance", "init_performance", "BitString", "init_performance", "import_pvtsutils", "OctetString", "Boolean", "init_performance", "init_performance", "init_performance", "init_performance", "_a", "b2", "i", "Set", "defaultConverter", "init_performance", "init_performance", "init_performance", "error", "i", "v", "_a", "Set", "init_performance", "o", "Set", "init_performance", "init_performance", "import_pvtsutils", "init_performance", "c", "r", "d", "i", "init_performance", "ValidationError", "JsonPropTypes", "isConvertible", "schemaStorage", "v", "e", "base64", "_key", "_a", "ObjectIdentifier", "AsnIntegerArrayBufferConverter", "AsnIntegerArrayBufferConverter", "EcPublicKey", "x", "y", "r", "s", "i", "EdPrivateKey", "EdPublicKey", "CurvePrivateKey", "ObjectIdentifier", "raw", "b", "e", "error", "init_process", "crypto", "import_pvtsutils", "CryptoKey", "crypto", "AesCbcProvider", "a", "b", "l", "x", "y", "AesCmacProvider", "AesCtrProvider", "AesGcmProvider", "AesKwProvider", "AesEcbProvider", "RsaPrivateKey", "RsaPublicKey", "RsaSsaProvider", "RsaPssProvider", "hash", "RsaOaepProvider", "i", "z", "EcPrivateKey", "EcPublicKey", "e", "EcdsaProvider", "EcdhProvider", "EdPrivateKey", "EdPublicKey", "EdDsaProvider", "EcdhEsProvider", "raw", "d", "Ed25519Provider", "X25519Provider", "Pbkdf2Provider", "HmacProvider", "HkdfProvider", "info", "Shake128Provider", "Shake256Provider", "SubtleCrypto", "_a", "Crypto", "array", "init_performance", "init_performance", "init_performance", "init_performance", "init_performance", "init_performance", "i", "p", "toBase64", "encode", "init_performance", "init_performance", "init_performance", "init_performance", "i", "encode", "getRandomValues", "init_performance", "init_performance", "init_performance", "init_performance", "COSEKEYS", "COSEKTY", "COSECRV", "COSEALG", "init_performance", "init_performance", "getRandomValues", "array", "init_performance", "init_performance", "init_performance", "x", "y", "init_performance", "init_performance", "e", "init_performance", "init_performance", "init_performance", "init_performance", "i", "init_performance", "x", "y", "init_performance", "init_performance", "toString", "init_performance", "init_performance", "init_performance", "init_performance", "init_performance", "init_performance", "init_performance", "init_performance", "import_pvtsutils", "i", "a", "k", "match", "b", "init_performance", "import_pvtsutils", "DirectoryString", "AttributeValue", "RelativeDistinguishedName", "RDNSequence", "Name", "GeneralName", "init_performance", "AuthorityInfoAccessSyntax", "init_performance", "OctetString", "init_performance", "init_performance", "init_performance", "GeneralNames", "CertificateIssuer", "init_performance", "DisplayText", "Qualifier", "CertificatePolicies", "init_performance", "init_performance", "CRLNumber", "BaseCRLNumber", "init_performance", "ReasonFlags", "BitString", "DistributionPointName", "CRLDistributionPoints", "init_performance", "FreshestCRL", "init_performance", "init_performance", "CRLReasons", "CRLReason", "init_performance", "ExtendedKeyUsage", "init_performance", "InhibitAnyPolicy", "init_performance", "InvalidityDate", "init_performance", "IssueAlternativeName", "init_performance", "KeyUsageFlags", "init_performance", "GeneralSubtrees", "init_performance", "init_performance", "PolicyMappings", "init_performance", "SubjectAlternativeName", "init_performance", "init_performance", "SubjectDirectoryAttributes", "init_performance", "init_performance", "init_performance", "EntrustInfoFlags", "BitString", "init_performance", "SubjectInfoAccessSyntax", "init_performance", "pvtsutils", "AlgorithmIdentifier", "init_performance", "init_performance", "init_performance", "AlgorithmIdentifier", "init_performance", "init_performance", "Time", "time", "date", "init_performance", "OctetString", "Extensions", "init_performance", "Version", "AlgorithmIdentifier", "AlgorithmIdentifier", "init_performance", "init_performance", "AlgorithmIdentifier", "AlgorithmIdentifier", "init_performance", "init_performance", "fetch", "fetch", "cert", "init_performance", "init_performance", "init_performance", "digest", "init_performance", "init_performance", "init_performance", "init_performance", "init_performance", "init_performance", "AlgorithmIdentifier", "init_performance", "init_performance", "FieldID", "OctetString", "Curve", "ECPVer", "SpecifiedECDomain", "ECParameters", "init_performance", "OctetString", "init_performance", "init_performance", "init_performance", "init_performance", "init_performance", "init_performance", "create", "AlgorithmIdentifier", "AlgorithmIdentifier", "init_performance", "AlgorithmIdentifier", "init_performance", "AlgorithmIdentifier", "OctetString", "init_performance", "OtherPrimeInfos", "init_performance", "init_performance", "init_performance", "x", "y", "init_performance", "i", "x", "init_performance", "concat", "fromUTF8String", "toUTF8String", "init_performance", "i", "array", "concat", "toUTF8String", "fromUTF8String", "x", "init_performance", "init_performance", "init_performance", "init_performance", "init_performance", "init_performance", "init_performance", "init_performance", "init_performance", "init_performance", "init_performance", "OctetString", "init_performance", "init_performance", "init_performance", "jwt", "init_performance", "jwt", "SERVICE_STATE", "log", "report", "fetch", "error", "init_performance", "info", "version", "O", "C", "init_performance", "jwt", "init_performance", "init_performance", "init_performance", "init_performance", "e", "x", "y", "version", "init_performance", "init_performance", "init_performance", "VerifiedBootState", "OctetString", "IntegerSet", "OctetString", "SecurityLevel", "Version", "init_performance", "NonStandardAuthorization", "NonStandardAuthorizationList", "o", "Version", "OctetString", "NonStandardKeyMintKeyDescription", "init_performance", "init_performance", "origin", "init_performance", "init_performance", "init_performance", "init_performance", "Crypto", "c", "c", "error", "e", "base64ToBase64url", "app", "c", "init_performance", "env", "e", "init_performance", "e", "env", "error", "init_performance", "env", "env", "controller"]
}
